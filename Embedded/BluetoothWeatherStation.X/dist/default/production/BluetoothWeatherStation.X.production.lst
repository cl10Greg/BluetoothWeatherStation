

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sun Dec 15 19:59:44 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 34 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 34 "main.c"
    45  2007  FF3A               	dw 0xFFFB & 0xFF7F & 0xFFBF & 0xFFFE & 0xFFFF ;#
    46                           	FNCALL	_main,_initADC
    47                           	FNCALL	_main,_initTemp
    48                           	FNCALL	_main,_initUSART
    49                           	FNCALL	_main,_writeString
    50                           	FNCALL	_main,_getTemp
    51                           	FNCALL	_getTemp,_selectTemp
    52                           	FNCALL	_getTemp,_readTemp
    53                           	FNCALL	_getTemp,_eeprom_write
    54                           	FNCALL	_initTemp,_eeprom_write
    55                           	FNCALL	_writeString,_writeByte
    56                           	FNCALL	_writeString,_strlen
    57                           	FNROOT	_main
    58                           	FNCALL	_isr,_getPacket
    59                           	FNCALL	_getPacket,_readString
    60                           	FNCALL	_getPacket,i1_eeprom_write
    61                           	FNCALL	_getPacket,_parsePacket
    62                           	FNCALL	_getPacket,_validatePacket
    63                           	FNCALL	_getPacket,_eeprom_read
    64                           	FNCALL	_getPacket,_readCommands
    65                           	FNCALL	_getPacket,_writeCommands
    66                           	FNCALL	_readCommands,i1_writeByte
    67                           	FNCALL	_readCommands,i1_writeString
    68                           	FNCALL	_readCommands,_eeprom_read
    69                           	FNCALL	_validatePacket,_checkStartByte
    70                           	FNCALL	_validatePacket,_checkRWByte
    71                           	FNCALL	_validatePacket,_checkCMDByte
    72                           	FNCALL	_validatePacket,_checkDataFrames
    73                           	FNCALL	_validatePacket,_addDataToCheckSum
    74                           	FNCALL	_validatePacket,_checkCS
    75                           	FNCALL	_parsePacket,_checkLength
    76                           	FNCALL	_parsePacket,_checkEven
    77                           	FNCALL	_parsePacket,_makeHexByte
    78                           	FNCALL	_parsePacket,i1_eeprom_write
    79                           	FNCALL	_parsePacket,i1_strlen
    80                           	FNCALL	_parsePacket,_eeprom_read
    81                           	FNCALL	i1_writeString,i1_writeByte
    82                           	FNCALL	i1_writeString,i1_strlen
    83                           	FNCALL	_addDataToCheckSum,_eeprom_read
    84                           	FNCALL	_addDataToCheckSum,i1_eeprom_write
    85                           	FNCALL	_checkCS,_eeprom_read
    86                           	FNCALL	_checkCS,i1_writeByte
    87                           	FNCALL	_checkCMDByte,_eeprom_read
    88                           	FNCALL	_checkCMDByte,i1_eeprom_write
    89                           	FNCALL	_checkCMDByte,i1_writeByte
    90                           	FNCALL	_checkRWByte,_eeprom_read
    91                           	FNCALL	_checkRWByte,i1_writeByte
    92                           	FNCALL	_checkRWByte,i1_eeprom_write
    93                           	FNCALL	_checkStartByte,_eeprom_read
    94                           	FNCALL	_checkStartByte,i1_writeByte
    95                           	FNCALL	_checkStartByte,i1_eeprom_write
    96                           	FNCALL	_checkDataFrames,_eeprom_read
    97                           	FNCALL	_checkDataFrames,i1_writeByte
    98                           	FNCALL	_checkLength,_eeprom_read
    99                           	FNCALL	_checkLength,i1_writeByte
   100                           	FNCALL	_checkEven,_eeprom_read
   101                           	FNCALL	_checkEven,i1_writeByte
   102                           	FNCALL	_makeHexByte,_makeNibble
   103                           	FNCALL	_readString,_readByte
   104                           	FNCALL	_readString,i1_eeprom_write
   105                           	FNCALL	intlevel1,_isr
   106                           	global	intlevel1
   107                           	FNROOT	intlevel1
   108                           	global	main@F1175
   109                           	global	_readError
   110                           psect	idataBANK1,class=CODE,space=0,delta=2
   111                           global __pidataBANK1
   112  0E42                     __pidataBANK1:
   113                           	file	"main.c"
   114                           	line	58
   115                           
   116                           ;initializer for main@F1175
   117  0E42  3457               	retlw	057h
   118  0E43  3465               	retlw	065h
   119  0E44  346C               	retlw	06Ch
   120  0E45  3463               	retlw	063h
   121  0E46  346F               	retlw	06Fh
   122  0E47  346D               	retlw	06Dh
   123  0E48  3465               	retlw	065h
   124  0E49  340A               	retlw	0Ah
   125  0E4A  3400               	retlw	0
   126                           	file	"userMacro.h"
   127                           	line	26
   128                           
   129                           ;initializer for _readError
   130  0E4B  344E               	retlw	04Eh
   131  0E4C  346F               	retlw	06Fh
   132  0E4D  3474               	retlw	074h
   133  0E4E  3420               	retlw	020h
   134  0E4F  3461               	retlw	061h
   135  0E50  3420               	retlw	020h
   136  0E51  3476               	retlw	076h
   137  0E52  3461               	retlw	061h
   138  0E53  346C               	retlw	06Ch
   139  0E54  3469               	retlw	069h
   140  0E55  3464               	retlw	064h
   141  0E56  3420               	retlw	020h
   142  0E57  3472               	retlw	072h
   143  0E58  3465               	retlw	065h
   144  0E59  3461               	retlw	061h
   145  0E5A  3464               	retlw	064h
   146  0E5B  3420               	retlw	020h
   147  0E5C  3463               	retlw	063h
   148  0E5D  346F               	retlw	06Fh
   149  0E5E  346D               	retlw	06Dh
   150  0E5F  346D               	retlw	06Dh
   151  0E60  3461               	retlw	061h
   152  0E61  346E               	retlw	06Eh
   153  0E62  3464               	retlw	064h
   154  0E63  3400               	retlw	0
   155                           	global	_member2
   156                           psect	strings,class=STRING,delta=2
   157                           global __pstrings
   158  0500                     __pstrings:
   159                           ;	global	stringdir,stringtab,__stringbase
   160  0500                     stringtab:
   161                           ;	String table - string pointers are 1 byte each
   162  0500                     stringcode:stringdir:
      + 0500                     stringdir:	
   163  0500  3005               movlw high(stringdir)
   164  0501  008A               movwf pclath
   165  0502  0804               movf fsr,w
   166  0503  0A84               incf fsr
   167  0504  0782               	addwf pc
   168  0505                     __stringbase:
   169  0505  3400               	retlw	0
   170                           psect	strings
   171                           	file	"userMacro.h"
   172                           	line	20
   173  0506                     _member2:
   174  0506  3444               	retlw	044h
   175  0507  3465               	retlw	065h
   176  0508  3465               	retlw	065h
   177  0509  3470               	retlw	070h
   178  050A  3461               	retlw	061h
   179  050B  346B               	retlw	06Bh
   180  050C  3420               	retlw	020h
   181  050D  3443               	retlw	043h
   182  050E  3468               	retlw	068h
   183  050F  3461               	retlw	061h
   184  0510  346E               	retlw	06Eh
   185  0511  3464               	retlw	064h
   186  0512  3472               	retlw	072h
   187  0513  3461               	retlw	061h
   188  0514  3473               	retlw	073h
   189  0515  3465               	retlw	065h
   190  0516  346B               	retlw	06Bh
   191  0517  3461               	retlw	061h
   192  0518  3472               	retlw	072h
   193  0519  3400               	retlw	0
   194                           	global	_member3
   195                           psect	strings
   196                           	file	"userMacro.h"
   197                           	line	21
   198  051A                     _member3:
   199  051A  3441               	retlw	041h
   200  051B  3470               	retlw	070h
   201  051C  3475               	retlw	075h
   202  051D  3472               	retlw	072h
   203  051E  3476               	retlw	076h
   204  051F  3465               	retlw	065h
   205  0520  3420               	retlw	020h
   206  0521  3442               	retlw	042h
   207  0522  3468               	retlw	068h
   208  0523  3469               	retlw	069h
   209  0524  3464               	retlw	064h
   210  0525  3465               	retlw	065h
   211  0526  3400               	retlw	0
   212                           	global	_member1
   213                           psect	strings
   214                           	file	"userMacro.h"
   215                           	line	19
   216  0527                     _member1:
   217  0527  3447               	retlw	047h
   218  0528  3472               	retlw	072h
   219  0529  3465               	retlw	065h
   220  052A  3467               	retlw	067h
   221  052B  3420               	retlw	020h
   222  052C  3447               	retlw	047h
   223  052D  3469               	retlw	069h
   224  052E  3472               	retlw	072h
   225  052F  3461               	retlw	061h
   226  0530  3472               	retlw	072h
   227  0531  3464               	retlw	064h
   228  0532  3400               	retlw	0
   229                           	global	_classTerm
   230                           psect	strings
   231                           	file	"userMacro.h"
   232                           	line	23
   233  0533                     _classTerm:
   234  0533  3446               	retlw	046h
   235  0534  3461               	retlw	061h
   236  0535  346C               	retlw	06Ch
   237  0536  346C               	retlw	06Ch
   238  0537  3420               	retlw	020h
   239  0538  3432               	retlw	032h
   240  0539  3430               	retlw	030h
   241  053A  3431               	retlw	031h
   242  053B  3433               	retlw	033h
   243  053C  3400               	retlw	0
   244                           	global	_classNum
   245                           psect	strings
   246                           	file	"userMacro.h"
   247                           	line	22
   248  053D                     _classNum:
   249  053D  3445               	retlw	045h
   250  053E  3443               	retlw	043h
   251  053F  3445               	retlw	045h
   252  0540  3435               	retlw	035h
   253  0541  3436               	retlw	036h
   254  0542  3432               	retlw	032h
   255  0543  3430               	retlw	030h
   256  0544  3400               	retlw	0
   257                           	global	_RXLenAddr
   258                           psect	strings
   259                           	file	"userMacro.h"
   260                           	line	50
   261  0545                     _RXLenAddr:
   262  0545  3400               	retlw	0
   263                           	global	_calcCSByteAddr
   264                           psect	strings
   265                           	file	"userMacro.h"
   266                           	line	66
   267  0546                     _calcCSByteAddr:
   268  0546  3430               	retlw	030h
   269                           	global	_cmdByteAddr
   270                           psect	strings
   271                           	file	"userMacro.h"
   272                           	line	56
   273  0547                     _cmdByteAddr:
   274  0547  3403               	retlw	03h
   275                           	global	_csByteAddr
   276                           psect	strings
   277                           	file	"userMacro.h"
   278                           	line	60
   279  0548                     _csByteAddr:
   280  0548  3405               	retlw	05h
   281                           	global	_dataBytesAddr
   282                           psect	strings
   283                           	file	"userMacro.h"
   284                           	line	64
   285  0549                     _dataBytesAddr:
   286  0549  3407               	retlw	07h
   287                           	global	_endByteAddr
   288                           psect	strings
   289                           	file	"userMacro.h"
   290                           	line	62
   291  054A                     _endByteAddr:
   292  054A  3406               	retlw	06h
   293                           	global	_groupNum
   294                           psect	strings
   295                           	file	"userMacro.h"
   296                           	line	24
   297  054B                     _groupNum:
   298  054B  3432               	retlw	032h
   299                           	global	_humHiAddr
   300                           psect	strings
   301                           	file	"userMacro.h"
   302                           	line	96
   303  054C                     _humHiAddr:
   304  054C  3484               	retlw	084h
   305                           	global	_humLoAddr
   306                           psect	strings
   307                           	file	"userMacro.h"
   308                           	line	98
   309  054D                     _humLoAddr:
   310  054D  3486               	retlw	086h
   311                           	global	_humStartHi
   312                           psect	strings
   313                           	file	"userMacro.h"
   314                           	line	102
   315  054E                     _humStartHi:
   316  054E  3450               	retlw	050h
   317                           	global	_humStartLo
   318                           psect	strings
   319                           	file	"userMacro.h"
   320                           	line	104
   321  054F                     _humStartLo:
   322  054F  340A               	retlw	0Ah
   323                           	global	_humValHAddr
   324                           psect	strings
   325                           	file	"userMacro.h"
   326                           	line	92
   327  0550                     _humValHAddr:
   328  0550  3480               	retlw	080h
   329                           	global	_humValLAddr
   330                           psect	strings
   331                           	file	"userMacro.h"
   332                           	line	94
   333  0551                     _humValLAddr:
   334  0551  3482               	retlw	082h
   335                           	global	_lenByteAddr
   336                           psect	strings
   337                           	file	"userMacro.h"
   338                           	line	58
   339  0552                     _lenByteAddr:
   340  0552  3404               	retlw	04h
   341                           	global	_maxCmd
   342                           psect	strings
   343                           	file	"userMacro.h"
   344                           	line	40
   345  0553                     _maxCmd:
   346  0553  340E               	retlw	0Eh
   347                           	global	_minSizeByte
   348                           psect	strings
   349                           	file	"userMacro.h"
   350                           	line	36
   351  0554                     _minSizeByte:
   352  0554  340A               	retlw	0Ah
   353                           	global	_newLineChar
   354                           psect	strings
   355                           	file	"userMacro.h"
   356                           	line	34
   357  0555                     _newLineChar:
   358  0555  340A               	retlw	0Ah
   359                           	global	_noDataLen
   360                           psect	strings
   361                           	file	"userMacro.h"
   362                           	line	38
   363  0556                     _noDataLen:
   364  0556  340A               	retlw	0Ah
   365                           	global	_readByteVal
   366                           psect	strings
   367                           	file	"userMacro.h"
   368                           	line	42
   369  0557                     _readByteVal:
   370  0557  3400               	retlw	0
   371                           	global	_rwByteAddr
   372                           psect	strings
   373                           	file	"userMacro.h"
   374                           	line	54
   375  0558                     _rwByteAddr:
   376  0558  3402               	retlw	02h
   377                           	global	_startByteAddr
   378                           psect	strings
   379                           	file	"userMacro.h"
   380                           	line	52
   381  0559                     _startByteAddr:
   382  0559  3401               	retlw	01h
   383                           	global	_tempC
   384                           psect	strings
   385                           	file	"userMacro.h"
   386                           	line	86
   387  055A                     _tempC:
   388  055A  3400               	retlw	0
   389                           	global	_tempF
   390                           psect	strings
   391                           	file	"userMacro.h"
   392                           	line	88
   393  055B                     _tempF:
   394  055B  3410               	retlw	010h
   395                           	global	_tempHiAddr
   396                           psect	strings
   397                           	file	"userMacro.h"
   398                           	line	74
   399  055C                     _tempHiAddr:
   400  055C  3462               	retlw	062h
   401                           	global	_tempLoAddr
   402                           psect	strings
   403                           	file	"userMacro.h"
   404                           	line	76
   405  055D                     _tempLoAddr:
   406  055D  3464               	retlw	064h
   407                           	global	_tempStartHi
   408                           psect	strings
   409                           	file	"userMacro.h"
   410                           	line	82
   411  055E                     _tempStartHi:
   412  055E  3464               	retlw	064h
   413                           	global	_tempStartLo
   414                           psect	strings
   415                           	file	"userMacro.h"
   416                           	line	84
   417  055F                     _tempStartLo:
   418  055F  34A0               	retlw	0A0h
   419                           	global	_tempUnitAddr
   420                           psect	strings
   421                           	file	"userMacro.h"
   422                           	line	78
   423  0560                     _tempUnitAddr:
   424  0560  3466               	retlw	066h
   425                           	global	_tempValHAddr
   426                           psect	strings
   427                           	file	"userMacro.h"
   428                           	line	70
   429  0561                     _tempValHAddr:
   430  0561  3460               	retlw	060h
   431                           	global	_tempValLAddr
   432                           psect	strings
   433                           	file	"userMacro.h"
   434                           	line	72
   435  0562                     _tempValLAddr:
   436  0562  3461               	retlw	061h
   437                           	global	_timeoutByte
   438                           psect	strings
   439                           	file	"userMacro.h"
   440                           	line	46
   441  0563                     _timeoutByte:
   442  0563  34FF               	retlw	0FFh
   443                           	global	_userEndByte
   444                           psect	strings
   445                           	file	"userMacro.h"
   446                           	line	32
   447  0564                     _userEndByte:
   448  0564  340A               	retlw	0Ah
   449                           	global	_userStartByte
   450                           psect	strings
   451                           	file	"userMacro.h"
   452                           	line	30
   453  0565                     _userStartByte:
   454  0565  34AA               	retlw	0AAh
   455                           	global	_writeByteVal
   456                           psect	strings
   457                           	file	"userMacro.h"
   458                           	line	44
   459  0566                     _writeByteVal:
   460  0566  3401               	retlw	01h
   461                           	global	_member2
   462                           	global	_member3
   463                           	global	_member1
   464                           	global	_classTerm
   465                           	global	_classNum
   466                           	global	_RXLenAddr
   467                           	global	_calcCSByteAddr
   468                           	global	_cmdByteAddr
   469                           	global	_csByteAddr
   470                           	global	_dataBytesAddr
   471                           	global	_endByteAddr
   472                           	global	_groupNum
   473                           	global	_humHiAddr
   474                           	global	_humLoAddr
   475                           	global	_humStartHi
   476                           	global	_humStartLo
   477                           	global	_humValHAddr
   478                           	global	_humValLAddr
   479                           	global	_lenByteAddr
   480                           	global	_maxCmd
   481                           	global	_minSizeByte
   482                           	global	_newLineChar
   483                           	global	_noDataLen
   484                           	global	_readByteVal
   485                           	global	_rwByteAddr
   486                           	global	_startByteAddr
   487                           	global	_tempC
   488                           	global	_tempF
   489                           	global	_tempHiAddr
   490                           	global	_tempLoAddr
   491                           	global	_tempStartHi
   492                           	global	_tempStartLo
   493                           	global	_tempUnitAddr
   494                           	global	_tempValHAddr
   495                           	global	_tempValLAddr
   496                           	global	_timeoutByte
   497                           	global	_userEndByte
   498                           	global	_userStartByte
   499                           	global	_writeByteVal
   500                           	global	getPacket@F1178
   501                           	global	_ADCON0
   502  001F                     _ADCON0	set	31
   503                           	global	_ADRESH
   504  001E                     _ADRESH	set	30
   505                           	global	_PORTD
   506  0008                     _PORTD	set	8
   507                           	global	_RCREG
   508  001A                     _RCREG	set	26
   509                           	global	_RCSTA
   510  0018                     _RCSTA	set	24
   511                           	global	_TXREG
   512  0019                     _TXREG	set	25
   513                           	global	_ADON
   514  00F8                     _ADON	set	248
   515                           	global	_CARRY
   516  0018                     _CARRY	set	24
   517                           	global	_GIE
   518  005F                     _GIE	set	95
   519                           	global	_GO_nDONE
   520  00FA                     _GO_nDONE	set	250
   521                           	global	_PEIE
   522  005E                     _PEIE	set	94
   523                           	global	_RB1
   524  0031                     _RB1	set	49
   525                           	global	_RCIF
   526  0065                     _RCIF	set	101
   527                           	global	_RD0
   528  0040                     _RD0	set	64
   529                           	global	_RD1
   530  0041                     _RD1	set	65
   531                           	global	_RD2
   532  0042                     _RD2	set	66
   533                           	global	_RD4
   534  0044                     _RD4	set	68
   535                           	global	_RD5
   536  0045                     _RD5	set	69
   537                           	global	_RD6
   538  0046                     _RD6	set	70
   539                           	global	_RD7
   540  0047                     _RD7	set	71
   541                           	global	_TXIF
   542  0064                     _TXIF	set	100
   543                           	global	_ADCON1
   544  009F                     _ADCON1	set	159
   545                           	global	_ADRESL
   546  009E                     _ADRESL	set	158
   547                           	global	_SPBRG
   548  0099                     _SPBRG	set	153
   549                           	global	_TRISA
   550  0085                     _TRISA	set	133
   551                           	global	_TRISB
   552  0086                     _TRISB	set	134
   553                           	global	_TRISD
   554  0088                     _TRISD	set	136
   555                           	global	_TXSTA
   556  0098                     _TXSTA	set	152
   557                           	global	_RCIE
   558  0465                     _RCIE	set	1125
   559                           	global	_TRISC6
   560  043E                     _TRISC6	set	1086
   561                           	global	_TRISC7
   562  043F                     _TRISC7	set	1087
   563                           	global	_TRISD0
   564  0440                     _TRISD0	set	1088
   565                           	global	_TRISD2
   566  0442                     _TRISD2	set	1090
   567                           	global	_TRISD4
   568  0444                     _TRISD4	set	1092
   569                           	global	_TRISD5
   570  0445                     _TRISD5	set	1093
   571                           	global	_TRISD6
   572  0446                     _TRISD6	set	1094
   573                           	global	_TRISD7
   574  0447                     _TRISD7	set	1095
   575                           	global	_EEADR
   576  010D                     _EEADR	set	269
   577                           	global	_EEDATA
   578  010C                     _EEDATA	set	268
   579                           	global	_EECON1
   580  018C                     _EECON1	set	396
   581                           	global	_EECON2
   582  018D                     _EECON2	set	397
   583                           	global	_RD
   584  0C60                     _RD	set	3168
   585                           	global	_WR
   586  0C61                     _WR	set	3169
   587                           	global	_WREN
   588  0C62                     _WREN	set	3170
   589                           	file	"C:\Users\Greg\AppData\Local\Temp\safo."
   590                           	line	#
   591                           psect cinit,class=CODE,delta=2
   592                           global start_initialization
   593  04E5                     start_initialization:
   594                           
   595                           psect	dataBANK1,class=BANK1,space=1
   596                           global __pdataBANK1
   597  00A0                     __pdataBANK1:
   598                           	file	"main.c"
   599                           	line	58
   600  00A0                     main@F1175:
   601  00A0                            ds      9
   602                           
   603                           psect	dataBANK1
   604                           	file	"userMacro.h"
   605                           	line	26
   606  00A9                     _readError:
   607  00A9                            ds      25
   608                           
   609                           psect	bssBANK3,class=BANK3,space=1
   610                           global __pbssBANK3
   611  0190                     __pbssBANK3:
   612  0190                     getPacket@F1178:
   613  0190                            ds      50
   614                           
   615                           psect clrtext,class=CODE,delta=2
   616                           global clear_ram
   617                           ;	Called with FSR containing the base address, and
   618                           ;	W with the last address+1
   619  0DAA                     clear_ram:
   620  0DAA  0064               	clrwdt			;clear the watchdog before getting into this loop
   621  0DAB                     clrloop:
   622  0DAB  0180               	clrf	indf		;clear RAM location pointed to by FSR
   623  0DAC  0A84               	incf	fsr,f		;increment pointer
   624  0DAD  0604               	xorwf	fsr,w		;XOR with final address
   625  0DAE  1903               	btfsc	status,2	;have we reached the end yet?
   626  0DAF  3400               	retlw	0		;all done for this memory range, return
   627  0DB0  0604               	xorwf	fsr,w		;XOR again to restore value
   628  0DB1  2DAB               	goto	clrloop		;do the next byte
   629                           
   630                           ; Clear objects allocated to BANK3
   631                           psect cinit,class=CODE,delta=2
   632  04E5  1783               	bsf	status, 7	;select IRP bank2
   633  04E6  3090               	movlw	low(__pbssBANK3)
   634  04E7  0084               	movwf	fsr
   635  04E8  30C2               	movlw	low((__pbssBANK3)+032h)
   636  04E9  120A  158A  25AA   	fcall	clear_ram
              120A  118A         
   637                           global btemp
   638                           psect inittext,class=CODE,delta=2
   639                           global init_fetch,btemp
   640                           ;	Called with low address in FSR and high address in W
   641  07E7                     init_fetch:
   642  07E7  087E               	movf btemp,w
   643  07E8  008A               	movwf pclath
   644  07E9  087F               	movf btemp+1,w
   645  07EA  0082               	movwf pc
   646                           global init_ram
   647                           ;Called with:
   648                           ;	high address of idata address in btemp 
   649                           ;	low address of idata address in btemp+1 
   650                           ;	low address of data in FSR
   651                           ;	high address + 1 of data in btemp-1
   652  07EB                     init_ram:
   653  07EB  120A  118A  27E7   	fcall init_fetch
              120A  118A         
   654  07F0  0080               	movwf indf,f
   655  07F1  0A84               	incf fsr,f
   656  07F2  0804               	movf fsr,w
   657  07F3  067D               	xorwf btemp-1,w
   658  07F4  1903               	btfsc status,2
   659  07F5  3400               	retlw 0
   660  07F6  0AFF               	incf btemp+1,f
   661  07F7  1903               	btfsc status,2
   662  07F8  0AFE               	incf btemp,f
   663  07F9  2FEB               	goto init_ram
   664                           ; Initialize objects allocated to BANK1
   665                           psect cinit,class=CODE,delta=2
   666                           global init_ram, __pidataBANK1
   667  04EE  1383               	bcf	status, 7	;select IRP bank0
   668  04EF  30C2               	movlw low(__pdataBANK1+34)
   669  04F0  00FD               	movwf btemp-1,f
   670  04F1  300E               	movlw high(__pidataBANK1)
   671  04F2  00FE               	movwf btemp,f
   672  04F3  3042               	movlw low(__pidataBANK1)
   673  04F4  00FF               	movwf btemp+1,f
   674  04F5  30A0               	movlw low(__pdataBANK1)
   675  04F6  0084               	movwf fsr,f
   676  04F7  120A  118A  27EB   	fcall init_ram
              120A  118A         
   677                           psect cinit,class=CODE,delta=2
   678                           global end_of_initialization
   679                           
   680                           ;End of C runtime variable initialization code
   681                           
   682  04FC                     end_of_initialization:
   683  04FC  0183               clrf status
   684  04FD  120A  118A  2F2C   ljmp _main	;jump to C main() function
   685                           psect	cstackBANK1,class=BANK1,space=1
   686                           global __pcstackBANK1
   687  00C2                     __pcstackBANK1:
   688                           	global	??_selectTemp
   689  00C2                     ??_selectTemp:	; 0 bytes @ 0x0
   690                           	global	??_initUSART
   691  00C2                     ??_initUSART:	; 0 bytes @ 0x0
   692                           	global	??_writeByte
   693  00C2                     ??_writeByte:	; 0 bytes @ 0x0
   694                           	global	??_initADC
   695  00C2                     ??_initADC:	; 0 bytes @ 0x0
   696                           	global	?_eeprom_write
   697  00C2                     ?_eeprom_write:	; 1 bytes @ 0x0
   698                           	global	?_strlen
   699  00C2                     ?_strlen:	; 2 bytes @ 0x0
   700                           	global	?_readTemp
   701  00C2                     ?_readTemp:	; 2 bytes @ 0x0
   702                           	global	writeByte@Byte
   703  00C2                     writeByte@Byte:	; 1 bytes @ 0x0
   704                           	global	eeprom_write@value
   705  00C2                     eeprom_write@value:	; 1 bytes @ 0x0
   706  00C2                     	ds	1
   707                           	global	??_eeprom_write
   708  00C3                     ??_eeprom_write:	; 0 bytes @ 0x1
   709  00C3                     	ds	1
   710                           	global	??_strlen
   711  00C4                     ??_strlen:	; 0 bytes @ 0x2
   712                           	global	??_readTemp
   713  00C4                     ??_readTemp:	; 0 bytes @ 0x2
   714                           	global	eeprom_write@addr
   715  00C4                     eeprom_write@addr:	; 1 bytes @ 0x2
   716  00C4                     	ds	1
   717                           	global	??_initTemp
   718  00C5                     ??_initTemp:	; 0 bytes @ 0x3
   719  00C5                     	ds	1
   720                           	global	??_getTemp
   721  00C6                     ??_getTemp:	; 0 bytes @ 0x4
   722  00C6                     	ds	1
   723                           	global	getTemp@tempReading
   724  00C7                     getTemp@tempReading:	; 2 bytes @ 0x5
   725  00C7                     	ds	3
   726                           	global	strlen@s
   727  00CA                     strlen@s:	; 1 bytes @ 0x8
   728  00CA                     	ds	1
   729                           	global	strlen@cp
   730  00CB                     strlen@cp:	; 1 bytes @ 0x9
   731  00CB                     	ds	1
   732                           	global	??_writeString
   733  00CC                     ??_writeString:	; 0 bytes @ 0xA
   734  00CC                     	ds	1
   735                           	global	writeString@userString
   736  00CD                     writeString@userString:	; 1 bytes @ 0xB
   737  00CD                     	ds	1
   738                           	global	writeString@i
   739  00CE                     writeString@i:	; 2 bytes @ 0xC
   740  00CE                     	ds	2
   741                           	global	??_main
   742  00D0                     ??_main:	; 0 bytes @ 0xE
   743  00D0                     	ds	4
   744                           	global	main@testString
   745  00D4                     main@testString:	; 9 bytes @ 0x12
   746  00D4                     	ds	9
   747                           psect	cstackCOMMON,class=COMMON,space=1
   748                           global __pcstackCOMMON
   749  0070                     __pcstackCOMMON:
   750                           	global	??_eeprom_read
   751  0070                     ??_eeprom_read:	; 0 bytes @ 0x0
   752                           	global	?_addDataToCheckSum
   753  0070                     ?_addDataToCheckSum:	; 0 bytes @ 0x0
   754                           	global	?_selectTemp
   755  0070                     ?_selectTemp:	; 0 bytes @ 0x0
   756                           	global	?_getPacket
   757  0070                     ?_getPacket:	; 0 bytes @ 0x0
   758                           	global	?_readCommands
   759  0070                     ?_readCommands:	; 0 bytes @ 0x0
   760                           	global	?_writeCommands
   761  0070                     ?_writeCommands:	; 0 bytes @ 0x0
   762                           	global	??_writeCommands
   763  0070                     ??_writeCommands:	; 0 bytes @ 0x0
   764                           	global	?_initUSART
   765  0070                     ?_initUSART:	; 0 bytes @ 0x0
   766                           	global	?_writeByte
   767  0070                     ?_writeByte:	; 0 bytes @ 0x0
   768                           	global	??_readByte
   769  0070                     ??_readByte:	; 0 bytes @ 0x0
   770                           	global	?_writeString
   771  0070                     ?_writeString:	; 0 bytes @ 0x0
   772                           	global	?_readString
   773  0070                     ?_readString:	; 0 bytes @ 0x0
   774                           	global	??_makeNibble
   775  0070                     ??_makeNibble:	; 0 bytes @ 0x0
   776                           	global	?_parsePacket
   777  0070                     ?_parsePacket:	; 0 bytes @ 0x0
   778                           	global	?_initTemp
   779  0070                     ?_initTemp:	; 0 bytes @ 0x0
   780                           	global	?_getTemp
   781  0070                     ?_getTemp:	; 0 bytes @ 0x0
   782                           	global	?_initADC
   783  0070                     ?_initADC:	; 0 bytes @ 0x0
   784                           	global	?_isr
   785  0070                     ?_isr:	; 0 bytes @ 0x0
   786                           	global	?i1_writeByte
   787  0070                     ?i1_writeByte:	; 0 bytes @ 0x0
   788                           	global	??i1_writeByte
   789  0070                     ??i1_writeByte:	; 0 bytes @ 0x0
   790                           	global	?i1_writeString
   791  0070                     ?i1_writeString:	; 0 bytes @ 0x0
   792                           	global	?_eeprom_read
   793  0070                     ?_eeprom_read:	; 1 bytes @ 0x0
   794                           	global	?_readByte
   795  0070                     ?_readByte:	; 1 bytes @ 0x0
   796                           	global	?_makeNibble
   797  0070                     ?_makeNibble:	; 1 bytes @ 0x0
   798                           	global	?_main
   799  0070                     ?_main:	; 2 bytes @ 0x0
   800                           	global	?i1_strlen
   801  0070                     ?i1_strlen:	; 2 bytes @ 0x0
   802                           	global	makeNibble@tempNib
   803  0070                     makeNibble@tempNib:	; 1 bytes @ 0x0
   804                           	global	i1writeByte@Byte
   805  0070                     i1writeByte@Byte:	; 1 bytes @ 0x0
   806  0070                     	ds	1
   807                           	global	eeprom_read@addr
   808  0071                     eeprom_read@addr:	; 1 bytes @ 0x1
   809  0071                     	ds	1
   810                           	global	??i1_strlen
   811  0072                     ??i1_strlen:	; 0 bytes @ 0x2
   812                           	global	?_checkEven
   813  0072                     ?_checkEven:	; 2 bytes @ 0x2
   814                           	global	?_checkLength
   815  0072                     ?_checkLength:	; 2 bytes @ 0x2
   816                           	global	?_checkDataFrames
   817  0072                     ?_checkDataFrames:	; 2 bytes @ 0x2
   818                           	global	?_checkCS
   819  0072                     ?_checkCS:	; 2 bytes @ 0x2
   820  0072                     	ds	2
   821                           	global	??_checkEven
   822  0074                     ??_checkEven:	; 0 bytes @ 0x4
   823                           	global	??_checkLength
   824  0074                     ??_checkLength:	; 0 bytes @ 0x4
   825                           	global	??_checkDataFrames
   826  0074                     ??_checkDataFrames:	; 0 bytes @ 0x4
   827                           	global	??_checkCS
   828  0074                     ??_checkCS:	; 0 bytes @ 0x4
   829  0074                     	ds	4
   830                           	global	i1strlen@s
   831  0078                     i1strlen@s:	; 1 bytes @ 0x8
   832  0078                     	ds	1
   833                           	global	i1strlen@cp
   834  0079                     i1strlen@cp:	; 1 bytes @ 0x9
   835  0079                     	ds	1
   836                           	global	??i1_writeString
   837  007A                     ??i1_writeString:	; 0 bytes @ 0xA
   838                           	global	?i1_eeprom_write
   839  007A                     ?i1_eeprom_write:	; 1 bytes @ 0xA
   840                           	global	i1eeprom_write@value
   841  007A                     i1eeprom_write@value:	; 1 bytes @ 0xA
   842  007A                     	ds	1
   843                           	global	??i1_eeprom_write
   844  007B                     ??i1_eeprom_write:	; 0 bytes @ 0xB
   845                           	global	i1writeString@userString
   846  007B                     i1writeString@userString:	; 1 bytes @ 0xB
   847  007B                     	ds	1
   848                           	global	i1eeprom_write@addr
   849  007C                     i1eeprom_write@addr:	; 1 bytes @ 0xC
   850                           	global	i1writeString@i
   851  007C                     i1writeString@i:	; 2 bytes @ 0xC
   852  007C                     	ds	1
   853                           	global	?_makeHexByte
   854  007D                     ?_makeHexByte:	; 1 bytes @ 0xD
   855                           	global	makeHexByte@nibTwo
   856  007D                     makeHexByte@nibTwo:	; 1 bytes @ 0xD
   857                           	global	addDataToCheckSum@i
   858  007D                     addDataToCheckSum@i:	; 1 bytes @ 0xD
   859  007D                     	ds	1
   860                           	global	??_readCommands
   861  007E                     ??_readCommands:	; 0 bytes @ 0xE
   862                           	global	??_validatePacket
   863  007E                     ??_validatePacket:	; 0 bytes @ 0xE
   864                           psect	cstackBANK0,class=BANK0,space=1
   865                           global __pcstackBANK0
   866  0020                     __pcstackBANK0:
   867                           	global	??_addDataToCheckSum
   868  0020                     ??_addDataToCheckSum:	; 0 bytes @ 0x0
   869                           	global	??_readString
   870  0020                     ??_readString:	; 0 bytes @ 0x0
   871                           	global	??_makeHexByte
   872  0020                     ??_makeHexByte:	; 0 bytes @ 0x0
   873                           	global	?_checkStartByte
   874  0020                     ?_checkStartByte:	; 2 bytes @ 0x0
   875                           	global	?_checkRWByte
   876  0020                     ?_checkRWByte:	; 2 bytes @ 0x0
   877                           	global	?_checkCMDByte
   878  0020                     ?_checkCMDByte:	; 2 bytes @ 0x0
   879  0020                     	ds	2
   880                           	global	??_checkStartByte
   881  0022                     ??_checkStartByte:	; 0 bytes @ 0x2
   882                           	global	??_checkRWByte
   883  0022                     ??_checkRWByte:	; 0 bytes @ 0x2
   884                           	global	??_checkCMDByte
   885  0022                     ??_checkCMDByte:	; 0 bytes @ 0x2
   886                           	global	readString@readStorage
   887  0022                     readString@readStorage:	; 1 bytes @ 0x2
   888                           	global	makeHexByte@nibOne
   889  0022                     makeHexByte@nibOne:	; 1 bytes @ 0x2
   890  0022                     	ds	1
   891                           	global	makeHexByte@input_byte
   892  0023                     makeHexByte@input_byte:	; 1 bytes @ 0x3
   893                           	global	readString@i
   894  0023                     readString@i:	; 2 bytes @ 0x3
   895  0023                     	ds	1
   896                           	global	??_parsePacket
   897  0024                     ??_parsePacket:	; 0 bytes @ 0x4
   898                           	global	?_validatePacket
   899  0024                     ?_validatePacket:	; 2 bytes @ 0x4
   900  0024                     	ds	1
   901                           	global	readString@ch
   902  0025                     readString@ch:	; 1 bytes @ 0x5
   903  0025                     	ds	3
   904                           	global	parsePacket@dataCounter
   905  0028                     parsePacket@dataCounter:	; 2 bytes @ 0x8
   906  0028                     	ds	2
   907                           	global	parsePacket@i
   908  002A                     parsePacket@i:	; 1 bytes @ 0xA
   909  002A                     	ds	1
   910                           	global	parsePacket@dataPacket
   911  002B                     parsePacket@dataPacket:	; 1 bytes @ 0xB
   912  002B                     	ds	1
   913                           	global	??_getPacket
   914  002C                     ??_getPacket:	; 0 bytes @ 0xC
   915  002C                     	ds	4
   916                           	global	getPacket@arrStore
   917  0030                     getPacket@arrStore:	; 50 bytes @ 0x10
   918  0030                     	ds	50
   919                           	global	??_isr
   920  0062                     ??_isr:	; 0 bytes @ 0x42
   921  0062                     	ds	4
   922 ;;Data sizes: Strings 0, constant 97, data 34, bss 50, persistent 0 stack 0
   923 ;;Auto spaces:   Size  Autos    Used
   924 ;; COMMON          14     14      14
   925 ;; BANK0           80     70      70
   926 ;; BANK1           80     27      61
   927 ;; BANK3           96      0      50
   928 ;; BANK2           96      0       0
   929                           
   930 ;;
   931 ;; Pointer list with targets:
   932                           
   933 ;; i1writeString@userString	PTR unsigned char  size(1) Largest target is 25
   934 ;;		 -> readError(BANK1[25]), 
   935 ;;
   936 ;; ?i1_strlen	unsigned int  size(1) Largest target is 50
   937 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   938 ;;
   939 ;; i1strlen@s	PTR const unsigned char  size(1) Largest target is 50
   940 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   941 ;;
   942 ;; ?_readTemp	unsigned int  size(1) Largest target is 0
   943 ;;
   944 ;; ?_strlen	unsigned int  size(1) Largest target is 50
   945 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   946 ;;
   947 ;; strlen@s	PTR const unsigned char  size(1) Largest target is 50
   948 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   949 ;;
   950 ;; strlen@cp	PTR const unsigned char  size(1) Largest target is 50
   951 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   952 ;;
   953 ;; parsePacket@dataPacket	PTR unsigned char  size(1) Largest target is 50
   954 ;;		 -> getPacket@arrStore(BANK0[50]), 
   955 ;;
   956 ;; readString@readStorage	PTR unsigned char  size(1) Largest target is 50
   957 ;;		 -> getPacket@arrStore(BANK0[50]), 
   958 ;;
   959 ;; writeString@userString	PTR unsigned char  size(1) Largest target is 25
   960 ;;		 -> readError(BANK1[25]), main@testString(BANK1[9]), 
   961 ;;
   962                           
   963                           
   964 ;;
   965 ;; Critical Paths under _main in COMMON
   966 ;;
   967 ;;   None.
   968 ;;
   969 ;; Critical Paths under _isr in COMMON
   970 ;;
   971 ;;   _readCommands->i1_writeString
   972 ;;   _validatePacket->_addDataToCheckSum
   973 ;;   _parsePacket->_makeHexByte
   974 ;;   i1_writeString->i1_strlen
   975 ;;   _addDataToCheckSum->i1_eeprom_write
   976 ;;   _checkCS->_eeprom_read
   977 ;;   _checkCMDByte->i1_eeprom_write
   978 ;;   _checkRWByte->i1_eeprom_write
   979 ;;   _checkStartByte->i1_eeprom_write
   980 ;;   _checkDataFrames->_eeprom_read
   981 ;;   _checkLength->_eeprom_read
   982 ;;   _checkEven->_eeprom_read
   983 ;;   _makeHexByte->i1_eeprom_write
   984 ;;   _readString->i1_eeprom_write
   985 ;;   i1_eeprom_write->i1_strlen
   986 ;;
   987 ;; Critical Paths under _main in BANK0
   988 ;;
   989 ;;   None.
   990 ;;
   991 ;; Critical Paths under _isr in BANK0
   992 ;;
   993 ;;   _isr->_getPacket
   994 ;;   _getPacket->_parsePacket
   995 ;;   _validatePacket->_checkStartByte
   996 ;;   _validatePacket->_checkRWByte
   997 ;;   _validatePacket->_checkCMDByte
   998 ;;   _parsePacket->_makeHexByte
   999 ;;
  1000 ;; Critical Paths under _main in BANK1
  1001 ;;
  1002 ;;   _main->_writeString
  1003 ;;   _getTemp->_readTemp
  1004 ;;   _initTemp->_eeprom_write
  1005 ;;   _writeString->_strlen
  1006 ;;
  1007 ;; Critical Paths under _isr in BANK1
  1008 ;;
  1009 ;;   None.
  1010 ;;
  1011 ;; Critical Paths under _main in BANK3
  1012 ;;
  1013 ;;   None.
  1014 ;;
  1015 ;; Critical Paths under _isr in BANK3
  1016 ;;
  1017 ;;   None.
  1018 ;;
  1019 ;; Critical Paths under _main in BANK2
  1020 ;;
  1021 ;;   None.
  1022 ;;
  1023 ;; Critical Paths under _isr in BANK2
  1024 ;;
  1025 ;;   None.
  1026                           
  1027 ;;
  1028 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1029 ;;
  1030                           
  1031 ;;
  1032 ;;Call Graph Tables:
  1033 ;;
  1034 ;; ---------------------------------------------------------------------------------
  1035 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1036 ;; ---------------------------------------------------------------------------------
  1037 ;; (0) _main                                                13    13      0     397
  1038 ;;                                             14 BANK1     13    13      0
  1039 ;;                            _initADC
  1040 ;;                           _initTemp
  1041 ;;                          _initUSART
  1042 ;;                        _writeString
  1043 ;;                            _getTemp
  1044 ;; ---------------------------------------------------------------------------------
  1045 ;; (1) _getTemp                                              3     3      0      95
  1046 ;;                                              4 BANK1      3     3      0
  1047 ;;                         _selectTemp
  1048 ;;                           _readTemp
  1049 ;;                       _eeprom_write
  1050 ;; ---------------------------------------------------------------------------------
  1051 ;; (1) _initTemp                                             1     1      0      50
  1052 ;;                                              3 BANK1      1     1      0
  1053 ;;                       _eeprom_write
  1054 ;; ---------------------------------------------------------------------------------
  1055 ;; (2) _readTemp                                             4     2      2       0
  1056 ;;                                              0 BANK1      4     2      2
  1057 ;; ---------------------------------------------------------------------------------
  1058 ;; (1) _writeString                                          4     4      0     223
  1059 ;;                                             10 BANK1      4     4      0
  1060 ;;                          _writeByte
  1061 ;;                             _strlen
  1062 ;; ---------------------------------------------------------------------------------
  1063 ;; (1) _initADC                                              0     0      0       0
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (2) _selectTemp                                           0     0      0       0
  1066 ;; ---------------------------------------------------------------------------------
  1067 ;; (2) _eeprom_write                                         3     2      1      50
  1068 ;;                                              0 BANK1      3     2      1
  1069 ;; ---------------------------------------------------------------------------------
  1070 ;; (2) _strlen                                              10     8      2      89
  1071 ;;                                              0 BANK1     10     8      2
  1072 ;; ---------------------------------------------------------------------------------
  1073 ;; (2) _writeByte                                            1     1      0      22
  1074 ;;                                              0 BANK1      1     1      0
  1075 ;; ---------------------------------------------------------------------------------
  1076 ;; (1) _initUSART                                            0     0      0       0
  1077 ;; ---------------------------------------------------------------------------------
  1078 ;; Estimated maximum stack depth 2
  1079 ;; ---------------------------------------------------------------------------------
  1080 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1081 ;; ---------------------------------------------------------------------------------
  1082 ;; (3) _isr                                                  4     4      0    3788
  1083 ;;                                             66 BANK0      4     4      0
  1084 ;;                          _getPacket
  1085 ;; ---------------------------------------------------------------------------------
  1086 ;; (4) _getPacket                                           54    54      0    3788
  1087 ;;                                             12 BANK0     54    54      0
  1088 ;;                         _readString
  1089 ;;                     i1_eeprom_write
  1090 ;;                        _parsePacket
  1091 ;;                     _validatePacket
  1092 ;;                        _eeprom_read
  1093 ;;                       _readCommands
  1094 ;;                      _writeCommands
  1095 ;; ---------------------------------------------------------------------------------
  1096 ;; (5) _readCommands                                         0     0      0     831
  1097 ;;                        i1_writeByte
  1098 ;;                      i1_writeString
  1099 ;;                        _eeprom_read
  1100 ;; ---------------------------------------------------------------------------------
  1101 ;; (5) _validatePacket                                       2     0      2    1215
  1102 ;;                                              4 BANK0      2     0      2
  1103 ;;                     _checkStartByte
  1104 ;;                        _checkRWByte
  1105 ;;                       _checkCMDByte
  1106 ;;                    _checkDataFrames
  1107 ;;                  _addDataToCheckSum
  1108 ;;                            _checkCS
  1109 ;; ---------------------------------------------------------------------------------
  1110 ;; (5) _parsePacket                                          8     8      0    1208
  1111 ;;                                              4 BANK0      8     8      0
  1112 ;;                        _checkLength
  1113 ;;                          _checkEven
  1114 ;;                        _makeHexByte
  1115 ;;                     i1_eeprom_write
  1116 ;;                           i1_strlen
  1117 ;;                        _eeprom_read
  1118 ;; ---------------------------------------------------------------------------------
  1119 ;; (6) i1_writeString                                        4     4      0     736
  1120 ;;                                             10 COMMON     4     4      0
  1121 ;;                        i1_writeByte
  1122 ;;                           i1_strlen
  1123 ;; ---------------------------------------------------------------------------------
  1124 ;; (6) _addDataToCheckSum                                    3     3      0     236
  1125 ;;                                             13 COMMON     1     1      0
  1126 ;;                                              0 BANK0      2     2      0
  1127 ;;                        _eeprom_read
  1128 ;;                     i1_eeprom_write
  1129 ;; ---------------------------------------------------------------------------------
  1130 ;; (6) _checkCS                                              3     1      2      95
  1131 ;;                                              2 COMMON     3     1      2
  1132 ;;                        _eeprom_read
  1133 ;;                        i1_writeByte
  1134 ;; ---------------------------------------------------------------------------------
  1135 ;; (6) _checkCMDByte                                         4     2      2     263
  1136 ;;                                              0 BANK0      4     2      2
  1137 ;;                        _eeprom_read
  1138 ;;                     i1_eeprom_write
  1139 ;;                        i1_writeByte
  1140 ;; ---------------------------------------------------------------------------------
  1141 ;; (6) _checkRWByte                                          4     2      2     263
  1142 ;;                                              0 BANK0      4     2      2
  1143 ;;                        _eeprom_read
  1144 ;;                        i1_writeByte
  1145 ;;                     i1_eeprom_write
  1146 ;; ---------------------------------------------------------------------------------
  1147 ;; (6) _checkStartByte                                       4     2      2     263
  1148 ;;                                              0 BANK0      4     2      2
  1149 ;;                        _eeprom_read
  1150 ;;                        i1_writeByte
  1151 ;;                     i1_eeprom_write
  1152 ;; ---------------------------------------------------------------------------------
  1153 ;; (6) _checkDataFrames                                      8     6      2      95
  1154 ;;                                              2 COMMON     8     6      2
  1155 ;;                        _eeprom_read
  1156 ;;                        i1_writeByte
  1157 ;; ---------------------------------------------------------------------------------
  1158 ;; (6) _checkLength                                          3     1      2      95
  1159 ;;                                              2 COMMON     3     1      2
  1160 ;;                        _eeprom_read
  1161 ;;                        i1_writeByte
  1162 ;; ---------------------------------------------------------------------------------
  1163 ;; (6) _checkEven                                            3     1      2      95
  1164 ;;                                              2 COMMON     3     1      2
  1165 ;;                        _eeprom_read
  1166 ;;                        i1_writeByte
  1167 ;; ---------------------------------------------------------------------------------
  1168 ;; (6) _makeHexByte                                          5     4      1     134
  1169 ;;                                             13 COMMON     1     0      1
  1170 ;;                                              0 BANK0      4     4      0
  1171 ;;                         _makeNibble
  1172 ;;                     i1_eeprom_write (ARG)
  1173 ;;                           i1_strlen (ARG)
  1174 ;; ---------------------------------------------------------------------------------
  1175 ;; (5) _readString                                           6     6      0     282
  1176 ;;                                              0 BANK0      6     6      0
  1177 ;;                           _readByte
  1178 ;;                     i1_eeprom_write
  1179 ;; ---------------------------------------------------------------------------------
  1180 ;; (7) i1_strlen                                            10     8      2     294
  1181 ;;                                              0 COMMON    10     8      2
  1182 ;; ---------------------------------------------------------------------------------
  1183 ;; (7) i1_eeprom_write                                       3     2      1     168
  1184 ;;                                             10 COMMON     3     2      1
  1185 ;;                         _makeNibble (ARG)
  1186 ;;                           i1_strlen (ARG)
  1187 ;;                        _eeprom_read (ARG)
  1188 ;; ---------------------------------------------------------------------------------
  1189 ;; (7) i1_writeByte                                          1     1      0      73
  1190 ;;                                              0 COMMON     1     1      0
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (5) _writeCommands                                        0     0      0       0
  1193 ;; ---------------------------------------------------------------------------------
  1194 ;; (6) _eeprom_read                                          2     2      0      22
  1195 ;;                                              0 COMMON     2     2      0
  1196 ;; ---------------------------------------------------------------------------------
  1197 ;; (7) _makeNibble                                           1     1      0      66
  1198 ;;                                              0 COMMON     1     1      0
  1199 ;; ---------------------------------------------------------------------------------
  1200 ;; (6) _readByte                                             0     0      0       0
  1201 ;; ---------------------------------------------------------------------------------
  1202 ;; Estimated maximum stack depth 7
  1203 ;; ---------------------------------------------------------------------------------
  1204                           
  1205 ;; Call Graph Graphs:
  1206                           
  1207 ;; _main (ROOT)
  1208 ;;   _initADC
  1209 ;;   _initTemp
  1210 ;;     _eeprom_write
  1211 ;;   _initUSART
  1212 ;;   _writeString
  1213 ;;     _writeByte
  1214 ;;     _strlen
  1215 ;;   _getTemp
  1216 ;;     _selectTemp
  1217 ;;     _readTemp
  1218 ;;     _eeprom_write
  1219 ;;
  1220 ;; _isr (ROOT)
  1221 ;;   _getPacket
  1222 ;;     _readString
  1223 ;;       _readByte
  1224 ;;       i1_eeprom_write
  1225 ;;         _makeNibble (ARG)
  1226 ;;         i1_strlen (ARG)
  1227 ;;         _eeprom_read (ARG)
  1228 ;;     i1_eeprom_write
  1229 ;;       _makeNibble (ARG)
  1230 ;;       i1_strlen (ARG)
  1231 ;;       _eeprom_read (ARG)
  1232 ;;     _parsePacket
  1233 ;;       _checkLength
  1234 ;;         _eeprom_read
  1235 ;;         i1_writeByte
  1236 ;;       _checkEven
  1237 ;;         _eeprom_read
  1238 ;;         i1_writeByte
  1239 ;;       _makeHexByte
  1240 ;;         _makeNibble
  1241 ;;         i1_eeprom_write (ARG)
  1242 ;;           _makeNibble (ARG)
  1243 ;;           i1_strlen (ARG)
  1244 ;;           _eeprom_read (ARG)
  1245 ;;         i1_strlen (ARG)
  1246 ;;       i1_eeprom_write
  1247 ;;         _makeNibble (ARG)
  1248 ;;         i1_strlen (ARG)
  1249 ;;         _eeprom_read (ARG)
  1250 ;;       i1_strlen
  1251 ;;       _eeprom_read
  1252 ;;     _validatePacket
  1253 ;;       _checkStartByte
  1254 ;;         _eeprom_read
  1255 ;;         i1_writeByte
  1256 ;;         i1_eeprom_write
  1257 ;;           _makeNibble (ARG)
  1258 ;;           i1_strlen (ARG)
  1259 ;;           _eeprom_read (ARG)
  1260 ;;       _checkRWByte
  1261 ;;         _eeprom_read
  1262 ;;         i1_writeByte
  1263 ;;         i1_eeprom_write
  1264 ;;           _makeNibble (ARG)
  1265 ;;           i1_strlen (ARG)
  1266 ;;           _eeprom_read (ARG)
  1267 ;;       _checkCMDByte
  1268 ;;         _eeprom_read
  1269 ;;         i1_eeprom_write
  1270 ;;           _makeNibble (ARG)
  1271 ;;           i1_strlen (ARG)
  1272 ;;           _eeprom_read (ARG)
  1273 ;;         i1_writeByte
  1274 ;;       _checkDataFrames
  1275 ;;         _eeprom_read
  1276 ;;         i1_writeByte
  1277 ;;       _addDataToCheckSum
  1278 ;;         _eeprom_read
  1279 ;;         i1_eeprom_write
  1280 ;;           _makeNibble (ARG)
  1281 ;;           i1_strlen (ARG)
  1282 ;;           _eeprom_read (ARG)
  1283 ;;       _checkCS
  1284 ;;         _eeprom_read
  1285 ;;         i1_writeByte
  1286 ;;     _eeprom_read
  1287 ;;     _readCommands
  1288 ;;       i1_writeByte
  1289 ;;       i1_writeString
  1290 ;;         i1_writeByte
  1291 ;;         i1_strlen
  1292 ;;       _eeprom_read
  1293 ;;     _writeCommands
  1294 ;;
  1295                           
  1296 ;; Address spaces:
  1297                           
  1298 ;;Name               Size   Autos  Total    Cost      Usage
  1299 ;;BANK3               60      0      32       9       52.1%
  1300 ;;BITBANK3            60      0       0       8        0.0%
  1301 ;;SFR3                 0      0       0       4        0.0%
  1302 ;;BITSFR3              0      0       0       4        0.0%
  1303 ;;BANK2               60      0       0      11        0.0%
  1304 ;;BITBANK2            60      0       0      10        0.0%
  1305 ;;SFR2                 0      0       0       5        0.0%
  1306 ;;BITSFR2              0      0       0       5        0.0%
  1307 ;;SFR1                 0      0       0       2        0.0%
  1308 ;;BITSFR1              0      0       0       2        0.0%
  1309 ;;BANK1               50     1B      3D       7       76.3%
  1310 ;;BITBANK1            50      0       0       6        0.0%
  1311 ;;CODE                 0      0       0       0        0.0%
  1312 ;;DATA                 0      0      CF      12        0.0%
  1313 ;;ABS                  0      0      C3       3        0.0%
  1314 ;;NULL                 0      0       0       0        0.0%
  1315 ;;STACK                0      0       C       2        0.0%
  1316 ;;BANK0               50     46      46       5       87.5%
  1317 ;;BITBANK0            50      0       0       4        0.0%
  1318 ;;SFR0                 0      0       0       1        0.0%
  1319 ;;BITSFR0              0      0       0       1        0.0%
  1320 ;;COMMON               E      E       E       1      100.0%
  1321 ;;BITCOMMON            E      0       0       0        0.0%
  1322 ;;EEDATA             100      0       0       0        0.0%
  1323                           
  1324                           	global	_main
  1325                           psect	maintext,global,class=CODE,delta=2
  1326                           global __pmaintext
  1327  072C                     __pmaintext:
  1328                           
  1329 ;; *************** function _main *****************
  1330 ;; Defined at:
  1331 ;;		line 57 in file "main.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  testString      9   18[BANK1 ] unsigned char [9]
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  2  3989[COMMON] int 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 17F/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         0       0       0       0       0
  1346 ;;      Locals:         0       0       9       0       0
  1347 ;;      Temps:          0       0       4       0       0
  1348 ;;      Totals:         0       0      13       0       0
  1349 ;;Total ram usage:       13 bytes
  1350 ;; Hardware stack levels required when called:    7
  1351 ;; This function calls:
  1352 ;;		_initADC
  1353 ;;		_initTemp
  1354 ;;		_initUSART
  1355 ;;		_writeString
  1356 ;;		_getTemp
  1357 ;; This function is called by:
  1358 ;;		Startup code after reset
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           psect	maintext
  1362                           	file	"main.c"
  1363                           	line	57
  1364                           	global	__size_of_main
  1365  004A                     	__size_of_main	equ	__end_of_main-_main
  1366                           	
  1367  072C                     _main:	
  1368                           	opt	stack 1
  1369                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1370                           	line	58
  1371                           	
  1372  072C                     l10542:	
  1373                           ;main.c: 58: char testString[] = "Welcome\n";
  1374  072C  30D4               	movlw	(main@testString)&0ffh
  1375  072D  0084               	movwf	fsr0
  1376  072E  30A0               	movlw	low(main@F1175)
  1377  072F  1683               	bsf	status, 5	;RP0=1, select bank1
  1378  0730  1303               	bcf	status, 6	;RP1=0, select bank1
  1379  0731  00D0               	movwf	(??_main+0)^080h+0
  1380  0732  0804               	movf	fsr0,w
  1381  0733  00D1               	movwf	((??_main+0)^080h+0+1)
  1382  0734  3009               	movlw	9
  1383  0735  00D2               	movwf	((??_main+0)^080h+0+2)
  1384  0736                     u3220:
  1385  0736  0850               	movf	(??_main+0)^080h+0,w
  1386  0737  0084               	movwf	fsr0
  1387  0738  1383               	bcf	status, 7	;select IRP bank1
  1388                           	
  1389  0739  0800               	movf	indf,w
  1390  073A  00D3               	movwf	((??_main+0)^080h+0+3)
  1391  073B  0AD0               	incf	(??_main+0)^080h+0,f
  1392  073C  0851               	movf	((??_main+0)^080h+0+1),w
  1393  073D  0084               	movwf	fsr0
  1394                           	
  1395  073E  0853               	movf	((??_main+0)^080h+0+3),w
  1396  073F  0080               	movwf	indf
  1397  0740  0AD1               	incf	((??_main+0)^080h+0+1),f
  1398  0741  0BD2               	decfsz	((??_main+0)^080h+0+2),f
  1399  0742  2F36               	goto	u3220
  1400                           	line	60
  1401                           	
  1402  0743                     l10544:	
  1403                           ;main.c: 60: TRISB = 0x00;
  1404  0743  0186               	clrf	(134)^080h	;volatile
  1405                           	line	61
  1406                           	
  1407  0744                     l10546:	
  1408                           ;main.c: 61: RB1 = 1;
  1409  0744  1283               	bcf	status, 5	;RP0=0, select bank0
  1410  0745  1303               	bcf	status, 6	;RP1=0, select bank0
  1411  0746  1486               	bsf	(49/8),(49)&7
  1412                           	line	63
  1413                           	
  1414  0747                     l10548:	
  1415                           ;main.c: 63: initADC();
  1416  0747  120A  158A  25BD   	fcall	_initADC
              120A  118A         
  1417                           	line	65
  1418                           	
  1419  074C                     l10550:	
  1420                           ;main.c: 65: initTemp();
  1421  074C  120A  118A  2567   	fcall	_initTemp
              120A  118A         
  1422                           	line	67
  1423                           	
  1424  0751                     l10552:	
  1425                           ;main.c: 67: initUSART();
  1426  0751  120A  158A  25F4   	fcall	_initUSART
              120A  118A         
  1427                           	line	69
  1428                           	
  1429  0756                     l10554:	
  1430                           ;main.c: 69: writeString(testString);
  1431  0756  30D4               	movlw	(main@testString)&0ffh
  1432  0757  120A  118A  24B0   	fcall	_writeString
              120A  118A         
  1433  075C  2F5D               	goto	l10556
  1434                           	line	73
  1435                           ;main.c: 73: while(1){
  1436                           	
  1437  075D                     l3992:	
  1438                           	line	74
  1439                           	
  1440  075D                     l10556:	
  1441                           ;main.c: 74: getTemp();
  1442  075D  120A  118A  27B1   	fcall	_getTemp
              120A  118A         
  1443                           	line	75
  1444                           	
  1445  0762                     l10558:	
  1446                           ;main.c: 75: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1447                           	opt asmopt_off
  1448  0762  301A               movlw  26
  1449  0763  1683               	bsf	status, 5	;RP0=1, select bank1
  1450  0764  1303               	bcf	status, 6	;RP1=0, select bank1
  1451  0765  00D2               movwf	((??_main+0)^080h+0+2),f
  1452  0766  305E               movlw	94
  1453  0767  00D1               movwf	((??_main+0)^080h+0+1),f
  1454  0768  3086               	movlw	134
  1455  0769  00D0               movwf	((??_main+0)^080h+0),f
  1456  076A                     u3237:
  1457  076A  0BD0               	decfsz	((??_main+0)^080h+0),f
  1458  076B  2F6A               	goto	u3237
  1459  076C  0BD1               	decfsz	((??_main+0)^080h+0+1),f
  1460  076D  2F6A               	goto	u3237
  1461  076E  0BD2               	decfsz	((??_main+0)^080h+0+2),f
  1462  076F  2F6A               	goto	u3237
  1463  0770  0064               	clrwdt
  1464                           opt asmopt_on
  1465                           
  1466  0771  2F5D               	goto	l10556
  1467                           	line	76
  1468                           	
  1469  0772                     l3993:	
  1470                           	line	73
  1471  0772  2F5D               	goto	l10556
  1472                           	
  1473  0773                     l3994:	
  1474                           	line	81
  1475                           ;main.c: 76: }
  1476                           ;main.c: 80: return 0;
  1477                           ;	Return value of _main is never used
  1478                           	
  1479  0773                     l3995:	
  1480                           	global	start
  1481  0773  120A  118A  2812   	ljmp	start
  1482                           	opt stack 0
  1483                           GLOBAL	__end_of_main
  1484  0776                     	__end_of_main:
  1485 ;; =============== function _main ends ============
  1486                           
  1487                           	signat	_main,90
  1488                           	global	_getTemp
  1489                           psect	text754,local,class=CODE,delta=2
  1490                           global __ptext754
  1491  07B1                     __ptext754:
  1492                           
  1493 ;; *************** function _getTemp *****************
  1494 ;; Defined at:
  1495 ;;		line 45 in file "Temperature.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  tempReading     2    5[BANK1 ] unsigned int 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;		None               void
  1502 ;; Registers used:
  1503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       0       0       0
  1510 ;;      Locals:         0       0       2       0       0
  1511 ;;      Temps:          0       0       1       0       0
  1512 ;;      Totals:         0       0       3       0       0
  1513 ;;Total ram usage:        3 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    6
  1516 ;; This function calls:
  1517 ;;		_selectTemp
  1518 ;;		_readTemp
  1519 ;;		_eeprom_write
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           psect	text754
  1525                           	file	"Temperature.c"
  1526                           	line	45
  1527                           	global	__size_of_getTemp
  1528  0036                     	__size_of_getTemp	equ	__end_of_getTemp-_getTemp
  1529                           	
  1530  07B1                     _getTemp:	
  1531                           	opt	stack 1
  1532                           ; Regs used in _getTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1533                           	line	48
  1534                           	
  1535  07B1                     l10534:	
  1536                           ;Temperature.c: 46: unsigned int tempReading;
  1537                           ;Temperature.c: 48: selectTemp();
  1538  07B1  120A  118A  27FA   	fcall	_selectTemp
              120A  118A         
  1539                           	line	50
  1540                           	
  1541  07B6                     l10536:	
  1542                           ;Temperature.c: 50: tempReading = readTemp();
  1543  07B6  120A  158A  26B0   	fcall	_readTemp
              120A  118A         
  1544  07BB  1683               	bsf	status, 5	;RP0=1, select bank1
  1545  07BC  1303               	bcf	status, 6	;RP1=0, select bank1
  1546  07BD  0843               	movf	(1+(?_readTemp))^080h,w
  1547  07BE  01C8               	clrf	(getTemp@tempReading+1)^080h
  1548  07BF  07C8               	addwf	(getTemp@tempReading+1)^080h
  1549  07C0  0842               	movf	(0+(?_readTemp))^080h,w
  1550  07C1  01C7               	clrf	(getTemp@tempReading)^080h
  1551  07C2  07C7               	addwf	(getTemp@tempReading)^080h
  1552                           
  1553                           	line	52
  1554                           	
  1555  07C3                     l10538:	
  1556                           ;Temperature.c: 52: eeprom_write(tempValLAddr,tempReading);
  1557  07C3  0847               	movf	(getTemp@tempReading)^080h,w
  1558  07C4  00C6               	movwf	(??_getTemp+0)^080h+0
  1559  07C5  0846               	movf	(??_getTemp+0)^080h+0,w
  1560  07C6  00C2               	movwf	(?_eeprom_write)^080h
  1561  07C7  305D               	movlw	(_tempValLAddr-__stringbase)
  1562  07C8  0084               	movwf	fsr0
  1563  07C9  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1564  07CE  120A  118A  2776   	fcall	_eeprom_write
              120A  118A         
  1565                           	line	54
  1566                           	
  1567  07D3                     l10540:	
  1568                           ;Temperature.c: 54: eeprom_write(tempValHAddr+1,tempReading>>8);
  1569  07D3  1683               	bsf	status, 5	;RP0=1, select bank1
  1570  07D4  1303               	bcf	status, 6	;RP1=0, select bank1
  1571  07D5  0848               	movf	(getTemp@tempReading+1)^080h,w
  1572  07D6  00C6               	movwf	(??_getTemp+0)^080h+0
  1573  07D7  0846               	movf	(??_getTemp+0)^080h+0,w
  1574  07D8  00C2               	movwf	(?_eeprom_write)^080h
  1575  07D9  305C               	movlw	(_tempValHAddr-__stringbase)
  1576  07DA  0084               	movwf	fsr0
  1577  07DB  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1578  07E0  3E01               	addlw	01h
  1579  07E1  120A  118A  2776   	fcall	_eeprom_write
              120A  118A         
  1580                           	line	55
  1581                           	
  1582  07E6                     l2422:	
  1583  07E6  0008               	return
  1584                           	opt stack 0
  1585                           GLOBAL	__end_of_getTemp
  1586  07E7                     	__end_of_getTemp:
  1587 ;; =============== function _getTemp ends ============
  1588                           
  1589                           	signat	_getTemp,88
  1590                           	global	_initTemp
  1591                           psect	text755,local,class=CODE,delta=2
  1592                           global __ptext755
  1593  0567                     __ptext755:
  1594                           
  1595 ;; *************** function _initTemp *****************
  1596 ;; Defined at:
  1597 ;;		line 24 in file "Temperature.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;		None               void
  1604 ;; Registers used:
  1605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1611 ;;      Params:         0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0
  1613 ;;      Temps:          0       0       1       0       0
  1614 ;;      Totals:         0       0       1       0       0
  1615 ;;Total ram usage:        1 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    6
  1618 ;; This function calls:
  1619 ;;		_eeprom_write
  1620 ;; This function is called by:
  1621 ;;		_main
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           psect	text755
  1625                           	file	"Temperature.c"
  1626                           	line	24
  1627                           	global	__size_of_initTemp
  1628  0067                     	__size_of_initTemp	equ	__end_of_initTemp-_initTemp
  1629                           	
  1630  0567                     _initTemp:	
  1631                           	opt	stack 1
  1632                           ; Regs used in _initTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1633                           	line	26
  1634                           	
  1635  0567                     l10532:	
  1636                           ;Temperature.c: 26: eeprom_write(tempValHAddr,0x00);
  1637  0567  1683               	bsf	status, 5	;RP0=1, select bank1
  1638  0568  1303               	bcf	status, 6	;RP1=0, select bank1
  1639  0569  01C2               	clrf	(?_eeprom_write)^080h
  1640  056A  305C               	movlw	(_tempValHAddr-__stringbase)
  1641  056B  0084               	movwf	fsr0
  1642  056C  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1643  0571  120A  118A  2776   	fcall	_eeprom_write
              120A  118A         
  1644                           	line	27
  1645                           ;Temperature.c: 27: eeprom_write(tempValLAddr, 0x00);
  1646  0576  1683               	bsf	status, 5	;RP0=1, select bank1
  1647  0577  1303               	bcf	status, 6	;RP1=0, select bank1
  1648  0578  01C2               	clrf	(?_eeprom_write)^080h
  1649  0579  305D               	movlw	(_tempValLAddr-__stringbase)
  1650  057A  0084               	movwf	fsr0
  1651  057B  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1652  0580  120A  118A  2776   	fcall	_eeprom_write
              120A  118A         
  1653                           	line	28
  1654                           ;Temperature.c: 28: eeprom_write(tempHiAddr, tempStartHi);
  1655  0585  3059               	movlw	(_tempStartHi-__stringbase)
  1656  0586  0084               	movwf	fsr0
  1657  0587  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1658  058C  1683               	bsf	status, 5	;RP0=1, select bank1
  1659  058D  1303               	bcf	status, 6	;RP1=0, select bank1
  1660  058E  00C5               	movwf	(??_initTemp+0)^080h+0
  1661  058F  0845               	movf	(??_initTemp+0)^080h+0,w
  1662  0590  00C2               	movwf	(?_eeprom_write)^080h
  1663  0591  3057               	movlw	(_tempHiAddr-__stringbase)
  1664  0592  0084               	movwf	fsr0
  1665  0593  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1666  0598  120A  118A  2776   	fcall	_eeprom_write
              120A  118A         
  1667                           	line	29
  1668                           ;Temperature.c: 29: eeprom_write(tempLoAddr, tempStartLo);
  1669  059D  305A               	movlw	(_tempStartLo-__stringbase)
  1670  059E  0084               	movwf	fsr0
  1671  059F  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1672  05A4  1683               	bsf	status, 5	;RP0=1, select bank1
  1673  05A5  1303               	bcf	status, 6	;RP1=0, select bank1
  1674  05A6  00C5               	movwf	(??_initTemp+0)^080h+0
  1675  05A7  0845               	movf	(??_initTemp+0)^080h+0,w
  1676  05A8  00C2               	movwf	(?_eeprom_write)^080h
  1677  05A9  3058               	movlw	(_tempLoAddr-__stringbase)
  1678  05AA  0084               	movwf	fsr0
  1679  05AB  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1680  05B0  120A  118A  2776   	fcall	_eeprom_write
              120A  118A         
  1681                           	line	30
  1682                           ;Temperature.c: 30: eeprom_write(tempUnitAddr, tempC);
  1683  05B5  3055               	movlw	(_tempC-__stringbase)
  1684  05B6  0084               	movwf	fsr0
  1685  05B7  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1686  05BC  1683               	bsf	status, 5	;RP0=1, select bank1
  1687  05BD  1303               	bcf	status, 6	;RP1=0, select bank1
  1688  05BE  00C5               	movwf	(??_initTemp+0)^080h+0
  1689  05BF  0845               	movf	(??_initTemp+0)^080h+0,w
  1690  05C0  00C2               	movwf	(?_eeprom_write)^080h
  1691  05C1  305B               	movlw	(_tempUnitAddr-__stringbase)
  1692  05C2  0084               	movwf	fsr0
  1693  05C3  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1694  05C8  120A  118A  2776   	fcall	_eeprom_write
              120A  118A         
  1695                           	line	31
  1696                           	
  1697  05CD                     l2410:	
  1698  05CD  0008               	return
  1699                           	opt stack 0
  1700                           GLOBAL	__end_of_initTemp
  1701  05CE                     	__end_of_initTemp:
  1702 ;; =============== function _initTemp ends ============
  1703                           
  1704                           	signat	_initTemp,88
  1705                           	global	_readTemp
  1706                           psect	text756,local,class=CODE,delta=2
  1707                           global __ptext756
  1708  0EB0                     __ptext756:
  1709                           
  1710 ;; *************** function _readTemp *****************
  1711 ;; Defined at:
  1712 ;;		line 7 in file "Temperature.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  2    0[BANK1 ] unsigned int 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, btemp+1
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         0       0       2       0       0
  1727 ;;      Locals:         0       0       0       0       0
  1728 ;;      Temps:          0       0       2       0       0
  1729 ;;      Totals:         0       0       4       0       0
  1730 ;;Total ram usage:        4 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    5
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_getTemp
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           psect	text756
  1740                           	file	"Temperature.c"
  1741                           	line	7
  1742                           	global	__size_of_readTemp
  1743  0029                     	__size_of_readTemp	equ	__end_of_readTemp-_readTemp
  1744                           	
  1745  0EB0                     _readTemp:	
  1746                           	opt	stack 1
  1747                           ; Regs used in _readTemp: [wreg+status,2+status,0+btemp+1]
  1748                           	line	9
  1749                           	
  1750  0EB0                     l10522:	
  1751                           ;Temperature.c: 9: ADON = 1;
  1752  0EB0  1283               	bcf	status, 5	;RP0=0, select bank0
  1753  0EB1  1303               	bcf	status, 6	;RP1=0, select bank0
  1754  0EB2  141F               	bsf	(248/8),(248)&7
  1755                           	line	13
  1756                           	
  1757  0EB3                     l10524:	
  1758                           ;Temperature.c: 13: _delay((unsigned long)((10)*(20000000/4000.0)));
  1759                           	opt asmopt_off
  1760  0EB3  3041               movlw	65
  1761  0EB4  1683               	bsf	status, 5	;RP0=1, select bank1
  1762  0EB5  1303               	bcf	status, 6	;RP1=0, select bank1
  1763  0EB6  00C5               movwf	((??_readTemp+0)^080h+0+1),f
  1764  0EB7  30EE               	movlw	238
  1765  0EB8  00C4               movwf	((??_readTemp+0)^080h+0),f
  1766  0EB9                     u3247:
  1767  0EB9  0BC4               	decfsz	((??_readTemp+0)^080h+0),f
  1768  0EBA  2EB9               	goto	u3247
  1769  0EBB  0BC5               	decfsz	((??_readTemp+0)^080h+0+1),f
  1770  0EBC  2EB9               	goto	u3247
  1771  0EBD  0064               	clrwdt
  1772                           opt asmopt_on
  1773                           
  1774                           	line	15
  1775                           	
  1776  0EBE                     l10526:	
  1777                           ;Temperature.c: 15: GO_nDONE = 1;
  1778  0EBE  1283               	bcf	status, 5	;RP0=0, select bank0
  1779  0EBF  1303               	bcf	status, 6	;RP1=0, select bank0
  1780  0EC0  151F               	bsf	(250/8),(250)&7
  1781                           	line	18
  1782                           ;Temperature.c: 18: while(GO_nDONE);
  1783  0EC1  2EC2               	goto	l2404
  1784                           	
  1785  0EC2                     l2405:	
  1786                           	
  1787  0EC2                     l2404:	
  1788  0EC2  191F               	btfsc	(250/8),(250)&7
  1789  0EC3  2EC5               	goto	u3211
  1790  0EC4  2EC6               	goto	u3210
  1791  0EC5                     u3211:
  1792  0EC5  2EC2               	goto	l2404
  1793  0EC6                     u3210:
  1794  0EC6  2EC7               	goto	l10528
  1795                           	
  1796  0EC7                     l2406:	
  1797                           	line	21
  1798                           	
  1799  0EC7                     l10528:	
  1800                           ;Temperature.c: 21: return ((ADRESH<<8)+ADRESL);
  1801  0EC7  081E               	movf	(30),w	;volatile
  1802  0EC8  1683               	bsf	status, 5	;RP0=1, select bank1
  1803  0EC9  1303               	bcf	status, 6	;RP1=0, select bank1
  1804  0ECA  00C4               	movwf	(??_readTemp+0)^080h+0
  1805  0ECB  01C5               	clrf	(??_readTemp+0)^080h+0+1
  1806  0ECC  0844               	movf	(??_readTemp+0)^080h+0,w
  1807  0ECD  00C5               	movwf	(??_readTemp+0)^080h+1
  1808  0ECE  01C4               	clrf	(??_readTemp+0)^080h+0
  1809  0ECF  081E               	movf	(158)^080h,w	;volatile
  1810  0ED0  0744               	addwf	0+(??_readTemp+0)^080h+0,w
  1811  0ED1  00C2               	movwf	(?_readTemp)^080h
  1812  0ED2  3000               	movlw	0
  1813  0ED3  1803               	skipnc
  1814  0ED4  3001               	movlw	1
  1815  0ED5  0745               	addwf	1+(??_readTemp+0)^080h+0,w
  1816  0ED6  00C3               	movwf	1+(?_readTemp)^080h
  1817  0ED7  2ED8               	goto	l2407
  1818                           	
  1819  0ED8                     l10530:	
  1820                           	line	22
  1821                           	
  1822  0ED8                     l2407:	
  1823  0ED8  0008               	return
  1824                           	opt stack 0
  1825                           GLOBAL	__end_of_readTemp
  1826  0ED9                     	__end_of_readTemp:
  1827 ;; =============== function _readTemp ends ============
  1828                           
  1829                           	signat	_readTemp,90
  1830                           	global	_writeString
  1831                           psect	text757,local,class=CODE,delta=2
  1832                           global __ptext757
  1833  04B0                     __ptext757:
  1834                           
  1835 ;; *************** function _writeString *****************
  1836 ;; Defined at:
  1837 ;;		line 145 in file "Bluetooth.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  userString      1    wreg     PTR unsigned char 
  1840 ;;		 -> readError(25), main@testString(9), 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  userString      1   11[BANK1 ] PTR unsigned char 
  1843 ;;		 -> readError(25), main@testString(9), 
  1844 ;;  i               2   12[BANK1 ] unsigned int 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;		None               void
  1847 ;; Registers used:
  1848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         0       0       0       0       0
  1855 ;;      Locals:         0       0       3       0       0
  1856 ;;      Temps:          0       0       1       0       0
  1857 ;;      Totals:         0       0       4       0       0
  1858 ;;Total ram usage:        4 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    6
  1861 ;; This function calls:
  1862 ;;		_writeByte
  1863 ;;		_strlen
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           psect	text757
  1869                           	file	"Bluetooth.c"
  1870                           	line	145
  1871                           	global	__size_of_writeString
  1872  0035                     	__size_of_writeString	equ	__end_of_writeString-_writeString
  1873                           	
  1874  04B0                     _writeString:	
  1875                           	opt	stack 1
  1876                           ; Regs used in _writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1877                           ;writeString@userString stored from wreg
  1878                           	line	149
  1879  04B0  1683               	bsf	status, 5	;RP0=1, select bank1
  1880  04B1  1303               	bcf	status, 6	;RP1=0, select bank1
  1881  04B2  00CD               	movwf	(writeString@userString)^080h
  1882                           	
  1883  04B3                     l10512:	
  1884                           ;Bluetooth.c: 147: unsigned int i;
  1885                           ;Bluetooth.c: 149: for(i = 0;i<strlen(userString);i++){
  1886  04B3  01CE               	clrf	(writeString@i)^080h
  1887  04B4  01CF               	clrf	(writeString@i+1)^080h
  1888  04B5  2CCB               	goto	l10518
  1889                           	
  1890  04B6                     l788:	
  1891                           	line	150
  1892                           	
  1893  04B6                     l10514:	
  1894                           ;Bluetooth.c: 150: writeByte(userString[i]);
  1895  04B6  084E               	movf	(writeString@i)^080h,w
  1896  04B7  074D               	addwf	(writeString@userString)^080h,w
  1897  04B8  00CC               	movwf	(??_writeString+0)^080h+0
  1898  04B9  084C               	movf	0+(??_writeString+0)^080h+0,w
  1899  04BA  0084               	movwf	fsr0
  1900  04BB  1383               	bcf	status, 7	;select IRP bank0
  1901  04BC  0800               	movf	indf,w
  1902  04BD  120A  158A  25E3   	fcall	_writeByte
              120A  118A         
  1903                           	line	149
  1904                           	
  1905  04C2                     l10516:	
  1906  04C2  3001               	movlw	low(01h)
  1907  04C3  1683               	bsf	status, 5	;RP0=1, select bank1
  1908  04C4  1303               	bcf	status, 6	;RP1=0, select bank1
  1909  04C5  07CE               	addwf	(writeString@i)^080h,f
  1910  04C6  1803               	skipnc
  1911  04C7  0ACF               	incf	(writeString@i+1)^080h,f
  1912  04C8  3000               	movlw	high(01h)
  1913  04C9  07CF               	addwf	(writeString@i+1)^080h,f
  1914  04CA  2CCB               	goto	l10518
  1915                           	
  1916  04CB                     l787:	
  1917                           	
  1918  04CB                     l10518:	
  1919  04CB  084D               	movf	(writeString@userString)^080h,w
  1920  04CC  120A  158A  2799   	fcall	_strlen
              120A  118A         
  1921  04D1  1683               	bsf	status, 5	;RP0=1, select bank1
  1922  04D2  1303               	bcf	status, 6	;RP1=0, select bank1
  1923  04D3  0843               	movf	(1+(?_strlen))^080h,w
  1924  04D4  024F               	subwf	(writeString@i+1)^080h,w
  1925  04D5  1D03               	skipz
  1926  04D6  2CD9               	goto	u3205
  1927  04D7  0842               	movf	(0+(?_strlen))^080h,w
  1928  04D8  024E               	subwf	(writeString@i)^080h,w
  1929  04D9                     u3205:
  1930  04D9  1C03               	skipc
  1931  04DA  2CDC               	goto	u3201
  1932  04DB  2CDD               	goto	u3200
  1933  04DC                     u3201:
  1934  04DC  2CB6               	goto	l10514
  1935  04DD                     u3200:
  1936  04DD  2CDE               	goto	l10520
  1937                           	
  1938  04DE                     l789:	
  1939                           	line	153
  1940                           	
  1941  04DE                     l10520:	
  1942                           ;Bluetooth.c: 151: }
  1943                           ;Bluetooth.c: 153: writeByte((unsigned char)i);
  1944  04DE  084E               	movf	(writeString@i)^080h,w
  1945  04DF  120A  158A  25E3   	fcall	_writeByte
              120A  118A         
  1946                           	line	155
  1947                           	
  1948  04E4                     l790:	
  1949  04E4  0008               	return
  1950                           	opt stack 0
  1951                           GLOBAL	__end_of_writeString
  1952  04E5                     	__end_of_writeString:
  1953 ;; =============== function _writeString ends ============
  1954                           
  1955                           	signat	_writeString,4216
  1956                           	global	_initADC
  1957                           psect	text758,local,class=CODE,delta=2
  1958                           global __ptext758
  1959  0DBD                     __ptext758:
  1960                           
  1961 ;; *************** function _initADC *****************
  1962 ;; Defined at:
  1963 ;;		line 7 in file "customADC.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;		None               void
  1970 ;; Registers used:
  1971 ;;		wreg
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1977 ;;      Params:         0       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0
  1980 ;;      Totals:         0       0       0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    5
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           psect	text758
  1991                           	file	"customADC.c"
  1992                           	line	7
  1993                           	global	__size_of_initADC
  1994  000B                     	__size_of_initADC	equ	__end_of_initADC-_initADC
  1995                           	
  1996  0DBD                     _initADC:	
  1997                           	opt	stack 2
  1998                           ; Regs used in _initADC: [wreg]
  1999                           	line	8
  2000                           	
  2001  0DBD                     l10410:	
  2002                           ;customADC.c: 8: TRISA = 0x03;
  2003  0DBD  3003               	movlw	(03h)
  2004  0DBE  1683               	bsf	status, 5	;RP0=1, select bank1
  2005  0DBF  1303               	bcf	status, 6	;RP1=0, select bank1
  2006  0DC0  0085               	movwf	(133)^080h	;volatile
  2007                           	line	21
  2008                           ;customADC.c: 21: ADCON1 = 0x80;
  2009  0DC1  3080               	movlw	(080h)
  2010  0DC2  009F               	movwf	(159)^080h	;volatile
  2011                           	line	40
  2012                           ;customADC.c: 40: ADCON0 = 0x80;
  2013  0DC3  3080               	movlw	(080h)
  2014  0DC4  1283               	bcf	status, 5	;RP0=0, select bank0
  2015  0DC5  1303               	bcf	status, 6	;RP1=0, select bank0
  2016  0DC6  009F               	movwf	(31)	;volatile
  2017                           	line	41
  2018                           	
  2019  0DC7                     l3187:	
  2020  0DC7  0008               	return
  2021                           	opt stack 0
  2022                           GLOBAL	__end_of_initADC
  2023  0DC8                     	__end_of_initADC:
  2024 ;; =============== function _initADC ends ============
  2025                           
  2026                           	signat	_initADC,88
  2027                           	global	_selectTemp
  2028                           psect	text759,local,class=CODE,delta=2
  2029                           global __ptext759
  2030  07FA                     __ptext759:
  2031                           
  2032 ;; *************** function _selectTemp *****************
  2033 ;; Defined at:
  2034 ;;		line 44 in file "customADC.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;		None               void
  2041 ;; Registers used:
  2042 ;;		wreg
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         0       0       0       0       0
  2049 ;;      Locals:         0       0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0
  2051 ;;      Totals:         0       0       0       0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    5
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_getTemp
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           psect	text759
  2062                           	file	"customADC.c"
  2063                           	line	44
  2064                           	global	__size_of_selectTemp
  2065  0005                     	__size_of_selectTemp	equ	__end_of_selectTemp-_selectTemp
  2066                           	
  2067  07FA                     _selectTemp:	
  2068                           	opt	stack 1
  2069                           ; Regs used in _selectTemp: [wreg]
  2070                           	line	45
  2071                           	
  2072  07FA                     l10408:	
  2073                           ;customADC.c: 45: ADCON0 = 0x80;
  2074  07FA  3080               	movlw	(080h)
  2075  07FB  1283               	bcf	status, 5	;RP0=0, select bank0
  2076  07FC  1303               	bcf	status, 6	;RP1=0, select bank0
  2077  07FD  009F               	movwf	(31)	;volatile
  2078                           	line	46
  2079                           	
  2080  07FE                     l3190:	
  2081  07FE  0008               	return
  2082                           	opt stack 0
  2083                           GLOBAL	__end_of_selectTemp
  2084  07FF                     	__end_of_selectTemp:
  2085 ;; =============== function _selectTemp ends ============
  2086                           
  2087                           	signat	_selectTemp,88
  2088                           	global	_eeprom_write
  2089                           psect	text760,local,class=CODE,delta=2
  2090                           global __ptext760
  2091  0776                     __ptext760:
  2092                           
  2093 ;; *************** function _eeprom_write *****************
  2094 ;; Defined at:
  2095 ;;		line 7 in file "C:\Microchip\HiTech\PICC\9.83\sources\eewrite.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  addr            1    wreg     unsigned char 
  2098 ;;  value           1    0[BANK1 ] unsigned char 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  addr            1    2[BANK1 ] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      unsigned char 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         0       0       1       0       0
  2111 ;;      Locals:         0       0       1       0       0
  2112 ;;      Temps:          0       0       1       0       0
  2113 ;;      Totals:         0       0       3       0       0
  2114 ;;Total ram usage:        3 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    5
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_initTemp
  2121 ;;		_getTemp
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           psect	text760
  2125                           	file	"C:\Microchip\HiTech\PICC\9.83\sources\eewrite.c"
  2126                           	line	7
  2127                           	global	__size_of_eeprom_write
  2128  003B                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
  2129                           	
  2130  0776                     _eeprom_write:	
  2131                           	opt	stack 1
  2132                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2133                           ;eeprom_write@addr stored from wreg
  2134  0776  1683               	bsf	status, 5	;RP0=1, select bank1
  2135  0777  1303               	bcf	status, 6	;RP1=0, select bank1
  2136  0778  00C4               	movwf	(eeprom_write@addr)^080h
  2137                           	line	8
  2138                           	
  2139  0779                     l7600:	
  2140  0779  2F7A               	goto	l7601
  2141                           	
  2142  077A                     l7602:	
  2143                           	
  2144  077A                     l7601:	
  2145  077A  1683               	bsf	status, 5	;RP0=1, select bank3
  2146  077B  1703               	bsf	status, 6	;RP1=1, select bank3
  2147  077C  188C               	btfsc	(3169/8)^0180h,(3169)&7
  2148  077D  2F7F               	goto	u2821
  2149  077E  2F80               	goto	u2820
  2150  077F                     u2821:
  2151  077F  2F7A               	goto	l7601
  2152  0780                     u2820:
  2153  0780  2F81               	goto	l10192
  2154                           	
  2155  0781                     l7603:	
  2156                           	
  2157  0781                     l10192:	
  2158  0781  1683               	bsf	status, 5	;RP0=1, select bank1
  2159  0782  1303               	bcf	status, 6	;RP1=0, select bank1
  2160  0783  0844               	movf	(eeprom_write@addr)^080h,w
  2161  0784  1283               	bcf	status, 5	;RP0=0, select bank2
  2162  0785  1703               	bsf	status, 6	;RP1=1, select bank2
  2163  0786  008D               	movwf	(269)^0100h	;volatile
  2164  0787  1683               	bsf	status, 5	;RP0=1, select bank1
  2165  0788  1303               	bcf	status, 6	;RP1=0, select bank1
  2166  0789  0842               	movf	(eeprom_write@value)^080h,w
  2167  078A  1283               	bcf	status, 5	;RP0=0, select bank2
  2168  078B  1703               	bsf	status, 6	;RP1=1, select bank2
  2169  078C  008C               	movwf	(268)^0100h	;volatile
  2170                           	
  2171  078D                     l10194:	
  2172  078D  303F               	movlw	(03Fh)
  2173  078E  1683               	bsf	status, 5	;RP0=1, select bank1
  2174  078F  1303               	bcf	status, 6	;RP1=0, select bank1
  2175  0790  00C3               	movwf	(??_eeprom_write+0)^080h+0
  2176  0791  0843               	movf	(??_eeprom_write+0)^080h+0,w
  2177  0792  1683               	bsf	status, 5	;RP0=1, select bank3
  2178  0793  1703               	bsf	status, 6	;RP1=1, select bank3
  2179  0794  058C               	andwf	(396)^0180h,f	;volatile
  2180                           	
  2181  0795                     l10196:	
  2182  0795  1283               	bcf	status, 5	;RP0=0, select bank0
  2183  0796  1303               	bcf	status, 6	;RP1=0, select bank0
  2184  0797  1003               	bcf	(24/8),(24)&7
  2185                           	
  2186  0798                     l10198:	
  2187  0798  1F8B               	btfss	(95/8),(95)&7
  2188  0799  2F9B               	goto	u2831
  2189  079A  2F9C               	goto	u2830
  2190  079B                     u2831:
  2191  079B  2F9D               	goto	l7604
  2192  079C                     u2830:
  2193                           	
  2194  079C                     l10200:	
  2195  079C  1403               	bsf	(24/8),(24)&7
  2196                           	
  2197  079D                     l7604:	
  2198  079D  138B               	bcf	(95/8),(95)&7
  2199  079E  1683               	bsf	status, 5	;RP0=1, select bank3
  2200  079F  1703               	bsf	status, 6	;RP1=1, select bank3
  2201  07A0  150C               	bsf	(3170/8)^0180h,(3170)&7
  2202                           	
  2203  07A1                     l10202:	
  2204  07A1  3055               	movlw	(055h)
  2205  07A2  008D               	movwf	(397)^0180h	;volatile
  2206  07A3  30AA               	movlw	(0AAh)
  2207  07A4  008D               	movwf	(397)^0180h	;volatile
  2208                           	
  2209  07A5                     l10204:	
  2210  07A5  148C               	bsf	(3169/8)^0180h,(3169)&7
  2211                           	
  2212  07A6                     l10206:	
  2213  07A6  110C               	bcf	(3170/8)^0180h,(3170)&7
  2214                           	
  2215  07A7                     l10208:	
  2216  07A7  1283               	bcf	status, 5	;RP0=0, select bank0
  2217  07A8  1303               	bcf	status, 6	;RP1=0, select bank0
  2218  07A9  1C03               	btfss	(24/8),(24)&7
  2219  07AA  2FAC               	goto	u2841
  2220  07AB  2FAD               	goto	u2840
  2221  07AC                     u2841:
  2222  07AC  2FB0               	goto	l7607
  2223  07AD                     u2840:
  2224                           	
  2225  07AD                     l10210:	
  2226  07AD  178B               	bsf	(95/8),(95)&7
  2227  07AE  2FB0               	goto	l7607
  2228                           	
  2229  07AF                     l7605:	
  2230  07AF  2FB0               	goto	l7607
  2231                           	
  2232  07B0                     l7606:	
  2233                           	line	10
  2234                           ;	Return value of _eeprom_write is never used
  2235                           	
  2236  07B0                     l7607:	
  2237  07B0  0008               	return
  2238                           	opt stack 0
  2239                           GLOBAL	__end_of_eeprom_write
  2240  07B1                     	__end_of_eeprom_write:
  2241 ;; =============== function _eeprom_write ends ============
  2242                           
  2243                           	signat	_eeprom_write,8313
  2244                           	global	_strlen
  2245                           psect	text761,local,class=CODE,delta=2
  2246                           global __ptext761
  2247  0F99                     __ptext761:
  2248                           
  2249 ;; *************** function _strlen *****************
  2250 ;; Defined at:
  2251 ;;		line 5 in file "C:\Microchip\HiTech\PICC\9.83\sources\strlen.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  s               1    wreg     PTR const unsigned char 
  2254 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  s               1    8[BANK1 ] PTR const unsigned char 
  2257 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  2258 ;;  cp              1    9[BANK1 ] PTR const unsigned char 
  2259 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  2    0[BANK1 ] unsigned int 
  2262 ;; Registers used:
  2263 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         0       0       2       0       0
  2270 ;;      Locals:         0       0       2       0       0
  2271 ;;      Temps:          0       0       6       0       0
  2272 ;;      Totals:         0       0      10       0       0
  2273 ;;Total ram usage:       10 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    5
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_writeString
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           psect	text761
  2283                           	file	"C:\Microchip\HiTech\PICC\9.83\sources\strlen.c"
  2284                           	line	5
  2285                           	global	__size_of_strlen
  2286  0033                     	__size_of_strlen	equ	__end_of_strlen-_strlen
  2287                           	
  2288  0F99                     _strlen:	
  2289                           	opt	stack 1
  2290                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  2291                           ;strlen@s stored from wreg
  2292                           	line	8
  2293  0F99  1683               	bsf	status, 5	;RP0=1, select bank1
  2294  0F9A  1303               	bcf	status, 6	;RP1=0, select bank1
  2295  0F9B  00CA               	movwf	(strlen@s)^080h
  2296                           	
  2297  0F9C                     l10170:	
  2298  0F9C  084A               	movf	(strlen@s)^080h,w
  2299  0F9D  00C4               	movwf	(??_strlen+0)^080h+0
  2300  0F9E  0844               	movf	(??_strlen+0)^080h+0,w
  2301  0F9F  00CB               	movwf	(strlen@cp)^080h
  2302                           	line	9
  2303  0FA0  2FA2               	goto	l10172
  2304                           	
  2305  0FA1                     l8285:	
  2306                           	line	10
  2307  0FA1  2FA2               	goto	l10172
  2308                           	
  2309  0FA2                     l8284:	
  2310                           	line	9
  2311                           	
  2312  0FA2                     l10172:	
  2313  0FA2  084B               	movf	(strlen@cp)^080h,w
  2314  0FA3  0084               	movwf	fsr0
  2315  0FA4  3001               	movlw	01h
  2316  0FA5  07CB               	addwf	(strlen@cp)^080h,f
  2317  0FA6  1383               	bcf	status, 7	;select IRP bank0
  2318  0FA7  0880               	movf	indf,f
  2319  0FA8  1D03               	skipz
  2320  0FA9  2FAB               	goto	u2801
  2321  0FAA  2FAC               	goto	u2800
  2322  0FAB                     u2801:
  2323  0FAB  2FA2               	goto	l10172
  2324  0FAC                     u2800:
  2325  0FAC  2FAD               	goto	l10174
  2326                           	
  2327  0FAD                     l8286:	
  2328                           	line	11
  2329                           	
  2330  0FAD                     l10174:	
  2331  0FAD  084A               	movf	(strlen@s)^080h,w
  2332  0FAE  00C4               	movwf	(??_strlen+0)^080h+0
  2333  0FAF  3000               	movlw	((0x0/2))
  2334  0FB0  00C5               	movwf	(??_strlen+0)^080h+0+1
  2335  0FB1  09C4               	comf	(??_strlen+0)^080h+0,f
  2336  0FB2  09C5               	comf	(??_strlen+0)^080h+1,f
  2337  0FB3  0AC4               	incf	(??_strlen+0)^080h+0,f
  2338  0FB4  1903               	skipnz
  2339  0FB5  0AC5               	incf	(??_strlen+0)^080h+1,f
  2340  0FB6  084B               	movf	(strlen@cp)^080h,w
  2341  0FB7  00C6               	movwf	(??_strlen+2)^080h+0
  2342  0FB8  3000               	movlw	((0x0/2))
  2343  0FB9  00C7               	movwf	(??_strlen+2)^080h+0+1
  2344  0FBA  0844               	movf	0+(??_strlen+0)^080h+0,w
  2345  0FBB  0746               	addwf	0+(??_strlen+2)^080h+0,w
  2346  0FBC  00C8               	movwf	(??_strlen+4)^080h+0
  2347  0FBD  0845               	movf	1+(??_strlen+0)^080h+0,w
  2348  0FBE  1803               	skipnc
  2349  0FBF  0A45               	incf	1+(??_strlen+0)^080h+0,w
  2350  0FC0  0747               	addwf	1+(??_strlen+2)^080h+0,w
  2351  0FC1  00C9               	movwf	1+(??_strlen+4)^080h+0
  2352  0FC2  0848               	movf	0+(??_strlen+4)^080h+0,w
  2353  0FC3  3EFF               	addlw	low(-1)
  2354  0FC4  00C2               	movwf	(?_strlen)^080h
  2355  0FC5  0849               	movf	1+(??_strlen+4)^080h+0,w
  2356  0FC6  1803               	skipnc
  2357  0FC7  3E01               	addlw	1
  2358  0FC8  3EFF               	addlw	high(-1)
  2359  0FC9  00C3               	movwf	1+(?_strlen)^080h
  2360  0FCA  2FCB               	goto	l8287
  2361                           	
  2362  0FCB                     l10176:	
  2363                           	line	12
  2364                           	
  2365  0FCB                     l8287:	
  2366  0FCB  0008               	return
  2367                           	opt stack 0
  2368                           GLOBAL	__end_of_strlen
  2369  0FCC                     	__end_of_strlen:
  2370 ;; =============== function _strlen ends ============
  2371                           
  2372                           	signat	_strlen,4218
  2373                           	global	_writeByte
  2374                           psect	text762,local,class=CODE,delta=2
  2375                           global __ptext762
  2376  0DE3                     __ptext762:
  2377                           
  2378 ;; *************** function _writeByte *****************
  2379 ;; Defined at:
  2380 ;;		line 79 in file "Bluetooth.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  Byte            1    wreg     unsigned char 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  Byte            1    0[BANK1 ] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;		None               void
  2387 ;; Registers used:
  2388 ;;		wreg
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         0       0       0       0       0
  2395 ;;      Locals:         0       0       1       0       0
  2396 ;;      Temps:          0       0       0       0       0
  2397 ;;      Totals:         0       0       1       0       0
  2398 ;;Total ram usage:        1 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    5
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_writeString
  2405 ;;		_echoBack
  2406 ;;		_displayPacket
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           psect	text762
  2410                           	file	"Bluetooth.c"
  2411                           	line	79
  2412                           	global	__size_of_writeByte
  2413  0011                     	__size_of_writeByte	equ	__end_of_writeByte-_writeByte
  2414                           	
  2415  0DE3                     _writeByte:	
  2416                           	opt	stack 1
  2417                           ; Regs used in _writeByte: [wreg]
  2418                           ;writeByte@Byte stored from wreg
  2419  0DE3  1683               	bsf	status, 5	;RP0=1, select bank1
  2420  0DE4  1303               	bcf	status, 6	;RP1=0, select bank1
  2421  0DE5  00C2               	movwf	(writeByte@Byte)^080h
  2422                           	line	83
  2423                           	
  2424  0DE6                     l10154:	
  2425                           ;Bluetooth.c: 83: while(!TXIF);
  2426  0DE6  2DE7               	goto	l772
  2427                           	
  2428  0DE7                     l773:	
  2429                           	
  2430  0DE7                     l772:	
  2431  0DE7  1283               	bcf	status, 5	;RP0=0, select bank0
  2432  0DE8  1E0C               	btfss	(100/8),(100)&7
  2433  0DE9  2DEB               	goto	u2781
  2434  0DEA  2DEC               	goto	u2780
  2435  0DEB                     u2781:
  2436  0DEB  2DE7               	goto	l772
  2437  0DEC                     u2780:
  2438  0DEC  2DED               	goto	l10156
  2439                           	
  2440  0DED                     l774:	
  2441                           	line	86
  2442                           	
  2443  0DED                     l10156:	
  2444                           ;Bluetooth.c: 86: TXREG = Byte;
  2445  0DED  1683               	bsf	status, 5	;RP0=1, select bank1
  2446  0DEE  1303               	bcf	status, 6	;RP1=0, select bank1
  2447  0DEF  0842               	movf	(writeByte@Byte)^080h,w
  2448  0DF0  1283               	bcf	status, 5	;RP0=0, select bank0
  2449  0DF1  1303               	bcf	status, 6	;RP1=0, select bank0
  2450  0DF2  0099               	movwf	(25)	;volatile
  2451                           	line	87
  2452                           	
  2453  0DF3                     l775:	
  2454  0DF3  0008               	return
  2455                           	opt stack 0
  2456                           GLOBAL	__end_of_writeByte
  2457  0DF4                     	__end_of_writeByte:
  2458 ;; =============== function _writeByte ends ============
  2459                           
  2460                           	signat	_writeByte,4216
  2461                           	global	_initUSART
  2462                           psect	text763,local,class=CODE,delta=2
  2463                           global __ptext763
  2464  0DF4                     __ptext763:
  2465                           
  2466 ;; *************** function _initUSART *****************
  2467 ;; Defined at:
  2468 ;;		line 16 in file "Bluetooth.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;		None               void
  2475 ;; Registers used:
  2476 ;;		wreg
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2482 ;;      Params:         0       0       0       0       0
  2483 ;;      Locals:         0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0
  2485 ;;      Totals:         0       0       0       0       0
  2486 ;;Total ram usage:        0 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    5
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_main
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           psect	text763
  2496                           	file	"Bluetooth.c"
  2497                           	line	16
  2498                           	global	__size_of_initUSART
  2499  0012                     	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  2500                           	
  2501  0DF4                     _initUSART:	
  2502                           	opt	stack 2
  2503                           ; Regs used in _initUSART: [wreg]
  2504                           	line	18
  2505                           	
  2506  0DF4                     l10144:	
  2507                           ;Bluetooth.c: 18: TRISC6 = 0;
  2508  0DF4  1683               	bsf	status, 5	;RP0=1, select bank1
  2509  0DF5  1303               	bcf	status, 6	;RP1=0, select bank1
  2510  0DF6  1307               	bcf	(1086/8)^080h,(1086)&7
  2511                           	line	21
  2512                           ;Bluetooth.c: 21: TRISC7 = 1;
  2513  0DF7  1787               	bsf	(1087/8)^080h,(1087)&7
  2514                           	line	36
  2515                           	
  2516  0DF8                     l10146:	
  2517                           ;Bluetooth.c: 36: RCSTA = 0x90;
  2518  0DF8  3090               	movlw	(090h)
  2519  0DF9  1283               	bcf	status, 5	;RP0=0, select bank0
  2520  0DFA  1303               	bcf	status, 6	;RP1=0, select bank0
  2521  0DFB  0098               	movwf	(24)	;volatile
  2522                           	line	50
  2523                           ;Bluetooth.c: 50: TXSTA = 0x24;
  2524  0DFC  3024               	movlw	(024h)
  2525  0DFD  1683               	bsf	status, 5	;RP0=1, select bank1
  2526  0DFE  1303               	bcf	status, 6	;RP1=0, select bank1
  2527  0DFF  0098               	movwf	(152)^080h	;volatile
  2528                           	line	58
  2529                           ;Bluetooth.c: 58: SPBRG = 129;
  2530  0E00  3081               	movlw	(081h)
  2531  0E01  0099               	movwf	(153)^080h	;volatile
  2532                           	line	63
  2533                           	
  2534  0E02                     l10148:	
  2535                           ;Bluetooth.c: 63: GIE = 1;
  2536  0E02  178B               	bsf	(95/8),(95)&7
  2537                           	line	65
  2538                           	
  2539  0E03                     l10150:	
  2540                           ;Bluetooth.c: 65: PEIE = 1;
  2541  0E03  170B               	bsf	(94/8),(94)&7
  2542                           	line	67
  2543                           	
  2544  0E04                     l10152:	
  2545                           ;Bluetooth.c: 67: RCIE = 1;
  2546  0E04  168C               	bsf	(1125/8)^080h,(1125)&7
  2547                           	line	69
  2548                           	
  2549  0E05                     l769:	
  2550  0E05  0008               	return
  2551                           	opt stack 0
  2552                           GLOBAL	__end_of_initUSART
  2553  0E06                     	__end_of_initUSART:
  2554 ;; =============== function _initUSART ends ============
  2555                           
  2556                           	signat	_initUSART,88
  2557                           	global	_isr
  2558                           psect	text764,local,class=CODE,delta=2
  2559                           global __ptext764
  2560  0E06                     __ptext764:
  2561                           
  2562 ;; *************** function _isr *****************
  2563 ;; Defined at:
  2564 ;;		line 42 in file "main.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;		None               void
  2571 ;; Registers used:
  2572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2578 ;;      Params:         0       0       0       0       0
  2579 ;;      Locals:         0       0       0       0       0
  2580 ;;      Temps:          0       4       0       0       0
  2581 ;;      Totals:         0       4       0       0       0
  2582 ;;Total ram usage:        4 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    4
  2585 ;; This function calls:
  2586 ;;		_getPacket
  2587 ;; This function is called by:
  2588 ;;		Interrupt level 1
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           psect	text764
  2592                           	file	"main.c"
  2593                           	line	42
  2594                           	global	__size_of_isr
  2595  001D                     	__size_of_isr	equ	__end_of_isr-_isr
  2596                           	
  2597  0E06                     _isr:	
  2598                           	opt	stack 1
  2599                           ; Regs used in _isr: [allreg]
  2600                           psect	intentry,class=CODE,delta=2
  2601                           global __pintentry
  2602  0004                     __pintentry:
  2603                           global interrupt_function
  2604  0004                     interrupt_function:
  2605                           	global saved_w
  2606  007E                     	saved_w	set	btemp+0
  2607  0004  00FE               	movwf	saved_w
  2608  0005  0E03               	swapf	status,w
  2609  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  2610  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  2611  0008  00E2               	movwf	(??_isr+0)
  2612  0009  0804               	movf	fsr0,w
  2613  000A  00E3               	movwf	(??_isr+1)
  2614  000B  080A               	movf	pclath,w
  2615  000C  00E4               	movwf	(??_isr+2)
  2616  000D  087F               	movf	btemp+1,w
  2617  000E  00E5               	movwf	(??_isr+3)
  2618  000F  120A  158A  2E06   	ljmp	_isr
  2619                           psect	text764
  2620                           	line	43
  2621                           	
  2622  0E06                     i1l10412:	
  2623                           ;main.c: 43: if(RCIF && RCIE){
  2624  0E06  1E8C               	btfss	(101/8),(101)&7
  2625  0E07  2E09               	goto	u309_21
  2626  0E08  2E0A               	goto	u309_20
  2627  0E09                     u309_21:
  2628  0E09  2E16               	goto	i1l3987
  2629  0E0A                     u309_20:
  2630                           	
  2631  0E0A                     i1l10414:	
  2632  0E0A  1683               	bsf	status, 5	;RP0=1, select bank1
  2633  0E0B  1303               	bcf	status, 6	;RP1=0, select bank1
  2634  0E0C  1E8C               	btfss	(1125/8)^080h,(1125)&7
  2635  0E0D  2E0F               	goto	u310_21
  2636  0E0E  2E10               	goto	u310_20
  2637  0E0F                     u310_21:
  2638  0E0F  2E16               	goto	i1l3987
  2639  0E10                     u310_20:
  2640                           	line	44
  2641                           	
  2642  0E10                     i1l10416:	
  2643                           ;main.c: 44: getPacket();
  2644  0E10  120A  118A  2632   	fcall	_getPacket
              120A  158A         
  2645  0E15  2E16               	goto	i1l3987
  2646                           	line	45
  2647                           	
  2648  0E16                     i1l3986:	
  2649                           	line	46
  2650                           	
  2651  0E16                     i1l3987:	
  2652  0E16  1283               	bcf	status, 5	;RP0=0, select bank0
  2653  0E17  1303               	bcf	status, 6	;RP1=0, select bank0
  2654  0E18  0865               	movf	(??_isr+3),w
  2655  0E19  00FF               	movwf	btemp+1
  2656  0E1A  0864               	movf	(??_isr+2),w
  2657  0E1B  008A               	movwf	pclath
  2658  0E1C  0863               	movf	(??_isr+1),w
  2659  0E1D  0084               	movwf	fsr0
  2660  0E1E  0E62               	swapf	(??_isr+0)^00h,w
  2661  0E1F  0083               	movwf	status
  2662  0E20  0EFE               	swapf	saved_w,f
  2663  0E21  0E7E               	swapf	saved_w,w
  2664  0E22  0009               	retfie
  2665                           	opt stack 0
  2666                           GLOBAL	__end_of_isr
  2667  0E23                     	__end_of_isr:
  2668 ;; =============== function _isr ends ============
  2669                           
  2670                           	signat	_isr,88
  2671                           	global	_getPacket
  2672                           psect	text765,local,class=CODE,delta=2
  2673                           global __ptext765
  2674  0632                     __ptext765:
  2675                           
  2676 ;; *************** function _getPacket *****************
  2677 ;; Defined at:
  2678 ;;		line 83 in file "main.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;		None
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  arrStore       50   16[BANK0 ] unsigned char [50]
  2683 ;; Return value:  Size  Location     Type
  2684 ;;		None               void
  2685 ;; Registers used:
  2686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2692 ;;      Params:         0       0       0       0       0
  2693 ;;      Locals:         0      50       0       0       0
  2694 ;;      Temps:          0       4       0       0       0
  2695 ;;      Totals:         0      54       0       0       0
  2696 ;;Total ram usage:       54 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    3
  2699 ;; This function calls:
  2700 ;;		_readString
  2701 ;;		i1_eeprom_write
  2702 ;;		_parsePacket
  2703 ;;		_validatePacket
  2704 ;;		_eeprom_read
  2705 ;;		_readCommands
  2706 ;;		_writeCommands
  2707 ;; This function is called by:
  2708 ;;		_isr
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           psect	text765
  2712                           	file	"main.c"
  2713                           	line	83
  2714                           	global	__size_of_getPacket
  2715  005E                     	__size_of_getPacket	equ	__end_of_getPacket-_getPacket
  2716                           	
  2717  0632                     _getPacket:	
  2718                           	opt	stack 1
  2719                           ; Regs used in _getPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2720                           	line	85
  2721                           	
  2722  0632                     i1l10418:	
  2723                           ;main.c: 85: unsigned char arrStore[50] = {0};
  2724  0632  3030               	movlw	(getPacket@arrStore)&0ffh
  2725  0633  0084               	movwf	fsr0
  2726  0634  3090               	movlw	low(getPacket@F1178)
  2727  0635  1283               	bcf	status, 5	;RP0=0, select bank0
  2728  0636  1303               	bcf	status, 6	;RP1=0, select bank0
  2729  0637  00AC               	movwf	(??_getPacket+0)+0
  2730  0638  0804               	movf	fsr0,w
  2731  0639  00AD               	movwf	((??_getPacket+0)+0+1)
  2732  063A  3032               	movlw	50
  2733  063B  00AE               	movwf	((??_getPacket+0)+0+2)
  2734  063C                     u311_20:
  2735  063C  082C               	movf	(??_getPacket+0)+0,w
  2736  063D  0084               	movwf	fsr0
  2737  063E  1783               	bsf	status, 7	;select IRP bank3
  2738                           	
  2739  063F  0800               	movf	indf,w
  2740  0640  00AF               	movwf	((??_getPacket+0)+0+3)
  2741  0641  0AAC               	incf	(??_getPacket+0)+0,f
  2742  0642  082D               	movf	((??_getPacket+0)+0+1),w
  2743  0643  0084               	movwf	fsr0
  2744  0644  1383               	bcf	status, 7	;select IRP bank0
  2745                           	
  2746  0645  082F               	movf	((??_getPacket+0)+0+3),w
  2747  0646  0080               	movwf	indf
  2748  0647  0AAD               	incf	((??_getPacket+0)+0+1),f
  2749  0648  0BAE               	decfsz	((??_getPacket+0)+0+2),f
  2750  0649  2E3C               	goto	u311_20
  2751                           	line	87
  2752                           	
  2753  064A                     i1l10420:	
  2754                           ;main.c: 87: readString(arrStore);
  2755  064A  3030               	movlw	(getPacket@arrStore)&0ffh
  2756  064B  120A  118A  26E1   	fcall	_readString
              120A  118A         
  2757                           	line	89
  2758                           	
  2759  0650                     i1l10422:	
  2760                           ;main.c: 89: eeprom_write(calcCSByteAddr,0x00);
  2761  0650  01FA               	clrf	(?i1_eeprom_write)
  2762  0651  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2763  0652  0084               	movwf	fsr0
  2764  0653  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2765  0658  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  2766                           	line	91
  2767                           	
  2768  065D                     i1l10424:	
  2769                           ;main.c: 91: parsePacket(arrStore);
  2770  065D  3030               	movlw	(getPacket@arrStore)&0ffh
  2771  065E  120A  118A  2190   	fcall	_parsePacket
              120A  118A         
  2772                           	line	94
  2773                           	
  2774  0663                     i1l10426:	
  2775                           ;main.c: 94: if(validatePacket()){
  2776  0663  120A  118A  2690   	fcall	_validatePacket
              120A  118A         
  2777  0668  1283               	bcf	status, 5	;RP0=0, select bank0
  2778  0669  1303               	bcf	status, 6	;RP1=0, select bank0
  2779  066A  0825               	movf	(1+(?_validatePacket)),w
  2780  066B  0424               	iorwf	(0+(?_validatePacket)),w
  2781  066C  1903               	skipnz
  2782  066D  2E6F               	goto	u312_21
  2783  066E  2E70               	goto	u312_20
  2784  066F                     u312_21:
  2785  066F  2E8F               	goto	i1l4004
  2786  0670                     u312_20:
  2787                           	line	97
  2788                           	
  2789  0670                     i1l10428:	
  2790                           ;main.c: 97: if(eeprom_read(rwByteAddr) == 0){
  2791  0670  3053               	movlw	(_rwByteAddr-__stringbase)
  2792  0671  0084               	movwf	fsr0
  2793  0672  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2794  0677  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  2795  067C  3800               	iorlw	0
  2796  067D  1D03               	skipz
  2797  067E  2E80               	goto	u313_21
  2798  067F  2E81               	goto	u313_20
  2799  0680                     u313_21:
  2800  0680  2E87               	goto	i1l10432
  2801  0681                     u313_20:
  2802                           	line	98
  2803                           	
  2804  0681                     i1l10430:	
  2805                           ;main.c: 98: readCommands();
  2806  0681  120A  118A  2015   	fcall	_readCommands
              120A  118A         
  2807                           	line	100
  2808                           ;main.c: 100: }else{
  2809  0686  2E8F               	goto	i1l4004
  2810                           	
  2811  0687                     i1l4001:	
  2812                           	line	101
  2813                           	
  2814  0687                     i1l10432:	
  2815                           ;main.c: 101: writeCommands();
  2816  0687  120A  118A  27FF   	fcall	_writeCommands
              120A  118A         
  2817  068C  2E8F               	goto	i1l4004
  2818                           	line	102
  2819                           	
  2820  068D                     i1l4002:	
  2821                           	line	104
  2822                           ;main.c: 102: }
  2823                           ;main.c: 104: }else{
  2824  068D  2E8F               	goto	i1l4004
  2825                           	
  2826  068E                     i1l4000:	
  2827  068E  2E8F               	goto	i1l4004
  2828                           	line	107
  2829                           	
  2830  068F                     i1l4003:	
  2831                           	line	108
  2832                           	
  2833  068F                     i1l4004:	
  2834  068F  0008               	return
  2835                           	opt stack 0
  2836                           GLOBAL	__end_of_getPacket
  2837  0690                     	__end_of_getPacket:
  2838 ;; =============== function _getPacket ends ============
  2839                           
  2840                           	signat	_getPacket,88
  2841                           	global	_readCommands
  2842                           psect	text766,local,class=CODE,delta=2
  2843                           global __ptext766
  2844  0015                     __ptext766:
  2845                           
  2846 ;; *************** function _readCommands *****************
  2847 ;; Defined at:
  2848 ;;		line 12 in file "Command.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;		None               void
  2855 ;; Registers used:
  2856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2862 ;;      Params:         0       0       0       0       0
  2863 ;;      Locals:         0       0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0
  2865 ;;      Totals:         0       0       0       0       0
  2866 ;;Total ram usage:        0 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    2
  2869 ;; This function calls:
  2870 ;;		i1_writeByte
  2871 ;;		i1_writeString
  2872 ;;		_eeprom_read
  2873 ;; This function is called by:
  2874 ;;		_getPacket
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           psect	text766
  2878                           	file	"Command.c"
  2879                           	line	12
  2880                           	global	__size_of_readCommands
  2881  017B                     	__size_of_readCommands	equ	__end_of_readCommands-_readCommands
  2882                           	
  2883  0015                     _readCommands:	
  2884                           	opt	stack 1
  2885                           ; Regs used in _readCommands: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2886                           	line	14
  2887                           	
  2888  0015                     i1l10434:	
  2889                           ;Command.c: 14: switch(eeprom_read(cmdByteAddr)){
  2890  0015  296A               	goto	i1l10468
  2891                           	line	16
  2892                           ;Command.c: 16: case 0:
  2893                           	
  2894  0016                     i1l4776:	
  2895                           	line	17
  2896                           	
  2897  0016                     i1l10436:	
  2898                           ;Command.c: 17: writeByte(userStartByte);
  2899  0016  3060               	movlw	(_userStartByte-__stringbase)
  2900  0017  0084               	movwf	fsr0
  2901  0018  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2902  001D  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  2903                           	line	18
  2904                           ;Command.c: 18: writeByte(tempValHAddr);
  2905  0022  305C               	movlw	(_tempValHAddr-__stringbase)
  2906  0023  0084               	movwf	fsr0
  2907  0024  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2908  0029  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  2909                           	line	19
  2910                           ;Command.c: 19: writeByte(tempValLAddr);
  2911  002E  305D               	movlw	(_tempValLAddr-__stringbase)
  2912  002F  0084               	movwf	fsr0
  2913  0030  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2914  0035  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  2915                           	line	20
  2916                           ;Command.c: 20: break;
  2917  003A  298F               	goto	i1l4786
  2918                           	line	22
  2919                           ;Command.c: 22: case 1:
  2920                           	
  2921  003B                     i1l4778:	
  2922                           	line	23
  2923                           	
  2924  003B                     i1l10438:	
  2925                           ;Command.c: 23: writeByte(userStartByte);
  2926  003B  3060               	movlw	(_userStartByte-__stringbase)
  2927  003C  0084               	movwf	fsr0
  2928  003D  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2929  0042  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  2930                           	line	24
  2931                           ;Command.c: 24: writeByte(tempHiAddr);
  2932  0047  3057               	movlw	(_tempHiAddr-__stringbase)
  2933  0048  0084               	movwf	fsr0
  2934  0049  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2935  004E  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  2936                           	line	25
  2937                           ;Command.c: 25: break;
  2938  0053  298F               	goto	i1l4786
  2939                           	line	27
  2940                           ;Command.c: 27: case 2:
  2941                           	
  2942  0054                     i1l4779:	
  2943                           	line	28
  2944                           	
  2945  0054                     i1l10440:	
  2946                           ;Command.c: 28: writeByte(userStartByte);
  2947  0054  3060               	movlw	(_userStartByte-__stringbase)
  2948  0055  0084               	movwf	fsr0
  2949  0056  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2950  005B  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  2951                           	line	29
  2952                           ;Command.c: 29: writeByte(tempLoAddr);
  2953  0060  3058               	movlw	(_tempLoAddr-__stringbase)
  2954  0061  0084               	movwf	fsr0
  2955  0062  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2956  0067  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  2957                           	line	30
  2958                           ;Command.c: 30: break;
  2959  006C  298F               	goto	i1l4786
  2960                           	line	32
  2961                           ;Command.c: 32: case 3:
  2962                           	
  2963  006D                     i1l4780:	
  2964                           	line	33
  2965                           	
  2966  006D                     i1l10442:	
  2967                           ;Command.c: 33: writeByte(userStartByte);
  2968  006D  3060               	movlw	(_userStartByte-__stringbase)
  2969  006E  0084               	movwf	fsr0
  2970  006F  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2971  0074  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  2972                           	line	34
  2973                           ;Command.c: 34: writeByte(humValHAddr);
  2974  0079  304B               	movlw	(_humValHAddr-__stringbase)
  2975  007A  0084               	movwf	fsr0
  2976  007B  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2977  0080  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  2978                           	line	35
  2979                           ;Command.c: 35: writeByte(humValLAddr);
  2980  0085  304C               	movlw	(_humValLAddr-__stringbase)
  2981  0086  0084               	movwf	fsr0
  2982  0087  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2983  008C  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  2984                           	line	36
  2985                           ;Command.c: 36: break;
  2986  0091  298F               	goto	i1l4786
  2987                           	line	38
  2988                           ;Command.c: 38: case 4:
  2989                           	
  2990  0092                     i1l4781:	
  2991                           	line	39
  2992                           	
  2993  0092                     i1l10444:	
  2994                           ;Command.c: 39: writeByte(userStartByte);
  2995  0092  3060               	movlw	(_userStartByte-__stringbase)
  2996  0093  0084               	movwf	fsr0
  2997  0094  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2998  0099  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  2999                           	line	40
  3000                           ;Command.c: 40: writeByte(humHiAddr);
  3001  009E  3047               	movlw	(_humHiAddr-__stringbase)
  3002  009F  0084               	movwf	fsr0
  3003  00A0  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3004  00A5  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3005                           	line	41
  3006                           ;Command.c: 41: break;
  3007  00AA  298F               	goto	i1l4786
  3008                           	line	43
  3009                           ;Command.c: 43: case 5:
  3010                           	
  3011  00AB                     i1l4782:	
  3012                           	line	44
  3013                           	
  3014  00AB                     i1l10446:	
  3015                           ;Command.c: 44: writeByte(userStartByte);
  3016  00AB  3060               	movlw	(_userStartByte-__stringbase)
  3017  00AC  0084               	movwf	fsr0
  3018  00AD  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3019  00B2  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3020                           	line	45
  3021                           ;Command.c: 45: writeByte(humLoAddr);
  3022  00B7  3048               	movlw	(_humLoAddr-__stringbase)
  3023  00B8  0084               	movwf	fsr0
  3024  00B9  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3025  00BE  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3026                           	line	46
  3027                           ;Command.c: 46: break;
  3028  00C3  298F               	goto	i1l4786
  3029                           	line	48
  3030                           ;Command.c: 48: case 6:
  3031                           	
  3032  00C4                     i1l4783:	
  3033                           	line	49
  3034                           	
  3035  00C4                     i1l10448:	
  3036                           ;Command.c: 49: writeByte(userStartByte);
  3037  00C4  3060               	movlw	(_userStartByte-__stringbase)
  3038  00C5  0084               	movwf	fsr0
  3039  00C6  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3040  00CB  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3041                           	line	50
  3042                           	
  3043  00D0                     i1l10450:	
  3044                           ;Command.c: 50: writeByte('R');
  3045  00D0  3052               	movlw	(052h)
  3046  00D1  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3047                           	line	51
  3048                           	
  3049  00D6                     i1l10452:	
  3050                           ;Command.c: 51: writeByte('T');
  3051  00D6  3054               	movlw	(054h)
  3052  00D7  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3053                           	line	52
  3054                           	
  3055  00DC                     i1l10454:	
  3056                           ;Command.c: 52: writeByte('C');
  3057  00DC  3043               	movlw	(043h)
  3058  00DD  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3059                           	line	53
  3060                           ;Command.c: 53: break;
  3061  00E2  298F               	goto	i1l4786
  3062                           	line	55
  3063                           ;Command.c: 55: case 7:
  3064                           	
  3065  00E3                     i1l4784:	
  3066                           	line	56
  3067                           	
  3068  00E3                     i1l10456:	
  3069                           ;Command.c: 56: writeByte(userStartByte);
  3070  00E3  3060               	movlw	(_userStartByte-__stringbase)
  3071  00E4  0084               	movwf	fsr0
  3072  00E5  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3073  00EA  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3074                           	line	57
  3075                           ;Command.c: 57: writeByte(tempValHAddr);
  3076  00EF  305C               	movlw	(_tempValHAddr-__stringbase)
  3077  00F0  0084               	movwf	fsr0
  3078  00F1  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3079  00F6  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3080                           	line	58
  3081                           ;Command.c: 58: writeByte(tempValLAddr);
  3082  00FB  305D               	movlw	(_tempValLAddr-__stringbase)
  3083  00FC  0084               	movwf	fsr0
  3084  00FD  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3085  0102  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3086                           	line	59
  3087                           ;Command.c: 59: writeByte(tempHiAddr);
  3088  0107  3057               	movlw	(_tempHiAddr-__stringbase)
  3089  0108  0084               	movwf	fsr0
  3090  0109  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3091  010E  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3092                           	line	60
  3093                           ;Command.c: 60: writeByte(tempLoAddr);
  3094  0113  3058               	movlw	(_tempLoAddr-__stringbase)
  3095  0114  0084               	movwf	fsr0
  3096  0115  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3097  011A  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3098                           	line	61
  3099                           ;Command.c: 61: writeByte(humValHAddr);
  3100  011F  304B               	movlw	(_humValHAddr-__stringbase)
  3101  0120  0084               	movwf	fsr0
  3102  0121  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3103  0126  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3104                           	line	62
  3105                           ;Command.c: 62: writeByte(humValLAddr);
  3106  012B  304C               	movlw	(_humValLAddr-__stringbase)
  3107  012C  0084               	movwf	fsr0
  3108  012D  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3109  0132  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3110                           	line	63
  3111                           ;Command.c: 63: writeByte(humHiAddr);
  3112  0137  3047               	movlw	(_humHiAddr-__stringbase)
  3113  0138  0084               	movwf	fsr0
  3114  0139  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3115  013E  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3116                           	line	64
  3117                           ;Command.c: 64: writeByte(humLoAddr);
  3118  0143  3048               	movlw	(_humLoAddr-__stringbase)
  3119  0144  0084               	movwf	fsr0
  3120  0145  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3121  014A  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3122                           	line	65
  3123                           	
  3124  014F                     i1l10458:	
  3125                           ;Command.c: 65: writeByte('R');
  3126  014F  3052               	movlw	(052h)
  3127  0150  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3128                           	line	66
  3129                           	
  3130  0155                     i1l10460:	
  3131                           ;Command.c: 66: writeByte('T');
  3132  0155  3054               	movlw	(054h)
  3133  0156  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3134                           	line	67
  3135                           	
  3136  015B                     i1l10462:	
  3137                           ;Command.c: 67: writeByte('C');
  3138  015B  3043               	movlw	(043h)
  3139  015C  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  3140                           	line	68
  3141                           ;Command.c: 68: break;
  3142  0161  298F               	goto	i1l4786
  3143                           	line	70
  3144                           ;Command.c: 70: default:
  3145                           	
  3146  0162                     i1l4785:	
  3147                           	line	71
  3148                           	
  3149  0162                     i1l10464:	
  3150                           ;Command.c: 71: writeString(readError);
  3151  0162  30A9               	movlw	(_readError)&0ffh
  3152  0163  120A  158A  2708   	fcall	i1_writeString
              120A  118A         
  3153                           	line	72
  3154                           ;Command.c: 72: break;
  3155  0168  298F               	goto	i1l4786
  3156                           	line	73
  3157                           	
  3158  0169                     i1l10466:	
  3159                           ;Command.c: 73: }
  3160  0169  298F               	goto	i1l4786
  3161                           	line	14
  3162                           	
  3163  016A                     i1l4775:	
  3164                           	
  3165  016A                     i1l10468:	
  3166  016A  3042               	movlw	(_cmdByteAddr-__stringbase)
  3167  016B  0084               	movwf	fsr0
  3168  016C  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3169  0171  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  3170                           	; Switch size 1, requested type "space"
  3171                           ; Number of cases is 8, Range of values is 0 to 7
  3172                           ; switch strategies available:
  3173                           ; Name         Instructions Cycles
  3174                           ; simple_byte           25    13 (average)
  3175                           ; direct_byte           32     8 (fixed)
  3176                           ; jumptable            260     6 (fixed)
  3177                           ; rangetable            12     6 (fixed)
  3178                           ; spacedrange           22     9 (fixed)
  3179                           ; locatedrange           8     3 (fixed)
  3180                           ;	Chosen strategy is simple_byte
  3181                           
  3182                           	opt asmopt_off
  3183  0176  3A00               	xorlw	0^0	; case 0
  3184  0177  1903               	skipnz
  3185  0178  2816               	goto	i1l10436
  3186  0179  3A01               	xorlw	1^0	; case 1
  3187  017A  1903               	skipnz
  3188  017B  283B               	goto	i1l10438
  3189  017C  3A03               	xorlw	2^1	; case 2
  3190  017D  1903               	skipnz
  3191  017E  2854               	goto	i1l10440
  3192  017F  3A01               	xorlw	3^2	; case 3
  3193  0180  1903               	skipnz
  3194  0181  286D               	goto	i1l10442
  3195  0182  3A07               	xorlw	4^3	; case 4
  3196  0183  1903               	skipnz
  3197  0184  2892               	goto	i1l10444
  3198  0185  3A01               	xorlw	5^4	; case 5
  3199  0186  1903               	skipnz
  3200  0187  28AB               	goto	i1l10446
  3201  0188  3A03               	xorlw	6^5	; case 6
  3202  0189  1903               	skipnz
  3203  018A  28C4               	goto	i1l10448
  3204  018B  3A01               	xorlw	7^6	; case 7
  3205  018C  1903               	skipnz
  3206  018D  28E3               	goto	i1l10456
  3207  018E  2962               	goto	i1l10464
  3208                           	opt asmopt_on
  3209                           
  3210                           	line	73
  3211                           	
  3212  018F                     i1l4777:	
  3213                           	line	76
  3214                           	
  3215  018F                     i1l4786:	
  3216  018F  0008               	return
  3217                           	opt stack 0
  3218                           GLOBAL	__end_of_readCommands
  3219  0190                     	__end_of_readCommands:
  3220 ;; =============== function _readCommands ends ============
  3221                           
  3222                           	signat	_readCommands,88
  3223                           	global	_validatePacket
  3224                           psect	text767,local,class=CODE,delta=2
  3225                           global __ptext767
  3226  0690                     __ptext767:
  3227                           
  3228 ;; *************** function _validatePacket *****************
  3229 ;; Defined at:
  3230 ;;		line 236 in file "Packet.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  2    4[BANK0 ] int 
  3237 ;; Registers used:
  3238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3244 ;;      Params:         0       2       0       0       0
  3245 ;;      Locals:         0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0
  3247 ;;      Totals:         0       2       0       0       0
  3248 ;;Total ram usage:        2 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:    2
  3251 ;; This function calls:
  3252 ;;		_checkStartByte
  3253 ;;		_checkRWByte
  3254 ;;		_checkCMDByte
  3255 ;;		_checkDataFrames
  3256 ;;		_addDataToCheckSum
  3257 ;;		_checkCS
  3258 ;; This function is called by:
  3259 ;;		_getPacket
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           psect	text767
  3263                           	file	"Packet.c"
  3264                           	line	236
  3265                           	global	__size_of_validatePacket
  3266  0051                     	__size_of_validatePacket	equ	__end_of_validatePacket-_validatePacket
  3267                           	
  3268  0690                     _validatePacket:	
  3269                           	opt	stack 1
  3270                           ; Regs used in _validatePacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3271                           	line	238
  3272                           	
  3273  0690                     i1l10368:	
  3274                           ;Packet.c: 238: if(checkStartByte() && checkRWByte() && checkCMDByte() && checkDataFrame
                                 s()){
  3275  0690  120A  118A  25CE   	fcall	_checkStartByte
              120A  118A         
  3276  0695  1283               	bcf	status, 5	;RP0=0, select bank0
  3277  0696  1303               	bcf	status, 6	;RP1=0, select bank0
  3278  0697  0821               	movf	(1+(?_checkStartByte)),w
  3279  0698  0420               	iorwf	(0+(?_checkStartByte)),w
  3280  0699  1903               	skipnz
  3281  069A  2E9C               	goto	u302_21
  3282  069B  2E9D               	goto	u302_20
  3283  069C                     u302_21:
  3284  069C  2EDB               	goto	i1l10382
  3285  069D                     u302_20:
  3286                           	
  3287  069D                     i1l10370:	
  3288  069D  120A  118A  2446   	fcall	_checkRWByte
              120A  118A         
  3289  06A2  1283               	bcf	status, 5	;RP0=0, select bank0
  3290  06A3  1303               	bcf	status, 6	;RP1=0, select bank0
  3291  06A4  0821               	movf	(1+(?_checkRWByte)),w
  3292  06A5  0420               	iorwf	(0+(?_checkRWByte)),w
  3293  06A6  1903               	skipnz
  3294  06A7  2EA9               	goto	u303_21
  3295  06A8  2EAA               	goto	u303_20
  3296  06A9                     u303_21:
  3297  06A9  2EDB               	goto	i1l10382
  3298  06AA                     u303_20:
  3299                           	
  3300  06AA                     i1l10372:	
  3301  06AA  120A  118A  23D6   	fcall	_checkCMDByte
              120A  118A         
  3302  06AF  1283               	bcf	status, 5	;RP0=0, select bank0
  3303  06B0  1303               	bcf	status, 6	;RP1=0, select bank0
  3304  06B1  0821               	movf	(1+(?_checkCMDByte)),w
  3305  06B2  0420               	iorwf	(0+(?_checkCMDByte)),w
  3306  06B3  1903               	skipnz
  3307  06B4  2EB6               	goto	u304_21
  3308  06B5  2EB7               	goto	u304_20
  3309  06B6                     u304_21:
  3310  06B6  2EDB               	goto	i1l10382
  3311  06B7                     u304_20:
  3312                           	
  3313  06B7                     i1l10374:	
  3314  06B7  120A  118A  22C5   	fcall	_checkDataFrames
              120A  118A         
  3315  06BC  0873               	movf	(1+(?_checkDataFrames)),w
  3316  06BD  0472               	iorwf	(0+(?_checkDataFrames)),w
  3317  06BE  1903               	skipnz
  3318  06BF  2EC1               	goto	u305_21
  3319  06C0  2EC2               	goto	u305_20
  3320  06C1                     u305_21:
  3321  06C1  2EDB               	goto	i1l10382
  3322  06C2                     u305_20:
  3323                           	line	240
  3324                           	
  3325  06C2                     i1l10376:	
  3326                           ;Packet.c: 240: addDataToCheckSum();
  3327  06C2  120A  118A  235F   	fcall	_addDataToCheckSum
              120A  118A         
  3328                           	line	242
  3329                           ;Packet.c: 242: if(checkCS())
  3330  06C7  120A  158A  27CC   	fcall	_checkCS
              120A  118A         
  3331  06CC  0873               	movf	(1+(?_checkCS)),w
  3332  06CD  0472               	iorwf	(0+(?_checkCS)),w
  3333  06CE  1903               	skipnz
  3334  06CF  2ED1               	goto	u306_21
  3335  06D0  2ED2               	goto	u306_20
  3336  06D1                     u306_21:
  3337  06D1  2EDB               	goto	i1l10382
  3338  06D2                     u306_20:
  3339                           	line	244
  3340                           	
  3341  06D2                     i1l10378:	
  3342                           ;Packet.c: 244: return 1;
  3343  06D2  3001               	movlw	low(01h)
  3344  06D3  1283               	bcf	status, 5	;RP0=0, select bank0
  3345  06D4  1303               	bcf	status, 6	;RP1=0, select bank0
  3346  06D5  00A4               	movwf	(?_validatePacket)
  3347  06D6  3000               	movlw	high(01h)
  3348  06D7  00A5               	movwf	((?_validatePacket))+1
  3349  06D8  2EE0               	goto	i1l1621
  3350                           	
  3351  06D9                     i1l10380:	
  3352  06D9  2EE0               	goto	i1l1621
  3353                           	
  3354  06DA                     i1l1620:	
  3355  06DA  2EDB               	goto	i1l10382
  3356                           	line	245
  3357                           	
  3358  06DB                     i1l1619:	
  3359                           	line	247
  3360                           	
  3361  06DB                     i1l10382:	
  3362                           ;Packet.c: 245: }
  3363                           ;Packet.c: 247: return 0;
  3364  06DB  1283               	bcf	status, 5	;RP0=0, select bank0
  3365  06DC  1303               	bcf	status, 6	;RP1=0, select bank0
  3366  06DD  01A4               	clrf	(?_validatePacket)
  3367  06DE  01A5               	clrf	(?_validatePacket+1)
  3368  06DF  2EE0               	goto	i1l1621
  3369                           	
  3370  06E0                     i1l10384:	
  3371                           	line	249
  3372                           	
  3373  06E0                     i1l1621:	
  3374  06E0  0008               	return
  3375                           	opt stack 0
  3376                           GLOBAL	__end_of_validatePacket
  3377  06E1                     	__end_of_validatePacket:
  3378 ;; =============== function _validatePacket ends ============
  3379                           
  3380                           	signat	_validatePacket,90
  3381                           	global	_parsePacket
  3382                           psect	text768,local,class=CODE,delta=2
  3383                           global __ptext768
  3384  0190                     __ptext768:
  3385                           
  3386 ;; *************** function _parsePacket *****************
  3387 ;; Defined at:
  3388 ;;		line 114 in file "Packet.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  dataPacket      1    wreg     PTR unsigned char 
  3391 ;;		 -> getPacket@arrStore(50), 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  dataPacket      1   11[BANK0 ] PTR unsigned char 
  3394 ;;		 -> getPacket@arrStore(50), 
  3395 ;;  i               1   10[BANK0 ] unsigned char 
  3396 ;;  dataCounter     2    8[BANK0 ] int 
  3397 ;; Return value:  Size  Location     Type
  3398 ;;		None               void
  3399 ;; Registers used:
  3400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3406 ;;      Params:         0       0       0       0       0
  3407 ;;      Locals:         0       4       0       0       0
  3408 ;;      Temps:          0       4       0       0       0
  3409 ;;      Totals:         0       8       0       0       0
  3410 ;;Total ram usage:        8 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    2
  3413 ;; This function calls:
  3414 ;;		_checkLength
  3415 ;;		_checkEven
  3416 ;;		_makeHexByte
  3417 ;;		i1_eeprom_write
  3418 ;;		i1_strlen
  3419 ;;		_eeprom_read
  3420 ;; This function is called by:
  3421 ;;		_getPacket
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           psect	text768
  3425                           	file	"Packet.c"
  3426                           	line	114
  3427                           	global	__size_of_parsePacket
  3428  0135                     	__size_of_parsePacket	equ	__end_of_parsePacket-_parsePacket
  3429                           	
  3430  0190                     _parsePacket:	
  3431                           	opt	stack 1
  3432                           ; Regs used in _parsePacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3433                           ;parsePacket@dataPacket stored from wreg
  3434                           	line	116
  3435  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  3436  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  3437  0192  00AB               	movwf	(parsePacket@dataPacket)
  3438                           	
  3439  0193                     i1l10286:	
  3440                           ;Packet.c: 116: int dataCounter = 0;
  3441  0193  01A8               	clrf	(parsePacket@dataCounter)
  3442  0194  01A9               	clrf	(parsePacket@dataCounter+1)
  3443                           	line	119
  3444                           	
  3445  0195                     i1l10288:	
  3446                           ;Packet.c: 119: if (checkLength() && checkEven()) {
  3447  0195  120A  158A  26D9   	fcall	_checkLength
              120A  118A         
  3448  019A  0873               	movf	(1+(?_checkLength)),w
  3449  019B  0472               	iorwf	(0+(?_checkLength)),w
  3450  019C  1903               	skipnz
  3451  019D  299F               	goto	u294_21
  3452  019E  29A0               	goto	u294_20
  3453  019F                     u294_21:
  3454  019F  2AC4               	goto	i1l1598
  3455  01A0                     u294_20:
  3456                           	
  3457  01A0                     i1l10290:	
  3458  01A0  120A  158A  2689   	fcall	_checkEven
              120A  118A         
  3459  01A5  0873               	movf	(1+(?_checkEven)),w
  3460  01A6  0472               	iorwf	(0+(?_checkEven)),w
  3461  01A7  1903               	skipnz
  3462  01A8  29AA               	goto	u295_21
  3463  01A9  29AB               	goto	u295_20
  3464  01AA                     u295_21:
  3465  01AA  2AC4               	goto	i1l1598
  3466  01AB                     u295_20:
  3467                           	line	122
  3468                           	
  3469  01AB                     i1l10292:	
  3470                           ;Packet.c: 122: eeprom_write(startByteAddr, makeHexByte(dataPacket[0], dataPacket[1]));
  3471  01AB  1283               	bcf	status, 5	;RP0=0, select bank0
  3472  01AC  1303               	bcf	status, 6	;RP1=0, select bank0
  3473  01AD  082B               	movf	(parsePacket@dataPacket),w
  3474  01AE  3E01               	addlw	01h
  3475  01AF  0084               	movwf	fsr0
  3476  01B0  1383               	bcf	status, 7	;select IRP bank0
  3477  01B1  0800               	movf	indf,w
  3478  01B2  00A4               	movwf	(??_parsePacket+0)+0
  3479  01B3  0824               	movf	(??_parsePacket+0)+0,w
  3480  01B4  00FD               	movwf	(?_makeHexByte)
  3481  01B5  082B               	movf	(parsePacket@dataPacket),w
  3482  01B6  0084               	movwf	fsr0
  3483  01B7  0800               	movf	indf,w
  3484  01B8  120A  158A  2664   	fcall	_makeHexByte
              120A  118A         
  3485  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  3486  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  3487  01BF  00A5               	movwf	(??_parsePacket+1)+0
  3488  01C0  0825               	movf	(??_parsePacket+1)+0,w
  3489  01C1  00FA               	movwf	(?i1_eeprom_write)
  3490  01C2  3054               	movlw	(_startByteAddr-__stringbase)
  3491  01C3  0084               	movwf	fsr0
  3492  01C4  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3493  01C9  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3494                           	line	124
  3495                           ;Packet.c: 124: eeprom_write(rwByteAddr, makeHexByte(dataPacket[2], dataPacket[3]));
  3496  01CE  1283               	bcf	status, 5	;RP0=0, select bank0
  3497  01CF  1303               	bcf	status, 6	;RP1=0, select bank0
  3498  01D0  082B               	movf	(parsePacket@dataPacket),w
  3499  01D1  3E03               	addlw	03h
  3500  01D2  0084               	movwf	fsr0
  3501  01D3  1383               	bcf	status, 7	;select IRP bank0
  3502  01D4  0800               	movf	indf,w
  3503  01D5  00A4               	movwf	(??_parsePacket+0)+0
  3504  01D6  0824               	movf	(??_parsePacket+0)+0,w
  3505  01D7  00FD               	movwf	(?_makeHexByte)
  3506  01D8  082B               	movf	(parsePacket@dataPacket),w
  3507  01D9  3E02               	addlw	02h
  3508  01DA  0084               	movwf	fsr0
  3509  01DB  0800               	movf	indf,w
  3510  01DC  120A  158A  2664   	fcall	_makeHexByte
              120A  118A         
  3511  01E1  1283               	bcf	status, 5	;RP0=0, select bank0
  3512  01E2  1303               	bcf	status, 6	;RP1=0, select bank0
  3513  01E3  00A5               	movwf	(??_parsePacket+1)+0
  3514  01E4  0825               	movf	(??_parsePacket+1)+0,w
  3515  01E5  00FA               	movwf	(?i1_eeprom_write)
  3516  01E6  3053               	movlw	(_rwByteAddr-__stringbase)
  3517  01E7  0084               	movwf	fsr0
  3518  01E8  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3519  01ED  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3520                           	line	126
  3521                           ;Packet.c: 126: eeprom_write(cmdByteAddr, makeHexByte(dataPacket[4], dataPacket[5]));
  3522  01F2  1283               	bcf	status, 5	;RP0=0, select bank0
  3523  01F3  1303               	bcf	status, 6	;RP1=0, select bank0
  3524  01F4  082B               	movf	(parsePacket@dataPacket),w
  3525  01F5  3E05               	addlw	05h
  3526  01F6  0084               	movwf	fsr0
  3527  01F7  1383               	bcf	status, 7	;select IRP bank0
  3528  01F8  0800               	movf	indf,w
  3529  01F9  00A4               	movwf	(??_parsePacket+0)+0
  3530  01FA  0824               	movf	(??_parsePacket+0)+0,w
  3531  01FB  00FD               	movwf	(?_makeHexByte)
  3532  01FC  082B               	movf	(parsePacket@dataPacket),w
  3533  01FD  3E04               	addlw	04h
  3534  01FE  0084               	movwf	fsr0
  3535  01FF  0800               	movf	indf,w
  3536  0200  120A  158A  2664   	fcall	_makeHexByte
              120A  118A         
  3537  0205  1283               	bcf	status, 5	;RP0=0, select bank0
  3538  0206  1303               	bcf	status, 6	;RP1=0, select bank0
  3539  0207  00A5               	movwf	(??_parsePacket+1)+0
  3540  0208  0825               	movf	(??_parsePacket+1)+0,w
  3541  0209  00FA               	movwf	(?i1_eeprom_write)
  3542  020A  3042               	movlw	(_cmdByteAddr-__stringbase)
  3543  020B  0084               	movwf	fsr0
  3544  020C  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3545  0211  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3546                           	line	128
  3547                           ;Packet.c: 128: eeprom_write(lenByteAddr, makeHexByte(dataPacket[6], dataPacket[7]));
  3548  0216  1283               	bcf	status, 5	;RP0=0, select bank0
  3549  0217  1303               	bcf	status, 6	;RP1=0, select bank0
  3550  0218  082B               	movf	(parsePacket@dataPacket),w
  3551  0219  3E07               	addlw	07h
  3552  021A  0084               	movwf	fsr0
  3553  021B  1383               	bcf	status, 7	;select IRP bank0
  3554  021C  0800               	movf	indf,w
  3555  021D  00A4               	movwf	(??_parsePacket+0)+0
  3556  021E  0824               	movf	(??_parsePacket+0)+0,w
  3557  021F  00FD               	movwf	(?_makeHexByte)
  3558  0220  082B               	movf	(parsePacket@dataPacket),w
  3559  0221  3E06               	addlw	06h
  3560  0222  0084               	movwf	fsr0
  3561  0223  0800               	movf	indf,w
  3562  0224  120A  158A  2664   	fcall	_makeHexByte
              120A  118A         
  3563  0229  1283               	bcf	status, 5	;RP0=0, select bank0
  3564  022A  1303               	bcf	status, 6	;RP1=0, select bank0
  3565  022B  00A5               	movwf	(??_parsePacket+1)+0
  3566  022C  0825               	movf	(??_parsePacket+1)+0,w
  3567  022D  00FA               	movwf	(?i1_eeprom_write)
  3568  022E  304D               	movlw	(_lenByteAddr-__stringbase)
  3569  022F  0084               	movwf	fsr0
  3570  0230  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3571  0235  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3572                           	line	130
  3573                           ;Packet.c: 130: eeprom_write(csByteAddr, makeHexByte(dataPacket[strlen(dataPacket) - 2],
                                  dataPacket[strlen(dataPacket) - 1]));
  3574  023A  1283               	bcf	status, 5	;RP0=0, select bank0
  3575  023B  1303               	bcf	status, 6	;RP1=0, select bank0
  3576  023C  082B               	movf	(parsePacket@dataPacket),w
  3577  023D  120A  158A  2768   	fcall	i1_strlen
              120A  118A         
  3578  0242  0870               	movf	(0+(?i1_strlen)),w
  3579  0243  3EFF               	addlw	0FFh
  3580  0244  1283               	bcf	status, 5	;RP0=0, select bank0
  3581  0245  1303               	bcf	status, 6	;RP1=0, select bank0
  3582  0246  072B               	addwf	(parsePacket@dataPacket),w
  3583  0247  00A4               	movwf	(??_parsePacket+0)+0
  3584  0248  0824               	movf	0+(??_parsePacket+0)+0,w
  3585  0249  0084               	movwf	fsr0
  3586  024A  1383               	bcf	status, 7	;select IRP bank0
  3587  024B  0800               	movf	indf,w
  3588  024C  00A5               	movwf	(??_parsePacket+1)+0
  3589  024D  0825               	movf	(??_parsePacket+1)+0,w
  3590  024E  00FD               	movwf	(?_makeHexByte)
  3591  024F  082B               	movf	(parsePacket@dataPacket),w
  3592  0250  120A  158A  2768   	fcall	i1_strlen
              120A  118A         
  3593  0255  0870               	movf	(0+(?i1_strlen)),w
  3594  0256  3EFE               	addlw	0FEh
  3595  0257  1283               	bcf	status, 5	;RP0=0, select bank0
  3596  0258  1303               	bcf	status, 6	;RP1=0, select bank0
  3597  0259  072B               	addwf	(parsePacket@dataPacket),w
  3598  025A  00A6               	movwf	(??_parsePacket+2)+0
  3599  025B  0826               	movf	0+(??_parsePacket+2)+0,w
  3600  025C  0084               	movwf	fsr0
  3601  025D  1383               	bcf	status, 7	;select IRP bank0
  3602  025E  0800               	movf	indf,w
  3603  025F  120A  158A  2664   	fcall	_makeHexByte
              120A  118A         
  3604  0264  1283               	bcf	status, 5	;RP0=0, select bank0
  3605  0265  1303               	bcf	status, 6	;RP1=0, select bank0
  3606  0266  00A7               	movwf	(??_parsePacket+3)+0
  3607  0267  0827               	movf	(??_parsePacket+3)+0,w
  3608  0268  00FA               	movwf	(?i1_eeprom_write)
  3609  0269  3043               	movlw	(_csByteAddr-__stringbase)
  3610  026A  0084               	movwf	fsr0
  3611  026B  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3612  0270  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3613                           	line	133
  3614                           	
  3615  0275                     i1l10294:	
  3616                           ;Packet.c: 133: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  3617  0275  1283               	bcf	status, 5	;RP0=0, select bank0
  3618  0276  1303               	bcf	status, 6	;RP1=0, select bank0
  3619  0277  01AA               	clrf	(parsePacket@i)
  3620  0278  2AAF               	goto	i1l10302
  3621                           	
  3622  0279                     i1l1596:	
  3623                           	line	134
  3624                           	
  3625  0279                     i1l10296:	
  3626                           ;Packet.c: 134: eeprom_write(dataBytesAddr+i, makeHexByte(dataPacket[8 + dataCounter], d
                                 ataPacket[9 + dataCounter]));
  3627  0279  0828               	movf	(parsePacket@dataCounter),w
  3628  027A  3E09               	addlw	09h
  3629  027B  072B               	addwf	(parsePacket@dataPacket),w
  3630  027C  00A4               	movwf	(??_parsePacket+0)+0
  3631  027D  0824               	movf	0+(??_parsePacket+0)+0,w
  3632  027E  0084               	movwf	fsr0
  3633  027F  1383               	bcf	status, 7	;select IRP bank0
  3634  0280  0800               	movf	indf,w
  3635  0281  00A5               	movwf	(??_parsePacket+1)+0
  3636  0282  0825               	movf	(??_parsePacket+1)+0,w
  3637  0283  00FD               	movwf	(?_makeHexByte)
  3638  0284  0828               	movf	(parsePacket@dataCounter),w
  3639  0285  3E08               	addlw	08h
  3640  0286  072B               	addwf	(parsePacket@dataPacket),w
  3641  0287  00A6               	movwf	(??_parsePacket+2)+0
  3642  0288  0826               	movf	0+(??_parsePacket+2)+0,w
  3643  0289  0084               	movwf	fsr0
  3644  028A  0800               	movf	indf,w
  3645  028B  120A  158A  2664   	fcall	_makeHexByte
              120A  118A         
  3646  0290  1283               	bcf	status, 5	;RP0=0, select bank0
  3647  0291  1303               	bcf	status, 6	;RP1=0, select bank0
  3648  0292  00A7               	movwf	(??_parsePacket+3)+0
  3649  0293  0827               	movf	(??_parsePacket+3)+0,w
  3650  0294  00FA               	movwf	(?i1_eeprom_write)
  3651  0295  3044               	movlw	(_dataBytesAddr-__stringbase)
  3652  0296  0084               	movwf	fsr0
  3653  0297  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3654  029C  072A               	addwf	(parsePacket@i),w
  3655  029D  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3656                           	line	135
  3657                           	
  3658  02A2                     i1l10298:	
  3659                           ;Packet.c: 135: dataCounter += 2;
  3660  02A2  3002               	movlw	low(02h)
  3661  02A3  1283               	bcf	status, 5	;RP0=0, select bank0
  3662  02A4  1303               	bcf	status, 6	;RP1=0, select bank0
  3663  02A5  07A8               	addwf	(parsePacket@dataCounter),f
  3664  02A6  1803               	skipnc
  3665  02A7  0AA9               	incf	(parsePacket@dataCounter+1),f
  3666  02A8  3000               	movlw	high(02h)
  3667  02A9  07A9               	addwf	(parsePacket@dataCounter+1),f
  3668                           	line	133
  3669                           	
  3670  02AA                     i1l10300:	
  3671  02AA  3001               	movlw	(01h)
  3672  02AB  00A4               	movwf	(??_parsePacket+0)+0
  3673  02AC  0824               	movf	(??_parsePacket+0)+0,w
  3674  02AD  07AA               	addwf	(parsePacket@i),f
  3675  02AE  2AAF               	goto	i1l10302
  3676                           	
  3677  02AF                     i1l1595:	
  3678                           	
  3679  02AF                     i1l10302:	
  3680  02AF  304D               	movlw	(_lenByteAddr-__stringbase)
  3681  02B0  0084               	movwf	fsr0
  3682  02B1  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3683  02B6  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  3684  02BB  1283               	bcf	status, 5	;RP0=0, select bank0
  3685  02BC  1303               	bcf	status, 6	;RP1=0, select bank0
  3686  02BD  022A               	subwf	(parsePacket@i),w
  3687  02BE  1C03               	skipc
  3688  02BF  2AC1               	goto	u296_21
  3689  02C0  2AC2               	goto	u296_20
  3690  02C1                     u296_21:
  3691  02C1  2A79               	goto	i1l10296
  3692  02C2                     u296_20:
  3693  02C2  2AC4               	goto	i1l1598
  3694                           	
  3695  02C3                     i1l1597:	
  3696  02C3  2AC4               	goto	i1l1598
  3697                           	line	137
  3698                           	
  3699  02C4                     i1l1594:	
  3700                           	line	138
  3701                           	
  3702  02C4                     i1l1598:	
  3703  02C4  0008               	return
  3704                           	opt stack 0
  3705                           GLOBAL	__end_of_parsePacket
  3706  02C5                     	__end_of_parsePacket:
  3707 ;; =============== function _parsePacket ends ============
  3708                           
  3709                           	signat	_parsePacket,4216
  3710                           	global	i1_writeString
  3711                           psect	text769,local,class=CODE,delta=2
  3712                           global __ptext769
  3713  0F08                     __ptext769:
  3714                           
  3715 ;; *************** function i1_writeString *****************
  3716 ;; Defined at:
  3717 ;;		line 145 in file "Bluetooth.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  writeString     1    wreg     PTR unsigned char 
  3720 ;;		 -> readError(25), 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  writeString     1   11[COMMON] PTR unsigned char 
  3723 ;;		 -> readError(25), 
  3724 ;;  writeString     2   12[COMMON] unsigned int 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;		None               void
  3727 ;; Registers used:
  3728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3734 ;;      Params:         0       0       0       0       0
  3735 ;;      Locals:         3       0       0       0       0
  3736 ;;      Temps:          1       0       0       0       0
  3737 ;;      Totals:         4       0       0       0       0
  3738 ;;Total ram usage:        4 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    1
  3741 ;; This function calls:
  3742 ;;		i1_writeByte
  3743 ;;		i1_strlen
  3744 ;; This function is called by:
  3745 ;;		_readCommands
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           psect	text769
  3749                           	file	"Bluetooth.c"
  3750                           	line	145
  3751                           	global	__size_ofi1_writeString
  3752  002F                     	__size_ofi1_writeString	equ	__end_ofi1_writeString-i1_writeString
  3753                           	
  3754  0F08                     i1_writeString:	
  3755                           	opt	stack 1
  3756                           ; Regs used in i1_writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3757                           ;i1writeString@userString stored from wreg
  3758                           	line	149
  3759  0F08  00FB               	movwf	(i1writeString@userString)
  3760                           	
  3761  0F09                     i1l10474:	
  3762                           ;Bluetooth.c: 147: unsigned int i;
  3763                           ;Bluetooth.c: 149: for(i = 0;i<strlen(userString);i++){
  3764  0F09  01FC               	clrf	(i1writeString@i)
  3765  0F0A  01FD               	clrf	(i1writeString@i+1)
  3766  0F0B  2F1F               	goto	i1l10480
  3767                           	
  3768  0F0C                     i1l788:	
  3769                           	line	150
  3770                           	
  3771  0F0C                     i1l10476:	
  3772                           ;Bluetooth.c: 150: writeByte(userString[i]);
  3773  0F0C  087C               	movf	(i1writeString@i),w
  3774  0F0D  077B               	addwf	(i1writeString@userString),w
  3775  0F0E  00FA               	movwf	(??i1_writeString+0)+0
  3776  0F0F  087A               	movf	0+(??i1_writeString+0)+0,w
  3777  0F10  0084               	movwf	fsr0
  3778  0F11  1383               	bcf	status, 7	;select IRP bank0
  3779  0F12  0800               	movf	indf,w
  3780  0F13  120A  158A  25C8   	fcall	i1_writeByte
              120A  158A         
  3781                           	line	149
  3782                           	
  3783  0F18                     i1l10478:	
  3784  0F18  3001               	movlw	low(01h)
  3785  0F19  07FC               	addwf	(i1writeString@i),f
  3786  0F1A  1803               	skipnc
  3787  0F1B  0AFD               	incf	(i1writeString@i+1),f
  3788  0F1C  3000               	movlw	high(01h)
  3789  0F1D  07FD               	addwf	(i1writeString@i+1),f
  3790  0F1E  2F1F               	goto	i1l10480
  3791                           	
  3792  0F1F                     i1l787:	
  3793                           	
  3794  0F1F                     i1l10480:	
  3795  0F1F  087B               	movf	(i1writeString@userString),w
  3796  0F20  120A  158A  2768   	fcall	i1_strlen
              120A  158A         
  3797  0F25  0871               	movf	(1+(?i1_strlen)),w
  3798  0F26  027D               	subwf	(i1writeString@i+1),w
  3799  0F27  1D03               	skipz
  3800  0F28  2F2B               	goto	u315_25
  3801  0F29  0870               	movf	(0+(?i1_strlen)),w
  3802  0F2A  027C               	subwf	(i1writeString@i),w
  3803  0F2B                     u315_25:
  3804  0F2B  1C03               	skipc
  3805  0F2C  2F2E               	goto	u315_21
  3806  0F2D  2F2F               	goto	u315_20
  3807  0F2E                     u315_21:
  3808  0F2E  2F0C               	goto	i1l10476
  3809  0F2F                     u315_20:
  3810  0F2F  2F30               	goto	i1l10482
  3811                           	
  3812  0F30                     i1l789:	
  3813                           	line	153
  3814                           	
  3815  0F30                     i1l10482:	
  3816                           ;Bluetooth.c: 151: }
  3817                           ;Bluetooth.c: 153: writeByte((unsigned char)i);
  3818  0F30  087C               	movf	(i1writeString@i),w
  3819  0F31  120A  158A  25C8   	fcall	i1_writeByte
              120A  158A         
  3820                           	line	155
  3821                           	
  3822  0F36                     i1l790:	
  3823  0F36  0008               	return
  3824                           	opt stack 0
  3825                           GLOBAL	__end_ofi1_writeString
  3826  0F37                     	__end_ofi1_writeString:
  3827 ;; =============== function i1_writeString ends ============
  3828                           
  3829                           	signat	i1_writeString,88
  3830                           	global	_addDataToCheckSum
  3831                           psect	text770,local,class=CODE,delta=2
  3832                           global __ptext770
  3833  035F                     __ptext770:
  3834                           
  3835 ;; *************** function _addDataToCheckSum *****************
  3836 ;; Defined at:
  3837 ;;		line 258 in file "Packet.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  i               1   13[COMMON] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;		None               void
  3844 ;; Registers used:
  3845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3851 ;;      Params:         0       0       0       0       0
  3852 ;;      Locals:         1       0       0       0       0
  3853 ;;      Temps:          0       2       0       0       0
  3854 ;;      Totals:         1       2       0       0       0
  3855 ;;Total ram usage:        3 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    1
  3858 ;; This function calls:
  3859 ;;		_eeprom_read
  3860 ;;		i1_eeprom_write
  3861 ;; This function is called by:
  3862 ;;		_validatePacket
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           psect	text770
  3866                           	file	"Packet.c"
  3867                           	line	258
  3868                           	global	__size_of_addDataToCheckSum
  3869  0077                     	__size_of_addDataToCheckSum	equ	__end_of_addDataToCheckSum-_addDataToCheckSum
  3870                           	
  3871  035F                     _addDataToCheckSum:	
  3872                           	opt	stack 1
  3873                           ; Regs used in _addDataToCheckSum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3874                           	line	260
  3875                           	
  3876  035F                     i1l10386:	
  3877                           ;Packet.c: 260: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(lenB
                                 yteAddr));
  3878  035F  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3879  0360  0084               	movwf	fsr0
  3880  0361  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3881  0366  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  3882  036B  1283               	bcf	status, 5	;RP0=0, select bank0
  3883  036C  1303               	bcf	status, 6	;RP1=0, select bank0
  3884  036D  00A0               	movwf	(??_addDataToCheckSum+0)+0
  3885  036E  304D               	movlw	(_lenByteAddr-__stringbase)
  3886  036F  0084               	movwf	fsr0
  3887  0370  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3888  0375  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  3889  037A  1283               	bcf	status, 5	;RP0=0, select bank0
  3890  037B  1303               	bcf	status, 6	;RP1=0, select bank0
  3891  037C  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  3892  037D  00A1               	movwf	(??_addDataToCheckSum+1)+0
  3893  037E  0821               	movf	(??_addDataToCheckSum+1)+0,w
  3894  037F  00FA               	movwf	(?i1_eeprom_write)
  3895  0380  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3896  0381  0084               	movwf	fsr0
  3897  0382  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3898  0387  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3899                           	line	263
  3900                           	
  3901  038C                     i1l10388:	
  3902                           ;Packet.c: 263: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  3903  038C  01FD               	clrf	(addDataToCheckSum@i)
  3904  038D  2BC3               	goto	i1l10394
  3905                           	
  3906  038E                     i1l1625:	
  3907                           	line	265
  3908                           	
  3909  038E                     i1l10390:	
  3910                           ;Packet.c: 265: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(data
                                 BytesAddr+i));
  3911  038E  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3912  038F  0084               	movwf	fsr0
  3913  0390  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3914  0395  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  3915  039A  1283               	bcf	status, 5	;RP0=0, select bank0
  3916  039B  1303               	bcf	status, 6	;RP1=0, select bank0
  3917  039C  00A0               	movwf	(??_addDataToCheckSum+0)+0
  3918  039D  3044               	movlw	(_dataBytesAddr-__stringbase)
  3919  039E  0084               	movwf	fsr0
  3920  039F  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3921  03A4  077D               	addwf	(addDataToCheckSum@i),w
  3922  03A5  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  3923  03AA  1283               	bcf	status, 5	;RP0=0, select bank0
  3924  03AB  1303               	bcf	status, 6	;RP1=0, select bank0
  3925  03AC  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  3926  03AD  00A1               	movwf	(??_addDataToCheckSum+1)+0
  3927  03AE  0821               	movf	(??_addDataToCheckSum+1)+0,w
  3928  03AF  00FA               	movwf	(?i1_eeprom_write)
  3929  03B0  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3930  03B1  0084               	movwf	fsr0
  3931  03B2  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3932  03B7  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3933                           	line	263
  3934                           	
  3935  03BC                     i1l10392:	
  3936  03BC  3001               	movlw	(01h)
  3937  03BD  1283               	bcf	status, 5	;RP0=0, select bank0
  3938  03BE  1303               	bcf	status, 6	;RP1=0, select bank0
  3939  03BF  00A0               	movwf	(??_addDataToCheckSum+0)+0
  3940  03C0  0820               	movf	(??_addDataToCheckSum+0)+0,w
  3941  03C1  07FD               	addwf	(addDataToCheckSum@i),f
  3942  03C2  2BC3               	goto	i1l10394
  3943                           	
  3944  03C3                     i1l1624:	
  3945                           	
  3946  03C3                     i1l10394:	
  3947  03C3  304D               	movlw	(_lenByteAddr-__stringbase)
  3948  03C4  0084               	movwf	fsr0
  3949  03C5  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3950  03CA  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  3951  03CF  027D               	subwf	(addDataToCheckSum@i),w
  3952  03D0  1C03               	skipc
  3953  03D1  2BD3               	goto	u307_21
  3954  03D2  2BD4               	goto	u307_20
  3955  03D3                     u307_21:
  3956  03D3  2B8E               	goto	i1l10390
  3957  03D4                     u307_20:
  3958  03D4  2BD5               	goto	i1l1627
  3959                           	
  3960  03D5                     i1l1626:	
  3961                           	line	267
  3962                           	
  3963  03D5                     i1l1627:	
  3964  03D5  0008               	return
  3965                           	opt stack 0
  3966                           GLOBAL	__end_of_addDataToCheckSum
  3967  03D6                     	__end_of_addDataToCheckSum:
  3968 ;; =============== function _addDataToCheckSum ends ============
  3969                           
  3970                           	signat	_addDataToCheckSum,88
  3971                           	global	_checkCS
  3972                           psect	text771,local,class=CODE,delta=2
  3973                           global __ptext771
  3974  0FCC                     __ptext771:
  3975                           
  3976 ;; *************** function _checkCS *****************
  3977 ;; Defined at:
  3978 ;;		line 216 in file "Packet.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  2    2[COMMON] int 
  3985 ;; Registers used:
  3986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3992 ;;      Params:         2       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0
  3994 ;;      Temps:          1       0       0       0       0
  3995 ;;      Totals:         3       0       0       0       0
  3996 ;;Total ram usage:        3 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    1
  3999 ;; This function calls:
  4000 ;;		_eeprom_read
  4001 ;;		i1_writeByte
  4002 ;; This function is called by:
  4003 ;;		_validatePacket
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           psect	text771
  4007                           	file	"Packet.c"
  4008                           	line	216
  4009                           	global	__size_of_checkCS
  4010  0034                     	__size_of_checkCS	equ	__end_of_checkCS-_checkCS
  4011                           	
  4012  0FCC                     _checkCS:	
  4013                           	opt	stack 1
  4014                           ; Regs used in _checkCS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4015                           	line	218
  4016                           	
  4017  0FCC                     i1l10354:	
  4018                           ;Packet.c: 218: if(eeprom_read(csByteAddr) == eeprom_read(calcCSByteAddr)){
  4019  0FCC  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4020  0FCD  0084               	movwf	fsr0
  4021  0FCE  120A  118A  2500   	fcall	stringdir
              120A  158A         
  4022  0FD3  120A  158A  2623   	fcall	_eeprom_read
              120A  158A         
  4023  0FD8  00F4               	movwf	(??_checkCS+0)+0
  4024  0FD9  3043               	movlw	(_csByteAddr-__stringbase)
  4025  0FDA  0084               	movwf	fsr0
  4026  0FDB  120A  118A  2500   	fcall	stringdir
              120A  158A         
  4027  0FE0  120A  158A  2623   	fcall	_eeprom_read
              120A  158A         
  4028  0FE5  0674               	xorwf	0+(??_checkCS+0)+0,w
  4029  0FE6  1D03               	skipz
  4030  0FE7  2FE9               	goto	u301_21
  4031  0FE8  2FEA               	goto	u301_20
  4032  0FE9                     u301_21:
  4033  0FE9  2FF6               	goto	i1l10362
  4034  0FEA                     u301_20:
  4035                           	line	220
  4036                           	
  4037  0FEA                     i1l10356:	
  4038                           ;Packet.c: 220: writeByte('Y');
  4039  0FEA  3059               	movlw	(059h)
  4040  0FEB  120A  158A  25C8   	fcall	i1_writeByte
              120A  158A         
  4041                           	line	221
  4042                           	
  4043  0FF0                     i1l10358:	
  4044                           ;Packet.c: 221: return 1;
  4045  0FF0  3001               	movlw	low(01h)
  4046  0FF1  00F2               	movwf	(?_checkCS)
  4047  0FF2  3000               	movlw	high(01h)
  4048  0FF3  00F3               	movwf	((?_checkCS))+1
  4049  0FF4  2FFF               	goto	i1l1616
  4050                           	
  4051  0FF5                     i1l10360:	
  4052  0FF5  2FFF               	goto	i1l1616
  4053                           	line	222
  4054                           	
  4055  0FF6                     i1l1615:	
  4056                           	line	224
  4057                           	
  4058  0FF6                     i1l10362:	
  4059                           ;Packet.c: 222: }
  4060                           ;Packet.c: 224: writeByte('N');
  4061  0FF6  304E               	movlw	(04Eh)
  4062  0FF7  120A  158A  25C8   	fcall	i1_writeByte
              120A  158A         
  4063                           	line	225
  4064                           	
  4065  0FFC                     i1l10364:	
  4066                           ;Packet.c: 225: return 0;
  4067  0FFC  01F2               	clrf	(?_checkCS)
  4068  0FFD  01F3               	clrf	(?_checkCS+1)
  4069  0FFE  2FFF               	goto	i1l1616
  4070                           	
  4071  0FFF                     i1l10366:	
  4072                           	line	226
  4073                           	
  4074  0FFF                     i1l1616:	
  4075  0FFF  0008               	return
  4076                           	opt stack 0
  4077                           GLOBAL	__end_of_checkCS
  4078  1000                     	__end_of_checkCS:
  4079 ;; =============== function _checkCS ends ============
  4080                           
  4081                           	signat	_checkCS,90
  4082                           	global	_checkCMDByte
  4083                           psect	text772,local,class=CODE,delta=2
  4084                           global __ptext772
  4085  03D6                     __ptext772:
  4086                           
  4087 ;; *************** function _checkCMDByte *****************
  4088 ;; Defined at:
  4089 ;;		line 193 in file "Packet.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  2    0[BANK0 ] int 
  4096 ;; Registers used:
  4097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4103 ;;      Params:         0       2       0       0       0
  4104 ;;      Locals:         0       0       0       0       0
  4105 ;;      Temps:          0       2       0       0       0
  4106 ;;      Totals:         0       4       0       0       0
  4107 ;;Total ram usage:        4 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:    1
  4110 ;; This function calls:
  4111 ;;		_eeprom_read
  4112 ;;		i1_eeprom_write
  4113 ;;		i1_writeByte
  4114 ;; This function is called by:
  4115 ;;		_validatePacket
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           psect	text772
  4119                           	file	"Packet.c"
  4120                           	line	193
  4121                           	global	__size_of_checkCMDByte
  4122  0070                     	__size_of_checkCMDByte	equ	__end_of_checkCMDByte-_checkCMDByte
  4123                           	
  4124  03D6                     _checkCMDByte:	
  4125                           	opt	stack 1
  4126                           ; Regs used in _checkCMDByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4127                           	line	195
  4128                           	
  4129  03D6                     i1l10338:	
  4130                           ;Packet.c: 195: if(eeprom_read(cmdByteAddr) >= 0 && eeprom_read(cmdByteAddr) <= maxCmd){
  4131  03D6  3042               	movlw	(_cmdByteAddr-__stringbase)
  4132  03D7  0084               	movwf	fsr0
  4133  03D8  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4134  03DD  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4135  03E2  3042               	movlw	(_cmdByteAddr-__stringbase)
  4136  03E3  0084               	movwf	fsr0
  4137  03E4  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4138  03E9  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4139  03EE  1283               	bcf	status, 5	;RP0=0, select bank0
  4140  03EF  1303               	bcf	status, 6	;RP1=0, select bank0
  4141  03F0  00A2               	movwf	(??_checkCMDByte+0)+0
  4142  03F1  304E               	movlw	(_maxCmd-__stringbase)
  4143  03F2  0084               	movwf	fsr0
  4144  03F3  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4145  03F8  00A3               	movwf	(??_checkCMDByte+1)+0
  4146  03F9  0822               	movf	0+(??_checkCMDByte+0)+0,w
  4147  03FA  0223               	subwf	(??_checkCMDByte+1)+0,w
  4148  03FB  1C03               	skipc
  4149  03FC  2BFE               	goto	u300_21
  4150  03FD  2BFF               	goto	u300_20
  4151  03FE                     u300_21:
  4152  03FE  2C3A               	goto	i1l10348
  4153  03FF                     u300_20:
  4154                           	line	197
  4155                           	
  4156  03FF                     i1l10340:	
  4157                           ;Packet.c: 197: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(cmdB
                                 yteAddr));
  4158  03FF  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4159  0400  0084               	movwf	fsr0
  4160  0401  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4161  0406  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4162  040B  1283               	bcf	status, 5	;RP0=0, select bank0
  4163  040C  1303               	bcf	status, 6	;RP1=0, select bank0
  4164  040D  00A2               	movwf	(??_checkCMDByte+0)+0
  4165  040E  3042               	movlw	(_cmdByteAddr-__stringbase)
  4166  040F  0084               	movwf	fsr0
  4167  0410  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4168  0415  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4169  041A  1283               	bcf	status, 5	;RP0=0, select bank0
  4170  041B  1303               	bcf	status, 6	;RP1=0, select bank0
  4171  041C  0722               	addwf	0+(??_checkCMDByte+0)+0,w
  4172  041D  00A3               	movwf	(??_checkCMDByte+1)+0
  4173  041E  0823               	movf	(??_checkCMDByte+1)+0,w
  4174  041F  00FA               	movwf	(?i1_eeprom_write)
  4175  0420  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4176  0421  0084               	movwf	fsr0
  4177  0422  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4178  0427  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  4179                           	line	199
  4180                           	
  4181  042C                     i1l10342:	
  4182                           ;Packet.c: 199: writeByte('C');
  4183  042C  3043               	movlw	(043h)
  4184  042D  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  4185                           	line	200
  4186                           	
  4187  0432                     i1l10344:	
  4188                           ;Packet.c: 200: return 1;
  4189  0432  3001               	movlw	low(01h)
  4190  0433  1283               	bcf	status, 5	;RP0=0, select bank0
  4191  0434  1303               	bcf	status, 6	;RP1=0, select bank0
  4192  0435  00A0               	movwf	(?_checkCMDByte)
  4193  0436  3000               	movlw	high(01h)
  4194  0437  00A1               	movwf	((?_checkCMDByte))+1
  4195  0438  2C45               	goto	i1l1612
  4196                           	
  4197  0439                     i1l10346:	
  4198  0439  2C45               	goto	i1l1612
  4199                           	line	201
  4200                           	
  4201  043A                     i1l1611:	
  4202                           	line	203
  4203                           	
  4204  043A                     i1l10348:	
  4205                           ;Packet.c: 201: }
  4206                           ;Packet.c: 203: writeByte('N');
  4207  043A  304E               	movlw	(04Eh)
  4208  043B  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  4209                           	line	204
  4210                           	
  4211  0440                     i1l10350:	
  4212                           ;Packet.c: 204: return 0;
  4213  0440  1283               	bcf	status, 5	;RP0=0, select bank0
  4214  0441  1303               	bcf	status, 6	;RP1=0, select bank0
  4215  0442  01A0               	clrf	(?_checkCMDByte)
  4216  0443  01A1               	clrf	(?_checkCMDByte+1)
  4217  0444  2C45               	goto	i1l1612
  4218                           	
  4219  0445                     i1l10352:	
  4220                           	line	205
  4221                           	
  4222  0445                     i1l1612:	
  4223  0445  0008               	return
  4224                           	opt stack 0
  4225                           GLOBAL	__end_of_checkCMDByte
  4226  0446                     	__end_of_checkCMDByte:
  4227 ;; =============== function _checkCMDByte ends ============
  4228                           
  4229                           	signat	_checkCMDByte,90
  4230                           	global	_checkRWByte
  4231                           psect	text773,local,class=CODE,delta=2
  4232                           global __ptext773
  4233  0446                     __ptext773:
  4234                           
  4235 ;; *************** function _checkRWByte *****************
  4236 ;; Defined at:
  4237 ;;		line 171 in file "Packet.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  2    0[BANK0 ] int 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4251 ;;      Params:         0       2       0       0       0
  4252 ;;      Locals:         0       0       0       0       0
  4253 ;;      Temps:          0       2       0       0       0
  4254 ;;      Totals:         0       4       0       0       0
  4255 ;;Total ram usage:        4 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    1
  4258 ;; This function calls:
  4259 ;;		_eeprom_read
  4260 ;;		i1_writeByte
  4261 ;;		i1_eeprom_write
  4262 ;; This function is called by:
  4263 ;;		_validatePacket
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           psect	text773
  4267                           	file	"Packet.c"
  4268                           	line	171
  4269                           	global	__size_of_checkRWByte
  4270  006A                     	__size_of_checkRWByte	equ	__end_of_checkRWByte-_checkRWByte
  4271                           	
  4272  0446                     _checkRWByte:	
  4273                           	opt	stack 1
  4274                           ; Regs used in _checkRWByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4275                           	line	174
  4276                           	
  4277  0446                     i1l10320:	
  4278                           ;Packet.c: 174: if(eeprom_read(rwByteAddr) == 0 || eeprom_read(rwByteAddr) == 1){
  4279  0446  3053               	movlw	(_rwByteAddr-__stringbase)
  4280  0447  0084               	movwf	fsr0
  4281  0448  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4282  044D  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4283  0452  3A00               	xorlw	0
  4284  0453  1903               	skipnz
  4285  0454  2C56               	goto	u298_21
  4286  0455  2C57               	goto	u298_20
  4287  0456                     u298_21:
  4288  0456  2C69               	goto	i1l10324
  4289  0457                     u298_20:
  4290                           	
  4291  0457                     i1l10322:	
  4292  0457  3053               	movlw	(_rwByteAddr-__stringbase)
  4293  0458  0084               	movwf	fsr0
  4294  0459  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4295  045E  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4296  0463  3A01               	xorlw	01h
  4297  0464  1D03               	skipz
  4298  0465  2C67               	goto	u299_21
  4299  0466  2C68               	goto	u299_20
  4300  0467                     u299_21:
  4301  0467  2CA4               	goto	i1l10332
  4302  0468                     u299_20:
  4303  0468  2C69               	goto	i1l10324
  4304                           	
  4305  0469                     i1l1607:	
  4306                           	line	176
  4307                           	
  4308  0469                     i1l10324:	
  4309                           ;Packet.c: 176: writeByte('R');
  4310  0469  3052               	movlw	(052h)
  4311  046A  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  4312                           	line	178
  4313                           	
  4314  046F                     i1l10326:	
  4315                           ;Packet.c: 178: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(rwBy
                                 teAddr));
  4316  046F  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4317  0470  0084               	movwf	fsr0
  4318  0471  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4319  0476  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4320  047B  1283               	bcf	status, 5	;RP0=0, select bank0
  4321  047C  1303               	bcf	status, 6	;RP1=0, select bank0
  4322  047D  00A2               	movwf	(??_checkRWByte+0)+0
  4323  047E  3053               	movlw	(_rwByteAddr-__stringbase)
  4324  047F  0084               	movwf	fsr0
  4325  0480  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4326  0485  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4327  048A  1283               	bcf	status, 5	;RP0=0, select bank0
  4328  048B  1303               	bcf	status, 6	;RP1=0, select bank0
  4329  048C  0722               	addwf	0+(??_checkRWByte+0)+0,w
  4330  048D  00A3               	movwf	(??_checkRWByte+1)+0
  4331  048E  0823               	movf	(??_checkRWByte+1)+0,w
  4332  048F  00FA               	movwf	(?i1_eeprom_write)
  4333  0490  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4334  0491  0084               	movwf	fsr0
  4335  0492  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4336  0497  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  4337                           	line	179
  4338                           	
  4339  049C                     i1l10328:	
  4340                           ;Packet.c: 179: return 1;
  4341  049C  3001               	movlw	low(01h)
  4342  049D  1283               	bcf	status, 5	;RP0=0, select bank0
  4343  049E  1303               	bcf	status, 6	;RP1=0, select bank0
  4344  049F  00A0               	movwf	(?_checkRWByte)
  4345  04A0  3000               	movlw	high(01h)
  4346  04A1  00A1               	movwf	((?_checkRWByte))+1
  4347  04A2  2CAF               	goto	i1l1608
  4348                           	
  4349  04A3                     i1l10330:	
  4350  04A3  2CAF               	goto	i1l1608
  4351                           	line	180
  4352                           	
  4353  04A4                     i1l1605:	
  4354                           	line	182
  4355                           	
  4356  04A4                     i1l10332:	
  4357                           ;Packet.c: 180: }
  4358                           ;Packet.c: 182: writeByte('N');
  4359  04A4  304E               	movlw	(04Eh)
  4360  04A5  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  4361                           	line	183
  4362                           	
  4363  04AA                     i1l10334:	
  4364                           ;Packet.c: 183: return 0;
  4365  04AA  1283               	bcf	status, 5	;RP0=0, select bank0
  4366  04AB  1303               	bcf	status, 6	;RP1=0, select bank0
  4367  04AC  01A0               	clrf	(?_checkRWByte)
  4368  04AD  01A1               	clrf	(?_checkRWByte+1)
  4369  04AE  2CAF               	goto	i1l1608
  4370                           	
  4371  04AF                     i1l10336:	
  4372                           	line	184
  4373                           	
  4374  04AF                     i1l1608:	
  4375  04AF  0008               	return
  4376                           	opt stack 0
  4377                           GLOBAL	__end_of_checkRWByte
  4378  04B0                     	__end_of_checkRWByte:
  4379 ;; =============== function _checkRWByte ends ============
  4380                           
  4381                           	signat	_checkRWByte,90
  4382                           	global	_checkStartByte
  4383                           psect	text774,local,class=CODE,delta=2
  4384                           global __ptext774
  4385  05CE                     __ptext774:
  4386                           
  4387 ;; *************** function _checkStartByte *****************
  4388 ;; Defined at:
  4389 ;;		line 148 in file "Packet.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;		None
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;		None
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  2    0[BANK0 ] int 
  4396 ;; Registers used:
  4397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4403 ;;      Params:         0       2       0       0       0
  4404 ;;      Locals:         0       0       0       0       0
  4405 ;;      Temps:          0       2       0       0       0
  4406 ;;      Totals:         0       4       0       0       0
  4407 ;;Total ram usage:        4 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    1
  4410 ;; This function calls:
  4411 ;;		_eeprom_read
  4412 ;;		i1_writeByte
  4413 ;;		i1_eeprom_write
  4414 ;; This function is called by:
  4415 ;;		_validatePacket
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           psect	text774
  4419                           	file	"Packet.c"
  4420                           	line	148
  4421                           	global	__size_of_checkStartByte
  4422  0064                     	__size_of_checkStartByte	equ	__end_of_checkStartByte-_checkStartByte
  4423                           	
  4424  05CE                     _checkStartByte:	
  4425                           	opt	stack 1
  4426                           ; Regs used in _checkStartByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4427                           	line	151
  4428                           	
  4429  05CE                     i1l10304:	
  4430                           ;Packet.c: 151: if (eeprom_read(startByteAddr) == userStartByte) {
  4431  05CE  3060               	movlw	(_userStartByte-__stringbase)
  4432  05CF  0084               	movwf	fsr0
  4433  05D0  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4434  05D5  1283               	bcf	status, 5	;RP0=0, select bank0
  4435  05D6  1303               	bcf	status, 6	;RP1=0, select bank0
  4436  05D7  00A2               	movwf	(??_checkStartByte+0)+0
  4437  05D8  3054               	movlw	(_startByteAddr-__stringbase)
  4438  05D9  0084               	movwf	fsr0
  4439  05DA  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4440  05DF  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4441  05E4  1283               	bcf	status, 5	;RP0=0, select bank0
  4442  05E5  1303               	bcf	status, 6	;RP1=0, select bank0
  4443  05E6  0622               	xorwf	(??_checkStartByte+0)+0,w
  4444  05E7  1D03               	skipz
  4445  05E8  2DEA               	goto	u297_21
  4446  05E9  2DEB               	goto	u297_20
  4447  05EA                     u297_21:
  4448  05EA  2E26               	goto	i1l10314
  4449  05EB                     u297_20:
  4450                           	line	153
  4451                           	
  4452  05EB                     i1l10306:	
  4453                           ;Packet.c: 153: writeByte('S');
  4454  05EB  3053               	movlw	(053h)
  4455  05EC  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  4456                           	line	155
  4457                           	
  4458  05F1                     i1l10308:	
  4459                           ;Packet.c: 155: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(star
                                 tByteAddr));
  4460  05F1  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4461  05F2  0084               	movwf	fsr0
  4462  05F3  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4463  05F8  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4464  05FD  1283               	bcf	status, 5	;RP0=0, select bank0
  4465  05FE  1303               	bcf	status, 6	;RP1=0, select bank0
  4466  05FF  00A2               	movwf	(??_checkStartByte+0)+0
  4467  0600  3054               	movlw	(_startByteAddr-__stringbase)
  4468  0601  0084               	movwf	fsr0
  4469  0602  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4470  0607  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4471  060C  1283               	bcf	status, 5	;RP0=0, select bank0
  4472  060D  1303               	bcf	status, 6	;RP1=0, select bank0
  4473  060E  0722               	addwf	0+(??_checkStartByte+0)+0,w
  4474  060F  00A3               	movwf	(??_checkStartByte+1)+0
  4475  0610  0823               	movf	(??_checkStartByte+1)+0,w
  4476  0611  00FA               	movwf	(?i1_eeprom_write)
  4477  0612  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4478  0613  0084               	movwf	fsr0
  4479  0614  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4480  0619  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  4481                           	line	156
  4482                           	
  4483  061E                     i1l10310:	
  4484                           ;Packet.c: 156: return 1;
  4485  061E  3001               	movlw	low(01h)
  4486  061F  1283               	bcf	status, 5	;RP0=0, select bank0
  4487  0620  1303               	bcf	status, 6	;RP1=0, select bank0
  4488  0621  00A0               	movwf	(?_checkStartByte)
  4489  0622  3000               	movlw	high(01h)
  4490  0623  00A1               	movwf	((?_checkStartByte))+1
  4491  0624  2E31               	goto	i1l1602
  4492                           	
  4493  0625                     i1l10312:	
  4494  0625  2E31               	goto	i1l1602
  4495                           	line	157
  4496                           	
  4497  0626                     i1l1601:	
  4498                           	line	159
  4499                           	
  4500  0626                     i1l10314:	
  4501                           ;Packet.c: 157: }
  4502                           ;Packet.c: 159: writeByte('N');
  4503  0626  304E               	movlw	(04Eh)
  4504  0627  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  4505                           	line	160
  4506                           	
  4507  062C                     i1l10316:	
  4508                           ;Packet.c: 160: return 0;
  4509  062C  1283               	bcf	status, 5	;RP0=0, select bank0
  4510  062D  1303               	bcf	status, 6	;RP1=0, select bank0
  4511  062E  01A0               	clrf	(?_checkStartByte)
  4512  062F  01A1               	clrf	(?_checkStartByte+1)
  4513  0630  2E31               	goto	i1l1602
  4514                           	
  4515  0631                     i1l10318:	
  4516                           	line	161
  4517                           	
  4518  0631                     i1l1602:	
  4519  0631  0008               	return
  4520                           	opt stack 0
  4521                           GLOBAL	__end_of_checkStartByte
  4522  0632                     	__end_of_checkStartByte:
  4523 ;; =============== function _checkStartByte ends ============
  4524                           
  4525                           	signat	_checkStartByte,90
  4526                           	global	_checkDataFrames
  4527                           psect	text775,local,class=CODE,delta=2
  4528                           global __ptext775
  4529  02C5                     __ptext775:
  4530                           
  4531 ;; *************** function _checkDataFrames *****************
  4532 ;; Defined at:
  4533 ;;		line 85 in file "Packet.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;		None
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;		None
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  2    2[COMMON] int 
  4540 ;; Registers used:
  4541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4547 ;;      Params:         2       0       0       0       0
  4548 ;;      Locals:         0       0       0       0       0
  4549 ;;      Temps:          6       0       0       0       0
  4550 ;;      Totals:         8       0       0       0       0
  4551 ;;Total ram usage:        8 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    1
  4554 ;; This function calls:
  4555 ;;		_eeprom_read
  4556 ;;		i1_writeByte
  4557 ;; This function is called by:
  4558 ;;		_validatePacket
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           psect	text775
  4562                           	file	"Packet.c"
  4563                           	line	85
  4564                           	global	__size_of_checkDataFrames
  4565  009A                     	__size_of_checkDataFrames	equ	__end_of_checkDataFrames-_checkDataFrames
  4566                           	
  4567  02C5                     _checkDataFrames:	
  4568                           	opt	stack 1
  4569                           ; Regs used in _checkDataFrames: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4570                           	line	87
  4571                           	
  4572  02C5                     i1l10260:	
  4573                           ;Packet.c: 87: if(eeprom_read(lenByteAddr) == 0 && (eeprom_read(RXLenAddr)-noDataLen) ==
                                  0){
  4574  02C5  304D               	movlw	(_lenByteAddr-__stringbase)
  4575  02C6  0084               	movwf	fsr0
  4576  02C7  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4577  02CC  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4578  02D1  3800               	iorlw	0
  4579  02D2  1D03               	skipz
  4580  02D3  2AD5               	goto	u290_21
  4581  02D4  2AD6               	goto	u290_20
  4582  02D5                     u290_21:
  4583  02D5  2B09               	goto	i1l10272
  4584  02D6                     u290_20:
  4585                           	
  4586  02D6                     i1l10262:	
  4587  02D6  3051               	movlw	(_noDataLen-__stringbase)
  4588  02D7  0084               	movwf	fsr0
  4589  02D8  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4590  02DD  00F4               	movwf	(??_checkDataFrames+0)+0
  4591  02DE  01F5               	clrf	(??_checkDataFrames+0)+0+1
  4592  02DF  09F4               	comf	(??_checkDataFrames+0)+0,f
  4593  02E0  09F5               	comf	(??_checkDataFrames+0)+1,f
  4594  02E1  0AF4               	incf	(??_checkDataFrames+0)+0,f
  4595  02E2  1903               	skipnz
  4596  02E3  0AF5               	incf	(??_checkDataFrames+0)+1,f
  4597  02E4  3040               	movlw	(_RXLenAddr-__stringbase)
  4598  02E5  0084               	movwf	fsr0
  4599  02E6  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4600  02EB  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4601  02F0  0774               	addwf	0+(??_checkDataFrames+0)+0,w
  4602  02F1  00F6               	movwf	(??_checkDataFrames+2)+0
  4603  02F2  0875               	movf	1+(??_checkDataFrames+0)+0,w
  4604  02F3  1803               	skipnc
  4605  02F4  0A75               	incf	1+(??_checkDataFrames+0)+0,w
  4606  02F5  00F7               	movwf	((??_checkDataFrames+2)+0)+1
  4607  02F6  0877               	movf	1+(??_checkDataFrames+2)+0,w
  4608  02F7  0476               	iorwf	0+(??_checkDataFrames+2)+0,w
  4609  02F8  1D03               	skipz
  4610  02F9  2AFB               	goto	u291_21
  4611  02FA  2AFC               	goto	u291_20
  4612  02FB                     u291_21:
  4613  02FB  2B09               	goto	i1l10272
  4614  02FC                     u291_20:
  4615                           	line	89
  4616                           	
  4617  02FC                     i1l10264:	
  4618                           ;Packet.c: 89: writeByte('D');
  4619  02FC  3044               	movlw	(044h)
  4620  02FD  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  4621                           	line	90
  4622                           	
  4623  0302                     i1l10266:	
  4624                           ;Packet.c: 90: return 1;
  4625  0302  3001               	movlw	low(01h)
  4626  0303  00F2               	movwf	(?_checkDataFrames)
  4627  0304  3000               	movlw	high(01h)
  4628  0305  00F3               	movwf	((?_checkDataFrames))+1
  4629  0306  2B5E               	goto	i1l1589
  4630                           	
  4631  0307                     i1l10268:	
  4632  0307  2B5E               	goto	i1l1589
  4633                           	line	94
  4634                           	
  4635  0308                     i1l10270:	
  4636                           ;Packet.c: 94: }else if((eeprom_read(RXLenAddr) - noDataLen) == (eeprom_read(lenByteAddr
                                 )*2)){
  4637  0308  2B55               	goto	i1l10280
  4638                           	
  4639  0309                     i1l1588:	
  4640                           	
  4641  0309                     i1l10272:	
  4642  0309  304D               	movlw	(_lenByteAddr-__stringbase)
  4643  030A  0084               	movwf	fsr0
  4644  030B  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4645  0310  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4646  0315  00F4               	movwf	(??_checkDataFrames+0)+0
  4647  0316  01F5               	clrf	(??_checkDataFrames+0)+0+1
  4648  0317  3001               	movlw	01h
  4649  0318  00FF               	movwf	btemp+1
  4650  0319                     u292_25:
  4651  0319  1003               	clrc
  4652  031A  0DF4               	rlf	(??_checkDataFrames+0)+0,f
  4653  031B  0DF5               	rlf	(??_checkDataFrames+0)+1,f
  4654  031C  0BFF               	decfsz	btemp+1,f
  4655  031D  2B19               	goto	u292_25
  4656  031E  3051               	movlw	(_noDataLen-__stringbase)
  4657  031F  0084               	movwf	fsr0
  4658  0320  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4659  0325  00F6               	movwf	(??_checkDataFrames+2)+0
  4660  0326  01F7               	clrf	(??_checkDataFrames+2)+0+1
  4661  0327  09F6               	comf	(??_checkDataFrames+2)+0,f
  4662  0328  09F7               	comf	(??_checkDataFrames+2)+1,f
  4663  0329  0AF6               	incf	(??_checkDataFrames+2)+0,f
  4664  032A  1903               	skipnz
  4665  032B  0AF7               	incf	(??_checkDataFrames+2)+1,f
  4666  032C  3040               	movlw	(_RXLenAddr-__stringbase)
  4667  032D  0084               	movwf	fsr0
  4668  032E  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4669  0333  120A  158A  2623   	fcall	_eeprom_read
              120A  118A         
  4670  0338  0776               	addwf	0+(??_checkDataFrames+2)+0,w
  4671  0339  00F8               	movwf	(??_checkDataFrames+4)+0
  4672  033A  0877               	movf	1+(??_checkDataFrames+2)+0,w
  4673  033B  1803               	skipnc
  4674  033C  0A77               	incf	1+(??_checkDataFrames+2)+0,w
  4675  033D  00F9               	movwf	((??_checkDataFrames+4)+0)+1
  4676  033E  0875               	movf	1+(??_checkDataFrames+0)+0,w
  4677  033F  0679               	xorwf	1+(??_checkDataFrames+4)+0,w
  4678  0340  1D03               	skipz
  4679  0341  2B44               	goto	u293_25
  4680  0342  0874               	movf	0+(??_checkDataFrames+0)+0,w
  4681  0343  0678               	xorwf	0+(??_checkDataFrames+4)+0,w
  4682  0344                     u293_25:
  4683                           
  4684  0344  1D03               	skipz
  4685  0345  2B47               	goto	u293_21
  4686  0346  2B48               	goto	u293_20
  4687  0347                     u293_21:
  4688  0347  2B55               	goto	i1l10280
  4689  0348                     u293_20:
  4690                           	line	96
  4691                           	
  4692  0348                     i1l10274:	
  4693                           ;Packet.c: 96: writeByte('D');
  4694  0348  3044               	movlw	(044h)
  4695  0349  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  4696                           	line	97
  4697                           	
  4698  034E                     i1l10276:	
  4699                           ;Packet.c: 97: return 1;
  4700  034E  3001               	movlw	low(01h)
  4701  034F  00F2               	movwf	(?_checkDataFrames)
  4702  0350  3000               	movlw	high(01h)
  4703  0351  00F3               	movwf	((?_checkDataFrames))+1
  4704  0352  2B5E               	goto	i1l1589
  4705                           	
  4706  0353                     i1l10278:	
  4707  0353  2B5E               	goto	i1l1589
  4708                           	line	98
  4709                           	
  4710  0354                     i1l1591:	
  4711  0354  2B55               	goto	i1l10280
  4712                           	line	101
  4713                           	
  4714  0355                     i1l1590:	
  4715                           	
  4716  0355                     i1l10280:	
  4717                           ;Packet.c: 98: }
  4718                           ;Packet.c: 101: writeByte('N');
  4719  0355  304E               	movlw	(04Eh)
  4720  0356  120A  158A  25C8   	fcall	i1_writeByte
              120A  118A         
  4721                           	line	102
  4722                           	
  4723  035B                     i1l10282:	
  4724                           ;Packet.c: 102: return 0;
  4725  035B  01F2               	clrf	(?_checkDataFrames)
  4726  035C  01F3               	clrf	(?_checkDataFrames+1)
  4727  035D  2B5E               	goto	i1l1589
  4728                           	
  4729  035E                     i1l10284:	
  4730                           	line	103
  4731                           	
  4732  035E                     i1l1589:	
  4733  035E  0008               	return
  4734                           	opt stack 0
  4735                           GLOBAL	__end_of_checkDataFrames
  4736  035F                     	__end_of_checkDataFrames:
  4737 ;; =============== function _checkDataFrames ends ============
  4738                           
  4739                           	signat	_checkDataFrames,90
  4740                           	global	_checkLength
  4741                           psect	text776,local,class=CODE,delta=2
  4742                           global __ptext776
  4743  0ED9                     __ptext776:
  4744                           
  4745 ;; *************** function _checkLength *****************
  4746 ;; Defined at:
  4747 ;;		line 64 in file "Packet.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  2    2[COMMON] int 
  4754 ;; Registers used:
  4755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4761 ;;      Params:         2       0       0       0       0
  4762 ;;      Locals:         0       0       0       0       0
  4763 ;;      Temps:          1       0       0       0       0
  4764 ;;      Totals:         3       0       0       0       0
  4765 ;;Total ram usage:        3 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    1
  4768 ;; This function calls:
  4769 ;;		_eeprom_read
  4770 ;;		i1_writeByte
  4771 ;; This function is called by:
  4772 ;;		_parsePacket
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           psect	text776
  4776                           	file	"Packet.c"
  4777                           	line	64
  4778                           	global	__size_of_checkLength
  4779  002F                     	__size_of_checkLength	equ	__end_of_checkLength-_checkLength
  4780                           	
  4781  0ED9                     _checkLength:	
  4782                           	opt	stack 1
  4783                           ; Regs used in _checkLength: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4784                           	line	67
  4785                           	
  4786  0ED9                     i1l10246:	
  4787                           ;Packet.c: 67: if (eeprom_read(RXLenAddr) >= minSizeByte) {
  4788  0ED9  3040               	movlw	(_RXLenAddr-__stringbase)
  4789  0EDA  0084               	movwf	fsr0
  4790  0EDB  120A  118A  2500   	fcall	stringdir
              120A  158A         
  4791  0EE0  120A  158A  2623   	fcall	_eeprom_read
              120A  158A         
  4792  0EE5  00F4               	movwf	(??_checkLength+0)+0
  4793  0EE6  304F               	movlw	(_minSizeByte-__stringbase)
  4794  0EE7  0084               	movwf	fsr0
  4795  0EE8  120A  118A  2500   	fcall	stringdir
              120A  158A         
  4796  0EED  0274               	subwf	0+(??_checkLength+0)+0,w
  4797  0EEE  1C03               	skipc
  4798  0EEF  2EF1               	goto	u289_21
  4799  0EF0  2EF2               	goto	u289_20
  4800  0EF1                     u289_21:
  4801  0EF1  2EFE               	goto	i1l10254
  4802  0EF2                     u289_20:
  4803                           	line	69
  4804                           	
  4805  0EF2                     i1l10248:	
  4806                           ;Packet.c: 69: writeByte('L');
  4807  0EF2  304C               	movlw	(04Ch)
  4808  0EF3  120A  158A  25C8   	fcall	i1_writeByte
              120A  158A         
  4809                           	line	70
  4810                           	
  4811  0EF8                     i1l10250:	
  4812                           ;Packet.c: 70: return 1;
  4813  0EF8  3001               	movlw	low(01h)
  4814  0EF9  00F2               	movwf	(?_checkLength)
  4815  0EFA  3000               	movlw	high(01h)
  4816  0EFB  00F3               	movwf	((?_checkLength))+1
  4817  0EFC  2F07               	goto	i1l1585
  4818                           	
  4819  0EFD                     i1l10252:	
  4820  0EFD  2F07               	goto	i1l1585
  4821                           	line	71
  4822                           	
  4823  0EFE                     i1l1584:	
  4824                           	line	73
  4825                           	
  4826  0EFE                     i1l10254:	
  4827                           ;Packet.c: 71: }
  4828                           ;Packet.c: 73: writeByte('N');
  4829  0EFE  304E               	movlw	(04Eh)
  4830  0EFF  120A  158A  25C8   	fcall	i1_writeByte
              120A  158A         
  4831                           	line	74
  4832                           	
  4833  0F04                     i1l10256:	
  4834                           ;Packet.c: 74: return 0;
  4835  0F04  01F2               	clrf	(?_checkLength)
  4836  0F05  01F3               	clrf	(?_checkLength+1)
  4837  0F06  2F07               	goto	i1l1585
  4838                           	
  4839  0F07                     i1l10258:	
  4840                           	line	75
  4841                           	
  4842  0F07                     i1l1585:	
  4843  0F07  0008               	return
  4844                           	opt stack 0
  4845                           GLOBAL	__end_of_checkLength
  4846  0F08                     	__end_of_checkLength:
  4847 ;; =============== function _checkLength ends ============
  4848                           
  4849                           	signat	_checkLength,90
  4850                           	global	_checkEven
  4851                           psect	text777,local,class=CODE,delta=2
  4852                           global __ptext777
  4853  0E89                     __ptext777:
  4854                           
  4855 ;; *************** function _checkEven *****************
  4856 ;; Defined at:
  4857 ;;		line 42 in file "Packet.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;		None
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  2    2[COMMON] int 
  4864 ;; Registers used:
  4865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4871 ;;      Params:         2       0       0       0       0
  4872 ;;      Locals:         0       0       0       0       0
  4873 ;;      Temps:          1       0       0       0       0
  4874 ;;      Totals:         3       0       0       0       0
  4875 ;;Total ram usage:        3 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:    1
  4878 ;; This function calls:
  4879 ;;		_eeprom_read
  4880 ;;		i1_writeByte
  4881 ;; This function is called by:
  4882 ;;		_parsePacket
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           psect	text777
  4886                           	file	"Packet.c"
  4887                           	line	42
  4888                           	global	__size_of_checkEven
  4889  0027                     	__size_of_checkEven	equ	__end_of_checkEven-_checkEven
  4890                           	
  4891  0E89                     _checkEven:	
  4892                           	opt	stack 1
  4893                           ; Regs used in _checkEven: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4894                           	line	45
  4895                           	
  4896  0E89                     i1l10228:	
  4897                           ;Packet.c: 45: if (eeprom_read(RXLenAddr) % 2 == 0) {
  4898  0E89  3040               	movlw	(_RXLenAddr-__stringbase)
  4899  0E8A  0084               	movwf	fsr0
  4900  0E8B  120A  118A  2500   	fcall	stringdir
              120A  158A         
  4901  0E90  120A  158A  2623   	fcall	_eeprom_read
              120A  158A         
  4902  0E95  00F4               	movwf	(??_checkEven+0)+0
  4903  0E96  1874               	btfsc	0+(??_checkEven+0)+0,(0)&7
  4904  0E97  2E99               	goto	u287_21
  4905  0E98  2E9A               	goto	u287_20
  4906  0E99                     u287_21:
  4907  0E99  2EA6               	goto	i1l10236
  4908  0E9A                     u287_20:
  4909                           	line	47
  4910                           	
  4911  0E9A                     i1l10230:	
  4912                           ;Packet.c: 47: writeByte('E');
  4913  0E9A  3045               	movlw	(045h)
  4914  0E9B  120A  158A  25C8   	fcall	i1_writeByte
              120A  158A         
  4915                           	line	48
  4916                           	
  4917  0EA0                     i1l10232:	
  4918                           ;Packet.c: 48: return 1;
  4919  0EA0  3001               	movlw	low(01h)
  4920  0EA1  00F2               	movwf	(?_checkEven)
  4921  0EA2  3000               	movlw	high(01h)
  4922  0EA3  00F3               	movwf	((?_checkEven))+1
  4923  0EA4  2EAF               	goto	i1l1581
  4924                           	
  4925  0EA5                     i1l10234:	
  4926  0EA5  2EAF               	goto	i1l1581
  4927                           	line	49
  4928                           	
  4929  0EA6                     i1l1580:	
  4930                           	line	51
  4931                           	
  4932  0EA6                     i1l10236:	
  4933                           ;Packet.c: 49: }
  4934                           ;Packet.c: 51: writeByte('N');
  4935  0EA6  304E               	movlw	(04Eh)
  4936  0EA7  120A  158A  25C8   	fcall	i1_writeByte
              120A  158A         
  4937                           	line	52
  4938                           	
  4939  0EAC                     i1l10238:	
  4940                           ;Packet.c: 52: return 0;
  4941  0EAC  01F2               	clrf	(?_checkEven)
  4942  0EAD  01F3               	clrf	(?_checkEven+1)
  4943  0EAE  2EAF               	goto	i1l1581
  4944                           	
  4945  0EAF                     i1l10240:	
  4946                           	line	53
  4947                           	
  4948  0EAF                     i1l1581:	
  4949  0EAF  0008               	return
  4950                           	opt stack 0
  4951                           GLOBAL	__end_of_checkEven
  4952  0EB0                     	__end_of_checkEven:
  4953 ;; =============== function _checkEven ends ============
  4954                           
  4955                           	signat	_checkEven,90
  4956                           	global	_makeHexByte
  4957                           psect	text778,local,class=CODE,delta=2
  4958                           global __ptext778
  4959  0E64                     __ptext778:
  4960                           
  4961 ;; *************** function _makeHexByte *****************
  4962 ;; Defined at:
  4963 ;;		line 213 in file "Bluetooth.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  nibOne          1    wreg     unsigned char 
  4966 ;;  nibTwo          1   13[COMMON] unsigned char 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  nibOne          1    2[BANK0 ] unsigned char 
  4969 ;;  input_byte      1    3[BANK0 ] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      unsigned char 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0, pclath, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4979 ;;      Params:         1       0       0       0       0
  4980 ;;      Locals:         0       2       0       0       0
  4981 ;;      Temps:          0       2       0       0       0
  4982 ;;      Totals:         1       4       0       0       0
  4983 ;;Total ram usage:        5 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    1
  4986 ;; This function calls:
  4987 ;;		_makeNibble
  4988 ;; This function is called by:
  4989 ;;		_parsePacket
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           psect	text778
  4993                           	file	"Bluetooth.c"
  4994                           	line	213
  4995                           	global	__size_of_makeHexByte
  4996  0025                     	__size_of_makeHexByte	equ	__end_of_makeHexByte-_makeHexByte
  4997                           	
  4998  0E64                     _makeHexByte:	
  4999                           	opt	stack 1
  5000                           ; Regs used in _makeHexByte: [wreg+status,2+status,0+pclath+cstack]
  5001                           ;makeHexByte@nibOne stored from wreg
  5002                           	line	215
  5003  0E64  1283               	bcf	status, 5	;RP0=0, select bank0
  5004  0E65  1303               	bcf	status, 6	;RP1=0, select bank0
  5005  0E66  00A2               	movwf	(makeHexByte@nibOne)
  5006                           	
  5007  0E67                     i1l10222:	
  5008                           ;Bluetooth.c: 214: unsigned char input_byte;
  5009                           ;Bluetooth.c: 215: input_byte = (makeNibble(nibOne)<<4);
  5010  0E67  0822               	movf	(makeHexByte@nibOne),w
  5011  0E68  120A  158A  25D4   	fcall	_makeNibble
              120A  158A         
  5012  0E6D  1283               	bcf	status, 5	;RP0=0, select bank0
  5013  0E6E  1303               	bcf	status, 6	;RP1=0, select bank0
  5014  0E6F  00A0               	movwf	(??_makeHexByte+0)+0
  5015  0E70  3003               	movlw	(04h)-1
  5016  0E71                     u286_25:
  5017  0E71  1003               	clrc
  5018  0E72  0DA0               	rlf	(??_makeHexByte+0)+0,f
  5019  0E73  3EFF               	addlw	-1
  5020  0E74  1D03               	skipz
  5021  0E75  2E71               	goto	u286_25
  5022  0E76  1003               	clrc
  5023  0E77  0D20               	rlf	(??_makeHexByte+0)+0,w
  5024  0E78  00A1               	movwf	(??_makeHexByte+1)+0
  5025  0E79  0821               	movf	(??_makeHexByte+1)+0,w
  5026  0E7A  00A3               	movwf	(makeHexByte@input_byte)
  5027                           	line	216
  5028                           ;Bluetooth.c: 216: input_byte|= makeNibble(nibTwo);
  5029  0E7B  087D               	movf	(makeHexByte@nibTwo),w
  5030  0E7C  120A  158A  25D4   	fcall	_makeNibble
              120A  158A         
  5031  0E81  1283               	bcf	status, 5	;RP0=0, select bank0
  5032  0E82  1303               	bcf	status, 6	;RP1=0, select bank0
  5033  0E83  00A0               	movwf	(??_makeHexByte+0)+0
  5034  0E84  0820               	movf	(??_makeHexByte+0)+0,w
  5035  0E85  04A3               	iorwf	(makeHexByte@input_byte),f
  5036                           	line	217
  5037                           	
  5038  0E86                     i1l10224:	
  5039                           ;Bluetooth.c: 217: return input_byte;
  5040  0E86  0823               	movf	(makeHexByte@input_byte),w
  5041  0E87  2E88               	goto	i1l803
  5042                           	
  5043  0E88                     i1l10226:	
  5044                           	line	218
  5045                           	
  5046  0E88                     i1l803:	
  5047  0E88  0008               	return
  5048                           	opt stack 0
  5049                           GLOBAL	__end_of_makeHexByte
  5050  0E89                     	__end_of_makeHexByte:
  5051 ;; =============== function _makeHexByte ends ============
  5052                           
  5053                           	signat	_makeHexByte,8313
  5054                           	global	_readString
  5055                           psect	text779,local,class=CODE,delta=2
  5056                           global __ptext779
  5057  06E1                     __ptext779:
  5058                           
  5059 ;; *************** function _readString *****************
  5060 ;; Defined at:
  5061 ;;		line 167 in file "Bluetooth.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  readStorage     1    wreg     PTR unsigned char 
  5064 ;;		 -> getPacket@arrStore(50), 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;  readStorage     1    2[BANK0 ] PTR unsigned char 
  5067 ;;		 -> getPacket@arrStore(50), 
  5068 ;;  i               2    3[BANK0 ] unsigned int 
  5069 ;;  ch              1    5[BANK0 ] unsigned char 
  5070 ;; Return value:  Size  Location     Type
  5071 ;;		None               void
  5072 ;; Registers used:
  5073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5079 ;;      Params:         0       0       0       0       0
  5080 ;;      Locals:         0       4       0       0       0
  5081 ;;      Temps:          0       2       0       0       0
  5082 ;;      Totals:         0       6       0       0       0
  5083 ;;Total ram usage:        6 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    1
  5086 ;; This function calls:
  5087 ;;		_readByte
  5088 ;;		i1_eeprom_write
  5089 ;; This function is called by:
  5090 ;;		_getPacket
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           psect	text779
  5094                           	file	"Bluetooth.c"
  5095                           	line	167
  5096                           	global	__size_of_readString
  5097  004B                     	__size_of_readString	equ	__end_of_readString-_readString
  5098                           	
  5099  06E1                     _readString:	
  5100                           	opt	stack 2
  5101                           ; Regs used in _readString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5102                           ;readString@readStorage stored from wreg
  5103                           	line	169
  5104  06E1  1283               	bcf	status, 5	;RP0=0, select bank0
  5105  06E2  1303               	bcf	status, 6	;RP1=0, select bank0
  5106  06E3  00A2               	movwf	(readString@readStorage)
  5107                           	
  5108  06E4                     i1l10178:	
  5109                           ;Bluetooth.c: 169: unsigned int i = 0;
  5110  06E4  01A3               	clrf	(readString@i)
  5111  06E5  01A4               	clrf	(readString@i+1)
  5112                           	line	173
  5113                           	
  5114  06E6                     i1l10180:	
  5115                           ;Bluetooth.c: 171: unsigned char ch;
  5116                           ;Bluetooth.c: 173: ch = readByte();
  5117  06E6  120A  158A  25B2   	fcall	_readByte
              120A  118A         
  5118  06EB  1283               	bcf	status, 5	;RP0=0, select bank0
  5119  06EC  1303               	bcf	status, 6	;RP1=0, select bank0
  5120  06ED  00A0               	movwf	(??_readString+0)+0
  5121  06EE  0820               	movf	(??_readString+0)+0,w
  5122  06EF  00A5               	movwf	(readString@ch)
  5123                           	line	175
  5124                           ;Bluetooth.c: 175: while(ch != userEndByte)
  5125  06F0  2F0C               	goto	i1l10188
  5126                           	
  5127  06F1                     i1l794:	
  5128                           	line	178
  5129                           	
  5130  06F1                     i1l10182:	
  5131                           ;Bluetooth.c: 176: {
  5132                           ;Bluetooth.c: 178: readStorage[i] = ch;
  5133  06F1  0825               	movf	(readString@ch),w
  5134  06F2  00A0               	movwf	(??_readString+0)+0
  5135  06F3  0823               	movf	(readString@i),w
  5136  06F4  0722               	addwf	(readString@readStorage),w
  5137  06F5  00A1               	movwf	(??_readString+1)+0
  5138  06F6  0821               	movf	0+(??_readString+1)+0,w
  5139  06F7  0084               	movwf	fsr0
  5140  06F8  0820               	movf	(??_readString+0)+0,w
  5141  06F9  1383               	bcf	status, 7	;select IRP bank0
  5142  06FA  0080               	movwf	indf
  5143                           	line	180
  5144                           	
  5145  06FB                     i1l10184:	
  5146                           ;Bluetooth.c: 180: i++;
  5147  06FB  3001               	movlw	low(01h)
  5148  06FC  07A3               	addwf	(readString@i),f
  5149  06FD  1803               	skipnc
  5150  06FE  0AA4               	incf	(readString@i+1),f
  5151  06FF  3000               	movlw	high(01h)
  5152  0700  07A4               	addwf	(readString@i+1),f
  5153                           	line	182
  5154                           	
  5155  0701                     i1l10186:	
  5156                           ;Bluetooth.c: 182: ch = readByte();
  5157  0701  120A  158A  25B2   	fcall	_readByte
              120A  118A         
  5158  0706  1283               	bcf	status, 5	;RP0=0, select bank0
  5159  0707  1303               	bcf	status, 6	;RP1=0, select bank0
  5160  0708  00A0               	movwf	(??_readString+0)+0
  5161  0709  0820               	movf	(??_readString+0)+0,w
  5162  070A  00A5               	movwf	(readString@ch)
  5163  070B  2F0C               	goto	i1l10188
  5164                           	line	183
  5165                           	
  5166  070C                     i1l793:	
  5167                           	line	175
  5168                           	
  5169  070C                     i1l10188:	
  5170  070C  305F               	movlw	(_userEndByte-__stringbase)
  5171  070D  0084               	movwf	fsr0
  5172  070E  120A  118A  2500   	fcall	stringdir
              120A  118A         
  5173  0713  00A0               	movwf	(??_readString+0)+0
  5174  0714  0825               	movf	(readString@ch),w
  5175  0715  0620               	xorwf	(??_readString+0)+0,w
  5176  0716  1D03               	skipz
  5177  0717  2F19               	goto	u281_21
  5178  0718  2F1A               	goto	u281_20
  5179  0719                     u281_21:
  5180  0719  2EF1               	goto	i1l10182
  5181  071A                     u281_20:
  5182  071A  2F1B               	goto	i1l10190
  5183                           	
  5184  071B                     i1l795:	
  5185                           	line	184
  5186                           	
  5187  071B                     i1l10190:	
  5188                           ;Bluetooth.c: 183: }
  5189                           ;Bluetooth.c: 184: eeprom_write(RXLenAddr,i);
  5190  071B  0823               	movf	(readString@i),w
  5191  071C  00A0               	movwf	(??_readString+0)+0
  5192  071D  0820               	movf	(??_readString+0)+0,w
  5193  071E  00FA               	movwf	(?i1_eeprom_write)
  5194  071F  3040               	movlw	(_RXLenAddr-__stringbase)
  5195  0720  0084               	movwf	fsr0
  5196  0721  120A  118A  2500   	fcall	stringdir
              120A  118A         
  5197  0726  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  5198                           	line	186
  5199                           	
  5200  072B                     i1l796:	
  5201  072B  0008               	return
  5202                           	opt stack 0
  5203                           GLOBAL	__end_of_readString
  5204  072C                     	__end_of_readString:
  5205 ;; =============== function _readString ends ============
  5206                           
  5207                           	signat	_readString,4216
  5208                           	global	i1_strlen
  5209                           psect	text780,local,class=CODE,delta=2
  5210                           global __ptext780
  5211  0F68                     __ptext780:
  5212                           
  5213 ;; *************** function i1_strlen *****************
  5214 ;; Defined at:
  5215 ;;		line 5 in file "C:\Microchip\HiTech\PICC\9.83\sources\strlen.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  strlen          1    wreg     PTR const unsigned char 
  5218 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  strlen          1    8[COMMON] PTR const unsigned char 
  5221 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  5222 ;;  strlen          1    9[COMMON] PTR const unsigned char 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  2    0[COMMON] unsigned int 
  5225 ;; Registers used:
  5226 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5232 ;;      Params:         2       0       0       0       0
  5233 ;;      Locals:         2       0       0       0       0
  5234 ;;      Temps:          6       0       0       0       0
  5235 ;;      Totals:        10       0       0       0       0
  5236 ;;Total ram usage:       10 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; This function calls:
  5239 ;;		Nothing
  5240 ;; This function is called by:
  5241 ;;		_parsePacket
  5242 ;;		i1_writeString
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           psect	text780
  5246                           	file	"C:\Microchip\HiTech\PICC\9.83\sources\strlen.c"
  5247                           	line	5
  5248                           	global	__size_ofi1_strlen
  5249  0031                     	__size_ofi1_strlen	equ	__end_ofi1_strlen-i1_strlen
  5250                           	
  5251  0F68                     i1_strlen:	
  5252                           	opt	stack 1
  5253                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  5254                           ;i1strlen@s stored from wreg
  5255                           	line	8
  5256  0F68  00F8               	movwf	(i1strlen@s)
  5257                           	
  5258  0F69                     i1l10504:	
  5259  0F69  0878               	movf	(i1strlen@s),w
  5260  0F6A  00F2               	movwf	(??i1_strlen+0)+0
  5261  0F6B  0872               	movf	(??i1_strlen+0)+0,w
  5262  0F6C  00F9               	movwf	(i1strlen@cp)
  5263                           	line	9
  5264  0F6D  2F6F               	goto	i1l10506
  5265                           	
  5266  0F6E                     i1l8285:	
  5267                           	line	10
  5268  0F6E  2F6F               	goto	i1l10506
  5269                           	
  5270  0F6F                     i1l8284:	
  5271                           	line	9
  5272                           	
  5273  0F6F                     i1l10506:	
  5274  0F6F  0879               	movf	(i1strlen@cp),w
  5275  0F70  0084               	movwf	fsr0
  5276  0F71  3001               	movlw	01h
  5277  0F72  07F9               	addwf	(i1strlen@cp),f
  5278  0F73  1383               	bcf	status, 7	;select IRP bank0
  5279  0F74  0880               	movf	indf,f
  5280  0F75  1D03               	skipz
  5281  0F76  2F78               	goto	u319_21
  5282  0F77  2F79               	goto	u319_20
  5283  0F78                     u319_21:
  5284  0F78  2F6F               	goto	i1l10506
  5285  0F79                     u319_20:
  5286  0F79  2F7A               	goto	i1l10508
  5287                           	
  5288  0F7A                     i1l8286:	
  5289                           	line	11
  5290                           	
  5291  0F7A                     i1l10508:	
  5292  0F7A  0878               	movf	(i1strlen@s),w
  5293  0F7B  00F2               	movwf	(??i1_strlen+0)+0
  5294  0F7C  3000               	movlw	((0x0/2))
  5295  0F7D  00F3               	movwf	(??i1_strlen+0)+0+1
  5296  0F7E  09F2               	comf	(??i1_strlen+0)+0,f
  5297  0F7F  09F3               	comf	(??i1_strlen+0)+1,f
  5298  0F80  0AF2               	incf	(??i1_strlen+0)+0,f
  5299  0F81  1903               	skipnz
  5300  0F82  0AF3               	incf	(??i1_strlen+0)+1,f
  5301  0F83  0879               	movf	(i1strlen@cp),w
  5302  0F84  00F4               	movwf	(??i1_strlen+2)+0
  5303  0F85  3000               	movlw	((0x0/2))
  5304  0F86  00F5               	movwf	(??i1_strlen+2)+0+1
  5305  0F87  0872               	movf	0+(??i1_strlen+0)+0,w
  5306  0F88  0774               	addwf	0+(??i1_strlen+2)+0,w
  5307  0F89  00F6               	movwf	(??i1_strlen+4)+0
  5308  0F8A  0873               	movf	1+(??i1_strlen+0)+0,w
  5309  0F8B  1803               	skipnc
  5310  0F8C  0A73               	incf	1+(??i1_strlen+0)+0,w
  5311  0F8D  0775               	addwf	1+(??i1_strlen+2)+0,w
  5312  0F8E  00F7               	movwf	1+(??i1_strlen+4)+0
  5313  0F8F  0876               	movf	0+(??i1_strlen+4)+0,w
  5314  0F90  3EFF               	addlw	low(-1)
  5315  0F91  00F0               	movwf	(?i1_strlen)
  5316  0F92  0877               	movf	1+(??i1_strlen+4)+0,w
  5317  0F93  1803               	skipnc
  5318  0F94  3E01               	addlw	1
  5319  0F95  3EFF               	addlw	high(-1)
  5320  0F96  00F1               	movwf	1+(?i1_strlen)
  5321  0F97  2F98               	goto	i1l8287
  5322                           	
  5323  0F98                     i1l10510:	
  5324                           	line	12
  5325                           	
  5326  0F98                     i1l8287:	
  5327  0F98  0008               	return
  5328                           	opt stack 0
  5329                           GLOBAL	__end_ofi1_strlen
  5330  0F99                     	__end_ofi1_strlen:
  5331 ;; =============== function i1_strlen ends ============
  5332                           
  5333                           	signat	i1_strlen,90
  5334                           	global	i1_eeprom_write
  5335                           psect	text781,local,class=CODE,delta=2
  5336                           global __ptext781
  5337  0F37                     __ptext781:
  5338                           
  5339 ;; *************** function i1_eeprom_write *****************
  5340 ;; Defined at:
  5341 ;;		line 7 in file "C:\Microchip\HiTech\PICC\9.83\sources\eewrite.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  eeprom_write    1    wreg     unsigned char 
  5344 ;;  eeprom_write    1   10[COMMON] unsigned char 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  eeprom_write    1   12[COMMON] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      unsigned char 
  5349 ;; Registers used:
  5350 ;;		wreg, status,2, status,0
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5356 ;;      Params:         1       0       0       0       0
  5357 ;;      Locals:         1       0       0       0       0
  5358 ;;      Temps:          1       0       0       0       0
  5359 ;;      Totals:         3       0       0       0       0
  5360 ;;Total ram usage:        3 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; This function calls:
  5363 ;;		Nothing
  5364 ;; This function is called by:
  5365 ;;		_readString
  5366 ;;		_parsePacket
  5367 ;;		_checkStartByte
  5368 ;;		_checkRWByte
  5369 ;;		_checkCMDByte
  5370 ;;		_addDataToCheckSum
  5371 ;;		_getPacket
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           psect	text781
  5375                           	file	"C:\Microchip\HiTech\PICC\9.83\sources\eewrite.c"
  5376                           	line	7
  5377                           	global	__size_ofi1_eeprom_write
  5378  0031                     	__size_ofi1_eeprom_write	equ	__end_ofi1_eeprom_write-i1_eeprom_write
  5379                           	
  5380  0F37                     i1_eeprom_write:	
  5381                           	opt	stack 1
  5382                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0]
  5383                           ;i1eeprom_write@addr stored from wreg
  5384  0F37  00FC               	movwf	(i1eeprom_write@addr)
  5385                           	line	8
  5386                           	
  5387  0F38                     i1l7600:	
  5388  0F38  2F39               	goto	i1l7601
  5389                           	
  5390  0F39                     i1l7602:	
  5391                           	
  5392  0F39                     i1l7601:	
  5393  0F39  1683               	bsf	status, 5	;RP0=1, select bank3
  5394  0F3A  1703               	bsf	status, 6	;RP1=1, select bank3
  5395  0F3B  188C               	btfsc	(3169/8)^0180h,(3169)&7
  5396  0F3C  2F3E               	goto	u316_21
  5397  0F3D  2F3F               	goto	u316_20
  5398  0F3E                     u316_21:
  5399  0F3E  2F39               	goto	i1l7601
  5400  0F3F                     u316_20:
  5401  0F3F  2F40               	goto	i1l10484
  5402                           	
  5403  0F40                     i1l7603:	
  5404                           	
  5405  0F40                     i1l10484:	
  5406  0F40  087C               	movf	(i1eeprom_write@addr),w
  5407  0F41  1283               	bcf	status, 5	;RP0=0, select bank2
  5408  0F42  1703               	bsf	status, 6	;RP1=1, select bank2
  5409  0F43  008D               	movwf	(269)^0100h	;volatile
  5410  0F44  087A               	movf	(i1eeprom_write@value),w
  5411  0F45  008C               	movwf	(268)^0100h	;volatile
  5412                           	
  5413  0F46                     i1l10486:	
  5414  0F46  303F               	movlw	(03Fh)
  5415  0F47  00FB               	movwf	(??i1_eeprom_write+0)+0
  5416  0F48  087B               	movf	(??i1_eeprom_write+0)+0,w
  5417  0F49  1683               	bsf	status, 5	;RP0=1, select bank3
  5418  0F4A  1703               	bsf	status, 6	;RP1=1, select bank3
  5419  0F4B  058C               	andwf	(396)^0180h,f	;volatile
  5420                           	
  5421  0F4C                     i1l10488:	
  5422  0F4C  1283               	bcf	status, 5	;RP0=0, select bank0
  5423  0F4D  1303               	bcf	status, 6	;RP1=0, select bank0
  5424  0F4E  1003               	bcf	(24/8),(24)&7
  5425                           	
  5426  0F4F                     i1l10490:	
  5427  0F4F  1F8B               	btfss	(95/8),(95)&7
  5428  0F50  2F52               	goto	u317_21
  5429  0F51  2F53               	goto	u317_20
  5430  0F52                     u317_21:
  5431  0F52  2F54               	goto	i1l7604
  5432  0F53                     u317_20:
  5433                           	
  5434  0F53                     i1l10492:	
  5435  0F53  1403               	bsf	(24/8),(24)&7
  5436                           	
  5437  0F54                     i1l7604:	
  5438  0F54  138B               	bcf	(95/8),(95)&7
  5439  0F55  1683               	bsf	status, 5	;RP0=1, select bank3
  5440  0F56  1703               	bsf	status, 6	;RP1=1, select bank3
  5441  0F57  150C               	bsf	(3170/8)^0180h,(3170)&7
  5442                           	
  5443  0F58                     i1l10494:	
  5444  0F58  3055               	movlw	(055h)
  5445  0F59  008D               	movwf	(397)^0180h	;volatile
  5446  0F5A  30AA               	movlw	(0AAh)
  5447  0F5B  008D               	movwf	(397)^0180h	;volatile
  5448                           	
  5449  0F5C                     i1l10496:	
  5450  0F5C  148C               	bsf	(3169/8)^0180h,(3169)&7
  5451                           	
  5452  0F5D                     i1l10498:	
  5453  0F5D  110C               	bcf	(3170/8)^0180h,(3170)&7
  5454                           	
  5455  0F5E                     i1l10500:	
  5456  0F5E  1283               	bcf	status, 5	;RP0=0, select bank0
  5457  0F5F  1303               	bcf	status, 6	;RP1=0, select bank0
  5458  0F60  1C03               	btfss	(24/8),(24)&7
  5459  0F61  2F63               	goto	u318_21
  5460  0F62  2F64               	goto	u318_20
  5461  0F63                     u318_21:
  5462  0F63  2F67               	goto	i1l7607
  5463  0F64                     u318_20:
  5464                           	
  5465  0F64                     i1l10502:	
  5466  0F64  178B               	bsf	(95/8),(95)&7
  5467  0F65  2F67               	goto	i1l7607
  5468                           	
  5469  0F66                     i1l7605:	
  5470  0F66  2F67               	goto	i1l7607
  5471                           	
  5472  0F67                     i1l7606:	
  5473                           	line	10
  5474                           ;	Return value of i1_eeprom_write is never used
  5475                           	
  5476  0F67                     i1l7607:	
  5477  0F67  0008               	return
  5478                           	opt stack 0
  5479                           GLOBAL	__end_ofi1_eeprom_write
  5480  0F68                     	__end_ofi1_eeprom_write:
  5481 ;; =============== function i1_eeprom_write ends ============
  5482                           
  5483                           	signat	i1_eeprom_write,89
  5484                           	global	i1_writeByte
  5485                           psect	text782,local,class=CODE,delta=2
  5486                           global __ptext782
  5487  0DC8                     __ptext782:
  5488                           
  5489 ;; *************** function i1_writeByte *****************
  5490 ;; Defined at:
  5491 ;;		line 79 in file "Bluetooth.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  writeByte       1    wreg     unsigned char 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  writeByte       1    0[COMMON] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;		None               void
  5498 ;; Registers used:
  5499 ;;		wreg
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5505 ;;      Params:         0       0       0       0       0
  5506 ;;      Locals:         1       0       0       0       0
  5507 ;;      Temps:          0       0       0       0       0
  5508 ;;      Totals:         1       0       0       0       0
  5509 ;;Total ram usage:        1 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; This function calls:
  5512 ;;		Nothing
  5513 ;; This function is called by:
  5514 ;;		_checkEven
  5515 ;;		_checkLength
  5516 ;;		_checkDataFrames
  5517 ;;		_checkStartByte
  5518 ;;		_checkRWByte
  5519 ;;		_checkCMDByte
  5520 ;;		_checkCS
  5521 ;;		_readCommands
  5522 ;;		i1_writeString
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           psect	text782
  5526                           	file	"Bluetooth.c"
  5527                           	line	79
  5528                           	global	__size_ofi1_writeByte
  5529  000C                     	__size_ofi1_writeByte	equ	__end_ofi1_writeByte-i1_writeByte
  5530                           	
  5531  0DC8                     i1_writeByte:	
  5532                           	opt	stack 1
  5533                           ; Regs used in i1_writeByte: [wreg]
  5534                           ;i1writeByte@Byte stored from wreg
  5535  0DC8  00F0               	movwf	(i1writeByte@Byte)
  5536                           	line	83
  5537                           	
  5538  0DC9                     i1l10470:	
  5539                           ;Bluetooth.c: 83: while(!TXIF);
  5540  0DC9  2DCA               	goto	i1l772
  5541                           	
  5542  0DCA                     i1l773:	
  5543                           	
  5544  0DCA                     i1l772:	
  5545  0DCA  1283               	bcf	status, 5	;RP0=0, select bank0
  5546  0DCB  1303               	bcf	status, 6	;RP1=0, select bank0
  5547  0DCC  1E0C               	btfss	(100/8),(100)&7
  5548  0DCD  2DCF               	goto	u314_21
  5549  0DCE  2DD0               	goto	u314_20
  5550  0DCF                     u314_21:
  5551  0DCF  2DCA               	goto	i1l772
  5552  0DD0                     u314_20:
  5553  0DD0  2DD1               	goto	i1l10472
  5554                           	
  5555  0DD1                     i1l774:	
  5556                           	line	86
  5557                           	
  5558  0DD1                     i1l10472:	
  5559                           ;Bluetooth.c: 86: TXREG = Byte;
  5560  0DD1  0870               	movf	(i1writeByte@Byte),w
  5561  0DD2  0099               	movwf	(25)	;volatile
  5562                           	line	87
  5563                           	
  5564  0DD3                     i1l775:	
  5565  0DD3  0008               	return
  5566                           	opt stack 0
  5567                           GLOBAL	__end_ofi1_writeByte
  5568  0DD4                     	__end_ofi1_writeByte:
  5569 ;; =============== function i1_writeByte ends ============
  5570                           
  5571                           	signat	i1_writeByte,88
  5572                           	global	_writeCommands
  5573                           psect	text783,local,class=CODE,delta=2
  5574                           global __ptext783
  5575  07FF                     __ptext783:
  5576                           
  5577 ;; *************** function _writeCommands *****************
  5578 ;; Defined at:
  5579 ;;		line 85 in file "Command.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;		None
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;		None               void
  5586 ;; Registers used:
  5587 ;;		None
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5593 ;;      Params:         0       0       0       0       0
  5594 ;;      Locals:         0       0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0
  5596 ;;      Totals:         0       0       0       0       0
  5597 ;;Total ram usage:        0 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		_getPacket
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           psect	text783
  5606                           	file	"Command.c"
  5607                           	line	85
  5608                           	global	__size_of_writeCommands
  5609  0001                     	__size_of_writeCommands	equ	__end_of_writeCommands-_writeCommands
  5610                           	
  5611  07FF                     _writeCommands:	
  5612                           	opt	stack 3
  5613                           ; Regs used in _writeCommands: []
  5614                           	line	89
  5615                           	
  5616  07FF                     i1l4789:	
  5617  07FF  0008               	return
  5618                           	opt stack 0
  5619                           GLOBAL	__end_of_writeCommands
  5620  0800                     	__end_of_writeCommands:
  5621 ;; =============== function _writeCommands ends ============
  5622                           
  5623                           	signat	_writeCommands,88
  5624                           	global	_eeprom_read
  5625                           psect	text784,local,class=CODE,delta=2
  5626                           global __ptext784
  5627  0E23                     __ptext784:
  5628                           
  5629 ;; *************** function _eeprom_read *****************
  5630 ;; Defined at:
  5631 ;;		line 7 in file "eeread.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  addr            1    wreg     unsigned char 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  addr            1    1[COMMON] unsigned char 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      unsigned char 
  5638 ;; Registers used:
  5639 ;;		wreg, status,2, status,0
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5645 ;;      Params:         0       0       0       0       0
  5646 ;;      Locals:         1       0       0       0       0
  5647 ;;      Temps:          1       0       0       0       0
  5648 ;;      Totals:         2       0       0       0       0
  5649 ;;Total ram usage:        2 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_checkEven
  5655 ;;		_checkLength
  5656 ;;		_checkDataFrames
  5657 ;;		_parsePacket
  5658 ;;		_checkStartByte
  5659 ;;		_checkRWByte
  5660 ;;		_checkCMDByte
  5661 ;;		_checkCS
  5662 ;;		_addDataToCheckSum
  5663 ;;		_getPacket
  5664 ;;		_readCommands
  5665 ;;		_displayPacket
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           psect	text784
  5669                           	file	"C:\Microchip\HiTech\PICC\9.83\sources\eeread.c"
  5670                           	line	7
  5671                           	global	__size_of_eeprom_read
  5672  001F                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
  5673                           	
  5674  0E23                     _eeprom_read:	
  5675                           	opt	stack 2
  5676                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5677                           ;eeprom_read@addr stored from wreg
  5678                           	line	9
  5679  0E23  00F1               	movwf	(eeprom_read@addr)
  5680                           	line	8
  5681                           	
  5682  0E24                     i1l6983:	
  5683                           	line	9
  5684                           # 9 "C:\Microchip\HiTech\PICC\9.83\sources\eeread.c"
  5685  0E24  0064               clrwdt ;#
  5686                           psect	text784
  5687                           	line	10
  5688  0E25  1683               	bsf	status, 5	;RP0=1, select bank3
  5689  0E26  1703               	bsf	status, 6	;RP1=1, select bank3
  5690  0E27  188C               	btfsc	(3169/8)^0180h,(3169)&7
  5691  0E28  2E2A               	goto	u288_21
  5692  0E29  2E2B               	goto	u288_20
  5693  0E2A                     u288_21:
  5694  0E2A  2E24               	goto	i1l6983
  5695  0E2B                     u288_20:
  5696  0E2B  2E2C               	goto	i1l10242
  5697                           	
  5698  0E2C                     i1l6984:	
  5699                           	line	11
  5700                           	
  5701  0E2C                     i1l10242:	
  5702  0E2C  0871               	movf	(eeprom_read@addr),w
  5703  0E2D  1283               	bcf	status, 5	;RP0=0, select bank2
  5704  0E2E  1703               	bsf	status, 6	;RP1=1, select bank2
  5705  0E2F  008D               	movwf	(269)^0100h	;volatile
  5706  0E30  303F               	movlw	(03Fh)
  5707  0E31  00F0               	movwf	(??_eeprom_read+0)+0
  5708  0E32  0870               	movf	(??_eeprom_read+0)+0,w
  5709  0E33  1683               	bsf	status, 5	;RP0=1, select bank3
  5710  0E34  1703               	bsf	status, 6	;RP1=1, select bank3
  5711  0E35  058C               	andwf	(396)^0180h,f	;volatile
  5712  0E36  140C               	bsf	(3168/8)^0180h,(3168)&7
  5713  0E37  1003               	clrc
  5714  0E38  180C               	btfsc	(3168/8)^0180h,(3168)&7
  5715  0E39  1403               	setc
  5716  0E3A  3000               	movlw	0
  5717  0E3B  1803               	skipnc
  5718  0E3C  3001               	movlw	1
  5719                           
  5720  0E3D  1283               	bcf	status, 5	;RP0=0, select bank2
  5721  0E3E  1703               	bsf	status, 6	;RP1=1, select bank2
  5722  0E3F  080C               	movf	(268)^0100h,w	;volatile
  5723  0E40  2E41               	goto	i1l6985
  5724                           	
  5725  0E41                     i1l10244:	
  5726                           	line	12
  5727                           	
  5728  0E41                     i1l6985:	
  5729  0E41  0008               	return
  5730                           	opt stack 0
  5731                           GLOBAL	__end_of_eeprom_read
  5732  0E42                     	__end_of_eeprom_read:
  5733 ;; =============== function _eeprom_read ends ============
  5734                           
  5735                           	signat	_eeprom_read,4217
  5736                           	global	_makeNibble
  5737                           psect	text785,local,class=CODE,delta=2
  5738                           global __ptext785
  5739  0DD4                     __ptext785:
  5740                           
  5741 ;; *************** function _makeNibble *****************
  5742 ;; Defined at:
  5743 ;;		line 197 in file "Bluetooth.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  tempNib         1    wreg     unsigned char 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  tempNib         1    0[COMMON] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      unsigned char 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5757 ;;      Params:         0       0       0       0       0
  5758 ;;      Locals:         1       0       0       0       0
  5759 ;;      Temps:          0       0       0       0       0
  5760 ;;      Totals:         1       0       0       0       0
  5761 ;;Total ram usage:        1 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; This function calls:
  5764 ;;		Nothing
  5765 ;; This function is called by:
  5766 ;;		_makeHexByte
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           psect	text785
  5770                           	file	"Bluetooth.c"
  5771                           	line	197
  5772                           	global	__size_of_makeNibble
  5773  000F                     	__size_of_makeNibble	equ	__end_of_makeNibble-_makeNibble
  5774                           	
  5775  0DD4                     _makeNibble:	
  5776                           	opt	stack 1
  5777                           ; Regs used in _makeNibble: [wreg+status,2+status,0]
  5778                           ;makeNibble@tempNib stored from wreg
  5779  0DD4  00F0               	movwf	(makeNibble@tempNib)
  5780                           	line	198
  5781                           	
  5782  0DD5                     i1l10212:	
  5783                           ;Bluetooth.c: 198: if(tempNib>='A'){
  5784  0DD5  3041               	movlw	(041h)
  5785  0DD6  0270               	subwf	(makeNibble@tempNib),w
  5786  0DD7  1C03               	skipc
  5787  0DD8  2DDA               	goto	u285_21
  5788  0DD9  2DDB               	goto	u285_20
  5789  0DDA                     u285_21:
  5790  0DDA  2DDF               	goto	i1l10218
  5791  0DDB                     u285_20:
  5792                           	line	199
  5793                           	
  5794  0DDB                     i1l10214:	
  5795                           ;Bluetooth.c: 199: return ((tempNib - (unsigned char)'A')+10);
  5796  0DDB  0870               	movf	(makeNibble@tempNib),w
  5797  0DDC  3EC9               	addlw	0C9h
  5798  0DDD  2DE2               	goto	i1l800
  5799                           	
  5800  0DDE                     i1l10216:	
  5801  0DDE  2DE2               	goto	i1l800
  5802                           	line	200
  5803                           	
  5804  0DDF                     i1l799:	
  5805                           	line	201
  5806                           	
  5807  0DDF                     i1l10218:	
  5808                           ;Bluetooth.c: 200: }
  5809                           ;Bluetooth.c: 201: return (tempNib - '0');
  5810  0DDF  0870               	movf	(makeNibble@tempNib),w
  5811  0DE0  3ED0               	addlw	0D0h
  5812  0DE1  2DE2               	goto	i1l800
  5813                           	
  5814  0DE2                     i1l10220:	
  5815                           	line	202
  5816                           	
  5817  0DE2                     i1l800:	
  5818  0DE2  0008               	return
  5819                           	opt stack 0
  5820                           GLOBAL	__end_of_makeNibble
  5821  0DE3                     	__end_of_makeNibble:
  5822 ;; =============== function _makeNibble ends ============
  5823                           
  5824                           	signat	_makeNibble,4217
  5825                           	global	_readByte
  5826                           psect	text786,local,class=CODE,delta=2
  5827                           global __ptext786
  5828  0DB2                     __ptext786:
  5829                           
  5830 ;; *************** function _readByte *****************
  5831 ;; Defined at:
  5832 ;;		line 97 in file "Bluetooth.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;		None
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;		None
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  1    wreg      unsigned char 
  5839 ;; Registers used:
  5840 ;;		wreg
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5846 ;;      Params:         0       0       0       0       0
  5847 ;;      Locals:         0       0       0       0       0
  5848 ;;      Temps:          0       0       0       0       0
  5849 ;;      Totals:         0       0       0       0       0
  5850 ;;Total ram usage:        0 bytes
  5851 ;; Hardware stack levels used:    1
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_readString
  5856 ;;		_echoBack
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           psect	text786
  5860                           	file	"Bluetooth.c"
  5861                           	line	97
  5862                           	global	__size_of_readByte
  5863  000B                     	__size_of_readByte	equ	__end_of_readByte-_readByte
  5864                           	
  5865  0DB2                     _readByte:	
  5866                           	opt	stack 2
  5867                           ; Regs used in _readByte: [wreg]
  5868                           	line	102
  5869                           	
  5870  0DB2                     i1l10158:	
  5871                           ;Bluetooth.c: 102: while(!RCIF);
  5872  0DB2  2DB3               	goto	i1l778
  5873                           	
  5874  0DB3                     i1l779:	
  5875                           	
  5876  0DB3                     i1l778:	
  5877  0DB3  1283               	bcf	status, 5	;RP0=0, select bank0
  5878  0DB4  1303               	bcf	status, 6	;RP1=0, select bank0
  5879  0DB5  1E8C               	btfss	(101/8),(101)&7
  5880  0DB6  2DB8               	goto	u279_21
  5881  0DB7  2DB9               	goto	u279_20
  5882  0DB8                     u279_21:
  5883  0DB8  2DB3               	goto	i1l778
  5884  0DB9                     u279_20:
  5885  0DB9  2DBA               	goto	i1l10160
  5886                           	
  5887  0DBA                     i1l780:	
  5888                           	line	111
  5889                           	
  5890  0DBA                     i1l10160:	
  5891                           ;Bluetooth.c: 111: return RCREG;
  5892  0DBA  081A               	movf	(26),w	;volatile
  5893  0DBB  2DBC               	goto	i1l781
  5894                           	
  5895  0DBC                     i1l10162:	
  5896                           	line	114
  5897                           	
  5898  0DBC                     i1l781:	
  5899  0DBC  0008               	return
  5900                           	opt stack 0
  5901                           GLOBAL	__end_of_readByte
  5902  0DBD                     	__end_of_readByte:
  5903 ;; =============== function _readByte ends ============
  5904                           
  5905                           	signat	_readByte,89
  5906                           psect	text787,local,class=CODE,delta=2
  5907                           global __ptext787
  5908  0000                     __ptext787:
  5909                           	global	btemp
  5910  007E                     	btemp set 07Eh
  5911                           
  5912                           	DABS	1,126,2	;btemp
  5913                           	global	wtemp0
  5914  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Dec 15 19:59:44 2013

                         pc 0002                          _RD 0C60                          _WR 0C61  
                        fsr 0004                 _userEndByte 0564                         l772 0DE7  
                       l773 0DE7                         l774 0DED                         l790 04E4  
                       l775 0DF3                         l769 0E05                         l787 04CB  
                       l788 04B6                         l789 04DE                         _GIE 005F  
                       _RB1 0031                         _RD0 0040                         _RD1 0041  
                       _RD2 0042                         _RD4 0044                         _RD5 0045  
                       _RD6 0046                         _RD7 0047                         _isr 0E06  
                       fsr0 0004                         indf 0000         __end_ofi1_writeByte 0DD4  
          ?_checkDataFrames 0072                        l2410 05CD                        l2404 0EC2  
                      l2405 0EC2                        l2406 0EC7                        l2422 07E6  
                      l2407 0ED8                        l3190 07FE                        l3187 0DC7  
                      l7600 0779                        l3992 075D                        l7601 077A  
                      l3993 0772                        l7602 077A                        l3994 0773  
                      l7603 0781                        l3995 0773                        l7604 079D  
                      ?_isr 0070                        l7605 07AF                        l7606 07B0  
                      l7607 07B0                        l8284 0FA2                        l8285 0FA1  
                      l8286 0FAD                        l8287 0FCB                        _ADON 00F8  
                      u3200 04DD                        u3201 04DC                        u3210 0EC6  
                      u3211 0EC5                        u3220 0736                        u3205 04D9  
                      u3237 076A                        u3247 0EB9                        u2800 0FAC  
                      u2801 0FAB                        u2820 0780                        u2821 077F  
                      u2830 079C                        u2831 079B                        u2840 07AD  
                      u2841 07AC                        _PEIE 005E                        u2780 0DEC  
                      u2781 0DEB                        _RCIE 0465                        _RCIF 0065  
                      _WREN 0C62                        _TXIF 0064              ??_eeprom_write 00C3  
    __end_of_checkStartByte 0632                        _main 072C               _startByteAddr 0559  
                      btemp 007E                        start 0012           _addDataToCheckSum 035F  
        ?_addDataToCheckSum 0070       makeHexByte@input_byte 0023                       ??_isr 0062  
                     l10200 079C                       l10210 07AD                       l10202 07A1  
                     l10204 07A5                       l10150 0E03                       l10206 07A6  
                     l10152 0E04                       l10144 0DF4                       l10208 07A7  
                     l10146 0DF8                       l10154 0DE6                       l10170 0F9C  
                     l10410 0DBD                       l10148 0E02                       l10156 0DED  
                     l10172 0FA2                       l10174 0FAD                       l10176 0FCB  
                     l10192 0781                       l10408 07FA                       l10520 04DE  
                     l10512 04B3                       l10194 078D                       l10514 04B6  
                     l10530 0ED8                       l10522 0EB0                       l10196 0795  
                     l10516 04C2                       l10524 0EB3                       l10532 0567  
                     l10540 07D3                       l10198 0798                       l10518 04CB  
                     l10526 0EBE                       l10534 07B1                       l10550 074C  
                     l10542 072C                       l10528 0EC7                       l10536 07B6  
                     l10552 0751                       l10544 0743                       l10538 07C3  
                     l10554 0756                       l10546 0744                       l10556 075D  
                     l10548 0747                       l10558 0762                       ?_main 0070  
       ??_addDataToCheckSum 0020                       _EEADR 010D                       _CARRY 0018  
      __size_of_checkRWByte 006A                       i1l800 0DE2                       i1l803 0E88  
                     i1l780 0DBA                       i1l772 0DCA                       i1l781 0DBC  
                     i1l773 0DCA                       i1l774 0DD1                       i1l790 0F36  
                     i1l775 0DD3                       i1l793 070C                       i1l778 0DB3  
                     i1l794 06F1                       i1l779 0DB3                       i1l795 071B  
                     i1l787 0F1F                       i1l796 072B                       i1l788 0F0C  
                     i1l789 0F30                       i1l799 0DDF                       _RCREG 001A  
                     _RCSTA 0018                       _SPBRG 0099                       _PORTD 0008  
           __end_of_checkCS 1000        __size_of_checkLength 002F                       _TRISA 0085  
                     _TRISB 0086                       _TRISD 0088                       _TXREG 0019  
                     _TXSTA 0098                 _writeString 04B0             __end_of_getTemp 07E7  
           __end_of_initADC 0DC8             i1writeByte@Byte 0070                       _tempC 055A  
                     _tempF 055B                       pclath 000A                       status 0003  
           ?_checkStartByte 0020                       wtemp0 007E   __end_of_addDataToCheckSum 03D6  
              ?_parsePacket 0070            __end_ofi1_strlen 0F99                __end_of_main 0776  
     __size_of_checkCMDByte 0070               ?_readCommands 0070                      ??_main 00D0  
                i1strlen@cp 0079                 i1_writeByte 0DC8       __end_ofi1_writeString 0F37  
             _userStartByte 0565                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D                _writeByteVal 0566  
                    i1l4000 068E                      i1l1601 0626                      i1l4001 0687  
                    i1l1602 0631                      i1l4002 068D                      i1l1611 043A  
                    i1l4003 068F                      i1l1612 0445                      i1l1620 06DA  
                    i1l4004 068F                      i1l1605 04A4                      i1l1621 06E0  
                    i1l1607 0469                      i1l1615 0FF6                      i1l1608 04AF  
                    i1l1616 0FFF                      i1l1624 03C3                      i1l1625 038E  
                    i1l1626 03D5                      i1l1627 03D5                      i1l1619 06DB  
                    i1l1580 0EA6                      i1l1581 0EAF                      i1l1590 0355  
                    i1l1591 0354                      i1l1584 0EFE                      i1l1585 0F07  
                    i1l1594 02C4                      i1l1595 02AF                      i1l1588 0309  
                    i1l1596 0279                      i1l1589 035E                      i1l1597 02C3  
                    i1l1598 02C4                      u300_20 03FF                      u300_21 03FE  
                    u301_20 0FEA                      u301_21 0FE9                      i1l4780 006D  
                    i1l4781 0092                      i1l4782 00AB                      i1l4775 016A  
                    i1l4783 00C4                      i1l7600 0F38                      u302_20 069D  
                    i1l4784 00E3                      i1l4776 0016                      u310_20 0E10  
                    i1l7601 0F39                      u302_21 069C                      i1l4777 018F  
                    i1l4785 0162                      u310_21 0E0F                      i1l7602 0F39  
                    i1l4778 003B                      i1l4786 018F                      i1l3986 0E16  
                    i1l7603 0F40                      i1l4779 0054                      i1l3987 0E16  
                    i1l7604 0F54                      i1l4789 07FF                      i1l7605 0F66  
                    i1l7606 0F67                      i1l7607 0F67                      u303_20 06AA  
                    u311_20 063C                      u303_21 06A9                      i1l8284 0F6F  
                    i1l8285 0F6E                      i1l8286 0F7A                      i1l8287 0F98  
                    u304_20 06B7                      u312_20 0670                      u304_21 06B6  
                    u312_21 066F                      i1l6983 0E24                      i1l6984 0E2C  
                    u305_20 06C2                      u313_20 0681                      i1l6985 0E41  
                    u305_21 06C1                      u313_21 0680                      u314_20 0DD0  
                    u306_20 06D2                      u314_21 0DCF                      u306_21 06D1  
                    u307_20 03D4                      u315_20 0F2F                      u307_21 03D3  
                    u315_21 0F2E                      u315_25 0F2B                      u316_20 0F3F  
                    u316_21 0F3E                      u317_20 0F53                      u309_20 0E0A  
                    u317_21 0F52                      u309_21 0E09                      u318_20 0F64  
                    u318_21 0F63                      u319_20 0F79                      u319_21 0F78  
                    u281_20 071A                      u281_21 0719                      u290_20 02D6  
                    u290_21 02D5                      u291_20 02FC                      u291_21 02FB  
                    u292_25 0319                      u285_20 0DDB                      u293_20 0348  
                    u285_21 0DDA                      u293_21 0347                      u293_25 0344  
                    u294_20 01A0                      u294_21 019F                      u286_25 0E71  
                    u279_20 0DB9                      u287_20 0E9A                      u295_20 01AB  
                    u279_21 0DB8                      u287_21 0E99                      u295_21 01AA  
                    u288_20 0E2B                      u296_20 02C2                      u288_21 0E2A  
                    u296_21 02C1                      u289_20 0EF2                      u297_20 05EB  
                    u289_21 0EF1                      u297_21 05EA                      u298_20 0457  
                    u298_21 0456                      u299_20 0468                      u299_21 0467  
                    _TRISD0 0440                      _TRISD2 0442                      _TRISD4 0444  
                    _TRISC6 043E                      _TRISD5 0445                      _TRISC7 043F  
                    _TRISD6 0446                      _TRISD7 0447                _checkCMDByte 03D6  
      __size_of_eeprom_read 001F        __size_of_makeHexByte 0025                      _maxCmd 0553  
          __end_of_initTemp 05CE            __end_of_readByte 0DBD                   ??_checkCS 0074  
            ??_readCommands 007E            __end_of_readTemp 0ED9        __end_of_eeprom_write 07B1  
   __size_of_validatePacket 0051                   ??_getTemp 00C6       readString@readStorage 0022  
                    clrloop 0DAB                      _strlen 0F99                   ??_initADC 00C2  
               readString@i 0023                      saved_w 007E      __size_of_writeCommands 0001  
         makeHexByte@nibOne 0022           makeHexByte@nibTwo 007D             eeprom_read@addr 0071  
__size_of_addDataToCheckSum 0077              __pcstackCOMMON 0070                __pidataBANK1 0E42  
        __size_of_checkEven 0027          __size_of_getPacket 005E           eeprom_write@value 00C2  
                 ?i1_strlen 0070                  _csByteAddr 0548                  __pbssBANK3 0190  
        __size_of_initUSART 0012     __size_ofi1_eeprom_write 0031              _calcCSByteAddr 0546  
                __pmaintext 072C        __size_of_parsePacket 0135               _writeCommands 07FF  
                __pintentry 0004                     ?_strlen 00C2                     i1l10220 0DE2  
                   i1l10212 0DD5                     i1l10300 02AA                     i1l10214 0DDB  
                   i1l10222 0E67                     i1l10230 0E9A                     i1l10310 061E  
                   i1l10302 02AF                     i1l10160 0DBA                     i1l10216 0DDE  
                   i1l10224 0E86                     i1l10240 0EAF                     i1l10232 0EA0  
                   i1l10312 0625                     i1l10304 05CE                     i1l10320 0446  
                   i1l10162 0DBC                     i1l10218 0DDF                     i1l10242 0E2C  
                   i1l10226 0E88                     i1l10234 0EA5                     i1l10250 0EF8  
                   i1l10306 05EB                     i1l10314 0626                     i1l10330 04A3  
                   i1l10322 0457                     i1l10244 0E41                     i1l10500 0F5E  
                   i1l10180 06E6                     i1l10236 0EA6                     i1l10228 0E89  
                   i1l10252 0EFD                     i1l10260 02C5                     i1l10316 062C  
                   i1l10308 05F1                     i1l10332 04A4                     i1l10324 0469  
                   i1l10340 03FF                     i1l10420 064A                     i1l10412 0E06  
                   i1l10158 0DB2                     i1l10502 0F64                     i1l10510 0F98  
                   i1l10190 071B                     i1l10182 06F1                     i1l10238 0EAC  
                   i1l10254 0EFE                     i1l10246 0ED9                     i1l10270 0308  
                   i1l10262 02D6                     i1l10318 0631                     i1l10334 04AA  
                   i1l10326 046F                     i1l10350 0440                     i1l10342 042C  
                   i1l10430 0681                     i1l10422 0650                     i1l10414 0E0A  
                   i1l10504 0F69                     i1l10184 06FB                     i1l10256 0F04  
                   i1l10248 0EF2                     i1l10280 0355                     i1l10264 02FC  
                   i1l10272 0309                     i1l10336 04AF                     i1l10328 049C  
                   i1l10352 0445                     i1l10344 0432                     i1l10360 0FF5  
                   i1l10440 0054                     i1l10432 0687                     i1l10424 065D  
                   i1l10416 0E10                     i1l10506 0F6F                     i1l10186 0701  
                   i1l10178 06E4                     i1l10258 0F07                     i1l10282 035B  
                   i1l10274 0348                     i1l10266 0302                     i1l10346 0439  
                   i1l10338 03D6                     i1l10362 0FF6                     i1l10354 0FCC  
                   i1l10290 01A0                     i1l10370 069D                     i1l10450 00D0  
                   i1l10442 006D                     i1l10434 0015                     i1l10426 0663  
                   i1l10418 0632                     i1l10508 0F7A                     i1l10188 070C  
                   i1l10284 035E                     i1l10276 034E                     i1l10268 0307  
                   i1l10348 043A                     i1l10364 0FFC                     i1l10356 0FEA  
                   i1l10292 01AB                     i1l10380 06D9                     i1l10372 06AA  
                   i1l10460 0155                     i1l10452 00D6                     i1l10444 0092  
                   i1l10436 0016                     i1l10428 0670                     i1l10470 0DC9  
                   i1l10278 0353                     i1l10366 0FFF                     i1l10358 0FF0  
                   i1l10390 038E                     i1l10294 0275                     i1l10286 0193  
                   i1l10374 06B7                     i1l10382 06DB                     i1l10462 015B  
                   i1l10454 00DC                     i1l10446 00AB                     i1l10438 003B  
                   i1l10472 0DD1                     i1l10392 03BC                     i1l10480 0F1F  
                   i1l10296 0279                     i1l10288 0195                     i1l10384 06E0  
                   i1l10376 06C2                     i1l10368 0690                     i1l10464 0162  
                   i1l10456 00E3                     i1l10448 00C4                     i1l10490 0F4F  
                   i1l10394 03C3                     i1l10386 035F                     i1l10482 0F30  
                   i1l10474 0F09                     i1l10298 02A2                     i1l10378 06D2  
                   i1l10466 0169                     i1l10458 014F                     i1l10492 0F53  
                   i1l10484 0F40                     i1l10388 038C                     i1l10476 0F0C  
                   i1l10468 016A                     i1l10494 0F58                     i1l10486 0F46  
                   i1l10478 0F18                     i1l10496 0F5C                     i1l10488 0F4C  
                   i1l10498 0F5D                ?_writeString 0070                  ??i1_strlen 0072  
                _makeNibble 0DD4            ??_checkStartByte 0022           __end_of_checkEven 0EB0  
      __end_of_readCommands 0190                   ?_initTemp 0070                   ?_readByte 0070  
                 ?_readTemp 00C2          __size_of_writeByte 0011    __size_of_checkDataFrames 009A  
         __end_of_getPacket 0690       __size_of_eeprom_write 003B              ?_writeCommands 0070  
             ??_checkRWByte 0022                     _checkCS 0FCC                  _readString 06E1  
             ??_checkLength 0074              _validatePacket 0690                  _humStartHi 054E  
         __end_of_initUSART 0E06                  _humStartLo 054F                     _getTemp 07B1  
              ?i1_writeByte 0070                     _initADC 0DBD             __size_of_strlen 0033  
                   _member1 0527                     _member2 0506                     _member3 051A  
              __size_of_isr 001D        end_of_initialization 04FC       parsePacket@dataPacket 002B  
                ??_initTemp 00C5                  ??_readByte 0070                     init_ram 07EB  
                _selectTemp 07FA                  ??_readTemp 00C4                _eeprom_write 0776  
              readString@ch 0025              main@testString 00D4                  _tempHiAddr 055C  
                _rwByteAddr 0558                  _tempLoAddr 055D               _dataBytesAddr 0549  
            getPacket@F1178 0190      __end_of_validatePacket 06E1                     strlen@s 00CA  
         __end_of_writeByte 0DF4         __end_of_checkRWByte 04B0         __end_of_checkLength 0F08  
               ?_makeNibble 0070                writeString@i 00CE               ??_eeprom_read 0070  
                 _RXLenAddr 0545              i1_eeprom_write 0F37             ??_writeCommands 0070  
             ??_makeHexByte 0020      __size_ofi1_writeString 002F             ?_validatePacket 0024  
         ??_checkDataFrames 0074                 ?_readString 0070              __end_of_strlen 0FCC  
       start_initialization 04E5       __size_of_readCommands 017B                 __end_of_isr 0E23  
      __size_of_writeString 0035                parsePacket@i 002A                   i1strlen@s 0078  
         __size_ofi1_strlen 0031                 ?_selectTemp 0070      __end_ofi1_eeprom_write 0F68  
            i1writeString@i 007C         __end_of_eeprom_read 0E42         __size_of_makeNibble 000F  
               __pdataBANK1 00A0                 _checkRWByte 0446                 _cmdByteAddr 0547  
       __end_of_makeHexByte 0E89                 _checkLength 0ED9                _readCommands 0015  
                  ??_strlen 00C4        __size_ofi1_writeByte 000C               __pcstackBANK0 0020  
             __pcstackBANK1 00C2               i1_writeString 0F08            eeprom_write@addr 00C4  
       __size_of_readString 004B             ?i1_eeprom_write 007A                   _checkEven 0E89  
               _endByteAddr 054A               ??_parsePacket 0024           __size_of_initTemp 0067  
         __size_of_readByte 000B           __size_of_readTemp 0029         i1eeprom_write@value 007A  
                 _classTerm 0533                   _getPacket 0632                   __ptext760 0776  
                 __ptext761 0F99                   __ptext770 035F                   __ptext762 0DE3  
                 __ptext754 07B1                   __ptext771 0FCC                   __ptext763 0DF4  
                 __ptext755 0567                   __ptext780 0F68                   __ptext772 03D6  
                 __ptext764 0E06                   __ptext756 0EB0                   __ptext781 0F37  
                 __ptext773 0446                   __ptext765 0632                   __ptext757 04B0  
                 __ptext782 0DC8                   __ptext774 05CE                   __ptext766 0015  
                 __ptext758 0DBD                   __ptext783 07FF                   __ptext775 02C5  
                 __ptext767 0690                   __ptext759 07FA                   __ptext784 0E23  
                 __ptext776 0ED9                   __ptext768 0190                   __ptext785 0DD4  
                 __ptext777 0E89                   __ptext769 0F08                   __ptext786 0DB2  
                 __ptext778 0E64                   __ptext787 0000                   __ptext779 06E1  
                  ?_checkCS 0072                   _noDataLen 0556                   __pstrings 0500  
                  ?_getTemp 0070                    ?_initADC 0070         __size_of_selectTemp 0005  
                 _humHiAddr 054C              ?i1_writeString 0070                   _initUSART 0DF4  
                 _humLoAddr 054D     i1writeString@userString 007B                   _readError 00A9  
         interrupt_function 0004                  ?_checkEven 0072                 _eeprom_read 0E23  
             ?_checkCMDByte 0020                 _makeHexByte 0E64                    _GO_nDONE 00FA  
                ?_getPacket 0070                   main@F1175 00A0                 _lenByteAddr 0552  
       __end_of_parsePacket 02C5                 __stringbase 0505                  ?_initUSART 0070  
              ??_makeNibble 0070                    i1_strlen 0F68                   _writeByte 0DE3  
           _checkDataFrames 02C5              ??_checkCMDByte 0022            ??_validatePacket 007E  
   __size_of_checkStartByte 0064                   init_fetch 07E7          __end_of_makeNibble 0DE3  
               _humValHAddr 0550                 _humValLAddr 0551                 _readByteVal 0557  
              ??_readString 0020                 _newLineChar 0555                 _minSizeByte 0554  
          __size_of_checkCS 0034             ??i1_writeString 007A            __size_of_getTemp 0036  
          __size_of_initADC 000B          i1eeprom_write@addr 007C                    _classNum 053D  
                ?_writeByte 0070       writeString@userString 00CD                _tempValHAddr 0561  
              _tempValLAddr 0562                ??_selectTemp 00C2                    _initTemp 0567  
                  _readByte 0DB2                    _readTemp 0EB0               __size_of_main 004A  
               ??_checkEven 0074          __end_of_readString 072C                    _groupNum 054B  
               _parsePacket 0190                    clear_ram 0DAA                _tempUnitAddr 0560  
     __end_of_writeCommands 0800                 ??_getPacket 002C                ?_checkRWByte 0020  
              ?_checkLength 0072      parsePacket@dataCounter 0028               ??_writeString 00CC  
        addDataToCheckSum@i 007D          __end_of_selectTemp 07FF                 ??_initUSART 00C2  
   __end_of_checkDataFrames 035F            ??i1_eeprom_write 007B                    intlevel1 0000  
                 stringcode 0500           makeNibble@tempNib 0070          getTemp@tempReading 00C7  
               _tempStartHi 055E                 _tempStartLo 055F               ??i1_writeByte 0070  
         getPacket@arrStore 0030               writeByte@Byte 00C2                    strlen@cp 00CB  
      __end_of_checkCMDByte 0446                    stringdir 0500                    stringtab 0500  
               ??_writeByte 00C2                 _timeoutByte 0563         __end_of_writeString 04E5  
             ?_eeprom_write 00C2                ?_eeprom_read 0070              _checkStartByte 05CE  
              ?_makeHexByte 007D  
