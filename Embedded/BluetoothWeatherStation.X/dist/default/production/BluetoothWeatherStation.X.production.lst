

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sun Dec 15 10:02:46 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 32 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 32 "main.c"
    45  2007  FF39               	dw 0xFFFB & 0xFF7F & 0xFFBF & 0xFFFD & 0xFFFF ;#
    46                           	FNCALL	_main,_initUSART
    47                           	FNCALL	_main,_initADC
    48                           	FNCALL	_main,_initTemp
    49                           	FNCALL	_main,_initLCD
    50                           	FNCALL	_main,_lcdClear
    51                           	FNCALL	_main,_lcdGoto
    52                           	FNCALL	_main,_lcdPuts
    53                           	FNCALL	_main,_writeString
    54                           	FNCALL	_main,_getTemp
    55                           	FNCALL	_initLCD,_togE
    56                           	FNCALL	_initLCD,_lcdWrite
    57                           	FNCALL	_initLCD,_lcdClear
    58                           	FNCALL	_lcdPuts,_lcdWrite
    59                           	FNCALL	_lcdGoto,_lcdWrite
    60                           	FNCALL	_lcdClear,_lcdWrite
    61                           	FNCALL	_lcdWrite,_togE
    62                           	FNCALL	_getTemp,_selectTemp
    63                           	FNCALL	_getTemp,_readTemp
    64                           	FNCALL	_getTemp,_eeprom_write
    65                           	FNCALL	_initTemp,_eeprom_write
    66                           	FNCALL	_writeString,_writeByte
    67                           	FNCALL	_writeString,_strlen
    68                           	FNROOT	_main
    69                           	FNCALL	_isr,_getPacket
    70                           	FNCALL	_getPacket,i1_eeprom_write
    71                           	FNCALL	_getPacket,_readString
    72                           	FNCALL	_getPacket,_parsePacket
    73                           	FNCALL	_getPacket,_validatePacket
    74                           	FNCALL	_getPacket,_eeprom_read
    75                           	FNCALL	_getPacket,_readCommands
    76                           	FNCALL	_getPacket,_writeCommands
    77                           	FNCALL	_readCommands,i1_writeByte
    78                           	FNCALL	_readCommands,i1_writeString
    79                           	FNCALL	_readCommands,_eeprom_read
    80                           	FNCALL	_validatePacket,_checkStartByte
    81                           	FNCALL	_validatePacket,_checkRWByte
    82                           	FNCALL	_validatePacket,_checkCMDByte
    83                           	FNCALL	_validatePacket,_checkDataFrames
    84                           	FNCALL	_validatePacket,_addDataToCheckSum
    85                           	FNCALL	_validatePacket,_checkCS
    86                           	FNCALL	_parsePacket,_checkLength
    87                           	FNCALL	_parsePacket,_checkEven
    88                           	FNCALL	_parsePacket,_makeHexByte
    89                           	FNCALL	_parsePacket,i1_eeprom_write
    90                           	FNCALL	_parsePacket,i1_strlen
    91                           	FNCALL	_parsePacket,_eeprom_read
    92                           	FNCALL	i1_writeString,i1_writeByte
    93                           	FNCALL	i1_writeString,i1_strlen
    94                           	FNCALL	_addDataToCheckSum,_eeprom_read
    95                           	FNCALL	_addDataToCheckSum,i1_eeprom_write
    96                           	FNCALL	_checkCS,_eeprom_read
    97                           	FNCALL	_checkCS,i1_writeByte
    98                           	FNCALL	_checkCMDByte,_eeprom_read
    99                           	FNCALL	_checkCMDByte,i1_eeprom_write
   100                           	FNCALL	_checkCMDByte,i1_writeByte
   101                           	FNCALL	_checkRWByte,_eeprom_read
   102                           	FNCALL	_checkRWByte,i1_writeByte
   103                           	FNCALL	_checkRWByte,i1_eeprom_write
   104                           	FNCALL	_checkStartByte,_eeprom_read
   105                           	FNCALL	_checkStartByte,i1_writeByte
   106                           	FNCALL	_checkStartByte,i1_eeprom_write
   107                           	FNCALL	_checkDataFrames,_eeprom_read
   108                           	FNCALL	_checkDataFrames,i1_writeByte
   109                           	FNCALL	_checkLength,_eeprom_read
   110                           	FNCALL	_checkLength,i1_writeByte
   111                           	FNCALL	_checkEven,_eeprom_read
   112                           	FNCALL	_checkEven,i1_writeByte
   113                           	FNCALL	_makeHexByte,_makeNibble
   114                           	FNCALL	_readString,_readByte
   115                           	FNCALL	_readString,i1_writeByte
   116                           	FNCALL	_readString,i1_eeprom_write
   117                           	FNCALL	intlevel1,_isr
   118                           	global	intlevel1
   119                           	FNROOT	intlevel1
   120                           	global	main@F1186
   121                           	global	_readError
   122                           psect	idataBANK1,class=CODE,space=0,delta=2
   123                           global __pidataBANK1
   124  0D83                     __pidataBANK1:
   125                           	file	"main.c"
   126                           	line	53
   127                           
   128                           ;initializer for main@F1186
   129  0D83  3457               	retlw	057h
   130  0D84  3465               	retlw	065h
   131  0D85  346C               	retlw	06Ch
   132  0D86  3463               	retlw	063h
   133  0D87  346F               	retlw	06Fh
   134  0D88  346D               	retlw	06Dh
   135  0D89  3465               	retlw	065h
   136  0D8A  340A               	retlw	0Ah
   137  0D8B  3400               	retlw	0
   138                           	file	"userMacro.h"
   139                           	line	26
   140                           
   141                           ;initializer for _readError
   142  0D8C  344E               	retlw	04Eh
   143  0D8D  346F               	retlw	06Fh
   144  0D8E  3474               	retlw	074h
   145  0D8F  3420               	retlw	020h
   146  0D90  3461               	retlw	061h
   147  0D91  3420               	retlw	020h
   148  0D92  3476               	retlw	076h
   149  0D93  3461               	retlw	061h
   150  0D94  346C               	retlw	06Ch
   151  0D95  3469               	retlw	069h
   152  0D96  3464               	retlw	064h
   153  0D97  3420               	retlw	020h
   154  0D98  3472               	retlw	072h
   155  0D99  3465               	retlw	065h
   156  0D9A  3461               	retlw	061h
   157  0D9B  3464               	retlw	064h
   158  0D9C  3420               	retlw	020h
   159  0D9D  3463               	retlw	063h
   160  0D9E  346F               	retlw	06Fh
   161  0D9F  346D               	retlw	06Dh
   162  0DA0  346D               	retlw	06Dh
   163  0DA1  3461               	retlw	061h
   164  0DA2  346E               	retlw	06Eh
   165  0DA3  3464               	retlw	064h
   166  0DA4  3400               	retlw	0
   167                           	global	_member2
   168                           psect	strings,class=STRING,delta=2
   169                           global __pstrings
   170  0446                     __pstrings:
   171                           ;	global	stringdir,stringtab,__stringbase
   172  0446                     stringtab:
   173                           ;	String table - string pointers are 1 byte each
   174  0446                     stringcode:stringdir:
      + 0446                     stringdir:	
   175  0446  3004               movlw high(stringdir)
   176  0447  008A               movwf pclath
   177  0448  0804               movf fsr,w
   178  0449  0A84               incf fsr
   179  044A  0782               	addwf pc
   180  044B                     __stringbase:
   181  044B  3400               	retlw	0
   182                           psect	strings
   183                           	file	"userMacro.h"
   184                           	line	20
   185  044C                     _member2:
   186  044C  3444               	retlw	044h
   187  044D  3465               	retlw	065h
   188  044E  3465               	retlw	065h
   189  044F  3470               	retlw	070h
   190  0450  3461               	retlw	061h
   191  0451  346B               	retlw	06Bh
   192  0452  3420               	retlw	020h
   193  0453  3443               	retlw	043h
   194  0454  3468               	retlw	068h
   195  0455  3461               	retlw	061h
   196  0456  346E               	retlw	06Eh
   197  0457  3464               	retlw	064h
   198  0458  3472               	retlw	072h
   199  0459  3461               	retlw	061h
   200  045A  3473               	retlw	073h
   201  045B  3465               	retlw	065h
   202  045C  346B               	retlw	06Bh
   203  045D  3461               	retlw	061h
   204  045E  3472               	retlw	072h
   205  045F  3400               	retlw	0
   206                           	global	_member3
   207                           psect	strings
   208                           	file	"userMacro.h"
   209                           	line	21
   210  0460                     _member3:
   211  0460  3441               	retlw	041h
   212  0461  3470               	retlw	070h
   213  0462  3475               	retlw	075h
   214  0463  3472               	retlw	072h
   215  0464  3476               	retlw	076h
   216  0465  3465               	retlw	065h
   217  0466  3420               	retlw	020h
   218  0467  3442               	retlw	042h
   219  0468  3468               	retlw	068h
   220  0469  3469               	retlw	069h
   221  046A  3464               	retlw	064h
   222  046B  3465               	retlw	065h
   223  046C  3400               	retlw	0
   224                           	global	_member1
   225                           psect	strings
   226                           	file	"userMacro.h"
   227                           	line	19
   228  046D                     _member1:
   229  046D  3447               	retlw	047h
   230  046E  3472               	retlw	072h
   231  046F  3465               	retlw	065h
   232  0470  3467               	retlw	067h
   233  0471  3420               	retlw	020h
   234  0472  3447               	retlw	047h
   235  0473  3469               	retlw	069h
   236  0474  3472               	retlw	072h
   237  0475  3461               	retlw	061h
   238  0476  3472               	retlw	072h
   239  0477  3464               	retlw	064h
   240  0478  3400               	retlw	0
   241                           	global	_classTerm
   242                           psect	strings
   243                           	file	"userMacro.h"
   244                           	line	23
   245  0479                     _classTerm:
   246  0479  3446               	retlw	046h
   247  047A  3461               	retlw	061h
   248  047B  346C               	retlw	06Ch
   249  047C  346C               	retlw	06Ch
   250  047D  3420               	retlw	020h
   251  047E  3432               	retlw	032h
   252  047F  3430               	retlw	030h
   253  0480  3431               	retlw	031h
   254  0481  3433               	retlw	033h
   255  0482  3400               	retlw	0
   256                           	global	_classNum
   257                           psect	strings
   258                           	file	"userMacro.h"
   259                           	line	22
   260  0483                     _classNum:
   261  0483  3445               	retlw	045h
   262  0484  3443               	retlw	043h
   263  0485  3445               	retlw	045h
   264  0486  3435               	retlw	035h
   265  0487  3436               	retlw	036h
   266  0488  3432               	retlw	032h
   267  0489  3430               	retlw	030h
   268  048A  3400               	retlw	0
   269                           	global	_RXLenAddr
   270                           psect	strings
   271                           	file	"userMacro.h"
   272                           	line	50
   273  048B                     _RXLenAddr:
   274  048B  3400               	retlw	0
   275                           	global	_calcCSByteAddr
   276                           psect	strings
   277                           	file	"userMacro.h"
   278                           	line	66
   279  048C                     _calcCSByteAddr:
   280  048C  3430               	retlw	030h
   281                           	global	_cmdByteAddr
   282                           psect	strings
   283                           	file	"userMacro.h"
   284                           	line	56
   285  048D                     _cmdByteAddr:
   286  048D  3403               	retlw	03h
   287                           	global	_csByteAddr
   288                           psect	strings
   289                           	file	"userMacro.h"
   290                           	line	60
   291  048E                     _csByteAddr:
   292  048E  3405               	retlw	05h
   293                           	global	_dataBytesAddr
   294                           psect	strings
   295                           	file	"userMacro.h"
   296                           	line	64
   297  048F                     _dataBytesAddr:
   298  048F  3407               	retlw	07h
   299                           	global	_endByteAddr
   300                           psect	strings
   301                           	file	"userMacro.h"
   302                           	line	62
   303  0490                     _endByteAddr:
   304  0490  3406               	retlw	06h
   305                           	global	_groupNum
   306                           psect	strings
   307                           	file	"userMacro.h"
   308                           	line	24
   309  0491                     _groupNum:
   310  0491  3432               	retlw	032h
   311                           	global	_humHiAddr
   312                           psect	strings
   313                           	file	"userMacro.h"
   314                           	line	96
   315  0492                     _humHiAddr:
   316  0492  3484               	retlw	084h
   317                           	global	_humLoAddr
   318                           psect	strings
   319                           	file	"userMacro.h"
   320                           	line	98
   321  0493                     _humLoAddr:
   322  0493  3486               	retlw	086h
   323                           	global	_humStartHi
   324                           psect	strings
   325                           	file	"userMacro.h"
   326                           	line	102
   327  0494                     _humStartHi:
   328  0494  3450               	retlw	050h
   329                           	global	_humStartLo
   330                           psect	strings
   331                           	file	"userMacro.h"
   332                           	line	104
   333  0495                     _humStartLo:
   334  0495  340A               	retlw	0Ah
   335                           	global	_humValHAddr
   336                           psect	strings
   337                           	file	"userMacro.h"
   338                           	line	92
   339  0496                     _humValHAddr:
   340  0496  3480               	retlw	080h
   341                           	global	_humValLAddr
   342                           psect	strings
   343                           	file	"userMacro.h"
   344                           	line	94
   345  0497                     _humValLAddr:
   346  0497  3482               	retlw	082h
   347                           	global	_lenByteAddr
   348                           psect	strings
   349                           	file	"userMacro.h"
   350                           	line	58
   351  0498                     _lenByteAddr:
   352  0498  3404               	retlw	04h
   353                           	global	_maxCmd
   354                           psect	strings
   355                           	file	"userMacro.h"
   356                           	line	40
   357  0499                     _maxCmd:
   358  0499  340E               	retlw	0Eh
   359                           	global	_minSizeByte
   360                           psect	strings
   361                           	file	"userMacro.h"
   362                           	line	36
   363  049A                     _minSizeByte:
   364  049A  340A               	retlw	0Ah
   365                           	global	_newLineChar
   366                           psect	strings
   367                           	file	"userMacro.h"
   368                           	line	34
   369  049B                     _newLineChar:
   370  049B  340A               	retlw	0Ah
   371                           	global	_noDataLen
   372                           psect	strings
   373                           	file	"userMacro.h"
   374                           	line	38
   375  049C                     _noDataLen:
   376  049C  340A               	retlw	0Ah
   377                           	global	_readByteVal
   378                           psect	strings
   379                           	file	"userMacro.h"
   380                           	line	42
   381  049D                     _readByteVal:
   382  049D  3400               	retlw	0
   383                           	global	_rwByteAddr
   384                           psect	strings
   385                           	file	"userMacro.h"
   386                           	line	54
   387  049E                     _rwByteAddr:
   388  049E  3402               	retlw	02h
   389                           	global	_startByteAddr
   390                           psect	strings
   391                           	file	"userMacro.h"
   392                           	line	52
   393  049F                     _startByteAddr:
   394  049F  3401               	retlw	01h
   395                           	global	_tempC
   396                           psect	strings
   397                           	file	"userMacro.h"
   398                           	line	86
   399  04A0                     _tempC:
   400  04A0  3400               	retlw	0
   401                           	global	_tempF
   402                           psect	strings
   403                           	file	"userMacro.h"
   404                           	line	88
   405  04A1                     _tempF:
   406  04A1  3410               	retlw	010h
   407                           	global	_tempHiAddr
   408                           psect	strings
   409                           	file	"userMacro.h"
   410                           	line	74
   411  04A2                     _tempHiAddr:
   412  04A2  3462               	retlw	062h
   413                           	global	_tempLoAddr
   414                           psect	strings
   415                           	file	"userMacro.h"
   416                           	line	76
   417  04A3                     _tempLoAddr:
   418  04A3  3464               	retlw	064h
   419                           	global	_tempStartHi
   420                           psect	strings
   421                           	file	"userMacro.h"
   422                           	line	82
   423  04A4                     _tempStartHi:
   424  04A4  3464               	retlw	064h
   425                           	global	_tempStartLo
   426                           psect	strings
   427                           	file	"userMacro.h"
   428                           	line	84
   429  04A5                     _tempStartLo:
   430  04A5  34A0               	retlw	0A0h
   431                           	global	_tempUnitAddr
   432                           psect	strings
   433                           	file	"userMacro.h"
   434                           	line	78
   435  04A6                     _tempUnitAddr:
   436  04A6  3466               	retlw	066h
   437                           	global	_tempValHAddr
   438                           psect	strings
   439                           	file	"userMacro.h"
   440                           	line	70
   441  04A7                     _tempValHAddr:
   442  04A7  3460               	retlw	060h
   443                           	global	_tempValLAddr
   444                           psect	strings
   445                           	file	"userMacro.h"
   446                           	line	72
   447  04A8                     _tempValLAddr:
   448  04A8  3461               	retlw	061h
   449                           	global	_timeoutByte
   450                           psect	strings
   451                           	file	"userMacro.h"
   452                           	line	46
   453  04A9                     _timeoutByte:
   454  04A9  34FF               	retlw	0FFh
   455                           	global	_userEndByte
   456                           psect	strings
   457                           	file	"userMacro.h"
   458                           	line	32
   459  04AA                     _userEndByte:
   460  04AA  340A               	retlw	0Ah
   461                           	global	_userStartByte
   462                           psect	strings
   463                           	file	"userMacro.h"
   464                           	line	30
   465  04AB                     _userStartByte:
   466  04AB  34AA               	retlw	0AAh
   467                           	global	_writeByteVal
   468                           psect	strings
   469                           	file	"userMacro.h"
   470                           	line	44
   471  04AC                     _writeByteVal:
   472  04AC  3401               	retlw	01h
   473                           	global	_member2
   474                           	global	_member3
   475                           	global	_member1
   476                           	global	_classTerm
   477                           	global	_classNum
   478                           	global	_RXLenAddr
   479                           	global	_calcCSByteAddr
   480                           	global	_cmdByteAddr
   481                           	global	_csByteAddr
   482                           	global	_dataBytesAddr
   483                           	global	_endByteAddr
   484                           	global	_groupNum
   485                           	global	_humHiAddr
   486                           	global	_humLoAddr
   487                           	global	_humStartHi
   488                           	global	_humStartLo
   489                           	global	_humValHAddr
   490                           	global	_humValLAddr
   491                           	global	_lenByteAddr
   492                           	global	_maxCmd
   493                           	global	_minSizeByte
   494                           	global	_newLineChar
   495                           	global	_noDataLen
   496                           	global	_readByteVal
   497                           	global	_rwByteAddr
   498                           	global	_startByteAddr
   499                           	global	_tempC
   500                           	global	_tempF
   501                           	global	_tempHiAddr
   502                           	global	_tempLoAddr
   503                           	global	_tempStartHi
   504                           	global	_tempStartLo
   505                           	global	_tempUnitAddr
   506                           	global	_tempValHAddr
   507                           	global	_tempValLAddr
   508                           	global	_timeoutByte
   509                           	global	_userEndByte
   510                           	global	_userStartByte
   511                           	global	_writeByteVal
   512                           	global	getPacket@F1189
   513                           	global	_ADCON0
   514  001F                     _ADCON0	set	31
   515                           	global	_ADRESH
   516  001E                     _ADRESH	set	30
   517                           	global	_PORTD
   518  0008                     _PORTD	set	8
   519                           	global	_RCREG
   520  001A                     _RCREG	set	26
   521                           	global	_RCSTA
   522  0018                     _RCSTA	set	24
   523                           	global	_TXREG
   524  0019                     _TXREG	set	25
   525                           	global	_ADON
   526  00F8                     _ADON	set	248
   527                           	global	_CARRY
   528  0018                     _CARRY	set	24
   529                           	global	_GIE
   530  005F                     _GIE	set	95
   531                           	global	_GO_nDONE
   532  00FA                     _GO_nDONE	set	250
   533                           	global	_PEIE
   534  005E                     _PEIE	set	94
   535                           	global	_RCIF
   536  0065                     _RCIF	set	101
   537                           	global	_RD0
   538  0040                     _RD0	set	64
   539                           	global	_RD1
   540  0041                     _RD1	set	65
   541                           	global	_RD2
   542  0042                     _RD2	set	66
   543                           	global	_RD4
   544  0044                     _RD4	set	68
   545                           	global	_RD5
   546  0045                     _RD5	set	69
   547                           	global	_RD6
   548  0046                     _RD6	set	70
   549                           	global	_RD7
   550  0047                     _RD7	set	71
   551                           	global	_TXIF
   552  0064                     _TXIF	set	100
   553                           	global	_ADCON1
   554  009F                     _ADCON1	set	159
   555                           	global	_ADRESL
   556  009E                     _ADRESL	set	158
   557                           	global	_SPBRG
   558  0099                     _SPBRG	set	153
   559                           	global	_TRISA
   560  0085                     _TRISA	set	133
   561                           	global	_TRISD
   562  0088                     _TRISD	set	136
   563                           	global	_TXSTA
   564  0098                     _TXSTA	set	152
   565                           	global	_RCIE
   566  0465                     _RCIE	set	1125
   567                           	global	_TRISC6
   568  043E                     _TRISC6	set	1086
   569                           	global	_TRISC7
   570  043F                     _TRISC7	set	1087
   571                           	global	_EEADR
   572  010D                     _EEADR	set	269
   573                           	global	_EEDATA
   574  010C                     _EEDATA	set	268
   575                           	global	_EECON1
   576  018C                     _EECON1	set	396
   577                           	global	_EECON2
   578  018D                     _EECON2	set	397
   579                           	global	_RD
   580  0C60                     _RD	set	3168
   581                           	global	_WR
   582  0C61                     _WR	set	3169
   583                           	global	_WREN
   584  0C62                     _WREN	set	3170
   585                           	
   586  04AD                     STR_1:	
   587  04AD  3448               	retlw	72	;'H'
   588  04AE  3465               	retlw	101	;'e'
   589  04AF  346C               	retlw	108	;'l'
   590  04B0  346C               	retlw	108	;'l'
   591  04B1  346F               	retlw	111	;'o'
   592  04B2  3400               	retlw	0
   593                           psect	strings
   594                           	file	"C:\Users\GREGLA~1\AppData\Local\Temp\s1eg."
   595                           	line	#
   596                           psect cinit,class=CODE,delta=2
   597                           global start_initialization
   598  0D2E                     start_initialization:
   599                           
   600                           psect	dataBANK1,class=BANK1,space=1
   601                           global __pdataBANK1
   602  00A0                     __pdataBANK1:
   603                           	file	"main.c"
   604                           	line	53
   605  00A0                     main@F1186:
   606  00A0                            ds      9
   607                           
   608                           psect	dataBANK1
   609                           	file	"userMacro.h"
   610                           	line	26
   611  00A9                     _readError:
   612  00A9                            ds      25
   613                           
   614                           psect	bssBANK3,class=BANK3,space=1
   615                           global __pbssBANK3
   616  0190                     __pbssBANK3:
   617  0190                     getPacket@F1189:
   618  0190                            ds      50
   619                           
   620                           psect clrtext,class=CODE,delta=2
   621                           global clear_ram
   622                           ;	Called with FSR containing the base address, and
   623                           ;	W with the last address+1
   624  0C8F                     clear_ram:
   625  0C8F  0064               	clrwdt			;clear the watchdog before getting into this loop
   626  0C90                     clrloop:
   627  0C90  0180               	clrf	indf		;clear RAM location pointed to by FSR
   628  0C91  0A84               	incf	fsr,f		;increment pointer
   629  0C92  0604               	xorwf	fsr,w		;XOR with final address
   630  0C93  1903               	btfsc	status,2	;have we reached the end yet?
   631  0C94  3400               	retlw	0		;all done for this memory range, return
   632  0C95  0604               	xorwf	fsr,w		;XOR again to restore value
   633  0C96  2C90               	goto	clrloop		;do the next byte
   634                           
   635                           ; Clear objects allocated to BANK3
   636                           psect cinit,class=CODE,delta=2
   637  0D2E  1783               	bsf	status, 7	;select IRP bank2
   638  0D2F  3090               	movlw	low(__pbssBANK3)
   639  0D30  0084               	movwf	fsr
   640  0D31  30C2               	movlw	low((__pbssBANK3)+032h)
   641  0D32  120A  158A  248F   	fcall	clear_ram
              120A  158A         
   642                           global btemp
   643                           psect inittext,class=CODE,delta=2
   644                           global init_fetch,btemp
   645                           ;	Called with low address in FSR and high address in W
   646  0CEB                     init_fetch:
   647  0CEB  087E               	movf btemp,w
   648  0CEC  008A               	movwf pclath
   649  0CED  087F               	movf btemp+1,w
   650  0CEE  0082               	movwf pc
   651                           global init_ram
   652                           ;Called with:
   653                           ;	high address of idata address in btemp 
   654                           ;	low address of idata address in btemp+1 
   655                           ;	low address of data in FSR
   656                           ;	high address + 1 of data in btemp-1
   657  0CEF                     init_ram:
   658  0CEF  120A  158A  24EB   	fcall init_fetch
              120A  158A         
   659  0CF4  0080               	movwf indf,f
   660  0CF5  0A84               	incf fsr,f
   661  0CF6  0804               	movf fsr,w
   662  0CF7  067D               	xorwf btemp-1,w
   663  0CF8  1903               	btfsc status,2
   664  0CF9  3400               	retlw 0
   665  0CFA  0AFF               	incf btemp+1,f
   666  0CFB  1903               	btfsc status,2
   667  0CFC  0AFE               	incf btemp,f
   668  0CFD  2CEF               	goto init_ram
   669                           ; Initialize objects allocated to BANK1
   670                           psect cinit,class=CODE,delta=2
   671                           global init_ram, __pidataBANK1
   672  0D37  1383               	bcf	status, 7	;select IRP bank0
   673  0D38  30C2               	movlw low(__pdataBANK1+34)
   674  0D39  00FD               	movwf btemp-1,f
   675  0D3A  300D               	movlw high(__pidataBANK1)
   676  0D3B  00FE               	movwf btemp,f
   677  0D3C  3083               	movlw low(__pidataBANK1)
   678  0D3D  00FF               	movwf btemp+1,f
   679  0D3E  30A0               	movlw low(__pdataBANK1)
   680  0D3F  0084               	movwf fsr,f
   681  0D40  120A  158A  24EF   	fcall init_ram
              120A  158A         
   682                           psect cinit,class=CODE,delta=2
   683                           global end_of_initialization
   684                           
   685                           ;End of C runtime variable initialization code
   686                           
   687  0D45                     end_of_initialization:
   688  0D45  0183               clrf status
   689  0D46  120A  118A  2EFD   ljmp _main	;jump to C main() function
   690                           psect	cstackBANK1,class=BANK1,space=1
   691                           global __pcstackBANK1
   692  00C2                     __pcstackBANK1:
   693                           	global	??_selectTemp
   694  00C2                     ??_selectTemp:	; 0 bytes @ 0x0
   695                           	global	??_togE
   696  00C2                     ??_togE:	; 0 bytes @ 0x0
   697                           	global	??_initUSART
   698  00C2                     ??_initUSART:	; 0 bytes @ 0x0
   699                           	global	??_writeByte
   700  00C2                     ??_writeByte:	; 0 bytes @ 0x0
   701                           	global	??_initADC
   702  00C2                     ??_initADC:	; 0 bytes @ 0x0
   703                           	global	?_eeprom_write
   704  00C2                     ?_eeprom_write:	; 1 bytes @ 0x0
   705                           	global	?_strlen
   706  00C2                     ?_strlen:	; 2 bytes @ 0x0
   707                           	global	?_readTemp
   708  00C2                     ?_readTemp:	; 2 bytes @ 0x0
   709                           	global	writeByte@Byte
   710  00C2                     writeByte@Byte:	; 1 bytes @ 0x0
   711                           	global	eeprom_write@value
   712  00C2                     eeprom_write@value:	; 1 bytes @ 0x0
   713  00C2                     	ds	1
   714                           	global	??_eeprom_write
   715  00C3                     ??_eeprom_write:	; 0 bytes @ 0x1
   716  00C3                     	ds	1
   717                           	global	??_strlen
   718  00C4                     ??_strlen:	; 0 bytes @ 0x2
   719                           	global	??_lcdWrite
   720  00C4                     ??_lcdWrite:	; 0 bytes @ 0x2
   721                           	global	??_readTemp
   722  00C4                     ??_readTemp:	; 0 bytes @ 0x2
   723                           	global	eeprom_write@addr
   724  00C4                     eeprom_write@addr:	; 1 bytes @ 0x2
   725  00C4                     	ds	1
   726                           	global	??_initTemp
   727  00C5                     ??_initTemp:	; 0 bytes @ 0x3
   728                           	global	lcdWrite@c
   729  00C5                     lcdWrite@c:	; 1 bytes @ 0x3
   730  00C5                     	ds	1
   731                           	global	??_lcdClear
   732  00C6                     ??_lcdClear:	; 0 bytes @ 0x4
   733                           	global	??_lcdGoto
   734  00C6                     ??_lcdGoto:	; 0 bytes @ 0x4
   735                           	global	??_lcdPuts
   736  00C6                     ??_lcdPuts:	; 0 bytes @ 0x4
   737                           	global	??_getTemp
   738  00C6                     ??_getTemp:	; 0 bytes @ 0x4
   739  00C6                     	ds	1
   740                           	global	lcdPuts@s
   741  00C7                     lcdPuts@s:	; 1 bytes @ 0x5
   742                           	global	getTemp@tempReading
   743  00C7                     getTemp@tempReading:	; 2 bytes @ 0x5
   744  00C7                     	ds	1
   745                           	global	??_initLCD
   746  00C8                     ??_initLCD:	; 0 bytes @ 0x6
   747                           	global	lcdGoto@pos
   748  00C8                     lcdGoto@pos:	; 1 bytes @ 0x6
   749  00C8                     	ds	2
   750                           	global	strlen@s
   751  00CA                     strlen@s:	; 1 bytes @ 0x8
   752  00CA                     	ds	1
   753                           	global	strlen@cp
   754  00CB                     strlen@cp:	; 1 bytes @ 0x9
   755  00CB                     	ds	1
   756                           	global	??_writeString
   757  00CC                     ??_writeString:	; 0 bytes @ 0xA
   758  00CC                     	ds	1
   759                           	global	writeString@userString
   760  00CD                     writeString@userString:	; 1 bytes @ 0xB
   761  00CD                     	ds	1
   762                           	global	writeString@i
   763  00CE                     writeString@i:	; 2 bytes @ 0xC
   764  00CE                     	ds	2
   765                           	global	??_main
   766  00D0                     ??_main:	; 0 bytes @ 0xE
   767  00D0                     	ds	4
   768                           	global	main@testString
   769  00D4                     main@testString:	; 9 bytes @ 0x12
   770  00D4                     	ds	9
   771                           psect	cstackCOMMON,class=COMMON,space=1
   772                           global __pcstackCOMMON
   773  0070                     __pcstackCOMMON:
   774                           	global	??_eeprom_read
   775  0070                     ??_eeprom_read:	; 0 bytes @ 0x0
   776                           	global	?_addDataToCheckSum
   777  0070                     ?_addDataToCheckSum:	; 0 bytes @ 0x0
   778                           	global	?_selectTemp
   779  0070                     ?_selectTemp:	; 0 bytes @ 0x0
   780                           	global	?_getPacket
   781  0070                     ?_getPacket:	; 0 bytes @ 0x0
   782                           	global	?_initLCD
   783  0070                     ?_initLCD:	; 0 bytes @ 0x0
   784                           	global	?_lcdClear
   785  0070                     ?_lcdClear:	; 0 bytes @ 0x0
   786                           	global	?_lcdGoto
   787  0070                     ?_lcdGoto:	; 0 bytes @ 0x0
   788                           	global	?_lcdPuts
   789  0070                     ?_lcdPuts:	; 0 bytes @ 0x0
   790                           	global	?_readCommands
   791  0070                     ?_readCommands:	; 0 bytes @ 0x0
   792                           	global	?_writeCommands
   793  0070                     ?_writeCommands:	; 0 bytes @ 0x0
   794                           	global	??_writeCommands
   795  0070                     ??_writeCommands:	; 0 bytes @ 0x0
   796                           	global	?_togE
   797  0070                     ?_togE:	; 0 bytes @ 0x0
   798                           	global	?_lcdWrite
   799  0070                     ?_lcdWrite:	; 0 bytes @ 0x0
   800                           	global	?_initUSART
   801  0070                     ?_initUSART:	; 0 bytes @ 0x0
   802                           	global	?_writeByte
   803  0070                     ?_writeByte:	; 0 bytes @ 0x0
   804                           	global	??_readByte
   805  0070                     ??_readByte:	; 0 bytes @ 0x0
   806                           	global	?_writeString
   807  0070                     ?_writeString:	; 0 bytes @ 0x0
   808                           	global	?_readString
   809  0070                     ?_readString:	; 0 bytes @ 0x0
   810                           	global	??_makeNibble
   811  0070                     ??_makeNibble:	; 0 bytes @ 0x0
   812                           	global	?_parsePacket
   813  0070                     ?_parsePacket:	; 0 bytes @ 0x0
   814                           	global	?_initTemp
   815  0070                     ?_initTemp:	; 0 bytes @ 0x0
   816                           	global	?_getTemp
   817  0070                     ?_getTemp:	; 0 bytes @ 0x0
   818                           	global	?_initADC
   819  0070                     ?_initADC:	; 0 bytes @ 0x0
   820                           	global	?_isr
   821  0070                     ?_isr:	; 0 bytes @ 0x0
   822                           	global	?i1_writeByte
   823  0070                     ?i1_writeByte:	; 0 bytes @ 0x0
   824                           	global	??i1_writeByte
   825  0070                     ??i1_writeByte:	; 0 bytes @ 0x0
   826                           	global	?i1_writeString
   827  0070                     ?i1_writeString:	; 0 bytes @ 0x0
   828                           	global	?_eeprom_read
   829  0070                     ?_eeprom_read:	; 1 bytes @ 0x0
   830                           	global	?_readByte
   831  0070                     ?_readByte:	; 1 bytes @ 0x0
   832                           	global	?_makeNibble
   833  0070                     ?_makeNibble:	; 1 bytes @ 0x0
   834                           	global	?_main
   835  0070                     ?_main:	; 2 bytes @ 0x0
   836                           	global	?i1_strlen
   837  0070                     ?i1_strlen:	; 2 bytes @ 0x0
   838                           	global	makeNibble@tempNib
   839  0070                     makeNibble@tempNib:	; 1 bytes @ 0x0
   840                           	global	i1writeByte@Byte
   841  0070                     i1writeByte@Byte:	; 1 bytes @ 0x0
   842  0070                     	ds	1
   843                           	global	eeprom_read@addr
   844  0071                     eeprom_read@addr:	; 1 bytes @ 0x1
   845  0071                     	ds	1
   846                           	global	??i1_strlen
   847  0072                     ??i1_strlen:	; 0 bytes @ 0x2
   848                           	global	?_checkEven
   849  0072                     ?_checkEven:	; 2 bytes @ 0x2
   850                           	global	?_checkLength
   851  0072                     ?_checkLength:	; 2 bytes @ 0x2
   852                           	global	?_checkDataFrames
   853  0072                     ?_checkDataFrames:	; 2 bytes @ 0x2
   854                           	global	?_checkCS
   855  0072                     ?_checkCS:	; 2 bytes @ 0x2
   856  0072                     	ds	2
   857                           	global	??_checkEven
   858  0074                     ??_checkEven:	; 0 bytes @ 0x4
   859                           	global	??_checkLength
   860  0074                     ??_checkLength:	; 0 bytes @ 0x4
   861                           	global	??_checkDataFrames
   862  0074                     ??_checkDataFrames:	; 0 bytes @ 0x4
   863                           	global	??_checkCS
   864  0074                     ??_checkCS:	; 0 bytes @ 0x4
   865  0074                     	ds	4
   866                           	global	i1strlen@s
   867  0078                     i1strlen@s:	; 1 bytes @ 0x8
   868  0078                     	ds	1
   869                           	global	i1strlen@cp
   870  0079                     i1strlen@cp:	; 1 bytes @ 0x9
   871  0079                     	ds	1
   872                           	global	??i1_writeString
   873  007A                     ??i1_writeString:	; 0 bytes @ 0xA
   874                           	global	?i1_eeprom_write
   875  007A                     ?i1_eeprom_write:	; 1 bytes @ 0xA
   876                           	global	i1eeprom_write@value
   877  007A                     i1eeprom_write@value:	; 1 bytes @ 0xA
   878  007A                     	ds	1
   879                           	global	??i1_eeprom_write
   880  007B                     ??i1_eeprom_write:	; 0 bytes @ 0xB
   881                           	global	i1writeString@userString
   882  007B                     i1writeString@userString:	; 1 bytes @ 0xB
   883  007B                     	ds	1
   884                           	global	i1eeprom_write@addr
   885  007C                     i1eeprom_write@addr:	; 1 bytes @ 0xC
   886                           	global	i1writeString@i
   887  007C                     i1writeString@i:	; 2 bytes @ 0xC
   888  007C                     	ds	1
   889                           	global	?_makeHexByte
   890  007D                     ?_makeHexByte:	; 1 bytes @ 0xD
   891                           	global	makeHexByte@nibTwo
   892  007D                     makeHexByte@nibTwo:	; 1 bytes @ 0xD
   893                           	global	addDataToCheckSum@i
   894  007D                     addDataToCheckSum@i:	; 1 bytes @ 0xD
   895  007D                     	ds	1
   896                           	global	??_readCommands
   897  007E                     ??_readCommands:	; 0 bytes @ 0xE
   898                           	global	??_validatePacket
   899  007E                     ??_validatePacket:	; 0 bytes @ 0xE
   900                           psect	cstackBANK0,class=BANK0,space=1
   901                           global __pcstackBANK0
   902  0020                     __pcstackBANK0:
   903                           	global	??_addDataToCheckSum
   904  0020                     ??_addDataToCheckSum:	; 0 bytes @ 0x0
   905                           	global	??_readString
   906  0020                     ??_readString:	; 0 bytes @ 0x0
   907                           	global	??_makeHexByte
   908  0020                     ??_makeHexByte:	; 0 bytes @ 0x0
   909                           	global	?_checkStartByte
   910  0020                     ?_checkStartByte:	; 2 bytes @ 0x0
   911                           	global	?_checkRWByte
   912  0020                     ?_checkRWByte:	; 2 bytes @ 0x0
   913                           	global	?_checkCMDByte
   914  0020                     ?_checkCMDByte:	; 2 bytes @ 0x0
   915  0020                     	ds	2
   916                           	global	??_checkStartByte
   917  0022                     ??_checkStartByte:	; 0 bytes @ 0x2
   918                           	global	??_checkRWByte
   919  0022                     ??_checkRWByte:	; 0 bytes @ 0x2
   920                           	global	??_checkCMDByte
   921  0022                     ??_checkCMDByte:	; 0 bytes @ 0x2
   922                           	global	readString@readStorage
   923  0022                     readString@readStorage:	; 1 bytes @ 0x2
   924                           	global	makeHexByte@nibOne
   925  0022                     makeHexByte@nibOne:	; 1 bytes @ 0x2
   926  0022                     	ds	1
   927                           	global	makeHexByte@input_byte
   928  0023                     makeHexByte@input_byte:	; 1 bytes @ 0x3
   929                           	global	readString@i
   930  0023                     readString@i:	; 2 bytes @ 0x3
   931  0023                     	ds	1
   932                           	global	??_parsePacket
   933  0024                     ??_parsePacket:	; 0 bytes @ 0x4
   934                           	global	?_validatePacket
   935  0024                     ?_validatePacket:	; 2 bytes @ 0x4
   936  0024                     	ds	1
   937                           	global	readString@ch
   938  0025                     readString@ch:	; 1 bytes @ 0x5
   939  0025                     	ds	3
   940                           	global	parsePacket@dataCounter
   941  0028                     parsePacket@dataCounter:	; 2 bytes @ 0x8
   942  0028                     	ds	2
   943                           	global	parsePacket@i
   944  002A                     parsePacket@i:	; 1 bytes @ 0xA
   945  002A                     	ds	1
   946                           	global	parsePacket@dataPacket
   947  002B                     parsePacket@dataPacket:	; 1 bytes @ 0xB
   948  002B                     	ds	1
   949                           	global	??_getPacket
   950  002C                     ??_getPacket:	; 0 bytes @ 0xC
   951  002C                     	ds	4
   952                           	global	getPacket@arrStore
   953  0030                     getPacket@arrStore:	; 50 bytes @ 0x10
   954  0030                     	ds	50
   955                           	global	??_isr
   956  0062                     ??_isr:	; 0 bytes @ 0x42
   957  0062                     	ds	4
   958 ;;Data sizes: Strings 6, constant 97, data 34, bss 50, persistent 0 stack 0
   959 ;;Auto spaces:   Size  Autos    Used
   960 ;; COMMON          14     14      14
   961 ;; BANK0           80     70      70
   962 ;; BANK1           80     27      61
   963 ;; BANK3           96      0      50
   964 ;; BANK2           96      0       0
   965                           
   966 ;;
   967 ;; Pointer list with targets:
   968                           
   969 ;; i1writeString@userString	PTR unsigned char  size(1) Largest target is 25
   970 ;;		 -> readError(BANK1[25]), 
   971 ;;
   972 ;; ?i1_strlen	unsigned int  size(1) Largest target is 50
   973 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   974 ;;
   975 ;; i1strlen@s	PTR const unsigned char  size(1) Largest target is 50
   976 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   977 ;;
   978 ;; ?_readTemp	unsigned int  size(1) Largest target is 0
   979 ;;
   980 ;; ?_strlen	unsigned int  size(1) Largest target is 50
   981 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   982 ;;
   983 ;; strlen@s	PTR const unsigned char  size(1) Largest target is 50
   984 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   985 ;;
   986 ;; strlen@cp	PTR const unsigned char  size(1) Largest target is 50
   987 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   988 ;;
   989 ;; lcdPuts@s	PTR const unsigned char  size(1) Largest target is 6
   990 ;;		 -> STR_1(CODE[6]), 
   991 ;;
   992 ;; parsePacket@dataPacket	PTR unsigned char  size(1) Largest target is 50
   993 ;;		 -> getPacket@arrStore(BANK0[50]), 
   994 ;;
   995 ;; readString@readStorage	PTR unsigned char  size(1) Largest target is 50
   996 ;;		 -> getPacket@arrStore(BANK0[50]), 
   997 ;;
   998 ;; writeString@userString	PTR unsigned char  size(1) Largest target is 25
   999 ;;		 -> readError(BANK1[25]), main@testString(BANK1[9]), 
  1000 ;;
  1001                           
  1002                           
  1003 ;;
  1004 ;; Critical Paths under _main in COMMON
  1005 ;;
  1006 ;;   None.
  1007 ;;
  1008 ;; Critical Paths under _isr in COMMON
  1009 ;;
  1010 ;;   _readCommands->i1_writeString
  1011 ;;   _validatePacket->_addDataToCheckSum
  1012 ;;   _parsePacket->_makeHexByte
  1013 ;;   i1_writeString->i1_strlen
  1014 ;;   _addDataToCheckSum->i1_eeprom_write
  1015 ;;   _checkCS->_eeprom_read
  1016 ;;   _checkCMDByte->i1_eeprom_write
  1017 ;;   _checkRWByte->i1_eeprom_write
  1018 ;;   _checkStartByte->i1_eeprom_write
  1019 ;;   _checkDataFrames->_eeprom_read
  1020 ;;   _checkLength->_eeprom_read
  1021 ;;   _checkEven->_eeprom_read
  1022 ;;   _makeHexByte->i1_eeprom_write
  1023 ;;   _readString->i1_eeprom_write
  1024 ;;   i1_eeprom_write->i1_strlen
  1025 ;;
  1026 ;; Critical Paths under _main in BANK0
  1027 ;;
  1028 ;;   None.
  1029 ;;
  1030 ;; Critical Paths under _isr in BANK0
  1031 ;;
  1032 ;;   _isr->_getPacket
  1033 ;;   _getPacket->_parsePacket
  1034 ;;   _validatePacket->_checkStartByte
  1035 ;;   _validatePacket->_checkRWByte
  1036 ;;   _validatePacket->_checkCMDByte
  1037 ;;   _parsePacket->_makeHexByte
  1038 ;;
  1039 ;; Critical Paths under _main in BANK1
  1040 ;;
  1041 ;;   _main->_writeString
  1042 ;;   _initLCD->_lcdClear
  1043 ;;   _lcdPuts->_lcdWrite
  1044 ;;   _lcdGoto->_lcdWrite
  1045 ;;   _lcdClear->_lcdWrite
  1046 ;;   _lcdWrite->_togE
  1047 ;;   _getTemp->_readTemp
  1048 ;;   _initTemp->_eeprom_write
  1049 ;;   _writeString->_strlen
  1050 ;;
  1051 ;; Critical Paths under _isr in BANK1
  1052 ;;
  1053 ;;   None.
  1054 ;;
  1055 ;; Critical Paths under _main in BANK3
  1056 ;;
  1057 ;;   None.
  1058 ;;
  1059 ;; Critical Paths under _isr in BANK3
  1060 ;;
  1061 ;;   None.
  1062 ;;
  1063 ;; Critical Paths under _main in BANK2
  1064 ;;
  1065 ;;   None.
  1066 ;;
  1067 ;; Critical Paths under _isr in BANK2
  1068 ;;
  1069 ;;   None.
  1070                           
  1071 ;;
  1072 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1073 ;;
  1074                           
  1075 ;;
  1076 ;;Call Graph Tables:
  1077 ;;
  1078 ;; ---------------------------------------------------------------------------------
  1079 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1080 ;; ---------------------------------------------------------------------------------
  1081 ;; (0) _main                                                13    13      0     684
  1082 ;;                                             14 BANK1     13    13      0
  1083 ;;                          _initUSART
  1084 ;;                            _initADC
  1085 ;;                           _initTemp
  1086 ;;                            _initLCD
  1087 ;;                           _lcdClear
  1088 ;;                            _lcdGoto
  1089 ;;                            _lcdPuts
  1090 ;;                        _writeString
  1091 ;;                            _getTemp
  1092 ;; ---------------------------------------------------------------------------------
  1093 ;; (1) _initLCD                                              2     2      0      88
  1094 ;;                                              6 BANK1      2     2      0
  1095 ;;                               _togE
  1096 ;;                           _lcdWrite
  1097 ;;                           _lcdClear
  1098 ;; ---------------------------------------------------------------------------------
  1099 ;; (1) _lcdPuts                                              2     2      0      89
  1100 ;;                                              4 BANK1      2     2      0
  1101 ;;                           _lcdWrite
  1102 ;; ---------------------------------------------------------------------------------
  1103 ;; (1) _lcdGoto                                              3     3      0      66
  1104 ;;                                              4 BANK1      3     3      0
  1105 ;;                           _lcdWrite
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (1) _lcdClear                                             2     2      0      44
  1108 ;;                                              4 BANK1      2     2      0
  1109 ;;                           _lcdWrite
  1110 ;; ---------------------------------------------------------------------------------
  1111 ;; (2) _lcdWrite                                             2     2      0      44
  1112 ;;                                              2 BANK1      2     2      0
  1113 ;;                               _togE
  1114 ;; ---------------------------------------------------------------------------------
  1115 ;; (1) _getTemp                                              3     3      0      95
  1116 ;;                                              4 BANK1      3     3      0
  1117 ;;                         _selectTemp
  1118 ;;                           _readTemp
  1119 ;;                       _eeprom_write
  1120 ;; ---------------------------------------------------------------------------------
  1121 ;; (3) _togE                                                 2     2      0       0
  1122 ;;                                              0 BANK1      2     2      0
  1123 ;; ---------------------------------------------------------------------------------
  1124 ;; (1) _initTemp                                             1     1      0      50
  1125 ;;                                              3 BANK1      1     1      0
  1126 ;;                       _eeprom_write
  1127 ;; ---------------------------------------------------------------------------------
  1128 ;; (2) _readTemp                                             4     2      2       0
  1129 ;;                                              0 BANK1      4     2      2
  1130 ;; ---------------------------------------------------------------------------------
  1131 ;; (1) _writeString                                          4     4      0     223
  1132 ;;                                             10 BANK1      4     4      0
  1133 ;;                          _writeByte
  1134 ;;                             _strlen
  1135 ;; ---------------------------------------------------------------------------------
  1136 ;; (1) _initADC                                              0     0      0       0
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; (2) _selectTemp                                           0     0      0       0
  1139 ;; ---------------------------------------------------------------------------------
  1140 ;; (2) _eeprom_write                                         3     2      1      50
  1141 ;;                                              0 BANK1      3     2      1
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (2) _strlen                                              10     8      2      89
  1144 ;;                                              0 BANK1     10     8      2
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; (2) _writeByte                                            1     1      0      22
  1147 ;;                                              0 BANK1      1     1      0
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; (1) _initUSART                                            0     0      0       0
  1150 ;; ---------------------------------------------------------------------------------
  1151 ;; Estimated maximum stack depth 3
  1152 ;; ---------------------------------------------------------------------------------
  1153 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1154 ;; ---------------------------------------------------------------------------------
  1155 ;; (5) _isr                                                  4     4      0    3905
  1156 ;;                                             66 BANK0      4     4      0
  1157 ;;                          _getPacket
  1158 ;; ---------------------------------------------------------------------------------
  1159 ;; (6) _getPacket                                           54    54      0    3905
  1160 ;;                                             12 BANK0     54    54      0
  1161 ;;                     i1_eeprom_write
  1162 ;;                         _readString
  1163 ;;                        _parsePacket
  1164 ;;                     _validatePacket
  1165 ;;                        _eeprom_read
  1166 ;;                       _readCommands
  1167 ;;                      _writeCommands
  1168 ;; ---------------------------------------------------------------------------------
  1169 ;; (7) _readCommands                                         0     0      0     831
  1170 ;;                        i1_writeByte
  1171 ;;                      i1_writeString
  1172 ;;                        _eeprom_read
  1173 ;; ---------------------------------------------------------------------------------
  1174 ;; (7) _validatePacket                                       2     0      2    1215
  1175 ;;                                              4 BANK0      2     0      2
  1176 ;;                     _checkStartByte
  1177 ;;                        _checkRWByte
  1178 ;;                       _checkCMDByte
  1179 ;;                    _checkDataFrames
  1180 ;;                  _addDataToCheckSum
  1181 ;;                            _checkCS
  1182 ;; ---------------------------------------------------------------------------------
  1183 ;; (7) _parsePacket                                          8     8      0    1208
  1184 ;;                                              4 BANK0      8     8      0
  1185 ;;                        _checkLength
  1186 ;;                          _checkEven
  1187 ;;                        _makeHexByte
  1188 ;;                     i1_eeprom_write
  1189 ;;                           i1_strlen
  1190 ;;                        _eeprom_read
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (8) i1_writeString                                        4     4      0     736
  1193 ;;                                             10 COMMON     4     4      0
  1194 ;;                        i1_writeByte
  1195 ;;                           i1_strlen
  1196 ;; ---------------------------------------------------------------------------------
  1197 ;; (8) _addDataToCheckSum                                    3     3      0     236
  1198 ;;                                             13 COMMON     1     1      0
  1199 ;;                                              0 BANK0      2     2      0
  1200 ;;                        _eeprom_read
  1201 ;;                     i1_eeprom_write
  1202 ;; ---------------------------------------------------------------------------------
  1203 ;; (8) _checkCS                                              3     1      2      95
  1204 ;;                                              2 COMMON     3     1      2
  1205 ;;                        _eeprom_read
  1206 ;;                        i1_writeByte
  1207 ;; ---------------------------------------------------------------------------------
  1208 ;; (8) _checkCMDByte                                         4     2      2     263
  1209 ;;                                              0 BANK0      4     2      2
  1210 ;;                        _eeprom_read
  1211 ;;                     i1_eeprom_write
  1212 ;;                        i1_writeByte
  1213 ;; ---------------------------------------------------------------------------------
  1214 ;; (8) _checkRWByte                                          4     2      2     263
  1215 ;;                                              0 BANK0      4     2      2
  1216 ;;                        _eeprom_read
  1217 ;;                        i1_writeByte
  1218 ;;                     i1_eeprom_write
  1219 ;; ---------------------------------------------------------------------------------
  1220 ;; (8) _checkStartByte                                       4     2      2     263
  1221 ;;                                              0 BANK0      4     2      2
  1222 ;;                        _eeprom_read
  1223 ;;                        i1_writeByte
  1224 ;;                     i1_eeprom_write
  1225 ;; ---------------------------------------------------------------------------------
  1226 ;; (8) _checkDataFrames                                      8     6      2      95
  1227 ;;                                              2 COMMON     8     6      2
  1228 ;;                        _eeprom_read
  1229 ;;                        i1_writeByte
  1230 ;; ---------------------------------------------------------------------------------
  1231 ;; (8) _checkLength                                          3     1      2      95
  1232 ;;                                              2 COMMON     3     1      2
  1233 ;;                        _eeprom_read
  1234 ;;                        i1_writeByte
  1235 ;; ---------------------------------------------------------------------------------
  1236 ;; (8) _checkEven                                            3     1      2      95
  1237 ;;                                              2 COMMON     3     1      2
  1238 ;;                        _eeprom_read
  1239 ;;                        i1_writeByte
  1240 ;; ---------------------------------------------------------------------------------
  1241 ;; (8) _makeHexByte                                          5     4      1     134
  1242 ;;                                             13 COMMON     1     0      1
  1243 ;;                                              0 BANK0      4     4      0
  1244 ;;                         _makeNibble
  1245 ;;                     i1_eeprom_write (ARG)
  1246 ;;                           i1_strlen (ARG)
  1247 ;; ---------------------------------------------------------------------------------
  1248 ;; (7) _readString                                           6     6      0     399
  1249 ;;                                              0 BANK0      6     6      0
  1250 ;;                           _readByte
  1251 ;;                        i1_writeByte
  1252 ;;                     i1_eeprom_write
  1253 ;; ---------------------------------------------------------------------------------
  1254 ;; (9) i1_strlen                                            10     8      2     294
  1255 ;;                                              0 COMMON    10     8      2
  1256 ;; ---------------------------------------------------------------------------------
  1257 ;; (9) i1_eeprom_write                                       3     2      1     168
  1258 ;;                                             10 COMMON     3     2      1
  1259 ;;                         _makeNibble (ARG)
  1260 ;;                           i1_strlen (ARG)
  1261 ;;                        _eeprom_read (ARG)
  1262 ;; ---------------------------------------------------------------------------------
  1263 ;; (9) i1_writeByte                                          1     1      0      73
  1264 ;;                                              0 COMMON     1     1      0
  1265 ;; ---------------------------------------------------------------------------------
  1266 ;; (7) _writeCommands                                        0     0      0       0
  1267 ;; ---------------------------------------------------------------------------------
  1268 ;; (8) _eeprom_read                                          2     2      0      22
  1269 ;;                                              0 COMMON     2     2      0
  1270 ;; ---------------------------------------------------------------------------------
  1271 ;; (9) _makeNibble                                           1     1      0      66
  1272 ;;                                              0 COMMON     1     1      0
  1273 ;; ---------------------------------------------------------------------------------
  1274 ;; (8) _readByte                                             0     0      0       0
  1275 ;; ---------------------------------------------------------------------------------
  1276 ;; Estimated maximum stack depth 9
  1277 ;; ---------------------------------------------------------------------------------
  1278                           
  1279 ;; Call Graph Graphs:
  1280                           
  1281 ;; _main (ROOT)
  1282 ;;   _initUSART
  1283 ;;   _initADC
  1284 ;;   _initTemp
  1285 ;;     _eeprom_write
  1286 ;;   _initLCD
  1287 ;;     _togE
  1288 ;;     _lcdWrite
  1289 ;;       _togE
  1290 ;;     _lcdClear
  1291 ;;       _lcdWrite
  1292 ;;         _togE
  1293 ;;   _lcdClear
  1294 ;;     _lcdWrite
  1295 ;;       _togE
  1296 ;;   _lcdGoto
  1297 ;;     _lcdWrite
  1298 ;;       _togE
  1299 ;;   _lcdPuts
  1300 ;;     _lcdWrite
  1301 ;;       _togE
  1302 ;;   _writeString
  1303 ;;     _writeByte
  1304 ;;     _strlen
  1305 ;;   _getTemp
  1306 ;;     _selectTemp
  1307 ;;     _readTemp
  1308 ;;     _eeprom_write
  1309 ;;
  1310 ;; _isr (ROOT)
  1311 ;;   _getPacket
  1312 ;;     i1_eeprom_write
  1313 ;;       _makeNibble (ARG)
  1314 ;;       i1_strlen (ARG)
  1315 ;;       _eeprom_read (ARG)
  1316 ;;     _readString
  1317 ;;       _readByte
  1318 ;;       i1_writeByte
  1319 ;;       i1_eeprom_write
  1320 ;;         _makeNibble (ARG)
  1321 ;;         i1_strlen (ARG)
  1322 ;;         _eeprom_read (ARG)
  1323 ;;     _parsePacket
  1324 ;;       _checkLength
  1325 ;;         _eeprom_read
  1326 ;;         i1_writeByte
  1327 ;;       _checkEven
  1328 ;;         _eeprom_read
  1329 ;;         i1_writeByte
  1330 ;;       _makeHexByte
  1331 ;;         _makeNibble
  1332 ;;         i1_eeprom_write (ARG)
  1333 ;;           _makeNibble (ARG)
  1334 ;;           i1_strlen (ARG)
  1335 ;;           _eeprom_read (ARG)
  1336 ;;         i1_strlen (ARG)
  1337 ;;       i1_eeprom_write
  1338 ;;         _makeNibble (ARG)
  1339 ;;         i1_strlen (ARG)
  1340 ;;         _eeprom_read (ARG)
  1341 ;;       i1_strlen
  1342 ;;       _eeprom_read
  1343 ;;     _validatePacket
  1344 ;;       _checkStartByte
  1345 ;;         _eeprom_read
  1346 ;;         i1_writeByte
  1347 ;;         i1_eeprom_write
  1348 ;;           _makeNibble (ARG)
  1349 ;;           i1_strlen (ARG)
  1350 ;;           _eeprom_read (ARG)
  1351 ;;       _checkRWByte
  1352 ;;         _eeprom_read
  1353 ;;         i1_writeByte
  1354 ;;         i1_eeprom_write
  1355 ;;           _makeNibble (ARG)
  1356 ;;           i1_strlen (ARG)
  1357 ;;           _eeprom_read (ARG)
  1358 ;;       _checkCMDByte
  1359 ;;         _eeprom_read
  1360 ;;         i1_eeprom_write
  1361 ;;           _makeNibble (ARG)
  1362 ;;           i1_strlen (ARG)
  1363 ;;           _eeprom_read (ARG)
  1364 ;;         i1_writeByte
  1365 ;;       _checkDataFrames
  1366 ;;         _eeprom_read
  1367 ;;         i1_writeByte
  1368 ;;       _addDataToCheckSum
  1369 ;;         _eeprom_read
  1370 ;;         i1_eeprom_write
  1371 ;;           _makeNibble (ARG)
  1372 ;;           i1_strlen (ARG)
  1373 ;;           _eeprom_read (ARG)
  1374 ;;       _checkCS
  1375 ;;         _eeprom_read
  1376 ;;         i1_writeByte
  1377 ;;     _eeprom_read
  1378 ;;     _readCommands
  1379 ;;       i1_writeByte
  1380 ;;       i1_writeString
  1381 ;;         i1_writeByte
  1382 ;;         i1_strlen
  1383 ;;       _eeprom_read
  1384 ;;     _writeCommands
  1385 ;;
  1386                           
  1387 ;; Address spaces:
  1388                           
  1389 ;;Name               Size   Autos  Total    Cost      Usage
  1390 ;;BANK3               60      0      32       9       52.1%
  1391 ;;BITBANK3            60      0       0       8        0.0%
  1392 ;;SFR3                 0      0       0       4        0.0%
  1393 ;;BITSFR3              0      0       0       4        0.0%
  1394 ;;BANK2               60      0       0      11        0.0%
  1395 ;;BITBANK2            60      0       0      10        0.0%
  1396 ;;SFR2                 0      0       0       5        0.0%
  1397 ;;BITSFR2              0      0       0       5        0.0%
  1398 ;;SFR1                 0      0       0       2        0.0%
  1399 ;;BITSFR1              0      0       0       2        0.0%
  1400 ;;BANK1               50     1B      3D       7       76.3%
  1401 ;;BITBANK1            50      0       0       6        0.0%
  1402 ;;CODE                 0      0       0       0        0.0%
  1403 ;;DATA                 0      0      D1      12        0.0%
  1404 ;;ABS                  0      0      C3       3        0.0%
  1405 ;;NULL                 0      0       0       0        0.0%
  1406 ;;STACK                0      0       E       2        0.0%
  1407 ;;BANK0               50     46      46       5       87.5%
  1408 ;;BITBANK0            50      0       0       4        0.0%
  1409 ;;SFR0                 0      0       0       1        0.0%
  1410 ;;BITSFR0              0      0       0       1        0.0%
  1411 ;;COMMON               E      E       E       1      100.0%
  1412 ;;BITCOMMON            E      0       0       0        0.0%
  1413 ;;EEDATA             100      0       0       0        0.0%
  1414                           
  1415                           	global	_main
  1416                           psect	maintext,global,class=CODE,delta=2
  1417                           global __pmaintext
  1418  06FD                     __pmaintext:
  1419                           
  1420 ;; *************** function _main *****************
  1421 ;; Defined at:
  1422 ;;		line 52 in file "main.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  testString      9   18[BANK1 ] unsigned char [9]
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  2  3997[COMMON] int 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 17F/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1436 ;;      Params:         0       0       0       0       0
  1437 ;;      Locals:         0       0       9       0       0
  1438 ;;      Temps:          0       0       4       0       0
  1439 ;;      Totals:         0       0      13       0       0
  1440 ;;Total ram usage:       13 bytes
  1441 ;; Hardware stack levels required when called:    9
  1442 ;; This function calls:
  1443 ;;		_initUSART
  1444 ;;		_initADC
  1445 ;;		_initTemp
  1446 ;;		_initLCD
  1447 ;;		_lcdClear
  1448 ;;		_lcdGoto
  1449 ;;		_lcdPuts
  1450 ;;		_writeString
  1451 ;;		_getTemp
  1452 ;; This function is called by:
  1453 ;;		Startup code after reset
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           psect	maintext
  1457                           	file	"main.c"
  1458                           	line	52
  1459                           	global	__size_of_main
  1460  0058                     	__size_of_main	equ	__end_of_main-_main
  1461                           	
  1462  06FD                     _main:	
  1463 ;; hardware stack exceeded
  1464                           	opt	stack 0
  1465                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1466                           	line	53
  1467                           	
  1468  06FD                     l9777:	
  1469                           ;main.c: 53: char testString[] = "Welcome\n";
  1470  06FD  30D4               	movlw	(main@testString)&0ffh
  1471  06FE  0084               	movwf	fsr0
  1472  06FF  30A0               	movlw	low(main@F1186)
  1473  0700  1683               	bsf	status, 5	;RP0=1, select bank1
  1474  0701  1303               	bcf	status, 6	;RP1=0, select bank1
  1475  0702  00D0               	movwf	(??_main+0)^080h+0
  1476  0703  0804               	movf	fsr0,w
  1477  0704  00D1               	movwf	((??_main+0)^080h+0+1)
  1478  0705  3009               	movlw	9
  1479  0706  00D2               	movwf	((??_main+0)^080h+0+2)
  1480  0707                     u3210:
  1481  0707  0850               	movf	(??_main+0)^080h+0,w
  1482  0708  0084               	movwf	fsr0
  1483  0709  1383               	bcf	status, 7	;select IRP bank1
  1484                           	
  1485  070A  0800               	movf	indf,w
  1486  070B  00D3               	movwf	((??_main+0)^080h+0+3)
  1487  070C  0AD0               	incf	(??_main+0)^080h+0,f
  1488  070D  0851               	movf	((??_main+0)^080h+0+1),w
  1489  070E  0084               	movwf	fsr0
  1490                           	
  1491  070F  0853               	movf	((??_main+0)^080h+0+3),w
  1492  0710  0080               	movwf	indf
  1493  0711  0AD1               	incf	((??_main+0)^080h+0+1),f
  1494  0712  0BD2               	decfsz	((??_main+0)^080h+0+2),f
  1495  0713  2F07               	goto	u3210
  1496                           	line	57
  1497                           	
  1498  0714                     l9779:	
  1499                           ;main.c: 57: initUSART();
  1500  0714  120A  158A  24D9   	fcall	_initUSART
              120A  118A         
  1501                           	line	59
  1502                           	
  1503  0719                     l9781:	
  1504                           ;main.c: 59: initADC();
  1505  0719  120A  158A  24A2   	fcall	_initADC
              120A  118A         
  1506                           	line	61
  1507                           	
  1508  071E                     l9783:	
  1509                           ;main.c: 61: initTemp();
  1510  071E  120A  118A  251D   	fcall	_initTemp
              120A  118A         
  1511                           	line	63
  1512                           	
  1513  0723                     l9785:	
  1514                           ;main.c: 63: initLCD();
  1515  0723  120A  118A  2646   	fcall	_initLCD
              120A  118A         
  1516                           	line	64
  1517                           	
  1518  0728                     l9787:	
  1519                           ;main.c: 64: lcdClear();
  1520  0728  120A  158A  24FE   	fcall	_lcdClear
              120A  118A         
  1521                           	line	65
  1522                           	
  1523  072D                     l9789:	
  1524                           ;main.c: 65: lcdGoto(0x00);
  1525  072D  3000               	movlw	(0)
  1526  072E  120A  158A  2513   	fcall	_lcdGoto
              120A  118A         
  1527                           	line	66
  1528                           	
  1529  0733                     l9791:	
  1530                           ;main.c: 66: lcdPuts("Hello");
  1531  0733  3062               	movlw	((STR_1-__stringbase))&0ffh
  1532  0734  120A  158A  2642   	fcall	_lcdPuts
              120A  118A         
  1533                           	line	69
  1534                           	
  1535  0739                     l9793:	
  1536                           ;main.c: 69: writeString(testString);
  1537  0739  30D4               	movlw	(main@testString)&0ffh
  1538  073A  120A  158A  2795   	fcall	_writeString
              120A  118A         
  1539  073F  2F40               	goto	l9795
  1540                           	line	73
  1541                           ;main.c: 73: while(1){
  1542                           	
  1543  0740                     l4000:	
  1544                           	line	74
  1545                           	
  1546  0740                     l9795:	
  1547                           ;main.c: 74: getTemp();
  1548  0740  120A  158A  27CA   	fcall	_getTemp
              120A  118A         
  1549                           	line	75
  1550                           	
  1551  0745                     l9797:	
  1552                           ;main.c: 75: _delay((unsigned long)((10)*(4000000/4000.0)));
  1553                           	opt asmopt_off
  1554  0745  300D               movlw	13
  1555  0746  1683               	bsf	status, 5	;RP0=1, select bank1
  1556  0747  1303               	bcf	status, 6	;RP1=0, select bank1
  1557  0748  00D1               movwf	((??_main+0)^080h+0+1),f
  1558  0749  30FB               	movlw	251
  1559  074A  00D0               movwf	((??_main+0)^080h+0),f
  1560  074B                     u3227:
  1561  074B  0BD0               	decfsz	((??_main+0)^080h+0),f
  1562  074C  2F4B               	goto	u3227
  1563  074D  0BD1               	decfsz	((??_main+0)^080h+0+1),f
  1564  074E  2F4B               	goto	u3227
  1565  074F  2F50               	nop2
  1566                           opt asmopt_on
  1567                           
  1568  0750  2F40               	goto	l9795
  1569                           	line	76
  1570                           	
  1571  0751                     l4001:	
  1572                           	line	73
  1573  0751  2F40               	goto	l9795
  1574                           	
  1575  0752                     l4002:	
  1576                           	line	81
  1577                           ;main.c: 76: }
  1578                           ;main.c: 80: return 0;
  1579                           ;	Return value of _main is never used
  1580                           	
  1581  0752                     l4003:	
  1582                           	global	start
  1583  0752  120A  118A  2812   	ljmp	start
  1584                           	opt stack 0
  1585                           GLOBAL	__end_of_main
  1586  0755                     	__end_of_main:
  1587 ;; =============== function _main ends ============
  1588                           
  1589                           	signat	_main,90
  1590                           	global	_initLCD
  1591                           psect	text877,local,class=CODE,delta=2
  1592                           global __ptext877
  1593  0646                     __ptext877:
  1594                           
  1595 ;; *************** function _initLCD *****************
  1596 ;; Defined at:
  1597 ;;		line 6 in file "16x4LCD.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;		None               void
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, pclath, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1611 ;;      Params:         0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0
  1613 ;;      Temps:          0       0       2       0       0
  1614 ;;      Totals:         0       0       2       0       0
  1615 ;;Total ram usage:        2 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    8
  1618 ;; This function calls:
  1619 ;;		_togE
  1620 ;;		_lcdWrite
  1621 ;;		_lcdClear
  1622 ;; This function is called by:
  1623 ;;		_main
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           psect	text877
  1627                           	file	"16x4LCD.c"
  1628                           	line	6
  1629                           	global	__size_of_initLCD
  1630  005C                     	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  1631                           	
  1632  0646                     _initLCD:	
  1633 ;; hardware stack exceeded
  1634                           	opt	stack 0
  1635                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1636                           	line	7
  1637                           	
  1638  0646                     l9735:	
  1639                           ;16x4LCD.c: 7: TRISD = 0x00;
  1640  0646  1683               	bsf	status, 5	;RP0=1, select bank1
  1641  0647  1303               	bcf	status, 6	;RP1=0, select bank1
  1642  0648  0188               	clrf	(136)^080h	;volatile
  1643                           	line	8
  1644                           	
  1645  0649                     l9737:	
  1646                           ;16x4LCD.c: 8: RD1 = 0;
  1647  0649  1283               	bcf	status, 5	;RP0=0, select bank0
  1648  064A  1303               	bcf	status, 6	;RP1=0, select bank0
  1649  064B  1088               	bcf	(65/8),(65)&7
  1650                           	line	9
  1651                           	
  1652  064C                     l9739:	
  1653                           ;16x4LCD.c: 9: RD2 = 0;
  1654  064C  1108               	bcf	(66/8),(66)&7
  1655                           	line	10
  1656                           	
  1657  064D                     l9741:	
  1658                           ;16x4LCD.c: 10: RD0 = 0;
  1659  064D  1008               	bcf	(64/8),(64)&7
  1660                           	line	11
  1661                           	
  1662  064E                     l9743:	
  1663                           ;16x4LCD.c: 11: RD4 = 0;
  1664  064E  1208               	bcf	(68/8),(68)&7
  1665                           	line	12
  1666                           	
  1667  064F                     l9745:	
  1668                           ;16x4LCD.c: 12: RD5 = 0;
  1669  064F  1288               	bcf	(69/8),(69)&7
  1670                           	line	13
  1671                           	
  1672  0650                     l9747:	
  1673                           ;16x4LCD.c: 13: RD6 = 0;
  1674  0650  1308               	bcf	(70/8),(70)&7
  1675                           	line	14
  1676                           	
  1677  0651                     l9749:	
  1678                           ;16x4LCD.c: 14: RD7 = 0;
  1679  0651  1388               	bcf	(71/8),(71)&7
  1680                           	line	15
  1681                           	
  1682  0652                     l9751:	
  1683                           ;16x4LCD.c: 15: _delay((unsigned long)((15)*(4000000/4000.0)));
  1684                           	opt asmopt_off
  1685  0652  3014               movlw	20
  1686  0653  1683               	bsf	status, 5	;RP0=1, select bank1
  1687  0654  1303               	bcf	status, 6	;RP1=0, select bank1
  1688  0655  00C9               movwf	((??_initLCD+0)^080h+0+1),f
  1689  0656  3079               	movlw	121
  1690  0657  00C8               movwf	((??_initLCD+0)^080h+0),f
  1691  0658                     u3237:
  1692  0658  0BC8               	decfsz	((??_initLCD+0)^080h+0),f
  1693  0659  2E58               	goto	u3237
  1694  065A  0BC9               	decfsz	((??_initLCD+0)^080h+0+1),f
  1695  065B  2E58               	goto	u3237
  1696  065C  2E5D               	nop2
  1697                           opt asmopt_on
  1698                           
  1699                           	line	16
  1700                           	
  1701  065D                     l9753:	
  1702                           ;16x4LCD.c: 16: PORTD = 0x30;
  1703  065D  3030               	movlw	(030h)
  1704  065E  1283               	bcf	status, 5	;RP0=0, select bank0
  1705  065F  1303               	bcf	status, 6	;RP1=0, select bank0
  1706  0660  0088               	movwf	(8)	;volatile
  1707                           	line	17
  1708                           	
  1709  0661                     l9755:	
  1710                           ;16x4LCD.c: 17: togE();
  1711  0661  120A  158A  2566   	fcall	_togE
              120A  118A         
  1712                           	line	18
  1713                           	
  1714  0666                     l9757:	
  1715                           ;16x4LCD.c: 18: _delay((unsigned long)((5)*(4000000/4000.0)));
  1716                           	opt asmopt_off
  1717  0666  3007               movlw	7
  1718  0667  1683               	bsf	status, 5	;RP0=1, select bank1
  1719  0668  1303               	bcf	status, 6	;RP1=0, select bank1
  1720  0669  00C9               movwf	((??_initLCD+0)^080h+0+1),f
  1721  066A  307D               	movlw	125
  1722  066B  00C8               movwf	((??_initLCD+0)^080h+0),f
  1723  066C                     u3247:
  1724  066C  0BC8               	decfsz	((??_initLCD+0)^080h+0),f
  1725  066D  2E6C               	goto	u3247
  1726  066E  0BC9               	decfsz	((??_initLCD+0)^080h+0+1),f
  1727  066F  2E6C               	goto	u3247
  1728                           opt asmopt_on
  1729                           
  1730                           	line	19
  1731                           	
  1732  0670                     l9759:	
  1733                           ;16x4LCD.c: 19: togE();
  1734  0670  120A  158A  2566   	fcall	_togE
              120A  118A         
  1735                           	line	20
  1736                           	
  1737  0675                     l9761:	
  1738                           ;16x4LCD.c: 20: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1739                           	opt asmopt_off
  1740  0675  3042               movlw	66
  1741  0676  1683               	bsf	status, 5	;RP0=1, select bank1
  1742  0677  1303               	bcf	status, 6	;RP1=0, select bank1
  1743  0678  00C8               movwf	(??_initLCD+0)^080h+0,f
  1744  0679                     u3257:
  1745  0679  0BC8               decfsz	(??_initLCD+0)^080h+0,f
  1746  067A  2E79               	goto	u3257
  1747  067B  0064               	clrwdt
  1748                           opt asmopt_on
  1749                           
  1750                           	line	21
  1751                           	
  1752  067C                     l9763:	
  1753                           ;16x4LCD.c: 21: togE();
  1754  067C  120A  158A  2566   	fcall	_togE
              120A  118A         
  1755                           	line	22
  1756                           	
  1757  0681                     l9765:	
  1758                           ;16x4LCD.c: 22: PORTD = 0x20;
  1759  0681  3020               	movlw	(020h)
  1760  0682  1283               	bcf	status, 5	;RP0=0, select bank0
  1761  0683  1303               	bcf	status, 6	;RP1=0, select bank0
  1762  0684  0088               	movwf	(8)	;volatile
  1763                           	line	23
  1764                           	
  1765  0685                     l9767:	
  1766                           ;16x4LCD.c: 23: togE();
  1767  0685  120A  158A  2566   	fcall	_togE
              120A  118A         
  1768                           	line	25
  1769                           	
  1770  068A                     l9769:	
  1771                           ;16x4LCD.c: 25: lcdWrite(0x28);
  1772  068A  3028               	movlw	(028h)
  1773  068B  120A  158A  25F1   	fcall	_lcdWrite
              120A  118A         
  1774                           	line	26
  1775                           	
  1776  0690                     l9771:	
  1777                           ;16x4LCD.c: 26: lcdWrite(0xF0);
  1778  0690  30F0               	movlw	(0F0h)
  1779  0691  120A  158A  25F1   	fcall	_lcdWrite
              120A  118A         
  1780                           	line	27
  1781                           	
  1782  0696                     l9773:	
  1783                           ;16x4LCD.c: 27: lcdClear();
  1784  0696  120A  158A  24FE   	fcall	_lcdClear
              120A  118A         
  1785                           	line	28
  1786                           	
  1787  069B                     l9775:	
  1788                           ;16x4LCD.c: 28: lcdWrite(0x60);
  1789  069B  3060               	movlw	(060h)
  1790  069C  120A  158A  25F1   	fcall	_lcdWrite
              120A  118A         
  1791                           	line	30
  1792                           	
  1793  06A1                     l5570:	
  1794  06A1  0008               	return
  1795                           	opt stack 0
  1796                           GLOBAL	__end_of_initLCD
  1797  06A2                     	__end_of_initLCD:
  1798 ;; =============== function _initLCD ends ============
  1799                           
  1800                           	signat	_initLCD,88
  1801                           	global	_lcdPuts
  1802                           psect	text878,local,class=CODE,delta=2
  1803                           global __ptext878
  1804  0E42                     __ptext878:
  1805                           
  1806 ;; *************** function _lcdPuts *****************
  1807 ;; Defined at:
  1808 ;;		line 53 in file "16x4LCD.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  s               1    wreg     PTR const unsigned char 
  1811 ;;		 -> STR_1(6), 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  s               1    5[BANK1 ] PTR const unsigned char 
  1814 ;;		 -> STR_1(6), 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;		None               void
  1817 ;; Registers used:
  1818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1824 ;;      Params:         0       0       0       0       0
  1825 ;;      Locals:         0       0       1       0       0
  1826 ;;      Temps:          0       0       1       0       0
  1827 ;;      Totals:         0       0       2       0       0
  1828 ;;Total ram usage:        2 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    7
  1831 ;; This function calls:
  1832 ;;		_lcdWrite
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           psect	text878
  1838                           	file	"16x4LCD.c"
  1839                           	line	53
  1840                           	global	__size_of_lcdPuts
  1841  002C                     	__size_of_lcdPuts	equ	__end_of_lcdPuts-_lcdPuts
  1842                           	
  1843  0E42                     _lcdPuts:	
  1844 ;; using string table level
  1845                           	opt	stack 1
  1846                           ; Regs used in _lcdPuts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1847                           ;lcdPuts@s stored from wreg
  1848  0E42  1683               	bsf	status, 5	;RP0=1, select bank1
  1849  0E43  1303               	bcf	status, 6	;RP1=0, select bank1
  1850  0E44  00C7               	movwf	(lcdPuts@s)^080h
  1851                           	line	54
  1852                           	
  1853  0E45                     l9727:	
  1854                           ;16x4LCD.c: 54: RD0 = 1;
  1855  0E45  1283               	bcf	status, 5	;RP0=0, select bank0
  1856  0E46  1303               	bcf	status, 6	;RP1=0, select bank0
  1857  0E47  1408               	bsf	(64/8),(64)&7
  1858                           	line	55
  1859                           ;16x4LCD.c: 55: while(*s)
  1860  0E48  2E5E               	goto	l9733
  1861                           	
  1862  0E49                     l5583:	
  1863                           	line	56
  1864                           	
  1865  0E49                     l9729:	
  1866                           ;16x4LCD.c: 56: lcdWrite(*s++);
  1867  0E49  1683               	bsf	status, 5	;RP0=1, select bank1
  1868  0E4A  1303               	bcf	status, 6	;RP1=0, select bank1
  1869  0E4B  0847               	movf	(lcdPuts@s)^080h,w
  1870  0E4C  0084               	movwf	fsr0
  1871  0E4D  120A  118A  2446   	fcall	stringdir
              120A  158A         
  1872  0E52  120A  158A  25F1   	fcall	_lcdWrite
              120A  158A         
  1873                           	
  1874  0E57                     l9731:	
  1875  0E57  3001               	movlw	(01h)
  1876  0E58  1683               	bsf	status, 5	;RP0=1, select bank1
  1877  0E59  1303               	bcf	status, 6	;RP1=0, select bank1
  1878  0E5A  00C6               	movwf	(??_lcdPuts+0)^080h+0
  1879  0E5B  0846               	movf	(??_lcdPuts+0)^080h+0,w
  1880  0E5C  07C7               	addwf	(lcdPuts@s)^080h,f
  1881  0E5D  2E5E               	goto	l9733
  1882                           	
  1883  0E5E                     l5582:	
  1884                           	line	55
  1885                           	
  1886  0E5E                     l9733:	
  1887  0E5E  1683               	bsf	status, 5	;RP0=1, select bank1
  1888  0E5F  1303               	bcf	status, 6	;RP1=0, select bank1
  1889  0E60  0847               	movf	(lcdPuts@s)^080h,w
  1890  0E61  0084               	movwf	fsr0
  1891  0E62  120A  118A  2446   	fcall	stringdir
              120A  158A         
  1892  0E67  3800               	iorlw	0
  1893  0E68  1D03               	skipz
  1894  0E69  2E6B               	goto	u3201
  1895  0E6A  2E6C               	goto	u3200
  1896  0E6B                     u3201:
  1897  0E6B  2E49               	goto	l9729
  1898  0E6C                     u3200:
  1899  0E6C  2E6D               	goto	l5585
  1900                           	
  1901  0E6D                     l5584:	
  1902                           	line	57
  1903                           	
  1904  0E6D                     l5585:	
  1905  0E6D  0008               	return
  1906                           	opt stack 0
  1907                           GLOBAL	__end_of_lcdPuts
  1908  0E6E                     	__end_of_lcdPuts:
  1909 ;; =============== function _lcdPuts ends ============
  1910                           
  1911                           	signat	_lcdPuts,4216
  1912                           	global	_lcdGoto
  1913                           psect	text879,local,class=CODE,delta=2
  1914                           global __ptext879
  1915  0D13                     __ptext879:
  1916                           
  1917 ;; *************** function _lcdGoto *****************
  1918 ;; Defined at:
  1919 ;;		line 64 in file "16x4LCD.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  pos             1    wreg     unsigned char 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  pos             1    6[BANK1 ] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;		None               void
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         0       0       0       0       0
  1934 ;;      Locals:         0       0       1       0       0
  1935 ;;      Temps:          0       0       2       0       0
  1936 ;;      Totals:         0       0       3       0       0
  1937 ;;Total ram usage:        3 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    7
  1940 ;; This function calls:
  1941 ;;		_lcdWrite
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           psect	text879
  1947                           	file	"16x4LCD.c"
  1948                           	line	64
  1949                           	global	__size_of_lcdGoto
  1950  001B                     	__size_of_lcdGoto	equ	__end_of_lcdGoto-_lcdGoto
  1951                           	
  1952  0D13                     _lcdGoto:	
  1953                           	opt	stack 0
  1954                           ; Regs used in _lcdGoto: [wreg+status,2+status,0+pclath+cstack]
  1955                           ;lcdGoto@pos stored from wreg
  1956  0D13  1683               	bsf	status, 5	;RP0=1, select bank1
  1957  0D14  1303               	bcf	status, 6	;RP1=0, select bank1
  1958  0D15  00C8               	movwf	(lcdGoto@pos)^080h
  1959                           	line	65
  1960                           	
  1961  0D16                     l9721:	
  1962                           ;16x4LCD.c: 65: RD0 = 0;
  1963  0D16  1283               	bcf	status, 5	;RP0=0, select bank0
  1964  0D17  1303               	bcf	status, 6	;RP1=0, select bank0
  1965  0D18  1008               	bcf	(64/8),(64)&7
  1966                           	line	66
  1967                           	
  1968  0D19                     l9723:	
  1969                           ;16x4LCD.c: 66: lcdWrite(0x80+pos);
  1970  0D19  1683               	bsf	status, 5	;RP0=1, select bank1
  1971  0D1A  1303               	bcf	status, 6	;RP1=0, select bank1
  1972  0D1B  0848               	movf	(lcdGoto@pos)^080h,w
  1973  0D1C  3E80               	addlw	080h
  1974  0D1D  120A  158A  25F1   	fcall	_lcdWrite
              120A  158A         
  1975                           	line	67
  1976                           	
  1977  0D22                     l9725:	
  1978                           ;16x4LCD.c: 67: _delay((unsigned long)((10)*(4000000/4000.0)));
  1979                           	opt asmopt_off
  1980  0D22  300D               movlw	13
  1981  0D23  1683               	bsf	status, 5	;RP0=1, select bank1
  1982  0D24  1303               	bcf	status, 6	;RP1=0, select bank1
  1983  0D25  00C7               movwf	((??_lcdGoto+0)^080h+0+1),f
  1984  0D26  30FB               	movlw	251
  1985  0D27  00C6               movwf	((??_lcdGoto+0)^080h+0),f
  1986  0D28                     u3267:
  1987  0D28  0BC6               	decfsz	((??_lcdGoto+0)^080h+0),f
  1988  0D29  2D28               	goto	u3267
  1989  0D2A  0BC7               	decfsz	((??_lcdGoto+0)^080h+0+1),f
  1990  0D2B  2D28               	goto	u3267
  1991  0D2C  2D2D               	nop2
  1992                           opt asmopt_on
  1993                           
  1994                           	line	68
  1995                           	
  1996  0D2D                     l5591:	
  1997  0D2D  0008               	return
  1998                           	opt stack 0
  1999                           GLOBAL	__end_of_lcdGoto
  2000  0D2E                     	__end_of_lcdGoto:
  2001 ;; =============== function _lcdGoto ends ============
  2002                           
  2003                           	signat	_lcdGoto,4216
  2004                           	global	_lcdClear
  2005                           psect	text880,local,class=CODE,delta=2
  2006                           global __ptext880
  2007  0CFE                     __ptext880:
  2008                           
  2009 ;; *************** function _lcdClear *****************
  2010 ;; Defined at:
  2011 ;;		line 47 in file "16x4LCD.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;		None               void
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2025 ;;      Params:         0       0       0       0       0
  2026 ;;      Locals:         0       0       0       0       0
  2027 ;;      Temps:          0       0       2       0       0
  2028 ;;      Totals:         0       0       2       0       0
  2029 ;;Total ram usage:        2 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    7
  2032 ;; This function calls:
  2033 ;;		_lcdWrite
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;;		_initLCD
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           psect	text880
  2040                           	file	"16x4LCD.c"
  2041                           	line	47
  2042                           	global	__size_of_lcdClear
  2043  0015                     	__size_of_lcdClear	equ	__end_of_lcdClear-_lcdClear
  2044                           	
  2045  0CFE                     _lcdClear:	
  2046                           	opt	stack 0
  2047                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  2048                           	line	48
  2049                           	
  2050  0CFE                     l9715:	
  2051                           ;16x4LCD.c: 48: RD0 = 0;
  2052  0CFE  1283               	bcf	status, 5	;RP0=0, select bank0
  2053  0CFF  1303               	bcf	status, 6	;RP1=0, select bank0
  2054  0D00  1008               	bcf	(64/8),(64)&7
  2055                           	line	49
  2056                           	
  2057  0D01                     l9717:	
  2058                           ;16x4LCD.c: 49: lcdWrite(0x10);
  2059  0D01  3010               	movlw	(010h)
  2060  0D02  120A  158A  25F1   	fcall	_lcdWrite
              120A  158A         
  2061                           	line	50
  2062                           	
  2063  0D07                     l9719:	
  2064                           ;16x4LCD.c: 50: _delay((unsigned long)((2)*(4000000/4000.0)));
  2065                           	opt asmopt_off
  2066  0D07  3003               movlw	3
  2067  0D08  1683               	bsf	status, 5	;RP0=1, select bank1
  2068  0D09  1303               	bcf	status, 6	;RP1=0, select bank1
  2069  0D0A  00C7               movwf	((??_lcdClear+0)^080h+0+1),f
  2070  0D0B  3097               	movlw	151
  2071  0D0C  00C6               movwf	((??_lcdClear+0)^080h+0),f
  2072  0D0D                     u3277:
  2073  0D0D  0BC6               	decfsz	((??_lcdClear+0)^080h+0),f
  2074  0D0E  2D0D               	goto	u3277
  2075  0D0F  0BC7               	decfsz	((??_lcdClear+0)^080h+0+1),f
  2076  0D10  2D0D               	goto	u3277
  2077  0D11  2D12               	nop2
  2078                           opt asmopt_on
  2079                           
  2080                           	line	51
  2081                           	
  2082  0D12                     l5579:	
  2083  0D12  0008               	return
  2084                           	opt stack 0
  2085                           GLOBAL	__end_of_lcdClear
  2086  0D13                     	__end_of_lcdClear:
  2087 ;; =============== function _lcdClear ends ============
  2088                           
  2089                           	signat	_lcdClear,88
  2090                           	global	_lcdWrite
  2091                           psect	text881,local,class=CODE,delta=2
  2092                           global __ptext881
  2093  0DF1                     __ptext881:
  2094                           
  2095 ;; *************** function _lcdWrite *****************
  2096 ;; Defined at:
  2097 ;;		line 39 in file "16x4LCD.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  c               1    wreg     unsigned char 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  c               1    3[BANK1 ] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;		None               void
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0, pclath, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         0       0       1       0       0
  2113 ;;      Temps:          0       0       1       0       0
  2114 ;;      Totals:         0       0       2       0       0
  2115 ;;Total ram usage:        2 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    6
  2118 ;; This function calls:
  2119 ;;		_togE
  2120 ;; This function is called by:
  2121 ;;		_initLCD
  2122 ;;		_lcdClear
  2123 ;;		_lcdPuts
  2124 ;;		_lcdGoto
  2125 ;;		_lcdPutch
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           psect	text881
  2129                           	file	"16x4LCD.c"
  2130                           	line	39
  2131                           	global	__size_of_lcdWrite
  2132  0028                     	__size_of_lcdWrite	equ	__end_of_lcdWrite-_lcdWrite
  2133                           	
  2134  0DF1                     _lcdWrite:	
  2135                           	opt	stack 0
  2136                           ; Regs used in _lcdWrite: [wreg+status,2+status,0+pclath+cstack]
  2137                           ;lcdWrite@c stored from wreg
  2138  0DF1  1683               	bsf	status, 5	;RP0=1, select bank1
  2139  0DF2  1303               	bcf	status, 6	;RP1=0, select bank1
  2140  0DF3  00C5               	movwf	(lcdWrite@c)^080h
  2141                           	line	40
  2142                           	
  2143  0DF4                     l9705:	
  2144                           ;16x4LCD.c: 40: _delay((unsigned long)((40)*(4000000/4000000.0)));
  2145                           	opt asmopt_off
  2146  0DF4  300D               movlw	13
  2147  0DF5  00C4               movwf	(??_lcdWrite+0)^080h+0,f
  2148  0DF6                     u3287:
  2149  0DF6  0BC4               decfsz	(??_lcdWrite+0)^080h+0,f
  2150  0DF7  2DF6               	goto	u3287
  2151                           opt asmopt_on
  2152                           
  2153                           	line	41
  2154                           	
  2155  0DF8                     l9707:	
  2156                           ;16x4LCD.c: 41: PORTD = ((c >> 4) & 0xF0);
  2157  0DF8  1683               	bsf	status, 5	;RP0=1, select bank1
  2158  0DF9  1303               	bcf	status, 6	;RP1=0, select bank1
  2159  0DFA  0845               	movf	(lcdWrite@c)^080h,w
  2160  0DFB  00C4               	movwf	(??_lcdWrite+0)^080h+0
  2161  0DFC  3004               	movlw	04h
  2162  0DFD                     u3195:
  2163  0DFD  1003               	clrc
  2164  0DFE  0CC4               	rrf	(??_lcdWrite+0)^080h+0,f
  2165  0DFF  3EFF               	addlw	-1
  2166  0E00  1D03               	skipz
  2167  0E01  2DFD               	goto	u3195
  2168  0E02  0844               	movf	0+(??_lcdWrite+0)^080h+0,w
  2169  0E03  39F0               	andlw	0F0h
  2170  0E04  1283               	bcf	status, 5	;RP0=0, select bank0
  2171  0E05  1303               	bcf	status, 6	;RP1=0, select bank0
  2172  0E06  0088               	movwf	(8)	;volatile
  2173                           	line	42
  2174                           	
  2175  0E07                     l9709:	
  2176                           ;16x4LCD.c: 42: togE();
  2177  0E07  120A  158A  2566   	fcall	_togE
              120A  158A         
  2178                           	line	43
  2179                           	
  2180  0E0C                     l9711:	
  2181                           ;16x4LCD.c: 43: PORTD = (c & 0xF0);
  2182  0E0C  1683               	bsf	status, 5	;RP0=1, select bank1
  2183  0E0D  1303               	bcf	status, 6	;RP1=0, select bank1
  2184  0E0E  0845               	movf	(lcdWrite@c)^080h,w
  2185  0E0F  39F0               	andlw	0F0h
  2186  0E10  1283               	bcf	status, 5	;RP0=0, select bank0
  2187  0E11  1303               	bcf	status, 6	;RP1=0, select bank0
  2188  0E12  0088               	movwf	(8)	;volatile
  2189                           	line	44
  2190                           	
  2191  0E13                     l9713:	
  2192                           ;16x4LCD.c: 44: togE();
  2193  0E13  120A  158A  2566   	fcall	_togE
              120A  158A         
  2194                           	line	45
  2195                           	
  2196  0E18                     l5576:	
  2197  0E18  0008               	return
  2198                           	opt stack 0
  2199                           GLOBAL	__end_of_lcdWrite
  2200  0E19                     	__end_of_lcdWrite:
  2201 ;; =============== function _lcdWrite ends ============
  2202                           
  2203                           	signat	_lcdWrite,4216
  2204                           	global	_getTemp
  2205                           psect	text882,local,class=CODE,delta=2
  2206                           global __ptext882
  2207  0FCA                     __ptext882:
  2208                           
  2209 ;; *************** function _getTemp *****************
  2210 ;; Defined at:
  2211 ;;		line 45 in file "Temperature.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  tempReading     2    5[BANK1 ] unsigned int 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;		None               void
  2218 ;; Registers used:
  2219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2225 ;;      Params:         0       0       0       0       0
  2226 ;;      Locals:         0       0       2       0       0
  2227 ;;      Temps:          0       0       1       0       0
  2228 ;;      Totals:         0       0       3       0       0
  2229 ;;Total ram usage:        3 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    6
  2232 ;; This function calls:
  2233 ;;		_selectTemp
  2234 ;;		_readTemp
  2235 ;;		_eeprom_write
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           psect	text882
  2241                           	file	"Temperature.c"
  2242                           	global	__size_of_getTemp
  2243  0036                     	__size_of_getTemp	equ	__end_of_getTemp-_getTemp
  2244                           	
  2245  0FCA                     _getTemp:	
  2246                           	opt	stack 1
  2247                           ; Regs used in _getTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2248                           	line	48
  2249                           	
  2250  0FCA                     l9697:	
  2251                           ;Temperature.c: 46: unsigned int tempReading;
  2252                           ;Temperature.c: 48: selectTemp();
  2253  0FCA  120A  158A  248A   	fcall	_selectTemp
              120A  158A         
  2254                           	line	50
  2255                           	
  2256  0FCF                     l9699:	
  2257                           ;Temperature.c: 50: tempReading = readTemp();
  2258  0FCF  120A  158A  2619   	fcall	_readTemp
              120A  158A         
  2259  0FD4  1683               	bsf	status, 5	;RP0=1, select bank1
  2260  0FD5  1303               	bcf	status, 6	;RP1=0, select bank1
  2261  0FD6  0843               	movf	(1+(?_readTemp))^080h,w
  2262  0FD7  01C8               	clrf	(getTemp@tempReading+1)^080h
  2263  0FD8  07C8               	addwf	(getTemp@tempReading+1)^080h
  2264  0FD9  0842               	movf	(0+(?_readTemp))^080h,w
  2265  0FDA  01C7               	clrf	(getTemp@tempReading)^080h
  2266  0FDB  07C7               	addwf	(getTemp@tempReading)^080h
  2267                           
  2268                           	line	52
  2269                           	
  2270  0FDC                     l9701:	
  2271                           ;Temperature.c: 52: eeprom_write(tempValLAddr,tempReading);
  2272  0FDC  0847               	movf	(getTemp@tempReading)^080h,w
  2273  0FDD  00C6               	movwf	(??_getTemp+0)^080h+0
  2274  0FDE  0846               	movf	(??_getTemp+0)^080h+0,w
  2275  0FDF  00C2               	movwf	(?_eeprom_write)^080h
  2276  0FE0  305D               	movlw	(_tempValLAddr-__stringbase)
  2277  0FE1  0084               	movwf	fsr0
  2278  0FE2  120A  118A  2446   	fcall	stringdir
              120A  158A         
  2279  0FE7  120A  118A  27A6   	fcall	_eeprom_write
              120A  158A         
  2280                           	line	54
  2281                           	
  2282  0FEC                     l9703:	
  2283                           ;Temperature.c: 54: eeprom_write(tempValHAddr+1,tempReading>>8);
  2284  0FEC  1683               	bsf	status, 5	;RP0=1, select bank1
  2285  0FED  1303               	bcf	status, 6	;RP1=0, select bank1
  2286  0FEE  0848               	movf	(getTemp@tempReading+1)^080h,w
  2287  0FEF  00C6               	movwf	(??_getTemp+0)^080h+0
  2288  0FF0  0846               	movf	(??_getTemp+0)^080h+0,w
  2289  0FF1  00C2               	movwf	(?_eeprom_write)^080h
  2290  0FF2  305C               	movlw	(_tempValHAddr-__stringbase)
  2291  0FF3  0084               	movwf	fsr0
  2292  0FF4  120A  118A  2446   	fcall	stringdir
              120A  158A         
  2293  0FF9  3E01               	addlw	01h
  2294  0FFA  120A  118A  27A6   	fcall	_eeprom_write
              120A  158A         
  2295                           	line	55
  2296                           	
  2297  0FFF                     l2422:	
  2298  0FFF  0008               	return
  2299                           	opt stack 0
  2300                           GLOBAL	__end_of_getTemp
  2301  1000                     	__end_of_getTemp:
  2302 ;; =============== function _getTemp ends ============
  2303                           
  2304                           	signat	_getTemp,88
  2305                           	global	_togE
  2306                           psect	text883,local,class=CODE,delta=2
  2307                           global __ptext883
  2308  0D66                     __ptext883:
  2309                           
  2310 ;; *************** function _togE *****************
  2311 ;; Defined at:
  2312 ;;		line 32 in file "16x4LCD.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;		None               void
  2319 ;; Registers used:
  2320 ;;		wreg
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2326 ;;      Params:         0       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0
  2328 ;;      Temps:          0       0       2       0       0
  2329 ;;      Totals:         0       0       2       0       0
  2330 ;;Total ram usage:        2 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; Hardware stack levels required when called:    5
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		_initLCD
  2337 ;;		_lcdWrite
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           psect	text883
  2341                           	file	"16x4LCD.c"
  2342                           	line	32
  2343                           	global	__size_of_togE
  2344  001D                     	__size_of_togE	equ	__end_of_togE-_togE
  2345                           	
  2346  0D66                     _togE:	
  2347                           	opt	stack 0
  2348                           ; Regs used in _togE: [wreg]
  2349                           	line	33
  2350                           	
  2351  0D66                     l9691:	
  2352                           ;16x4LCD.c: 33: RD2 = 1;
  2353  0D66  1283               	bcf	status, 5	;RP0=0, select bank0
  2354  0D67  1303               	bcf	status, 6	;RP1=0, select bank0
  2355  0D68  1508               	bsf	(66/8),(66)&7
  2356                           	line	34
  2357                           	
  2358  0D69                     l9693:	
  2359                           ;16x4LCD.c: 34: _delay((unsigned long)((2)*(4000000/4000.0)));
  2360                           	opt asmopt_off
  2361  0D69  3003               movlw	3
  2362  0D6A  1683               	bsf	status, 5	;RP0=1, select bank1
  2363  0D6B  1303               	bcf	status, 6	;RP1=0, select bank1
  2364  0D6C  00C3               movwf	((??_togE+0)^080h+0+1),f
  2365  0D6D  3097               	movlw	151
  2366  0D6E  00C2               movwf	((??_togE+0)^080h+0),f
  2367  0D6F                     u3297:
  2368  0D6F  0BC2               	decfsz	((??_togE+0)^080h+0),f
  2369  0D70  2D6F               	goto	u3297
  2370  0D71  0BC3               	decfsz	((??_togE+0)^080h+0+1),f
  2371  0D72  2D6F               	goto	u3297
  2372  0D73  2D74               	nop2
  2373                           opt asmopt_on
  2374                           
  2375                           	line	35
  2376                           	
  2377  0D74                     l9695:	
  2378                           ;16x4LCD.c: 35: RD2 = 0;
  2379  0D74  1283               	bcf	status, 5	;RP0=0, select bank0
  2380  0D75  1303               	bcf	status, 6	;RP1=0, select bank0
  2381  0D76  1108               	bcf	(66/8),(66)&7
  2382                           	line	36
  2383                           ;16x4LCD.c: 36: _delay((unsigned long)((2)*(4000000/4000.0)));
  2384                           	opt asmopt_off
  2385  0D77  3003               movlw	3
  2386  0D78  1683               	bsf	status, 5	;RP0=1, select bank1
  2387  0D79  1303               	bcf	status, 6	;RP1=0, select bank1
  2388  0D7A  00C3               movwf	((??_togE+0)^080h+0+1),f
  2389  0D7B  3097               	movlw	151
  2390  0D7C  00C2               movwf	((??_togE+0)^080h+0),f
  2391  0D7D                     u3307:
  2392  0D7D  0BC2               	decfsz	((??_togE+0)^080h+0),f
  2393  0D7E  2D7D               	goto	u3307
  2394  0D7F  0BC3               	decfsz	((??_togE+0)^080h+0+1),f
  2395  0D80  2D7D               	goto	u3307
  2396  0D81  2D82               	nop2
  2397                           opt asmopt_on
  2398                           
  2399                           	line	37
  2400                           	
  2401  0D82                     l5573:	
  2402  0D82  0008               	return
  2403                           	opt stack 0
  2404                           GLOBAL	__end_of_togE
  2405  0D83                     	__end_of_togE:
  2406 ;; =============== function _togE ends ============
  2407                           
  2408                           	signat	_togE,88
  2409                           	global	_initTemp
  2410                           psect	text884,local,class=CODE,delta=2
  2411                           global __ptext884
  2412  051D                     __ptext884:
  2413                           
  2414 ;; *************** function _initTemp *****************
  2415 ;; Defined at:
  2416 ;;		line 24 in file "Temperature.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;		None               void
  2423 ;; Registers used:
  2424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         0       0       0       0       0
  2431 ;;      Locals:         0       0       0       0       0
  2432 ;;      Temps:          0       0       1       0       0
  2433 ;;      Totals:         0       0       1       0       0
  2434 ;;Total ram usage:        1 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    6
  2437 ;; This function calls:
  2438 ;;		_eeprom_write
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           psect	text884
  2444                           	file	"Temperature.c"
  2445                           	line	24
  2446                           	global	__size_of_initTemp
  2447  0067                     	__size_of_initTemp	equ	__end_of_initTemp-_initTemp
  2448                           	
  2449  051D                     _initTemp:	
  2450                           	opt	stack 1
  2451                           ; Regs used in _initTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2452                           	line	26
  2453                           	
  2454  051D                     l9689:	
  2455                           ;Temperature.c: 26: eeprom_write(tempValHAddr,0x00);
  2456  051D  1683               	bsf	status, 5	;RP0=1, select bank1
  2457  051E  1303               	bcf	status, 6	;RP1=0, select bank1
  2458  051F  01C2               	clrf	(?_eeprom_write)^080h
  2459  0520  305C               	movlw	(_tempValHAddr-__stringbase)
  2460  0521  0084               	movwf	fsr0
  2461  0522  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2462  0527  120A  118A  27A6   	fcall	_eeprom_write
              120A  118A         
  2463                           	line	27
  2464                           ;Temperature.c: 27: eeprom_write(tempValLAddr, 0x00);
  2465  052C  1683               	bsf	status, 5	;RP0=1, select bank1
  2466  052D  1303               	bcf	status, 6	;RP1=0, select bank1
  2467  052E  01C2               	clrf	(?_eeprom_write)^080h
  2468  052F  305D               	movlw	(_tempValLAddr-__stringbase)
  2469  0530  0084               	movwf	fsr0
  2470  0531  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2471  0536  120A  118A  27A6   	fcall	_eeprom_write
              120A  118A         
  2472                           	line	28
  2473                           ;Temperature.c: 28: eeprom_write(tempHiAddr, tempStartHi);
  2474  053B  3059               	movlw	(_tempStartHi-__stringbase)
  2475  053C  0084               	movwf	fsr0
  2476  053D  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2477  0542  1683               	bsf	status, 5	;RP0=1, select bank1
  2478  0543  1303               	bcf	status, 6	;RP1=0, select bank1
  2479  0544  00C5               	movwf	(??_initTemp+0)^080h+0
  2480  0545  0845               	movf	(??_initTemp+0)^080h+0,w
  2481  0546  00C2               	movwf	(?_eeprom_write)^080h
  2482  0547  3057               	movlw	(_tempHiAddr-__stringbase)
  2483  0548  0084               	movwf	fsr0
  2484  0549  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2485  054E  120A  118A  27A6   	fcall	_eeprom_write
              120A  118A         
  2486                           	line	29
  2487                           ;Temperature.c: 29: eeprom_write(tempLoAddr, tempStartLo);
  2488  0553  305A               	movlw	(_tempStartLo-__stringbase)
  2489  0554  0084               	movwf	fsr0
  2490  0555  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2491  055A  1683               	bsf	status, 5	;RP0=1, select bank1
  2492  055B  1303               	bcf	status, 6	;RP1=0, select bank1
  2493  055C  00C5               	movwf	(??_initTemp+0)^080h+0
  2494  055D  0845               	movf	(??_initTemp+0)^080h+0,w
  2495  055E  00C2               	movwf	(?_eeprom_write)^080h
  2496  055F  3058               	movlw	(_tempLoAddr-__stringbase)
  2497  0560  0084               	movwf	fsr0
  2498  0561  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2499  0566  120A  118A  27A6   	fcall	_eeprom_write
              120A  118A         
  2500                           	line	30
  2501                           ;Temperature.c: 30: eeprom_write(tempUnitAddr, tempC);
  2502  056B  3055               	movlw	(_tempC-__stringbase)
  2503  056C  0084               	movwf	fsr0
  2504  056D  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2505  0572  1683               	bsf	status, 5	;RP0=1, select bank1
  2506  0573  1303               	bcf	status, 6	;RP1=0, select bank1
  2507  0574  00C5               	movwf	(??_initTemp+0)^080h+0
  2508  0575  0845               	movf	(??_initTemp+0)^080h+0,w
  2509  0576  00C2               	movwf	(?_eeprom_write)^080h
  2510  0577  305B               	movlw	(_tempUnitAddr-__stringbase)
  2511  0578  0084               	movwf	fsr0
  2512  0579  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2513  057E  120A  118A  27A6   	fcall	_eeprom_write
              120A  118A         
  2514                           	line	31
  2515                           	
  2516  0583                     l2410:	
  2517  0583  0008               	return
  2518                           	opt stack 0
  2519                           GLOBAL	__end_of_initTemp
  2520  0584                     	__end_of_initTemp:
  2521 ;; =============== function _initTemp ends ============
  2522                           
  2523                           	signat	_initTemp,88
  2524                           	global	_readTemp
  2525                           psect	text885,local,class=CODE,delta=2
  2526                           global __ptext885
  2527  0E19                     __ptext885:
  2528                           
  2529 ;; *************** function _readTemp *****************
  2530 ;; Defined at:
  2531 ;;		line 7 in file "Temperature.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  2    0[BANK1 ] unsigned int 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0, btemp+1
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       0       2       0       0
  2546 ;;      Locals:         0       0       0       0       0
  2547 ;;      Temps:          0       0       2       0       0
  2548 ;;      Totals:         0       0       4       0       0
  2549 ;;Total ram usage:        4 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    5
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_getTemp
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           psect	text885
  2559                           	file	"Temperature.c"
  2560                           	line	7
  2561                           	global	__size_of_readTemp
  2562  0029                     	__size_of_readTemp	equ	__end_of_readTemp-_readTemp
  2563                           	
  2564  0E19                     _readTemp:	
  2565                           	opt	stack 1
  2566                           ; Regs used in _readTemp: [wreg+status,2+status,0+btemp+1]
  2567                           	line	9
  2568                           	
  2569  0E19                     l9679:	
  2570                           ;Temperature.c: 9: ADON = 1;
  2571  0E19  1283               	bcf	status, 5	;RP0=0, select bank0
  2572  0E1A  1303               	bcf	status, 6	;RP1=0, select bank0
  2573  0E1B  141F               	bsf	(248/8),(248)&7
  2574                           	line	13
  2575                           	
  2576  0E1C                     l9681:	
  2577                           ;Temperature.c: 13: _delay((unsigned long)((10)*(4000000/4000.0)));
  2578                           	opt asmopt_off
  2579  0E1C  300D               movlw	13
  2580  0E1D  1683               	bsf	status, 5	;RP0=1, select bank1
  2581  0E1E  1303               	bcf	status, 6	;RP1=0, select bank1
  2582  0E1F  00C5               movwf	((??_readTemp+0)^080h+0+1),f
  2583  0E20  30FB               	movlw	251
  2584  0E21  00C4               movwf	((??_readTemp+0)^080h+0),f
  2585  0E22                     u3317:
  2586  0E22  0BC4               	decfsz	((??_readTemp+0)^080h+0),f
  2587  0E23  2E22               	goto	u3317
  2588  0E24  0BC5               	decfsz	((??_readTemp+0)^080h+0+1),f
  2589  0E25  2E22               	goto	u3317
  2590  0E26  2E27               	nop2
  2591                           opt asmopt_on
  2592                           
  2593                           	line	15
  2594                           	
  2595  0E27                     l9683:	
  2596                           ;Temperature.c: 15: GO_nDONE = 1;
  2597  0E27  1283               	bcf	status, 5	;RP0=0, select bank0
  2598  0E28  1303               	bcf	status, 6	;RP1=0, select bank0
  2599  0E29  151F               	bsf	(250/8),(250)&7
  2600                           	line	18
  2601                           ;Temperature.c: 18: while(GO_nDONE);
  2602  0E2A  2E2B               	goto	l2404
  2603                           	
  2604  0E2B                     l2405:	
  2605                           	
  2606  0E2B                     l2404:	
  2607  0E2B  191F               	btfsc	(250/8),(250)&7
  2608  0E2C  2E2E               	goto	u3181
  2609  0E2D  2E2F               	goto	u3180
  2610  0E2E                     u3181:
  2611  0E2E  2E2B               	goto	l2404
  2612  0E2F                     u3180:
  2613  0E2F  2E30               	goto	l9685
  2614                           	
  2615  0E30                     l2406:	
  2616                           	line	21
  2617                           	
  2618  0E30                     l9685:	
  2619                           ;Temperature.c: 21: return ((ADRESH<<8)+ADRESL);
  2620  0E30  081E               	movf	(30),w	;volatile
  2621  0E31  1683               	bsf	status, 5	;RP0=1, select bank1
  2622  0E32  1303               	bcf	status, 6	;RP1=0, select bank1
  2623  0E33  00C4               	movwf	(??_readTemp+0)^080h+0
  2624  0E34  01C5               	clrf	(??_readTemp+0)^080h+0+1
  2625  0E35  0844               	movf	(??_readTemp+0)^080h+0,w
  2626  0E36  00C5               	movwf	(??_readTemp+0)^080h+1
  2627  0E37  01C4               	clrf	(??_readTemp+0)^080h+0
  2628  0E38  081E               	movf	(158)^080h,w	;volatile
  2629  0E39  0744               	addwf	0+(??_readTemp+0)^080h+0,w
  2630  0E3A  00C2               	movwf	(?_readTemp)^080h
  2631  0E3B  3000               	movlw	0
  2632  0E3C  1803               	skipnc
  2633  0E3D  3001               	movlw	1
  2634  0E3E  0745               	addwf	1+(??_readTemp+0)^080h+0,w
  2635  0E3F  00C3               	movwf	1+(?_readTemp)^080h
  2636  0E40  2E41               	goto	l2407
  2637                           	
  2638  0E41                     l9687:	
  2639                           	line	22
  2640                           	
  2641  0E41                     l2407:	
  2642  0E41  0008               	return
  2643                           	opt stack 0
  2644                           GLOBAL	__end_of_readTemp
  2645  0E42                     	__end_of_readTemp:
  2646 ;; =============== function _readTemp ends ============
  2647                           
  2648                           	signat	_readTemp,90
  2649                           	global	_writeString
  2650                           psect	text886,local,class=CODE,delta=2
  2651                           global __ptext886
  2652  0F95                     __ptext886:
  2653                           
  2654 ;; *************** function _writeString *****************
  2655 ;; Defined at:
  2656 ;;		line 141 in file "Bluetooth.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  userString      1    wreg     PTR unsigned char 
  2659 ;;		 -> readError(25), main@testString(9), 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  userString      1   11[BANK1 ] PTR unsigned char 
  2662 ;;		 -> readError(25), main@testString(9), 
  2663 ;;  i               2   12[BANK1 ] unsigned int 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;		None               void
  2666 ;; Registers used:
  2667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2673 ;;      Params:         0       0       0       0       0
  2674 ;;      Locals:         0       0       3       0       0
  2675 ;;      Temps:          0       0       1       0       0
  2676 ;;      Totals:         0       0       4       0       0
  2677 ;;Total ram usage:        4 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    6
  2680 ;; This function calls:
  2681 ;;		_writeByte
  2682 ;;		_strlen
  2683 ;; This function is called by:
  2684 ;;		_main
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           psect	text886
  2688                           	file	"Bluetooth.c"
  2689                           	line	141
  2690                           	global	__size_of_writeString
  2691  0035                     	__size_of_writeString	equ	__end_of_writeString-_writeString
  2692                           	
  2693  0F95                     _writeString:	
  2694                           	opt	stack 1
  2695                           ; Regs used in _writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2696                           ;writeString@userString stored from wreg
  2697                           	line	145
  2698  0F95  1683               	bsf	status, 5	;RP0=1, select bank1
  2699  0F96  1303               	bcf	status, 6	;RP1=0, select bank1
  2700  0F97  00CD               	movwf	(writeString@userString)^080h
  2701                           	
  2702  0F98                     l9669:	
  2703                           ;Bluetooth.c: 143: unsigned int i;
  2704                           ;Bluetooth.c: 145: for(i = 0;i<strlen(userString);i++){
  2705  0F98  01CE               	clrf	(writeString@i)^080h
  2706  0F99  01CF               	clrf	(writeString@i+1)^080h
  2707  0F9A  2FB0               	goto	l9675
  2708                           	
  2709  0F9B                     l788:	
  2710                           	line	146
  2711                           	
  2712  0F9B                     l9671:	
  2713                           ;Bluetooth.c: 146: writeByte(userString[i]);
  2714  0F9B  084E               	movf	(writeString@i)^080h,w
  2715  0F9C  074D               	addwf	(writeString@userString)^080h,w
  2716  0F9D  00CC               	movwf	(??_writeString+0)^080h+0
  2717  0F9E  084C               	movf	0+(??_writeString+0)^080h+0,w
  2718  0F9F  0084               	movwf	fsr0
  2719  0FA0  1383               	bcf	status, 7	;select IRP bank0
  2720  0FA1  0800               	movf	indf,w
  2721  0FA2  120A  158A  24C8   	fcall	_writeByte
              120A  158A         
  2722                           	line	145
  2723                           	
  2724  0FA7                     l9673:	
  2725  0FA7  3001               	movlw	low(01h)
  2726  0FA8  1683               	bsf	status, 5	;RP0=1, select bank1
  2727  0FA9  1303               	bcf	status, 6	;RP1=0, select bank1
  2728  0FAA  07CE               	addwf	(writeString@i)^080h,f
  2729  0FAB  1803               	skipnc
  2730  0FAC  0ACF               	incf	(writeString@i+1)^080h,f
  2731  0FAD  3000               	movlw	high(01h)
  2732  0FAE  07CF               	addwf	(writeString@i+1)^080h,f
  2733  0FAF  2FB0               	goto	l9675
  2734                           	
  2735  0FB0                     l787:	
  2736                           	
  2737  0FB0                     l9675:	
  2738  0FB0  084D               	movf	(writeString@userString)^080h,w
  2739  0FB1  120A  158A  272E   	fcall	_strlen
              120A  158A         
  2740  0FB6  1683               	bsf	status, 5	;RP0=1, select bank1
  2741  0FB7  1303               	bcf	status, 6	;RP1=0, select bank1
  2742  0FB8  0843               	movf	(1+(?_strlen))^080h,w
  2743  0FB9  024F               	subwf	(writeString@i+1)^080h,w
  2744  0FBA  1D03               	skipz
  2745  0FBB  2FBE               	goto	u3175
  2746  0FBC  0842               	movf	(0+(?_strlen))^080h,w
  2747  0FBD  024E               	subwf	(writeString@i)^080h,w
  2748  0FBE                     u3175:
  2749  0FBE  1C03               	skipc
  2750  0FBF  2FC1               	goto	u3171
  2751  0FC0  2FC2               	goto	u3170
  2752  0FC1                     u3171:
  2753  0FC1  2F9B               	goto	l9671
  2754  0FC2                     u3170:
  2755  0FC2  2FC3               	goto	l9677
  2756                           	
  2757  0FC3                     l789:	
  2758                           	line	149
  2759                           	
  2760  0FC3                     l9677:	
  2761                           ;Bluetooth.c: 147: }
  2762                           ;Bluetooth.c: 149: writeByte((unsigned char)i);
  2763  0FC3  084E               	movf	(writeString@i)^080h,w
  2764  0FC4  120A  158A  24C8   	fcall	_writeByte
              120A  158A         
  2765                           	line	151
  2766                           	
  2767  0FC9                     l790:	
  2768  0FC9  0008               	return
  2769                           	opt stack 0
  2770                           GLOBAL	__end_of_writeString
  2771  0FCA                     	__end_of_writeString:
  2772 ;; =============== function _writeString ends ============
  2773                           
  2774                           	signat	_writeString,4216
  2775                           	global	_initADC
  2776                           psect	text887,local,class=CODE,delta=2
  2777                           global __ptext887
  2778  0CA2                     __ptext887:
  2779                           
  2780 ;; *************** function _initADC *****************
  2781 ;; Defined at:
  2782 ;;		line 7 in file "customADC.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;		None               void
  2789 ;; Registers used:
  2790 ;;		wreg
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2796 ;;      Params:         0       0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0
  2799 ;;      Totals:         0       0       0       0       0
  2800 ;;Total ram usage:        0 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    5
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           psect	text887
  2810                           	file	"customADC.c"
  2811                           	line	7
  2812                           	global	__size_of_initADC
  2813  000B                     	__size_of_initADC	equ	__end_of_initADC-_initADC
  2814                           	
  2815  0CA2                     _initADC:	
  2816                           	opt	stack 2
  2817                           ; Regs used in _initADC: [wreg]
  2818                           	line	8
  2819                           	
  2820  0CA2                     l9563:	
  2821                           ;customADC.c: 8: TRISA = 0x03;
  2822  0CA2  3003               	movlw	(03h)
  2823  0CA3  1683               	bsf	status, 5	;RP0=1, select bank1
  2824  0CA4  1303               	bcf	status, 6	;RP1=0, select bank1
  2825  0CA5  0085               	movwf	(133)^080h	;volatile
  2826                           	line	22
  2827                           ;customADC.c: 22: ADCON1 = 0x0F;
  2828  0CA6  300F               	movlw	(0Fh)
  2829  0CA7  009F               	movwf	(159)^080h	;volatile
  2830                           	line	40
  2831                           ;customADC.c: 40: ADCON0 = 0x80;
  2832  0CA8  3080               	movlw	(080h)
  2833  0CA9  1283               	bcf	status, 5	;RP0=0, select bank0
  2834  0CAA  1303               	bcf	status, 6	;RP1=0, select bank0
  2835  0CAB  009F               	movwf	(31)	;volatile
  2836                           	line	41
  2837                           	
  2838  0CAC                     l3187:	
  2839  0CAC  0008               	return
  2840                           	opt stack 0
  2841                           GLOBAL	__end_of_initADC
  2842  0CAD                     	__end_of_initADC:
  2843 ;; =============== function _initADC ends ============
  2844                           
  2845                           	signat	_initADC,88
  2846                           	global	_selectTemp
  2847                           psect	text888,local,class=CODE,delta=2
  2848                           global __ptext888
  2849  0C8A                     __ptext888:
  2850                           
  2851 ;; *************** function _selectTemp *****************
  2852 ;; Defined at:
  2853 ;;		line 44 in file "customADC.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;		None               void
  2860 ;; Registers used:
  2861 ;;		wreg
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2867 ;;      Params:         0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    5
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_getTemp
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           psect	text888
  2881                           	file	"customADC.c"
  2882                           	line	44
  2883                           	global	__size_of_selectTemp
  2884  0005                     	__size_of_selectTemp	equ	__end_of_selectTemp-_selectTemp
  2885                           	
  2886  0C8A                     _selectTemp:	
  2887                           	opt	stack 1
  2888                           ; Regs used in _selectTemp: [wreg]
  2889                           	line	45
  2890                           	
  2891  0C8A                     l9561:	
  2892                           ;customADC.c: 45: ADCON0 = 0x80;
  2893  0C8A  3080               	movlw	(080h)
  2894  0C8B  1283               	bcf	status, 5	;RP0=0, select bank0
  2895  0C8C  1303               	bcf	status, 6	;RP1=0, select bank0
  2896  0C8D  009F               	movwf	(31)	;volatile
  2897                           	line	46
  2898                           	
  2899  0C8E                     l3190:	
  2900  0C8E  0008               	return
  2901                           	opt stack 0
  2902                           GLOBAL	__end_of_selectTemp
  2903  0C8F                     	__end_of_selectTemp:
  2904 ;; =============== function _selectTemp ends ============
  2905                           
  2906                           	signat	_selectTemp,88
  2907                           	global	_eeprom_write
  2908                           psect	text889,local,class=CODE,delta=2
  2909                           global __ptext889
  2910  07A6                     __ptext889:
  2911                           
  2912 ;; *************** function _eeprom_write *****************
  2913 ;; Defined at:
  2914 ;;		line 7 in file "C:\Microchip\HiTech\sources\eewrite.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  addr            1    wreg     unsigned char 
  2917 ;;  value           1    0[BANK1 ] unsigned char 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  addr            1    2[BANK1 ] unsigned char 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      unsigned char 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2, status,0
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2929 ;;      Params:         0       0       1       0       0
  2930 ;;      Locals:         0       0       1       0       0
  2931 ;;      Temps:          0       0       1       0       0
  2932 ;;      Totals:         0       0       3       0       0
  2933 ;;Total ram usage:        3 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    5
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_initTemp
  2940 ;;		_getTemp
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           psect	text889
  2944                           	file	"C:\Microchip\HiTech\sources\eewrite.c"
  2945                           	line	7
  2946                           	global	__size_of_eeprom_write
  2947  003B                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
  2948                           	
  2949  07A6                     _eeprom_write:	
  2950                           	opt	stack 1
  2951                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2952                           ;eeprom_write@addr stored from wreg
  2953  07A6  1683               	bsf	status, 5	;RP0=1, select bank1
  2954  07A7  1303               	bcf	status, 6	;RP1=0, select bank1
  2955  07A8  00C4               	movwf	(eeprom_write@addr)^080h
  2956                           	line	8
  2957                           	
  2958  07A9                     l6823:	
  2959  07A9  2FAA               	goto	l6824
  2960                           	
  2961  07AA                     l6825:	
  2962                           	
  2963  07AA                     l6824:	
  2964  07AA  1683               	bsf	status, 5	;RP0=1, select bank3
  2965  07AB  1703               	bsf	status, 6	;RP1=1, select bank3
  2966  07AC  188C               	btfsc	(3169/8)^0180h,(3169)&7
  2967  07AD  2FAF               	goto	u2791
  2968  07AE  2FB0               	goto	u2790
  2969  07AF                     u2791:
  2970  07AF  2FAA               	goto	l6824
  2971  07B0                     u2790:
  2972  07B0  2FB1               	goto	l9345
  2973                           	
  2974  07B1                     l6826:	
  2975                           	
  2976  07B1                     l9345:	
  2977  07B1  1683               	bsf	status, 5	;RP0=1, select bank1
  2978  07B2  1303               	bcf	status, 6	;RP1=0, select bank1
  2979  07B3  0844               	movf	(eeprom_write@addr)^080h,w
  2980  07B4  1283               	bcf	status, 5	;RP0=0, select bank2
  2981  07B5  1703               	bsf	status, 6	;RP1=1, select bank2
  2982  07B6  008D               	movwf	(269)^0100h	;volatile
  2983  07B7  1683               	bsf	status, 5	;RP0=1, select bank1
  2984  07B8  1303               	bcf	status, 6	;RP1=0, select bank1
  2985  07B9  0842               	movf	(eeprom_write@value)^080h,w
  2986  07BA  1283               	bcf	status, 5	;RP0=0, select bank2
  2987  07BB  1703               	bsf	status, 6	;RP1=1, select bank2
  2988  07BC  008C               	movwf	(268)^0100h	;volatile
  2989                           	
  2990  07BD                     l9347:	
  2991  07BD  303F               	movlw	(03Fh)
  2992  07BE  1683               	bsf	status, 5	;RP0=1, select bank1
  2993  07BF  1303               	bcf	status, 6	;RP1=0, select bank1
  2994  07C0  00C3               	movwf	(??_eeprom_write+0)^080h+0
  2995  07C1  0843               	movf	(??_eeprom_write+0)^080h+0,w
  2996  07C2  1683               	bsf	status, 5	;RP0=1, select bank3
  2997  07C3  1703               	bsf	status, 6	;RP1=1, select bank3
  2998  07C4  058C               	andwf	(396)^0180h,f	;volatile
  2999                           	
  3000  07C5                     l9349:	
  3001  07C5  1283               	bcf	status, 5	;RP0=0, select bank0
  3002  07C6  1303               	bcf	status, 6	;RP1=0, select bank0
  3003  07C7  1003               	bcf	(24/8),(24)&7
  3004                           	
  3005  07C8                     l9351:	
  3006  07C8  1F8B               	btfss	(95/8),(95)&7
  3007  07C9  2FCB               	goto	u2801
  3008  07CA  2FCC               	goto	u2800
  3009  07CB                     u2801:
  3010  07CB  2FCD               	goto	l6827
  3011  07CC                     u2800:
  3012                           	
  3013  07CC                     l9353:	
  3014  07CC  1403               	bsf	(24/8),(24)&7
  3015                           	
  3016  07CD                     l6827:	
  3017  07CD  138B               	bcf	(95/8),(95)&7
  3018  07CE  1683               	bsf	status, 5	;RP0=1, select bank3
  3019  07CF  1703               	bsf	status, 6	;RP1=1, select bank3
  3020  07D0  150C               	bsf	(3170/8)^0180h,(3170)&7
  3021                           	
  3022  07D1                     l9355:	
  3023  07D1  3055               	movlw	(055h)
  3024  07D2  008D               	movwf	(397)^0180h	;volatile
  3025  07D3  30AA               	movlw	(0AAh)
  3026  07D4  008D               	movwf	(397)^0180h	;volatile
  3027                           	
  3028  07D5                     l9357:	
  3029  07D5  148C               	bsf	(3169/8)^0180h,(3169)&7
  3030                           	
  3031  07D6                     l9359:	
  3032  07D6  110C               	bcf	(3170/8)^0180h,(3170)&7
  3033                           	
  3034  07D7                     l9361:	
  3035  07D7  1283               	bcf	status, 5	;RP0=0, select bank0
  3036  07D8  1303               	bcf	status, 6	;RP1=0, select bank0
  3037  07D9  1C03               	btfss	(24/8),(24)&7
  3038  07DA  2FDC               	goto	u2811
  3039  07DB  2FDD               	goto	u2810
  3040  07DC                     u2811:
  3041  07DC  2FE0               	goto	l6830
  3042  07DD                     u2810:
  3043                           	
  3044  07DD                     l9363:	
  3045  07DD  178B               	bsf	(95/8),(95)&7
  3046  07DE  2FE0               	goto	l6830
  3047                           	
  3048  07DF                     l6828:	
  3049  07DF  2FE0               	goto	l6830
  3050                           	
  3051  07E0                     l6829:	
  3052                           	line	10
  3053                           ;	Return value of _eeprom_write is never used
  3054                           	
  3055  07E0                     l6830:	
  3056  07E0  0008               	return
  3057                           	opt stack 0
  3058                           GLOBAL	__end_of_eeprom_write
  3059  07E1                     	__end_of_eeprom_write:
  3060 ;; =============== function _eeprom_write ends ============
  3061                           
  3062                           	signat	_eeprom_write,8313
  3063                           	global	_strlen
  3064                           psect	text890,local,class=CODE,delta=2
  3065                           global __ptext890
  3066  0F2E                     __ptext890:
  3067                           
  3068 ;; *************** function _strlen *****************
  3069 ;; Defined at:
  3070 ;;		line 5 in file "C:\Microchip\HiTech\sources\strlen.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  s               1    wreg     PTR const unsigned char 
  3073 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  s               1    8[BANK1 ] PTR const unsigned char 
  3076 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  3077 ;;  cp              1    9[BANK1 ] PTR const unsigned char 
  3078 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  2    0[BANK1 ] unsigned int 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3088 ;;      Params:         0       0       2       0       0
  3089 ;;      Locals:         0       0       2       0       0
  3090 ;;      Temps:          0       0       6       0       0
  3091 ;;      Totals:         0       0      10       0       0
  3092 ;;Total ram usage:       10 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    5
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_writeString
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           psect	text890
  3102                           	file	"C:\Microchip\HiTech\sources\strlen.c"
  3103                           	line	5
  3104                           	global	__size_of_strlen
  3105  0033                     	__size_of_strlen	equ	__end_of_strlen-_strlen
  3106                           	
  3107  0F2E                     _strlen:	
  3108                           	opt	stack 1
  3109                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  3110                           ;strlen@s stored from wreg
  3111                           	line	8
  3112  0F2E  1683               	bsf	status, 5	;RP0=1, select bank1
  3113  0F2F  1303               	bcf	status, 6	;RP1=0, select bank1
  3114  0F30  00CA               	movwf	(strlen@s)^080h
  3115                           	
  3116  0F31                     l9319:	
  3117  0F31  084A               	movf	(strlen@s)^080h,w
  3118  0F32  00C4               	movwf	(??_strlen+0)^080h+0
  3119  0F33  0844               	movf	(??_strlen+0)^080h+0,w
  3120  0F34  00CB               	movwf	(strlen@cp)^080h
  3121                           	line	9
  3122  0F35  2F37               	goto	l9321
  3123                           	
  3124  0F36                     l7508:	
  3125                           	line	10
  3126  0F36  2F37               	goto	l9321
  3127                           	
  3128  0F37                     l7507:	
  3129                           	line	9
  3130                           	
  3131  0F37                     l9321:	
  3132  0F37  084B               	movf	(strlen@cp)^080h,w
  3133  0F38  0084               	movwf	fsr0
  3134  0F39  3001               	movlw	01h
  3135  0F3A  07CB               	addwf	(strlen@cp)^080h,f
  3136  0F3B  1383               	bcf	status, 7	;select IRP bank0
  3137  0F3C  0880               	movf	indf,f
  3138  0F3D  1D03               	skipz
  3139  0F3E  2F40               	goto	u2771
  3140  0F3F  2F41               	goto	u2770
  3141  0F40                     u2771:
  3142  0F40  2F37               	goto	l9321
  3143  0F41                     u2770:
  3144  0F41  2F42               	goto	l9323
  3145                           	
  3146  0F42                     l7509:	
  3147                           	line	11
  3148                           	
  3149  0F42                     l9323:	
  3150  0F42  084A               	movf	(strlen@s)^080h,w
  3151  0F43  00C4               	movwf	(??_strlen+0)^080h+0
  3152  0F44  3000               	movlw	((0x0/2))
  3153  0F45  00C5               	movwf	(??_strlen+0)^080h+0+1
  3154  0F46  09C4               	comf	(??_strlen+0)^080h+0,f
  3155  0F47  09C5               	comf	(??_strlen+0)^080h+1,f
  3156  0F48  0AC4               	incf	(??_strlen+0)^080h+0,f
  3157  0F49  1903               	skipnz
  3158  0F4A  0AC5               	incf	(??_strlen+0)^080h+1,f
  3159  0F4B  084B               	movf	(strlen@cp)^080h,w
  3160  0F4C  00C6               	movwf	(??_strlen+2)^080h+0
  3161  0F4D  3000               	movlw	((0x0/2))
  3162  0F4E  00C7               	movwf	(??_strlen+2)^080h+0+1
  3163  0F4F  0844               	movf	0+(??_strlen+0)^080h+0,w
  3164  0F50  0746               	addwf	0+(??_strlen+2)^080h+0,w
  3165  0F51  00C8               	movwf	(??_strlen+4)^080h+0
  3166  0F52  0845               	movf	1+(??_strlen+0)^080h+0,w
  3167  0F53  1803               	skipnc
  3168  0F54  0A45               	incf	1+(??_strlen+0)^080h+0,w
  3169  0F55  0747               	addwf	1+(??_strlen+2)^080h+0,w
  3170  0F56  00C9               	movwf	1+(??_strlen+4)^080h+0
  3171  0F57  0848               	movf	0+(??_strlen+4)^080h+0,w
  3172  0F58  3EFF               	addlw	low(-1)
  3173  0F59  00C2               	movwf	(?_strlen)^080h
  3174  0F5A  0849               	movf	1+(??_strlen+4)^080h+0,w
  3175  0F5B  1803               	skipnc
  3176  0F5C  3E01               	addlw	1
  3177  0F5D  3EFF               	addlw	high(-1)
  3178  0F5E  00C3               	movwf	1+(?_strlen)^080h
  3179  0F5F  2F60               	goto	l7510
  3180                           	
  3181  0F60                     l9325:	
  3182                           	line	12
  3183                           	
  3184  0F60                     l7510:	
  3185  0F60  0008               	return
  3186                           	opt stack 0
  3187                           GLOBAL	__end_of_strlen
  3188  0F61                     	__end_of_strlen:
  3189 ;; =============== function _strlen ends ============
  3190                           
  3191                           	signat	_strlen,4218
  3192                           	global	_writeByte
  3193                           psect	text891,local,class=CODE,delta=2
  3194                           global __ptext891
  3195  0CC8                     __ptext891:
  3196                           
  3197 ;; *************** function _writeByte *****************
  3198 ;; Defined at:
  3199 ;;		line 75 in file "Bluetooth.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  Byte            1    wreg     unsigned char 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  Byte            1    0[BANK1 ] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;		None               void
  3206 ;; Registers used:
  3207 ;;		wreg
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3213 ;;      Params:         0       0       0       0       0
  3214 ;;      Locals:         0       0       1       0       0
  3215 ;;      Temps:          0       0       0       0       0
  3216 ;;      Totals:         0       0       1       0       0
  3217 ;;Total ram usage:        1 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    5
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_writeString
  3224 ;;		_echoBack
  3225 ;;		_displayPacket
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           psect	text891
  3229                           	file	"Bluetooth.c"
  3230                           	line	75
  3231                           	global	__size_of_writeByte
  3232  0011                     	__size_of_writeByte	equ	__end_of_writeByte-_writeByte
  3233                           	
  3234  0CC8                     _writeByte:	
  3235                           	opt	stack 1
  3236                           ; Regs used in _writeByte: [wreg]
  3237                           ;writeByte@Byte stored from wreg
  3238  0CC8  1683               	bsf	status, 5	;RP0=1, select bank1
  3239  0CC9  1303               	bcf	status, 6	;RP1=0, select bank1
  3240  0CCA  00C2               	movwf	(writeByte@Byte)^080h
  3241                           	line	79
  3242                           	
  3243  0CCB                     l9303:	
  3244                           ;Bluetooth.c: 79: while(!TXIF);
  3245  0CCB  2CCC               	goto	l772
  3246                           	
  3247  0CCC                     l773:	
  3248                           	
  3249  0CCC                     l772:	
  3250  0CCC  1283               	bcf	status, 5	;RP0=0, select bank0
  3251  0CCD  1E0C               	btfss	(100/8),(100)&7
  3252  0CCE  2CD0               	goto	u2751
  3253  0CCF  2CD1               	goto	u2750
  3254  0CD0                     u2751:
  3255  0CD0  2CCC               	goto	l772
  3256  0CD1                     u2750:
  3257  0CD1  2CD2               	goto	l9305
  3258                           	
  3259  0CD2                     l774:	
  3260                           	line	82
  3261                           	
  3262  0CD2                     l9305:	
  3263                           ;Bluetooth.c: 82: TXREG = Byte;
  3264  0CD2  1683               	bsf	status, 5	;RP0=1, select bank1
  3265  0CD3  1303               	bcf	status, 6	;RP1=0, select bank1
  3266  0CD4  0842               	movf	(writeByte@Byte)^080h,w
  3267  0CD5  1283               	bcf	status, 5	;RP0=0, select bank0
  3268  0CD6  1303               	bcf	status, 6	;RP1=0, select bank0
  3269  0CD7  0099               	movwf	(25)	;volatile
  3270                           	line	83
  3271                           	
  3272  0CD8                     l775:	
  3273  0CD8  0008               	return
  3274                           	opt stack 0
  3275                           GLOBAL	__end_of_writeByte
  3276  0CD9                     	__end_of_writeByte:
  3277 ;; =============== function _writeByte ends ============
  3278                           
  3279                           	signat	_writeByte,4216
  3280                           	global	_initUSART
  3281                           psect	text892,local,class=CODE,delta=2
  3282                           global __ptext892
  3283  0CD9                     __ptext892:
  3284                           
  3285 ;; *************** function _initUSART *****************
  3286 ;; Defined at:
  3287 ;;		line 16 in file "Bluetooth.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;		None               void
  3294 ;; Registers used:
  3295 ;;		wreg
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0
  3304 ;;      Totals:         0       0       0       0       0
  3305 ;;Total ram usage:        0 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    5
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           psect	text892
  3315                           	file	"Bluetooth.c"
  3316                           	line	16
  3317                           	global	__size_of_initUSART
  3318  0012                     	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  3319                           	
  3320  0CD9                     _initUSART:	
  3321                           	opt	stack 2
  3322                           ; Regs used in _initUSART: [wreg]
  3323                           	line	18
  3324                           	
  3325  0CD9                     l9293:	
  3326                           ;Bluetooth.c: 18: TRISC6 = 0;
  3327  0CD9  1683               	bsf	status, 5	;RP0=1, select bank1
  3328  0CDA  1303               	bcf	status, 6	;RP1=0, select bank1
  3329  0CDB  1307               	bcf	(1086/8)^080h,(1086)&7
  3330                           	line	21
  3331                           ;Bluetooth.c: 21: TRISC7 = 1;
  3332  0CDC  1787               	bsf	(1087/8)^080h,(1087)&7
  3333                           	line	34
  3334                           	
  3335  0CDD                     l9295:	
  3336                           ;Bluetooth.c: 34: RCSTA = 0x90;
  3337  0CDD  3090               	movlw	(090h)
  3338  0CDE  1283               	bcf	status, 5	;RP0=0, select bank0
  3339  0CDF  1303               	bcf	status, 6	;RP1=0, select bank0
  3340  0CE0  0098               	movwf	(24)	;volatile
  3341                           	line	48
  3342                           ;Bluetooth.c: 48: TXSTA = 0x24;
  3343  0CE1  3024               	movlw	(024h)
  3344  0CE2  1683               	bsf	status, 5	;RP0=1, select bank1
  3345  0CE3  1303               	bcf	status, 6	;RP1=0, select bank1
  3346  0CE4  0098               	movwf	(152)^080h	;volatile
  3347                           	line	57
  3348                           ;Bluetooth.c: 57: SPBRG = 25;
  3349  0CE5  3019               	movlw	(019h)
  3350  0CE6  0099               	movwf	(153)^080h	;volatile
  3351                           	line	59
  3352                           	
  3353  0CE7                     l9297:	
  3354                           ;Bluetooth.c: 59: GIE = 1;
  3355  0CE7  178B               	bsf	(95/8),(95)&7
  3356                           	line	61
  3357                           	
  3358  0CE8                     l9299:	
  3359                           ;Bluetooth.c: 61: PEIE = 1;
  3360  0CE8  170B               	bsf	(94/8),(94)&7
  3361                           	line	63
  3362                           	
  3363  0CE9                     l9301:	
  3364                           ;Bluetooth.c: 63: RCIE = 1;
  3365  0CE9  168C               	bsf	(1125/8)^080h,(1125)&7
  3366                           	line	65
  3367                           	
  3368  0CEA                     l769:	
  3369  0CEA  0008               	return
  3370                           	opt stack 0
  3371                           GLOBAL	__end_of_initUSART
  3372  0CEB                     	__end_of_initUSART:
  3373 ;; =============== function _initUSART ends ============
  3374                           
  3375                           	signat	_initUSART,88
  3376                           	global	_isr
  3377                           psect	text893,local,class=CODE,delta=2
  3378                           global __ptext893
  3379  0D49                     __ptext893:
  3380                           
  3381 ;; *************** function _isr *****************
  3382 ;; Defined at:
  3383 ;;		line 37 in file "main.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;		None               void
  3390 ;; Registers used:
  3391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3397 ;;      Params:         0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0
  3399 ;;      Temps:          0       4       0       0       0
  3400 ;;      Totals:         0       4       0       0       0
  3401 ;;Total ram usage:        4 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    4
  3404 ;; This function calls:
  3405 ;;		_getPacket
  3406 ;; This function is called by:
  3407 ;;		Interrupt level 1
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           psect	text893
  3411                           	file	"main.c"
  3412                           	line	37
  3413                           	global	__size_of_isr
  3414  001D                     	__size_of_isr	equ	__end_of_isr-_isr
  3415                           	
  3416  0D49                     _isr:	
  3417 ;; hardware stack exceeded
  3418                           	opt	stack 0
  3419                           ; Regs used in _isr: [allreg]
  3420                           psect	intentry,class=CODE,delta=2
  3421                           global __pintentry
  3422  0004                     __pintentry:
  3423                           global interrupt_function
  3424  0004                     interrupt_function:
  3425                           	global saved_w
  3426  007E                     	saved_w	set	btemp+0
  3427  0004  00FE               	movwf	saved_w
  3428  0005  0E03               	swapf	status,w
  3429  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  3430  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  3431  0008  00E2               	movwf	(??_isr+0)
  3432  0009  0804               	movf	fsr0,w
  3433  000A  00E3               	movwf	(??_isr+1)
  3434  000B  080A               	movf	pclath,w
  3435  000C  00E4               	movwf	(??_isr+2)
  3436  000D  087F               	movf	btemp+1,w
  3437  000E  00E5               	movwf	(??_isr+3)
  3438  000F  120A  158A  2D49   	ljmp	_isr
  3439                           psect	text893
  3440                           	line	38
  3441                           	
  3442  0D49                     i1l9565:	
  3443                           ;main.c: 38: if(RCIF && RCIE){
  3444  0D49  1E8C               	btfss	(101/8),(101)&7
  3445  0D4A  2D4C               	goto	u306_21
  3446  0D4B  2D4D               	goto	u306_20
  3447  0D4C                     u306_21:
  3448  0D4C  2D59               	goto	i1l3995
  3449  0D4D                     u306_20:
  3450                           	
  3451  0D4D                     i1l9567:	
  3452  0D4D  1683               	bsf	status, 5	;RP0=1, select bank1
  3453  0D4E  1303               	bcf	status, 6	;RP1=0, select bank1
  3454  0D4F  1E8C               	btfss	(1125/8)^080h,(1125)&7
  3455  0D50  2D52               	goto	u307_21
  3456  0D51  2D53               	goto	u307_20
  3457  0D52                     u307_21:
  3458  0D52  2D59               	goto	i1l3995
  3459  0D53                     u307_20:
  3460                           	line	39
  3461                           	
  3462  0D53                     i1l9569:	
  3463                           ;main.c: 39: getPacket();
  3464  0D53  120A  118A  25E8   	fcall	_getPacket
              120A  158A         
  3465  0D58  2D59               	goto	i1l3995
  3466                           	line	40
  3467                           	
  3468  0D59                     i1l3994:	
  3469                           	line	41
  3470                           	
  3471  0D59                     i1l3995:	
  3472  0D59  1283               	bcf	status, 5	;RP0=0, select bank0
  3473  0D5A  1303               	bcf	status, 6	;RP1=0, select bank0
  3474  0D5B  0865               	movf	(??_isr+3),w
  3475  0D5C  00FF               	movwf	btemp+1
  3476  0D5D  0864               	movf	(??_isr+2),w
  3477  0D5E  008A               	movwf	pclath
  3478  0D5F  0863               	movf	(??_isr+1),w
  3479  0D60  0084               	movwf	fsr0
  3480  0D61  0E62               	swapf	(??_isr+0)^00h,w
  3481  0D62  0083               	movwf	status
  3482  0D63  0EFE               	swapf	saved_w,f
  3483  0D64  0E7E               	swapf	saved_w,w
  3484  0D65  0009               	retfie
  3485                           	opt stack 0
  3486                           GLOBAL	__end_of_isr
  3487  0D66                     	__end_of_isr:
  3488 ;; =============== function _isr ends ============
  3489                           
  3490                           	signat	_isr,88
  3491                           	global	_getPacket
  3492                           psect	text894,local,class=CODE,delta=2
  3493                           global __ptext894
  3494  05E8                     __ptext894:
  3495                           
  3496 ;; *************** function _getPacket *****************
  3497 ;; Defined at:
  3498 ;;		line 83 in file "main.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  arrStore       50   16[BANK0 ] unsigned char [50]
  3503 ;; Return value:  Size  Location     Type
  3504 ;;		None               void
  3505 ;; Registers used:
  3506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         0       0       0       0       0
  3513 ;;      Locals:         0      50       0       0       0
  3514 ;;      Temps:          0       4       0       0       0
  3515 ;;      Totals:         0      54       0       0       0
  3516 ;;Total ram usage:       54 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    3
  3519 ;; This function calls:
  3520 ;;		i1_eeprom_write
  3521 ;;		_readString
  3522 ;;		_parsePacket
  3523 ;;		_validatePacket
  3524 ;;		_eeprom_read
  3525 ;;		_readCommands
  3526 ;;		_writeCommands
  3527 ;; This function is called by:
  3528 ;;		_isr
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           psect	text894
  3532                           	file	"main.c"
  3533                           	line	83
  3534                           	global	__size_of_getPacket
  3535  005E                     	__size_of_getPacket	equ	__end_of_getPacket-_getPacket
  3536                           	
  3537  05E8                     _getPacket:	
  3538 ;; hardware stack exceeded
  3539                           	opt	stack 0
  3540                           ; Regs used in _getPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3541                           	line	85
  3542                           	
  3543  05E8                     i1l9571:	
  3544                           ;main.c: 85: eeprom_write(calcCSByteAddr,0x00);
  3545  05E8  01FA               	clrf	(?i1_eeprom_write)
  3546  05E9  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3547  05EA  0084               	movwf	fsr0
  3548  05EB  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3549  05F0  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  3550                           	line	87
  3551                           	
  3552  05F5                     i1l9573:	
  3553                           ;main.c: 87: char arrStore[50] = {0};
  3554  05F5  3030               	movlw	(getPacket@arrStore)&0ffh
  3555  05F6  0084               	movwf	fsr0
  3556  05F7  3090               	movlw	low(getPacket@F1189)
  3557  05F8  1283               	bcf	status, 5	;RP0=0, select bank0
  3558  05F9  1303               	bcf	status, 6	;RP1=0, select bank0
  3559  05FA  00AC               	movwf	(??_getPacket+0)+0
  3560  05FB  0804               	movf	fsr0,w
  3561  05FC  00AD               	movwf	((??_getPacket+0)+0+1)
  3562  05FD  3032               	movlw	50
  3563  05FE  00AE               	movwf	((??_getPacket+0)+0+2)
  3564  05FF                     u308_20:
  3565  05FF  082C               	movf	(??_getPacket+0)+0,w
  3566  0600  0084               	movwf	fsr0
  3567  0601  1783               	bsf	status, 7	;select IRP bank3
  3568                           	
  3569  0602  0800               	movf	indf,w
  3570  0603  00AF               	movwf	((??_getPacket+0)+0+3)
  3571  0604  0AAC               	incf	(??_getPacket+0)+0,f
  3572  0605  082D               	movf	((??_getPacket+0)+0+1),w
  3573  0606  0084               	movwf	fsr0
  3574  0607  1383               	bcf	status, 7	;select IRP bank0
  3575                           	
  3576  0608  082F               	movf	((??_getPacket+0)+0+3),w
  3577  0609  0080               	movwf	indf
  3578  060A  0AAD               	incf	((??_getPacket+0)+0+1),f
  3579  060B  0BAE               	decfsz	((??_getPacket+0)+0+2),f
  3580  060C  2DFF               	goto	u308_20
  3581                           	line	89
  3582                           	
  3583  060D                     i1l9575:	
  3584                           ;main.c: 89: readString(arrStore);
  3585  060D  3030               	movlw	(getPacket@arrStore)&0ffh
  3586  060E  120A  118A  26A2   	fcall	_readString
              120A  118A         
  3587                           	line	91
  3588                           	
  3589  0613                     i1l9577:	
  3590                           ;main.c: 91: parsePacket(arrStore);
  3591  0613  3030               	movlw	(getPacket@arrStore)&0ffh
  3592  0614  120A  118A  2190   	fcall	_parsePacket
              120A  118A         
  3593                           	line	94
  3594                           	
  3595  0619                     i1l9579:	
  3596                           ;main.c: 94: if(validatePacket()){
  3597  0619  120A  118A  2755   	fcall	_validatePacket
              120A  118A         
  3598  061E  1283               	bcf	status, 5	;RP0=0, select bank0
  3599  061F  1303               	bcf	status, 6	;RP1=0, select bank0
  3600  0620  0825               	movf	(1+(?_validatePacket)),w
  3601  0621  0424               	iorwf	(0+(?_validatePacket)),w
  3602  0622  1903               	skipnz
  3603  0623  2E25               	goto	u309_21
  3604  0624  2E26               	goto	u309_20
  3605  0625                     u309_21:
  3606  0625  2E45               	goto	i1l4012
  3607  0626                     u309_20:
  3608                           	line	97
  3609                           	
  3610  0626                     i1l9581:	
  3611                           ;main.c: 97: if(eeprom_read(rwByteAddr) == 0){
  3612  0626  3053               	movlw	(_rwByteAddr-__stringbase)
  3613  0627  0084               	movwf	fsr0
  3614  0628  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3615  062D  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  3616  0632  3800               	iorlw	0
  3617  0633  1D03               	skipz
  3618  0634  2E36               	goto	u310_21
  3619  0635  2E37               	goto	u310_20
  3620  0636                     u310_21:
  3621  0636  2E3D               	goto	i1l9585
  3622  0637                     u310_20:
  3623                           	line	98
  3624                           	
  3625  0637                     i1l9583:	
  3626                           ;main.c: 98: readCommands();
  3627  0637  120A  118A  2015   	fcall	_readCommands
              120A  118A         
  3628                           	line	100
  3629                           ;main.c: 100: }else{
  3630  063C  2E45               	goto	i1l4012
  3631                           	
  3632  063D                     i1l4009:	
  3633                           	line	101
  3634                           	
  3635  063D                     i1l9585:	
  3636                           ;main.c: 101: writeCommands();
  3637  063D  120A  118A  2003   	fcall	_writeCommands
              120A  118A         
  3638  0642  2E45               	goto	i1l4012
  3639                           	line	102
  3640                           	
  3641  0643                     i1l4010:	
  3642                           	line	104
  3643                           ;main.c: 102: }
  3644                           ;main.c: 104: }else{
  3645  0643  2E45               	goto	i1l4012
  3646                           	
  3647  0644                     i1l4008:	
  3648  0644  2E45               	goto	i1l4012
  3649                           	line	107
  3650                           	
  3651  0645                     i1l4011:	
  3652                           	line	108
  3653                           	
  3654  0645                     i1l4012:	
  3655  0645  0008               	return
  3656                           	opt stack 0
  3657                           GLOBAL	__end_of_getPacket
  3658  0646                     	__end_of_getPacket:
  3659 ;; =============== function _getPacket ends ============
  3660                           
  3661                           	signat	_getPacket,88
  3662                           	global	_readCommands
  3663                           psect	text895,local,class=CODE,delta=2
  3664                           global __ptext895
  3665  0015                     __ptext895:
  3666                           
  3667 ;; *************** function _readCommands *****************
  3668 ;; Defined at:
  3669 ;;		line 12 in file "Command.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;		None               void
  3676 ;; Registers used:
  3677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3683 ;;      Params:         0       0       0       0       0
  3684 ;;      Locals:         0       0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0
  3686 ;;      Totals:         0       0       0       0       0
  3687 ;;Total ram usage:        0 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    2
  3690 ;; This function calls:
  3691 ;;		i1_writeByte
  3692 ;;		i1_writeString
  3693 ;;		_eeprom_read
  3694 ;; This function is called by:
  3695 ;;		_getPacket
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           psect	text895
  3699                           	file	"Command.c"
  3700                           	line	12
  3701                           	global	__size_of_readCommands
  3702  017B                     	__size_of_readCommands	equ	__end_of_readCommands-_readCommands
  3703                           	
  3704  0015                     _readCommands:	
  3705 ;; hardware stack exceeded
  3706                           	opt	stack 0
  3707                           ; Regs used in _readCommands: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3708                           	line	14
  3709                           	
  3710  0015                     i1l9587:	
  3711                           ;Command.c: 14: switch(eeprom_read(cmdByteAddr)){
  3712  0015  296A               	goto	i1l9621
  3713                           	line	16
  3714                           ;Command.c: 16: case 0:
  3715                           	
  3716  0016                     i1l4784:	
  3717                           	line	17
  3718                           	
  3719  0016                     i1l9589:	
  3720                           ;Command.c: 17: writeByte(userStartByte);
  3721  0016  3060               	movlw	(_userStartByte-__stringbase)
  3722  0017  0084               	movwf	fsr0
  3723  0018  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3724  001D  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3725                           	line	18
  3726                           ;Command.c: 18: writeByte(tempValHAddr);
  3727  0022  305C               	movlw	(_tempValHAddr-__stringbase)
  3728  0023  0084               	movwf	fsr0
  3729  0024  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3730  0029  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3731                           	line	19
  3732                           ;Command.c: 19: writeByte(tempValLAddr);
  3733  002E  305D               	movlw	(_tempValLAddr-__stringbase)
  3734  002F  0084               	movwf	fsr0
  3735  0030  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3736  0035  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3737                           	line	20
  3738                           ;Command.c: 20: break;
  3739  003A  298F               	goto	i1l4794
  3740                           	line	22
  3741                           ;Command.c: 22: case 1:
  3742                           	
  3743  003B                     i1l4786:	
  3744                           	line	23
  3745                           	
  3746  003B                     i1l9591:	
  3747                           ;Command.c: 23: writeByte(userStartByte);
  3748  003B  3060               	movlw	(_userStartByte-__stringbase)
  3749  003C  0084               	movwf	fsr0
  3750  003D  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3751  0042  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3752                           	line	24
  3753                           ;Command.c: 24: writeByte(tempHiAddr);
  3754  0047  3057               	movlw	(_tempHiAddr-__stringbase)
  3755  0048  0084               	movwf	fsr0
  3756  0049  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3757  004E  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3758                           	line	25
  3759                           ;Command.c: 25: break;
  3760  0053  298F               	goto	i1l4794
  3761                           	line	27
  3762                           ;Command.c: 27: case 2:
  3763                           	
  3764  0054                     i1l4787:	
  3765                           	line	28
  3766                           	
  3767  0054                     i1l9593:	
  3768                           ;Command.c: 28: writeByte(userStartByte);
  3769  0054  3060               	movlw	(_userStartByte-__stringbase)
  3770  0055  0084               	movwf	fsr0
  3771  0056  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3772  005B  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3773                           	line	29
  3774                           ;Command.c: 29: writeByte(tempLoAddr);
  3775  0060  3058               	movlw	(_tempLoAddr-__stringbase)
  3776  0061  0084               	movwf	fsr0
  3777  0062  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3778  0067  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3779                           	line	30
  3780                           ;Command.c: 30: break;
  3781  006C  298F               	goto	i1l4794
  3782                           	line	32
  3783                           ;Command.c: 32: case 3:
  3784                           	
  3785  006D                     i1l4788:	
  3786                           	line	33
  3787                           	
  3788  006D                     i1l9595:	
  3789                           ;Command.c: 33: writeByte(userStartByte);
  3790  006D  3060               	movlw	(_userStartByte-__stringbase)
  3791  006E  0084               	movwf	fsr0
  3792  006F  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3793  0074  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3794                           	line	34
  3795                           ;Command.c: 34: writeByte(humValHAddr);
  3796  0079  304B               	movlw	(_humValHAddr-__stringbase)
  3797  007A  0084               	movwf	fsr0
  3798  007B  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3799  0080  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3800                           	line	35
  3801                           ;Command.c: 35: writeByte(humValLAddr);
  3802  0085  304C               	movlw	(_humValLAddr-__stringbase)
  3803  0086  0084               	movwf	fsr0
  3804  0087  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3805  008C  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3806                           	line	36
  3807                           ;Command.c: 36: break;
  3808  0091  298F               	goto	i1l4794
  3809                           	line	38
  3810                           ;Command.c: 38: case 4:
  3811                           	
  3812  0092                     i1l4789:	
  3813                           	line	39
  3814                           	
  3815  0092                     i1l9597:	
  3816                           ;Command.c: 39: writeByte(userStartByte);
  3817  0092  3060               	movlw	(_userStartByte-__stringbase)
  3818  0093  0084               	movwf	fsr0
  3819  0094  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3820  0099  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3821                           	line	40
  3822                           ;Command.c: 40: writeByte(humHiAddr);
  3823  009E  3047               	movlw	(_humHiAddr-__stringbase)
  3824  009F  0084               	movwf	fsr0
  3825  00A0  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3826  00A5  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3827                           	line	41
  3828                           ;Command.c: 41: break;
  3829  00AA  298F               	goto	i1l4794
  3830                           	line	43
  3831                           ;Command.c: 43: case 5:
  3832                           	
  3833  00AB                     i1l4790:	
  3834                           	line	44
  3835                           	
  3836  00AB                     i1l9599:	
  3837                           ;Command.c: 44: writeByte(userStartByte);
  3838  00AB  3060               	movlw	(_userStartByte-__stringbase)
  3839  00AC  0084               	movwf	fsr0
  3840  00AD  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3841  00B2  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3842                           	line	45
  3843                           ;Command.c: 45: writeByte(humLoAddr);
  3844  00B7  3048               	movlw	(_humLoAddr-__stringbase)
  3845  00B8  0084               	movwf	fsr0
  3846  00B9  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3847  00BE  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3848                           	line	46
  3849                           ;Command.c: 46: break;
  3850  00C3  298F               	goto	i1l4794
  3851                           	line	48
  3852                           ;Command.c: 48: case 6:
  3853                           	
  3854  00C4                     i1l4791:	
  3855                           	line	49
  3856                           	
  3857  00C4                     i1l9601:	
  3858                           ;Command.c: 49: writeByte(userStartByte);
  3859  00C4  3060               	movlw	(_userStartByte-__stringbase)
  3860  00C5  0084               	movwf	fsr0
  3861  00C6  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3862  00CB  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3863                           	line	50
  3864                           	
  3865  00D0                     i1l9603:	
  3866                           ;Command.c: 50: writeByte('R');
  3867  00D0  3052               	movlw	(052h)
  3868  00D1  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3869                           	line	51
  3870                           	
  3871  00D6                     i1l9605:	
  3872                           ;Command.c: 51: writeByte('T');
  3873  00D6  3054               	movlw	(054h)
  3874  00D7  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3875                           	line	52
  3876                           	
  3877  00DC                     i1l9607:	
  3878                           ;Command.c: 52: writeByte('C');
  3879  00DC  3043               	movlw	(043h)
  3880  00DD  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3881                           	line	53
  3882                           ;Command.c: 53: break;
  3883  00E2  298F               	goto	i1l4794
  3884                           	line	55
  3885                           ;Command.c: 55: case 7:
  3886                           	
  3887  00E3                     i1l4792:	
  3888                           	line	56
  3889                           	
  3890  00E3                     i1l9609:	
  3891                           ;Command.c: 56: writeByte(userStartByte);
  3892  00E3  3060               	movlw	(_userStartByte-__stringbase)
  3893  00E4  0084               	movwf	fsr0
  3894  00E5  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3895  00EA  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3896                           	line	57
  3897                           ;Command.c: 57: writeByte(tempValHAddr);
  3898  00EF  305C               	movlw	(_tempValHAddr-__stringbase)
  3899  00F0  0084               	movwf	fsr0
  3900  00F1  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3901  00F6  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3902                           	line	58
  3903                           ;Command.c: 58: writeByte(tempValLAddr);
  3904  00FB  305D               	movlw	(_tempValLAddr-__stringbase)
  3905  00FC  0084               	movwf	fsr0
  3906  00FD  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3907  0102  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3908                           	line	59
  3909                           ;Command.c: 59: writeByte(tempHiAddr);
  3910  0107  3057               	movlw	(_tempHiAddr-__stringbase)
  3911  0108  0084               	movwf	fsr0
  3912  0109  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3913  010E  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3914                           	line	60
  3915                           ;Command.c: 60: writeByte(tempLoAddr);
  3916  0113  3058               	movlw	(_tempLoAddr-__stringbase)
  3917  0114  0084               	movwf	fsr0
  3918  0115  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3919  011A  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3920                           	line	61
  3921                           ;Command.c: 61: writeByte(humValHAddr);
  3922  011F  304B               	movlw	(_humValHAddr-__stringbase)
  3923  0120  0084               	movwf	fsr0
  3924  0121  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3925  0126  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3926                           	line	62
  3927                           ;Command.c: 62: writeByte(humValLAddr);
  3928  012B  304C               	movlw	(_humValLAddr-__stringbase)
  3929  012C  0084               	movwf	fsr0
  3930  012D  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3931  0132  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3932                           	line	63
  3933                           ;Command.c: 63: writeByte(humHiAddr);
  3934  0137  3047               	movlw	(_humHiAddr-__stringbase)
  3935  0138  0084               	movwf	fsr0
  3936  0139  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3937  013E  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3938                           	line	64
  3939                           ;Command.c: 64: writeByte(humLoAddr);
  3940  0143  3048               	movlw	(_humLoAddr-__stringbase)
  3941  0144  0084               	movwf	fsr0
  3942  0145  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3943  014A  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3944                           	line	65
  3945                           	
  3946  014F                     i1l9611:	
  3947                           ;Command.c: 65: writeByte('R');
  3948  014F  3052               	movlw	(052h)
  3949  0150  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3950                           	line	66
  3951                           	
  3952  0155                     i1l9613:	
  3953                           ;Command.c: 66: writeByte('T');
  3954  0155  3054               	movlw	(054h)
  3955  0156  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3956                           	line	67
  3957                           	
  3958  015B                     i1l9615:	
  3959                           ;Command.c: 67: writeByte('C');
  3960  015B  3043               	movlw	(043h)
  3961  015C  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  3962                           	line	68
  3963                           ;Command.c: 68: break;
  3964  0161  298F               	goto	i1l4794
  3965                           	line	70
  3966                           ;Command.c: 70: default:
  3967                           	
  3968  0162                     i1l4793:	
  3969                           	line	71
  3970                           	
  3971  0162                     i1l9617:	
  3972                           ;Command.c: 71: writeString(readError);
  3973  0162  30A9               	movlw	(_readError)&0ffh
  3974  0163  120A  158A  269D   	fcall	i1_writeString
              120A  118A         
  3975                           	line	72
  3976                           ;Command.c: 72: break;
  3977  0168  298F               	goto	i1l4794
  3978                           	line	73
  3979                           	
  3980  0169                     i1l9619:	
  3981                           ;Command.c: 73: }
  3982  0169  298F               	goto	i1l4794
  3983                           	line	14
  3984                           	
  3985  016A                     i1l4783:	
  3986                           	
  3987  016A                     i1l9621:	
  3988  016A  3042               	movlw	(_cmdByteAddr-__stringbase)
  3989  016B  0084               	movwf	fsr0
  3990  016C  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3991  0171  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  3992                           	; Switch size 1, requested type "space"
  3993                           ; Number of cases is 8, Range of values is 0 to 7
  3994                           ; switch strategies available:
  3995                           ; Name         Instructions Cycles
  3996                           ; simple_byte           25    13 (average)
  3997                           ; direct_byte           32     8 (fixed)
  3998                           ; jumptable            260     6 (fixed)
  3999                           ; rangetable            12     6 (fixed)
  4000                           ; spacedrange           22     9 (fixed)
  4001                           ; locatedrange           8     3 (fixed)
  4002                           ;	Chosen strategy is simple_byte
  4003                           
  4004                           	opt asmopt_off
  4005  0176  3A00               	xorlw	0^0	; case 0
  4006  0177  1903               	skipnz
  4007  0178  2816               	goto	i1l9589
  4008  0179  3A01               	xorlw	1^0	; case 1
  4009  017A  1903               	skipnz
  4010  017B  283B               	goto	i1l9591
  4011  017C  3A03               	xorlw	2^1	; case 2
  4012  017D  1903               	skipnz
  4013  017E  2854               	goto	i1l9593
  4014  017F  3A01               	xorlw	3^2	; case 3
  4015  0180  1903               	skipnz
  4016  0181  286D               	goto	i1l9595
  4017  0182  3A07               	xorlw	4^3	; case 4
  4018  0183  1903               	skipnz
  4019  0184  2892               	goto	i1l9597
  4020  0185  3A01               	xorlw	5^4	; case 5
  4021  0186  1903               	skipnz
  4022  0187  28AB               	goto	i1l9599
  4023  0188  3A03               	xorlw	6^5	; case 6
  4024  0189  1903               	skipnz
  4025  018A  28C4               	goto	i1l9601
  4026  018B  3A01               	xorlw	7^6	; case 7
  4027  018C  1903               	skipnz
  4028  018D  28E3               	goto	i1l9609
  4029  018E  2962               	goto	i1l9617
  4030                           	opt asmopt_on
  4031                           
  4032                           	line	73
  4033                           	
  4034  018F                     i1l4785:	
  4035                           	line	76
  4036                           	
  4037  018F                     i1l4794:	
  4038  018F  0008               	return
  4039                           	opt stack 0
  4040                           GLOBAL	__end_of_readCommands
  4041  0190                     	__end_of_readCommands:
  4042 ;; =============== function _readCommands ends ============
  4043                           
  4044                           	signat	_readCommands,88
  4045                           	global	_validatePacket
  4046                           psect	text896,local,class=CODE,delta=2
  4047                           global __ptext896
  4048  0755                     __ptext896:
  4049                           
  4050 ;; *************** function _validatePacket *****************
  4051 ;; Defined at:
  4052 ;;		line 236 in file "Packet.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  2    4[BANK0 ] int 
  4059 ;; Registers used:
  4060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4066 ;;      Params:         0       2       0       0       0
  4067 ;;      Locals:         0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0
  4069 ;;      Totals:         0       2       0       0       0
  4070 ;;Total ram usage:        2 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    2
  4073 ;; This function calls:
  4074 ;;		_checkStartByte
  4075 ;;		_checkRWByte
  4076 ;;		_checkCMDByte
  4077 ;;		_checkDataFrames
  4078 ;;		_addDataToCheckSum
  4079 ;;		_checkCS
  4080 ;; This function is called by:
  4081 ;;		_getPacket
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           psect	text896
  4085                           	file	"Packet.c"
  4086                           	line	236
  4087                           	global	__size_of_validatePacket
  4088  0051                     	__size_of_validatePacket	equ	__end_of_validatePacket-_validatePacket
  4089                           	
  4090  0755                     _validatePacket:	
  4091 ;; hardware stack exceeded
  4092                           	opt	stack 0
  4093                           ; Regs used in _validatePacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4094                           	line	238
  4095                           	
  4096  0755                     i1l9521:	
  4097                           ;Packet.c: 238: if(checkStartByte() && checkRWByte() && checkCMDByte() && checkDataFrame
                                 s()){
  4098  0755  120A  118A  2584   	fcall	_checkStartByte
              120A  118A         
  4099  075A  1283               	bcf	status, 5	;RP0=0, select bank0
  4100  075B  1303               	bcf	status, 6	;RP1=0, select bank0
  4101  075C  0821               	movf	(1+(?_checkStartByte)),w
  4102  075D  0420               	iorwf	(0+(?_checkStartByte)),w
  4103  075E  1903               	skipnz
  4104  075F  2F61               	goto	u299_21
  4105  0760  2F62               	goto	u299_20
  4106  0761                     u299_21:
  4107  0761  2FA0               	goto	i1l9535
  4108  0762                     u299_20:
  4109                           	
  4110  0762                     i1l9523:	
  4111  0762  120A  118A  24B3   	fcall	_checkRWByte
              120A  118A         
  4112  0767  1283               	bcf	status, 5	;RP0=0, select bank0
  4113  0768  1303               	bcf	status, 6	;RP1=0, select bank0
  4114  0769  0821               	movf	(1+(?_checkRWByte)),w
  4115  076A  0420               	iorwf	(0+(?_checkRWByte)),w
  4116  076B  1903               	skipnz
  4117  076C  2F6E               	goto	u300_21
  4118  076D  2F6F               	goto	u300_20
  4119  076E                     u300_21:
  4120  076E  2FA0               	goto	i1l9535
  4121  076F                     u300_20:
  4122                           	
  4123  076F                     i1l9525:	
  4124  076F  120A  118A  23D6   	fcall	_checkCMDByte
              120A  118A         
  4125  0774  1283               	bcf	status, 5	;RP0=0, select bank0
  4126  0775  1303               	bcf	status, 6	;RP1=0, select bank0
  4127  0776  0821               	movf	(1+(?_checkCMDByte)),w
  4128  0777  0420               	iorwf	(0+(?_checkCMDByte)),w
  4129  0778  1903               	skipnz
  4130  0779  2F7B               	goto	u301_21
  4131  077A  2F7C               	goto	u301_20
  4132  077B                     u301_21:
  4133  077B  2FA0               	goto	i1l9535
  4134  077C                     u301_20:
  4135                           	
  4136  077C                     i1l9527:	
  4137  077C  120A  118A  22C5   	fcall	_checkDataFrames
              120A  118A         
  4138  0781  0873               	movf	(1+(?_checkDataFrames)),w
  4139  0782  0472               	iorwf	(0+(?_checkDataFrames)),w
  4140  0783  1903               	skipnz
  4141  0784  2F86               	goto	u302_21
  4142  0785  2F87               	goto	u302_20
  4143  0786                     u302_21:
  4144  0786  2FA0               	goto	i1l9535
  4145  0787                     u302_20:
  4146                           	line	240
  4147                           	
  4148  0787                     i1l9529:	
  4149                           ;Packet.c: 240: addDataToCheckSum();
  4150  0787  120A  118A  235F   	fcall	_addDataToCheckSum
              120A  118A         
  4151                           	line	242
  4152                           ;Packet.c: 242: if(checkCS())
  4153  078C  120A  158A  2761   	fcall	_checkCS
              120A  118A         
  4154  0791  0873               	movf	(1+(?_checkCS)),w
  4155  0792  0472               	iorwf	(0+(?_checkCS)),w
  4156  0793  1903               	skipnz
  4157  0794  2F96               	goto	u303_21
  4158  0795  2F97               	goto	u303_20
  4159  0796                     u303_21:
  4160  0796  2FA0               	goto	i1l9535
  4161  0797                     u303_20:
  4162                           	line	244
  4163                           	
  4164  0797                     i1l9531:	
  4165                           ;Packet.c: 244: return 1;
  4166  0797  3001               	movlw	low(01h)
  4167  0798  1283               	bcf	status, 5	;RP0=0, select bank0
  4168  0799  1303               	bcf	status, 6	;RP1=0, select bank0
  4169  079A  00A4               	movwf	(?_validatePacket)
  4170  079B  3000               	movlw	high(01h)
  4171  079C  00A5               	movwf	((?_validatePacket))+1
  4172  079D  2FA5               	goto	i1l1621
  4173                           	
  4174  079E                     i1l9533:	
  4175  079E  2FA5               	goto	i1l1621
  4176                           	
  4177  079F                     i1l1620:	
  4178  079F  2FA0               	goto	i1l9535
  4179                           	line	245
  4180                           	
  4181  07A0                     i1l1619:	
  4182                           	line	247
  4183                           	
  4184  07A0                     i1l9535:	
  4185                           ;Packet.c: 245: }
  4186                           ;Packet.c: 247: return 0;
  4187  07A0  1283               	bcf	status, 5	;RP0=0, select bank0
  4188  07A1  1303               	bcf	status, 6	;RP1=0, select bank0
  4189  07A2  01A4               	clrf	(?_validatePacket)
  4190  07A3  01A5               	clrf	(?_validatePacket+1)
  4191  07A4  2FA5               	goto	i1l1621
  4192                           	
  4193  07A5                     i1l9537:	
  4194                           	line	249
  4195                           	
  4196  07A5                     i1l1621:	
  4197  07A5  0008               	return
  4198                           	opt stack 0
  4199                           GLOBAL	__end_of_validatePacket
  4200  07A6                     	__end_of_validatePacket:
  4201 ;; =============== function _validatePacket ends ============
  4202                           
  4203                           	signat	_validatePacket,90
  4204                           	global	_parsePacket
  4205                           psect	text897,local,class=CODE,delta=2
  4206                           global __ptext897
  4207  0190                     __ptext897:
  4208                           
  4209 ;; *************** function _parsePacket *****************
  4210 ;; Defined at:
  4211 ;;		line 114 in file "Packet.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  dataPacket      1    wreg     PTR unsigned char 
  4214 ;;		 -> getPacket@arrStore(50), 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  dataPacket      1   11[BANK0 ] PTR unsigned char 
  4217 ;;		 -> getPacket@arrStore(50), 
  4218 ;;  i               1   10[BANK0 ] unsigned char 
  4219 ;;  dataCounter     2    8[BANK0 ] int 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;		None               void
  4222 ;; Registers used:
  4223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4229 ;;      Params:         0       0       0       0       0
  4230 ;;      Locals:         0       4       0       0       0
  4231 ;;      Temps:          0       4       0       0       0
  4232 ;;      Totals:         0       8       0       0       0
  4233 ;;Total ram usage:        8 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:    2
  4236 ;; This function calls:
  4237 ;;		_checkLength
  4238 ;;		_checkEven
  4239 ;;		_makeHexByte
  4240 ;;		i1_eeprom_write
  4241 ;;		i1_strlen
  4242 ;;		_eeprom_read
  4243 ;; This function is called by:
  4244 ;;		_getPacket
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           psect	text897
  4248                           	file	"Packet.c"
  4249                           	line	114
  4250                           	global	__size_of_parsePacket
  4251  0135                     	__size_of_parsePacket	equ	__end_of_parsePacket-_parsePacket
  4252                           	
  4253  0190                     _parsePacket:	
  4254 ;; hardware stack exceeded
  4255                           	opt	stack 0
  4256                           ; Regs used in _parsePacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4257                           ;parsePacket@dataPacket stored from wreg
  4258                           	line	116
  4259  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  4260  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  4261  0192  00AB               	movwf	(parsePacket@dataPacket)
  4262                           	
  4263  0193                     i1l9439:	
  4264                           ;Packet.c: 116: int dataCounter = 0;
  4265  0193  01A8               	clrf	(parsePacket@dataCounter)
  4266  0194  01A9               	clrf	(parsePacket@dataCounter+1)
  4267                           	line	119
  4268                           	
  4269  0195                     i1l9441:	
  4270                           ;Packet.c: 119: if (checkLength() && checkEven()) {
  4271  0195  120A  158A  266E   	fcall	_checkLength
              120A  118A         
  4272  019A  0873               	movf	(1+(?_checkLength)),w
  4273  019B  0472               	iorwf	(0+(?_checkLength)),w
  4274  019C  1903               	skipnz
  4275  019D  299F               	goto	u291_21
  4276  019E  29A0               	goto	u291_20
  4277  019F                     u291_21:
  4278  019F  2AC4               	goto	i1l1598
  4279  01A0                     u291_20:
  4280                           	
  4281  01A0                     i1l9443:	
  4282  01A0  120A  158A  25CA   	fcall	_checkEven
              120A  118A         
  4283  01A5  0873               	movf	(1+(?_checkEven)),w
  4284  01A6  0472               	iorwf	(0+(?_checkEven)),w
  4285  01A7  1903               	skipnz
  4286  01A8  29AA               	goto	u292_21
  4287  01A9  29AB               	goto	u292_20
  4288  01AA                     u292_21:
  4289  01AA  2AC4               	goto	i1l1598
  4290  01AB                     u292_20:
  4291                           	line	122
  4292                           	
  4293  01AB                     i1l9445:	
  4294                           ;Packet.c: 122: eeprom_write(startByteAddr, makeHexByte(dataPacket[0], dataPacket[1]));
  4295  01AB  1283               	bcf	status, 5	;RP0=0, select bank0
  4296  01AC  1303               	bcf	status, 6	;RP1=0, select bank0
  4297  01AD  082B               	movf	(parsePacket@dataPacket),w
  4298  01AE  3E01               	addlw	01h
  4299  01AF  0084               	movwf	fsr0
  4300  01B0  1383               	bcf	status, 7	;select IRP bank0
  4301  01B1  0800               	movf	indf,w
  4302  01B2  00A4               	movwf	(??_parsePacket+0)+0
  4303  01B3  0824               	movf	(??_parsePacket+0)+0,w
  4304  01B4  00FD               	movwf	(?_makeHexByte)
  4305  01B5  082B               	movf	(parsePacket@dataPacket),w
  4306  01B6  0084               	movwf	fsr0
  4307  01B7  0800               	movf	indf,w
  4308  01B8  120A  158A  25A5   	fcall	_makeHexByte
              120A  118A         
  4309  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  4310  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  4311  01BF  00A5               	movwf	(??_parsePacket+1)+0
  4312  01C0  0825               	movf	(??_parsePacket+1)+0,w
  4313  01C1  00FA               	movwf	(?i1_eeprom_write)
  4314  01C2  3054               	movlw	(_startByteAddr-__stringbase)
  4315  01C3  0084               	movwf	fsr0
  4316  01C4  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4317  01C9  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4318                           	line	124
  4319                           ;Packet.c: 124: eeprom_write(rwByteAddr, makeHexByte(dataPacket[2], dataPacket[3]));
  4320  01CE  1283               	bcf	status, 5	;RP0=0, select bank0
  4321  01CF  1303               	bcf	status, 6	;RP1=0, select bank0
  4322  01D0  082B               	movf	(parsePacket@dataPacket),w
  4323  01D1  3E03               	addlw	03h
  4324  01D2  0084               	movwf	fsr0
  4325  01D3  1383               	bcf	status, 7	;select IRP bank0
  4326  01D4  0800               	movf	indf,w
  4327  01D5  00A4               	movwf	(??_parsePacket+0)+0
  4328  01D6  0824               	movf	(??_parsePacket+0)+0,w
  4329  01D7  00FD               	movwf	(?_makeHexByte)
  4330  01D8  082B               	movf	(parsePacket@dataPacket),w
  4331  01D9  3E02               	addlw	02h
  4332  01DA  0084               	movwf	fsr0
  4333  01DB  0800               	movf	indf,w
  4334  01DC  120A  158A  25A5   	fcall	_makeHexByte
              120A  118A         
  4335  01E1  1283               	bcf	status, 5	;RP0=0, select bank0
  4336  01E2  1303               	bcf	status, 6	;RP1=0, select bank0
  4337  01E3  00A5               	movwf	(??_parsePacket+1)+0
  4338  01E4  0825               	movf	(??_parsePacket+1)+0,w
  4339  01E5  00FA               	movwf	(?i1_eeprom_write)
  4340  01E6  3053               	movlw	(_rwByteAddr-__stringbase)
  4341  01E7  0084               	movwf	fsr0
  4342  01E8  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4343  01ED  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4344                           	line	126
  4345                           ;Packet.c: 126: eeprom_write(cmdByteAddr, makeHexByte(dataPacket[4], dataPacket[5]));
  4346  01F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4347  01F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4348  01F4  082B               	movf	(parsePacket@dataPacket),w
  4349  01F5  3E05               	addlw	05h
  4350  01F6  0084               	movwf	fsr0
  4351  01F7  1383               	bcf	status, 7	;select IRP bank0
  4352  01F8  0800               	movf	indf,w
  4353  01F9  00A4               	movwf	(??_parsePacket+0)+0
  4354  01FA  0824               	movf	(??_parsePacket+0)+0,w
  4355  01FB  00FD               	movwf	(?_makeHexByte)
  4356  01FC  082B               	movf	(parsePacket@dataPacket),w
  4357  01FD  3E04               	addlw	04h
  4358  01FE  0084               	movwf	fsr0
  4359  01FF  0800               	movf	indf,w
  4360  0200  120A  158A  25A5   	fcall	_makeHexByte
              120A  118A         
  4361  0205  1283               	bcf	status, 5	;RP0=0, select bank0
  4362  0206  1303               	bcf	status, 6	;RP1=0, select bank0
  4363  0207  00A5               	movwf	(??_parsePacket+1)+0
  4364  0208  0825               	movf	(??_parsePacket+1)+0,w
  4365  0209  00FA               	movwf	(?i1_eeprom_write)
  4366  020A  3042               	movlw	(_cmdByteAddr-__stringbase)
  4367  020B  0084               	movwf	fsr0
  4368  020C  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4369  0211  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4370                           	line	128
  4371                           ;Packet.c: 128: eeprom_write(lenByteAddr, makeHexByte(dataPacket[6], dataPacket[7]));
  4372  0216  1283               	bcf	status, 5	;RP0=0, select bank0
  4373  0217  1303               	bcf	status, 6	;RP1=0, select bank0
  4374  0218  082B               	movf	(parsePacket@dataPacket),w
  4375  0219  3E07               	addlw	07h
  4376  021A  0084               	movwf	fsr0
  4377  021B  1383               	bcf	status, 7	;select IRP bank0
  4378  021C  0800               	movf	indf,w
  4379  021D  00A4               	movwf	(??_parsePacket+0)+0
  4380  021E  0824               	movf	(??_parsePacket+0)+0,w
  4381  021F  00FD               	movwf	(?_makeHexByte)
  4382  0220  082B               	movf	(parsePacket@dataPacket),w
  4383  0221  3E06               	addlw	06h
  4384  0222  0084               	movwf	fsr0
  4385  0223  0800               	movf	indf,w
  4386  0224  120A  158A  25A5   	fcall	_makeHexByte
              120A  118A         
  4387  0229  1283               	bcf	status, 5	;RP0=0, select bank0
  4388  022A  1303               	bcf	status, 6	;RP1=0, select bank0
  4389  022B  00A5               	movwf	(??_parsePacket+1)+0
  4390  022C  0825               	movf	(??_parsePacket+1)+0,w
  4391  022D  00FA               	movwf	(?i1_eeprom_write)
  4392  022E  304D               	movlw	(_lenByteAddr-__stringbase)
  4393  022F  0084               	movwf	fsr0
  4394  0230  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4395  0235  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4396                           	line	130
  4397                           ;Packet.c: 130: eeprom_write(csByteAddr, makeHexByte(dataPacket[strlen(dataPacket) - 2],
                                  dataPacket[strlen(dataPacket) - 1]));
  4398  023A  1283               	bcf	status, 5	;RP0=0, select bank0
  4399  023B  1303               	bcf	status, 6	;RP1=0, select bank0
  4400  023C  082B               	movf	(parsePacket@dataPacket),w
  4401  023D  120A  158A  26FD   	fcall	i1_strlen
              120A  118A         
  4402  0242  0870               	movf	(0+(?i1_strlen)),w
  4403  0243  3EFF               	addlw	0FFh
  4404  0244  1283               	bcf	status, 5	;RP0=0, select bank0
  4405  0245  1303               	bcf	status, 6	;RP1=0, select bank0
  4406  0246  072B               	addwf	(parsePacket@dataPacket),w
  4407  0247  00A4               	movwf	(??_parsePacket+0)+0
  4408  0248  0824               	movf	0+(??_parsePacket+0)+0,w
  4409  0249  0084               	movwf	fsr0
  4410  024A  1383               	bcf	status, 7	;select IRP bank0
  4411  024B  0800               	movf	indf,w
  4412  024C  00A5               	movwf	(??_parsePacket+1)+0
  4413  024D  0825               	movf	(??_parsePacket+1)+0,w
  4414  024E  00FD               	movwf	(?_makeHexByte)
  4415  024F  082B               	movf	(parsePacket@dataPacket),w
  4416  0250  120A  158A  26FD   	fcall	i1_strlen
              120A  118A         
  4417  0255  0870               	movf	(0+(?i1_strlen)),w
  4418  0256  3EFE               	addlw	0FEh
  4419  0257  1283               	bcf	status, 5	;RP0=0, select bank0
  4420  0258  1303               	bcf	status, 6	;RP1=0, select bank0
  4421  0259  072B               	addwf	(parsePacket@dataPacket),w
  4422  025A  00A6               	movwf	(??_parsePacket+2)+0
  4423  025B  0826               	movf	0+(??_parsePacket+2)+0,w
  4424  025C  0084               	movwf	fsr0
  4425  025D  1383               	bcf	status, 7	;select IRP bank0
  4426  025E  0800               	movf	indf,w
  4427  025F  120A  158A  25A5   	fcall	_makeHexByte
              120A  118A         
  4428  0264  1283               	bcf	status, 5	;RP0=0, select bank0
  4429  0265  1303               	bcf	status, 6	;RP1=0, select bank0
  4430  0266  00A7               	movwf	(??_parsePacket+3)+0
  4431  0267  0827               	movf	(??_parsePacket+3)+0,w
  4432  0268  00FA               	movwf	(?i1_eeprom_write)
  4433  0269  3043               	movlw	(_csByteAddr-__stringbase)
  4434  026A  0084               	movwf	fsr0
  4435  026B  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4436  0270  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4437                           	line	133
  4438                           	
  4439  0275                     i1l9447:	
  4440                           ;Packet.c: 133: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  4441  0275  1283               	bcf	status, 5	;RP0=0, select bank0
  4442  0276  1303               	bcf	status, 6	;RP1=0, select bank0
  4443  0277  01AA               	clrf	(parsePacket@i)
  4444  0278  2AAF               	goto	i1l9455
  4445                           	
  4446  0279                     i1l1596:	
  4447                           	line	134
  4448                           	
  4449  0279                     i1l9449:	
  4450                           ;Packet.c: 134: eeprom_write(dataBytesAddr+i, makeHexByte(dataPacket[8 + dataCounter], d
                                 ataPacket[9 + dataCounter]));
  4451  0279  0828               	movf	(parsePacket@dataCounter),w
  4452  027A  3E09               	addlw	09h
  4453  027B  072B               	addwf	(parsePacket@dataPacket),w
  4454  027C  00A4               	movwf	(??_parsePacket+0)+0
  4455  027D  0824               	movf	0+(??_parsePacket+0)+0,w
  4456  027E  0084               	movwf	fsr0
  4457  027F  1383               	bcf	status, 7	;select IRP bank0
  4458  0280  0800               	movf	indf,w
  4459  0281  00A5               	movwf	(??_parsePacket+1)+0
  4460  0282  0825               	movf	(??_parsePacket+1)+0,w
  4461  0283  00FD               	movwf	(?_makeHexByte)
  4462  0284  0828               	movf	(parsePacket@dataCounter),w
  4463  0285  3E08               	addlw	08h
  4464  0286  072B               	addwf	(parsePacket@dataPacket),w
  4465  0287  00A6               	movwf	(??_parsePacket+2)+0
  4466  0288  0826               	movf	0+(??_parsePacket+2)+0,w
  4467  0289  0084               	movwf	fsr0
  4468  028A  0800               	movf	indf,w
  4469  028B  120A  158A  25A5   	fcall	_makeHexByte
              120A  118A         
  4470  0290  1283               	bcf	status, 5	;RP0=0, select bank0
  4471  0291  1303               	bcf	status, 6	;RP1=0, select bank0
  4472  0292  00A7               	movwf	(??_parsePacket+3)+0
  4473  0293  0827               	movf	(??_parsePacket+3)+0,w
  4474  0294  00FA               	movwf	(?i1_eeprom_write)
  4475  0295  3044               	movlw	(_dataBytesAddr-__stringbase)
  4476  0296  0084               	movwf	fsr0
  4477  0297  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4478  029C  072A               	addwf	(parsePacket@i),w
  4479  029D  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4480                           	line	135
  4481                           	
  4482  02A2                     i1l9451:	
  4483                           ;Packet.c: 135: dataCounter += 2;
  4484  02A2  3002               	movlw	low(02h)
  4485  02A3  1283               	bcf	status, 5	;RP0=0, select bank0
  4486  02A4  1303               	bcf	status, 6	;RP1=0, select bank0
  4487  02A5  07A8               	addwf	(parsePacket@dataCounter),f
  4488  02A6  1803               	skipnc
  4489  02A7  0AA9               	incf	(parsePacket@dataCounter+1),f
  4490  02A8  3000               	movlw	high(02h)
  4491  02A9  07A9               	addwf	(parsePacket@dataCounter+1),f
  4492                           	line	133
  4493                           	
  4494  02AA                     i1l9453:	
  4495  02AA  3001               	movlw	(01h)
  4496  02AB  00A4               	movwf	(??_parsePacket+0)+0
  4497  02AC  0824               	movf	(??_parsePacket+0)+0,w
  4498  02AD  07AA               	addwf	(parsePacket@i),f
  4499  02AE  2AAF               	goto	i1l9455
  4500                           	
  4501  02AF                     i1l1595:	
  4502                           	
  4503  02AF                     i1l9455:	
  4504  02AF  304D               	movlw	(_lenByteAddr-__stringbase)
  4505  02B0  0084               	movwf	fsr0
  4506  02B1  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4507  02B6  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  4508  02BB  1283               	bcf	status, 5	;RP0=0, select bank0
  4509  02BC  1303               	bcf	status, 6	;RP1=0, select bank0
  4510  02BD  022A               	subwf	(parsePacket@i),w
  4511  02BE  1C03               	skipc
  4512  02BF  2AC1               	goto	u293_21
  4513  02C0  2AC2               	goto	u293_20
  4514  02C1                     u293_21:
  4515  02C1  2A79               	goto	i1l9449
  4516  02C2                     u293_20:
  4517  02C2  2AC4               	goto	i1l1598
  4518                           	
  4519  02C3                     i1l1597:	
  4520  02C3  2AC4               	goto	i1l1598
  4521                           	line	137
  4522                           	
  4523  02C4                     i1l1594:	
  4524                           	line	138
  4525                           	
  4526  02C4                     i1l1598:	
  4527  02C4  0008               	return
  4528                           	opt stack 0
  4529                           GLOBAL	__end_of_parsePacket
  4530  02C5                     	__end_of_parsePacket:
  4531 ;; =============== function _parsePacket ends ============
  4532                           
  4533                           	signat	_parsePacket,4216
  4534                           	global	i1_writeString
  4535                           psect	text898,local,class=CODE,delta=2
  4536                           global __ptext898
  4537  0E9D                     __ptext898:
  4538                           
  4539 ;; *************** function i1_writeString *****************
  4540 ;; Defined at:
  4541 ;;		line 141 in file "Bluetooth.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  writeString     1    wreg     PTR unsigned char 
  4544 ;;		 -> readError(25), 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  writeString     1   11[COMMON] PTR unsigned char 
  4547 ;;		 -> readError(25), 
  4548 ;;  writeString     2   12[COMMON] unsigned int 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;		None               void
  4551 ;; Registers used:
  4552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4558 ;;      Params:         0       0       0       0       0
  4559 ;;      Locals:         3       0       0       0       0
  4560 ;;      Temps:          1       0       0       0       0
  4561 ;;      Totals:         4       0       0       0       0
  4562 ;;Total ram usage:        4 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    1
  4565 ;; This function calls:
  4566 ;;		i1_writeByte
  4567 ;;		i1_strlen
  4568 ;; This function is called by:
  4569 ;;		_readCommands
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           psect	text898
  4573                           	file	"Bluetooth.c"
  4574                           	line	141
  4575                           	global	__size_ofi1_writeString
  4576  002F                     	__size_ofi1_writeString	equ	__end_ofi1_writeString-i1_writeString
  4577                           	
  4578  0E9D                     i1_writeString:	
  4579 ;; hardware stack exceeded
  4580                           	opt	stack 0
  4581                           ; Regs used in i1_writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4582                           ;i1writeString@userString stored from wreg
  4583                           	line	145
  4584  0E9D  00FB               	movwf	(i1writeString@userString)
  4585                           	
  4586  0E9E                     i1l9631:	
  4587                           ;Bluetooth.c: 143: unsigned int i;
  4588                           ;Bluetooth.c: 145: for(i = 0;i<strlen(userString);i++){
  4589  0E9E  01FC               	clrf	(i1writeString@i)
  4590  0E9F  01FD               	clrf	(i1writeString@i+1)
  4591  0EA0  2EB4               	goto	i1l9637
  4592                           	
  4593  0EA1                     i1l788:	
  4594                           	line	146
  4595                           	
  4596  0EA1                     i1l9633:	
  4597                           ;Bluetooth.c: 146: writeByte(userString[i]);
  4598  0EA1  087C               	movf	(i1writeString@i),w
  4599  0EA2  077B               	addwf	(i1writeString@userString),w
  4600  0EA3  00FA               	movwf	(??i1_writeString+0)+0
  4601  0EA4  087A               	movf	0+(??i1_writeString+0)+0,w
  4602  0EA5  0084               	movwf	fsr0
  4603  0EA6  1383               	bcf	status, 7	;select IRP bank0
  4604  0EA7  0800               	movf	indf,w
  4605  0EA8  120A  158A  24AD   	fcall	i1_writeByte
              120A  158A         
  4606                           	line	145
  4607                           	
  4608  0EAD                     i1l9635:	
  4609  0EAD  3001               	movlw	low(01h)
  4610  0EAE  07FC               	addwf	(i1writeString@i),f
  4611  0EAF  1803               	skipnc
  4612  0EB0  0AFD               	incf	(i1writeString@i+1),f
  4613  0EB1  3000               	movlw	high(01h)
  4614  0EB2  07FD               	addwf	(i1writeString@i+1),f
  4615  0EB3  2EB4               	goto	i1l9637
  4616                           	
  4617  0EB4                     i1l787:	
  4618                           	
  4619  0EB4                     i1l9637:	
  4620  0EB4  087B               	movf	(i1writeString@userString),w
  4621  0EB5  120A  158A  26FD   	fcall	i1_strlen
              120A  158A         
  4622  0EBA  0871               	movf	(1+(?i1_strlen)),w
  4623  0EBB  027D               	subwf	(i1writeString@i+1),w
  4624  0EBC  1D03               	skipz
  4625  0EBD  2EC0               	goto	u312_25
  4626  0EBE  0870               	movf	(0+(?i1_strlen)),w
  4627  0EBF  027C               	subwf	(i1writeString@i),w
  4628  0EC0                     u312_25:
  4629  0EC0  1C03               	skipc
  4630  0EC1  2EC3               	goto	u312_21
  4631  0EC2  2EC4               	goto	u312_20
  4632  0EC3                     u312_21:
  4633  0EC3  2EA1               	goto	i1l9633
  4634  0EC4                     u312_20:
  4635  0EC4  2EC5               	goto	i1l9639
  4636                           	
  4637  0EC5                     i1l789:	
  4638                           	line	149
  4639                           	
  4640  0EC5                     i1l9639:	
  4641                           ;Bluetooth.c: 147: }
  4642                           ;Bluetooth.c: 149: writeByte((unsigned char)i);
  4643  0EC5  087C               	movf	(i1writeString@i),w
  4644  0EC6  120A  158A  24AD   	fcall	i1_writeByte
              120A  158A         
  4645                           	line	151
  4646                           	
  4647  0ECB                     i1l790:	
  4648  0ECB  0008               	return
  4649                           	opt stack 0
  4650                           GLOBAL	__end_ofi1_writeString
  4651  0ECC                     	__end_ofi1_writeString:
  4652 ;; =============== function i1_writeString ends ============
  4653                           
  4654                           	signat	i1_writeString,88
  4655                           	global	_addDataToCheckSum
  4656                           psect	text899,local,class=CODE,delta=2
  4657                           global __ptext899
  4658  035F                     __ptext899:
  4659                           
  4660 ;; *************** function _addDataToCheckSum *****************
  4661 ;; Defined at:
  4662 ;;		line 258 in file "Packet.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  i               1   13[COMMON] unsigned char 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;		None               void
  4669 ;; Registers used:
  4670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4676 ;;      Params:         0       0       0       0       0
  4677 ;;      Locals:         1       0       0       0       0
  4678 ;;      Temps:          0       2       0       0       0
  4679 ;;      Totals:         1       2       0       0       0
  4680 ;;Total ram usage:        3 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; Hardware stack levels required when called:    1
  4683 ;; This function calls:
  4684 ;;		_eeprom_read
  4685 ;;		i1_eeprom_write
  4686 ;; This function is called by:
  4687 ;;		_validatePacket
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           psect	text899
  4691                           	file	"Packet.c"
  4692                           	line	258
  4693                           	global	__size_of_addDataToCheckSum
  4694  0077                     	__size_of_addDataToCheckSum	equ	__end_of_addDataToCheckSum-_addDataToCheckSum
  4695                           	
  4696  035F                     _addDataToCheckSum:	
  4697 ;; hardware stack exceeded
  4698                           	opt	stack 0
  4699                           ; Regs used in _addDataToCheckSum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4700                           	line	260
  4701                           	
  4702  035F                     i1l9539:	
  4703                           ;Packet.c: 260: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(lenB
                                 yteAddr));
  4704  035F  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4705  0360  0084               	movwf	fsr0
  4706  0361  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4707  0366  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  4708  036B  1283               	bcf	status, 5	;RP0=0, select bank0
  4709  036C  1303               	bcf	status, 6	;RP1=0, select bank0
  4710  036D  00A0               	movwf	(??_addDataToCheckSum+0)+0
  4711  036E  304D               	movlw	(_lenByteAddr-__stringbase)
  4712  036F  0084               	movwf	fsr0
  4713  0370  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4714  0375  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  4715  037A  1283               	bcf	status, 5	;RP0=0, select bank0
  4716  037B  1303               	bcf	status, 6	;RP1=0, select bank0
  4717  037C  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  4718  037D  00A1               	movwf	(??_addDataToCheckSum+1)+0
  4719  037E  0821               	movf	(??_addDataToCheckSum+1)+0,w
  4720  037F  00FA               	movwf	(?i1_eeprom_write)
  4721  0380  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4722  0381  0084               	movwf	fsr0
  4723  0382  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4724  0387  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4725                           	line	263
  4726                           	
  4727  038C                     i1l9541:	
  4728                           ;Packet.c: 263: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  4729  038C  01FD               	clrf	(addDataToCheckSum@i)
  4730  038D  2BC3               	goto	i1l9547
  4731                           	
  4732  038E                     i1l1625:	
  4733                           	line	265
  4734                           	
  4735  038E                     i1l9543:	
  4736                           ;Packet.c: 265: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(data
                                 BytesAddr+i));
  4737  038E  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4738  038F  0084               	movwf	fsr0
  4739  0390  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4740  0395  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  4741  039A  1283               	bcf	status, 5	;RP0=0, select bank0
  4742  039B  1303               	bcf	status, 6	;RP1=0, select bank0
  4743  039C  00A0               	movwf	(??_addDataToCheckSum+0)+0
  4744  039D  3044               	movlw	(_dataBytesAddr-__stringbase)
  4745  039E  0084               	movwf	fsr0
  4746  039F  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4747  03A4  077D               	addwf	(addDataToCheckSum@i),w
  4748  03A5  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  4749  03AA  1283               	bcf	status, 5	;RP0=0, select bank0
  4750  03AB  1303               	bcf	status, 6	;RP1=0, select bank0
  4751  03AC  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  4752  03AD  00A1               	movwf	(??_addDataToCheckSum+1)+0
  4753  03AE  0821               	movf	(??_addDataToCheckSum+1)+0,w
  4754  03AF  00FA               	movwf	(?i1_eeprom_write)
  4755  03B0  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4756  03B1  0084               	movwf	fsr0
  4757  03B2  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4758  03B7  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4759                           	line	263
  4760                           	
  4761  03BC                     i1l9545:	
  4762  03BC  3001               	movlw	(01h)
  4763  03BD  1283               	bcf	status, 5	;RP0=0, select bank0
  4764  03BE  1303               	bcf	status, 6	;RP1=0, select bank0
  4765  03BF  00A0               	movwf	(??_addDataToCheckSum+0)+0
  4766  03C0  0820               	movf	(??_addDataToCheckSum+0)+0,w
  4767  03C1  07FD               	addwf	(addDataToCheckSum@i),f
  4768  03C2  2BC3               	goto	i1l9547
  4769                           	
  4770  03C3                     i1l1624:	
  4771                           	
  4772  03C3                     i1l9547:	
  4773  03C3  304D               	movlw	(_lenByteAddr-__stringbase)
  4774  03C4  0084               	movwf	fsr0
  4775  03C5  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4776  03CA  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  4777  03CF  027D               	subwf	(addDataToCheckSum@i),w
  4778  03D0  1C03               	skipc
  4779  03D1  2BD3               	goto	u304_21
  4780  03D2  2BD4               	goto	u304_20
  4781  03D3                     u304_21:
  4782  03D3  2B8E               	goto	i1l9543
  4783  03D4                     u304_20:
  4784  03D4  2BD5               	goto	i1l1627
  4785                           	
  4786  03D5                     i1l1626:	
  4787                           	line	267
  4788                           	
  4789  03D5                     i1l1627:	
  4790  03D5  0008               	return
  4791                           	opt stack 0
  4792                           GLOBAL	__end_of_addDataToCheckSum
  4793  03D6                     	__end_of_addDataToCheckSum:
  4794 ;; =============== function _addDataToCheckSum ends ============
  4795                           
  4796                           	signat	_addDataToCheckSum,88
  4797                           	global	_checkCS
  4798                           psect	text900,local,class=CODE,delta=2
  4799                           global __ptext900
  4800  0F61                     __ptext900:
  4801                           
  4802 ;; *************** function _checkCS *****************
  4803 ;; Defined at:
  4804 ;;		line 216 in file "Packet.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  2    2[COMMON] int 
  4811 ;; Registers used:
  4812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4818 ;;      Params:         2       0       0       0       0
  4819 ;;      Locals:         0       0       0       0       0
  4820 ;;      Temps:          1       0       0       0       0
  4821 ;;      Totals:         3       0       0       0       0
  4822 ;;Total ram usage:        3 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; Hardware stack levels required when called:    1
  4825 ;; This function calls:
  4826 ;;		_eeprom_read
  4827 ;;		i1_writeByte
  4828 ;; This function is called by:
  4829 ;;		_validatePacket
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           psect	text900
  4833                           	file	"Packet.c"
  4834                           	line	216
  4835                           	global	__size_of_checkCS
  4836  0034                     	__size_of_checkCS	equ	__end_of_checkCS-_checkCS
  4837                           	
  4838  0F61                     _checkCS:	
  4839 ;; hardware stack exceeded
  4840                           	opt	stack 0
  4841                           ; Regs used in _checkCS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4842                           	line	218
  4843                           	
  4844  0F61                     i1l9507:	
  4845                           ;Packet.c: 218: if(eeprom_read(csByteAddr) == eeprom_read(calcCSByteAddr)){
  4846  0F61  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4847  0F62  0084               	movwf	fsr0
  4848  0F63  120A  118A  2446   	fcall	stringdir
              120A  158A         
  4849  0F68  120A  118A  27E1   	fcall	_eeprom_read
              120A  158A         
  4850  0F6D  00F4               	movwf	(??_checkCS+0)+0
  4851  0F6E  3043               	movlw	(_csByteAddr-__stringbase)
  4852  0F6F  0084               	movwf	fsr0
  4853  0F70  120A  118A  2446   	fcall	stringdir
              120A  158A         
  4854  0F75  120A  118A  27E1   	fcall	_eeprom_read
              120A  158A         
  4855  0F7A  0674               	xorwf	0+(??_checkCS+0)+0,w
  4856  0F7B  1D03               	skipz
  4857  0F7C  2F7E               	goto	u298_21
  4858  0F7D  2F7F               	goto	u298_20
  4859  0F7E                     u298_21:
  4860  0F7E  2F8B               	goto	i1l9515
  4861  0F7F                     u298_20:
  4862                           	line	220
  4863                           	
  4864  0F7F                     i1l9509:	
  4865                           ;Packet.c: 220: writeByte('Y');
  4866  0F7F  3059               	movlw	(059h)
  4867  0F80  120A  158A  24AD   	fcall	i1_writeByte
              120A  158A         
  4868                           	line	221
  4869                           	
  4870  0F85                     i1l9511:	
  4871                           ;Packet.c: 221: return 1;
  4872  0F85  3001               	movlw	low(01h)
  4873  0F86  00F2               	movwf	(?_checkCS)
  4874  0F87  3000               	movlw	high(01h)
  4875  0F88  00F3               	movwf	((?_checkCS))+1
  4876  0F89  2F94               	goto	i1l1616
  4877                           	
  4878  0F8A                     i1l9513:	
  4879  0F8A  2F94               	goto	i1l1616
  4880                           	line	222
  4881                           	
  4882  0F8B                     i1l1615:	
  4883                           	line	224
  4884                           	
  4885  0F8B                     i1l9515:	
  4886                           ;Packet.c: 222: }
  4887                           ;Packet.c: 224: writeByte('N');
  4888  0F8B  304E               	movlw	(04Eh)
  4889  0F8C  120A  158A  24AD   	fcall	i1_writeByte
              120A  158A         
  4890                           	line	225
  4891                           	
  4892  0F91                     i1l9517:	
  4893                           ;Packet.c: 225: return 0;
  4894  0F91  01F2               	clrf	(?_checkCS)
  4895  0F92  01F3               	clrf	(?_checkCS+1)
  4896  0F93  2F94               	goto	i1l1616
  4897                           	
  4898  0F94                     i1l9519:	
  4899                           	line	226
  4900                           	
  4901  0F94                     i1l1616:	
  4902  0F94  0008               	return
  4903                           	opt stack 0
  4904                           GLOBAL	__end_of_checkCS
  4905  0F95                     	__end_of_checkCS:
  4906 ;; =============== function _checkCS ends ============
  4907                           
  4908                           	signat	_checkCS,90
  4909                           	global	_checkCMDByte
  4910                           psect	text901,local,class=CODE,delta=2
  4911                           global __ptext901
  4912  03D6                     __ptext901:
  4913                           
  4914 ;; *************** function _checkCMDByte *****************
  4915 ;; Defined at:
  4916 ;;		line 193 in file "Packet.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;		None
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;		None
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  2    0[BANK0 ] int 
  4923 ;; Registers used:
  4924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4930 ;;      Params:         0       2       0       0       0
  4931 ;;      Locals:         0       0       0       0       0
  4932 ;;      Temps:          0       2       0       0       0
  4933 ;;      Totals:         0       4       0       0       0
  4934 ;;Total ram usage:        4 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:    1
  4937 ;; This function calls:
  4938 ;;		_eeprom_read
  4939 ;;		i1_eeprom_write
  4940 ;;		i1_writeByte
  4941 ;; This function is called by:
  4942 ;;		_validatePacket
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           psect	text901
  4946                           	file	"Packet.c"
  4947                           	line	193
  4948                           	global	__size_of_checkCMDByte
  4949  0070                     	__size_of_checkCMDByte	equ	__end_of_checkCMDByte-_checkCMDByte
  4950                           	
  4951  03D6                     _checkCMDByte:	
  4952 ;; hardware stack exceeded
  4953                           	opt	stack 0
  4954                           ; Regs used in _checkCMDByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4955                           	line	195
  4956                           	
  4957  03D6                     i1l9491:	
  4958                           ;Packet.c: 195: if(eeprom_read(cmdByteAddr) >= 0 && eeprom_read(cmdByteAddr) <= maxCmd){
  4959  03D6  3042               	movlw	(_cmdByteAddr-__stringbase)
  4960  03D7  0084               	movwf	fsr0
  4961  03D8  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4962  03DD  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  4963  03E2  3042               	movlw	(_cmdByteAddr-__stringbase)
  4964  03E3  0084               	movwf	fsr0
  4965  03E4  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4966  03E9  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  4967  03EE  1283               	bcf	status, 5	;RP0=0, select bank0
  4968  03EF  1303               	bcf	status, 6	;RP1=0, select bank0
  4969  03F0  00A2               	movwf	(??_checkCMDByte+0)+0
  4970  03F1  304E               	movlw	(_maxCmd-__stringbase)
  4971  03F2  0084               	movwf	fsr0
  4972  03F3  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4973  03F8  00A3               	movwf	(??_checkCMDByte+1)+0
  4974  03F9  0822               	movf	0+(??_checkCMDByte+0)+0,w
  4975  03FA  0223               	subwf	(??_checkCMDByte+1)+0,w
  4976  03FB  1C03               	skipc
  4977  03FC  2BFE               	goto	u297_21
  4978  03FD  2BFF               	goto	u297_20
  4979  03FE                     u297_21:
  4980  03FE  2C3A               	goto	i1l9501
  4981  03FF                     u297_20:
  4982                           	line	197
  4983                           	
  4984  03FF                     i1l9493:	
  4985                           ;Packet.c: 197: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(cmdB
                                 yteAddr));
  4986  03FF  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4987  0400  0084               	movwf	fsr0
  4988  0401  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4989  0406  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  4990  040B  1283               	bcf	status, 5	;RP0=0, select bank0
  4991  040C  1303               	bcf	status, 6	;RP1=0, select bank0
  4992  040D  00A2               	movwf	(??_checkCMDByte+0)+0
  4993  040E  3042               	movlw	(_cmdByteAddr-__stringbase)
  4994  040F  0084               	movwf	fsr0
  4995  0410  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4996  0415  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  4997  041A  1283               	bcf	status, 5	;RP0=0, select bank0
  4998  041B  1303               	bcf	status, 6	;RP1=0, select bank0
  4999  041C  0722               	addwf	0+(??_checkCMDByte+0)+0,w
  5000  041D  00A3               	movwf	(??_checkCMDByte+1)+0
  5001  041E  0823               	movf	(??_checkCMDByte+1)+0,w
  5002  041F  00FA               	movwf	(?i1_eeprom_write)
  5003  0420  3041               	movlw	(_calcCSByteAddr-__stringbase)
  5004  0421  0084               	movwf	fsr0
  5005  0422  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5006  0427  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  5007                           	line	199
  5008                           	
  5009  042C                     i1l9495:	
  5010                           ;Packet.c: 199: writeByte('C');
  5011  042C  3043               	movlw	(043h)
  5012  042D  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  5013                           	line	200
  5014                           	
  5015  0432                     i1l9497:	
  5016                           ;Packet.c: 200: return 1;
  5017  0432  3001               	movlw	low(01h)
  5018  0433  1283               	bcf	status, 5	;RP0=0, select bank0
  5019  0434  1303               	bcf	status, 6	;RP1=0, select bank0
  5020  0435  00A0               	movwf	(?_checkCMDByte)
  5021  0436  3000               	movlw	high(01h)
  5022  0437  00A1               	movwf	((?_checkCMDByte))+1
  5023  0438  2C45               	goto	i1l1612
  5024                           	
  5025  0439                     i1l9499:	
  5026  0439  2C45               	goto	i1l1612
  5027                           	line	201
  5028                           	
  5029  043A                     i1l1611:	
  5030                           	line	203
  5031                           	
  5032  043A                     i1l9501:	
  5033                           ;Packet.c: 201: }
  5034                           ;Packet.c: 203: writeByte('N');
  5035  043A  304E               	movlw	(04Eh)
  5036  043B  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  5037                           	line	204
  5038                           	
  5039  0440                     i1l9503:	
  5040                           ;Packet.c: 204: return 0;
  5041  0440  1283               	bcf	status, 5	;RP0=0, select bank0
  5042  0441  1303               	bcf	status, 6	;RP1=0, select bank0
  5043  0442  01A0               	clrf	(?_checkCMDByte)
  5044  0443  01A1               	clrf	(?_checkCMDByte+1)
  5045  0444  2C45               	goto	i1l1612
  5046                           	
  5047  0445                     i1l9505:	
  5048                           	line	205
  5049                           	
  5050  0445                     i1l1612:	
  5051  0445  0008               	return
  5052                           	opt stack 0
  5053                           GLOBAL	__end_of_checkCMDByte
  5054  0446                     	__end_of_checkCMDByte:
  5055 ;; =============== function _checkCMDByte ends ============
  5056                           
  5057                           	signat	_checkCMDByte,90
  5058                           	global	_checkRWByte
  5059                           psect	text902,local,class=CODE,delta=2
  5060                           global __ptext902
  5061  04B3                     __ptext902:
  5062                           
  5063 ;; *************** function _checkRWByte *****************
  5064 ;; Defined at:
  5065 ;;		line 171 in file "Packet.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  2    0[BANK0 ] int 
  5072 ;; Registers used:
  5073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5079 ;;      Params:         0       2       0       0       0
  5080 ;;      Locals:         0       0       0       0       0
  5081 ;;      Temps:          0       2       0       0       0
  5082 ;;      Totals:         0       4       0       0       0
  5083 ;;Total ram usage:        4 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    1
  5086 ;; This function calls:
  5087 ;;		_eeprom_read
  5088 ;;		i1_writeByte
  5089 ;;		i1_eeprom_write
  5090 ;; This function is called by:
  5091 ;;		_validatePacket
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           psect	text902
  5095                           	file	"Packet.c"
  5096                           	line	171
  5097                           	global	__size_of_checkRWByte
  5098  006A                     	__size_of_checkRWByte	equ	__end_of_checkRWByte-_checkRWByte
  5099                           	
  5100  04B3                     _checkRWByte:	
  5101 ;; hardware stack exceeded
  5102                           	opt	stack 0
  5103                           ; Regs used in _checkRWByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5104                           	line	174
  5105                           	
  5106  04B3                     i1l9473:	
  5107                           ;Packet.c: 174: if(eeprom_read(rwByteAddr) == 0 || eeprom_read(rwByteAddr) == 1){
  5108  04B3  3053               	movlw	(_rwByteAddr-__stringbase)
  5109  04B4  0084               	movwf	fsr0
  5110  04B5  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5111  04BA  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  5112  04BF  3A00               	xorlw	0
  5113  04C0  1903               	skipnz
  5114  04C1  2CC3               	goto	u295_21
  5115  04C2  2CC4               	goto	u295_20
  5116  04C3                     u295_21:
  5117  04C3  2CD6               	goto	i1l9477
  5118  04C4                     u295_20:
  5119                           	
  5120  04C4                     i1l9475:	
  5121  04C4  3053               	movlw	(_rwByteAddr-__stringbase)
  5122  04C5  0084               	movwf	fsr0
  5123  04C6  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5124  04CB  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  5125  04D0  3A01               	xorlw	01h
  5126  04D1  1D03               	skipz
  5127  04D2  2CD4               	goto	u296_21
  5128  04D3  2CD5               	goto	u296_20
  5129  04D4                     u296_21:
  5130  04D4  2D11               	goto	i1l9485
  5131  04D5                     u296_20:
  5132  04D5  2CD6               	goto	i1l9477
  5133                           	
  5134  04D6                     i1l1607:	
  5135                           	line	176
  5136                           	
  5137  04D6                     i1l9477:	
  5138                           ;Packet.c: 176: writeByte('R');
  5139  04D6  3052               	movlw	(052h)
  5140  04D7  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  5141                           	line	178
  5142                           	
  5143  04DC                     i1l9479:	
  5144                           ;Packet.c: 178: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(rwBy
                                 teAddr));
  5145  04DC  3041               	movlw	(_calcCSByteAddr-__stringbase)
  5146  04DD  0084               	movwf	fsr0
  5147  04DE  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5148  04E3  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  5149  04E8  1283               	bcf	status, 5	;RP0=0, select bank0
  5150  04E9  1303               	bcf	status, 6	;RP1=0, select bank0
  5151  04EA  00A2               	movwf	(??_checkRWByte+0)+0
  5152  04EB  3053               	movlw	(_rwByteAddr-__stringbase)
  5153  04EC  0084               	movwf	fsr0
  5154  04ED  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5155  04F2  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  5156  04F7  1283               	bcf	status, 5	;RP0=0, select bank0
  5157  04F8  1303               	bcf	status, 6	;RP1=0, select bank0
  5158  04F9  0722               	addwf	0+(??_checkRWByte+0)+0,w
  5159  04FA  00A3               	movwf	(??_checkRWByte+1)+0
  5160  04FB  0823               	movf	(??_checkRWByte+1)+0,w
  5161  04FC  00FA               	movwf	(?i1_eeprom_write)
  5162  04FD  3041               	movlw	(_calcCSByteAddr-__stringbase)
  5163  04FE  0084               	movwf	fsr0
  5164  04FF  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5165  0504  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  5166                           	line	179
  5167                           	
  5168  0509                     i1l9481:	
  5169                           ;Packet.c: 179: return 1;
  5170  0509  3001               	movlw	low(01h)
  5171  050A  1283               	bcf	status, 5	;RP0=0, select bank0
  5172  050B  1303               	bcf	status, 6	;RP1=0, select bank0
  5173  050C  00A0               	movwf	(?_checkRWByte)
  5174  050D  3000               	movlw	high(01h)
  5175  050E  00A1               	movwf	((?_checkRWByte))+1
  5176  050F  2D1C               	goto	i1l1608
  5177                           	
  5178  0510                     i1l9483:	
  5179  0510  2D1C               	goto	i1l1608
  5180                           	line	180
  5181                           	
  5182  0511                     i1l1605:	
  5183                           	line	182
  5184                           	
  5185  0511                     i1l9485:	
  5186                           ;Packet.c: 180: }
  5187                           ;Packet.c: 182: writeByte('N');
  5188  0511  304E               	movlw	(04Eh)
  5189  0512  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  5190                           	line	183
  5191                           	
  5192  0517                     i1l9487:	
  5193                           ;Packet.c: 183: return 0;
  5194  0517  1283               	bcf	status, 5	;RP0=0, select bank0
  5195  0518  1303               	bcf	status, 6	;RP1=0, select bank0
  5196  0519  01A0               	clrf	(?_checkRWByte)
  5197  051A  01A1               	clrf	(?_checkRWByte+1)
  5198  051B  2D1C               	goto	i1l1608
  5199                           	
  5200  051C                     i1l9489:	
  5201                           	line	184
  5202                           	
  5203  051C                     i1l1608:	
  5204  051C  0008               	return
  5205                           	opt stack 0
  5206                           GLOBAL	__end_of_checkRWByte
  5207  051D                     	__end_of_checkRWByte:
  5208 ;; =============== function _checkRWByte ends ============
  5209                           
  5210                           	signat	_checkRWByte,90
  5211                           	global	_checkStartByte
  5212                           psect	text903,local,class=CODE,delta=2
  5213                           global __ptext903
  5214  0584                     __ptext903:
  5215                           
  5216 ;; *************** function _checkStartByte *****************
  5217 ;; Defined at:
  5218 ;;		line 148 in file "Packet.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;		None
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;		None
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  2    0[BANK0 ] int 
  5225 ;; Registers used:
  5226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5232 ;;      Params:         0       2       0       0       0
  5233 ;;      Locals:         0       0       0       0       0
  5234 ;;      Temps:          0       2       0       0       0
  5235 ;;      Totals:         0       4       0       0       0
  5236 ;;Total ram usage:        4 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    1
  5239 ;; This function calls:
  5240 ;;		_eeprom_read
  5241 ;;		i1_writeByte
  5242 ;;		i1_eeprom_write
  5243 ;; This function is called by:
  5244 ;;		_validatePacket
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           psect	text903
  5248                           	file	"Packet.c"
  5249                           	line	148
  5250                           	global	__size_of_checkStartByte
  5251  0064                     	__size_of_checkStartByte	equ	__end_of_checkStartByte-_checkStartByte
  5252                           	
  5253  0584                     _checkStartByte:	
  5254 ;; hardware stack exceeded
  5255                           	opt	stack 0
  5256                           ; Regs used in _checkStartByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5257                           	line	151
  5258                           	
  5259  0584                     i1l9457:	
  5260                           ;Packet.c: 151: if (eeprom_read(startByteAddr) == userStartByte) {
  5261  0584  3060               	movlw	(_userStartByte-__stringbase)
  5262  0585  0084               	movwf	fsr0
  5263  0586  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5264  058B  1283               	bcf	status, 5	;RP0=0, select bank0
  5265  058C  1303               	bcf	status, 6	;RP1=0, select bank0
  5266  058D  00A2               	movwf	(??_checkStartByte+0)+0
  5267  058E  3054               	movlw	(_startByteAddr-__stringbase)
  5268  058F  0084               	movwf	fsr0
  5269  0590  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5270  0595  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  5271  059A  1283               	bcf	status, 5	;RP0=0, select bank0
  5272  059B  1303               	bcf	status, 6	;RP1=0, select bank0
  5273  059C  0622               	xorwf	(??_checkStartByte+0)+0,w
  5274  059D  1D03               	skipz
  5275  059E  2DA0               	goto	u294_21
  5276  059F  2DA1               	goto	u294_20
  5277  05A0                     u294_21:
  5278  05A0  2DDC               	goto	i1l9467
  5279  05A1                     u294_20:
  5280                           	line	153
  5281                           	
  5282  05A1                     i1l9459:	
  5283                           ;Packet.c: 153: writeByte('S');
  5284  05A1  3053               	movlw	(053h)
  5285  05A2  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  5286                           	line	155
  5287                           	
  5288  05A7                     i1l9461:	
  5289                           ;Packet.c: 155: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(star
                                 tByteAddr));
  5290  05A7  3041               	movlw	(_calcCSByteAddr-__stringbase)
  5291  05A8  0084               	movwf	fsr0
  5292  05A9  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5293  05AE  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  5294  05B3  1283               	bcf	status, 5	;RP0=0, select bank0
  5295  05B4  1303               	bcf	status, 6	;RP1=0, select bank0
  5296  05B5  00A2               	movwf	(??_checkStartByte+0)+0
  5297  05B6  3054               	movlw	(_startByteAddr-__stringbase)
  5298  05B7  0084               	movwf	fsr0
  5299  05B8  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5300  05BD  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  5301  05C2  1283               	bcf	status, 5	;RP0=0, select bank0
  5302  05C3  1303               	bcf	status, 6	;RP1=0, select bank0
  5303  05C4  0722               	addwf	0+(??_checkStartByte+0)+0,w
  5304  05C5  00A3               	movwf	(??_checkStartByte+1)+0
  5305  05C6  0823               	movf	(??_checkStartByte+1)+0,w
  5306  05C7  00FA               	movwf	(?i1_eeprom_write)
  5307  05C8  3041               	movlw	(_calcCSByteAddr-__stringbase)
  5308  05C9  0084               	movwf	fsr0
  5309  05CA  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5310  05CF  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  5311                           	line	156
  5312                           	
  5313  05D4                     i1l9463:	
  5314                           ;Packet.c: 156: return 1;
  5315  05D4  3001               	movlw	low(01h)
  5316  05D5  1283               	bcf	status, 5	;RP0=0, select bank0
  5317  05D6  1303               	bcf	status, 6	;RP1=0, select bank0
  5318  05D7  00A0               	movwf	(?_checkStartByte)
  5319  05D8  3000               	movlw	high(01h)
  5320  05D9  00A1               	movwf	((?_checkStartByte))+1
  5321  05DA  2DE7               	goto	i1l1602
  5322                           	
  5323  05DB                     i1l9465:	
  5324  05DB  2DE7               	goto	i1l1602
  5325                           	line	157
  5326                           	
  5327  05DC                     i1l1601:	
  5328                           	line	159
  5329                           	
  5330  05DC                     i1l9467:	
  5331                           ;Packet.c: 157: }
  5332                           ;Packet.c: 159: writeByte('N');
  5333  05DC  304E               	movlw	(04Eh)
  5334  05DD  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  5335                           	line	160
  5336                           	
  5337  05E2                     i1l9469:	
  5338                           ;Packet.c: 160: return 0;
  5339  05E2  1283               	bcf	status, 5	;RP0=0, select bank0
  5340  05E3  1303               	bcf	status, 6	;RP1=0, select bank0
  5341  05E4  01A0               	clrf	(?_checkStartByte)
  5342  05E5  01A1               	clrf	(?_checkStartByte+1)
  5343  05E6  2DE7               	goto	i1l1602
  5344                           	
  5345  05E7                     i1l9471:	
  5346                           	line	161
  5347                           	
  5348  05E7                     i1l1602:	
  5349  05E7  0008               	return
  5350                           	opt stack 0
  5351                           GLOBAL	__end_of_checkStartByte
  5352  05E8                     	__end_of_checkStartByte:
  5353 ;; =============== function _checkStartByte ends ============
  5354                           
  5355                           	signat	_checkStartByte,90
  5356                           	global	_checkDataFrames
  5357                           psect	text904,local,class=CODE,delta=2
  5358                           global __ptext904
  5359  02C5                     __ptext904:
  5360                           
  5361 ;; *************** function _checkDataFrames *****************
  5362 ;; Defined at:
  5363 ;;		line 85 in file "Packet.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;		None
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;		None
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  2    2[COMMON] int 
  5370 ;; Registers used:
  5371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5377 ;;      Params:         2       0       0       0       0
  5378 ;;      Locals:         0       0       0       0       0
  5379 ;;      Temps:          6       0       0       0       0
  5380 ;;      Totals:         8       0       0       0       0
  5381 ;;Total ram usage:        8 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    1
  5384 ;; This function calls:
  5385 ;;		_eeprom_read
  5386 ;;		i1_writeByte
  5387 ;; This function is called by:
  5388 ;;		_validatePacket
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           psect	text904
  5392                           	file	"Packet.c"
  5393                           	line	85
  5394                           	global	__size_of_checkDataFrames
  5395  009A                     	__size_of_checkDataFrames	equ	__end_of_checkDataFrames-_checkDataFrames
  5396                           	
  5397  02C5                     _checkDataFrames:	
  5398 ;; hardware stack exceeded
  5399                           	opt	stack 0
  5400                           ; Regs used in _checkDataFrames: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5401                           	line	87
  5402                           	
  5403  02C5                     i1l9413:	
  5404                           ;Packet.c: 87: if(eeprom_read(lenByteAddr) == 0 && (eeprom_read(RXLenAddr)-noDataLen) ==
                                  0){
  5405  02C5  304D               	movlw	(_lenByteAddr-__stringbase)
  5406  02C6  0084               	movwf	fsr0
  5407  02C7  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5408  02CC  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  5409  02D1  3800               	iorlw	0
  5410  02D2  1D03               	skipz
  5411  02D3  2AD5               	goto	u287_21
  5412  02D4  2AD6               	goto	u287_20
  5413  02D5                     u287_21:
  5414  02D5  2B09               	goto	i1l9425
  5415  02D6                     u287_20:
  5416                           	
  5417  02D6                     i1l9415:	
  5418  02D6  3051               	movlw	(_noDataLen-__stringbase)
  5419  02D7  0084               	movwf	fsr0
  5420  02D8  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5421  02DD  00F4               	movwf	(??_checkDataFrames+0)+0
  5422  02DE  01F5               	clrf	(??_checkDataFrames+0)+0+1
  5423  02DF  09F4               	comf	(??_checkDataFrames+0)+0,f
  5424  02E0  09F5               	comf	(??_checkDataFrames+0)+1,f
  5425  02E1  0AF4               	incf	(??_checkDataFrames+0)+0,f
  5426  02E2  1903               	skipnz
  5427  02E3  0AF5               	incf	(??_checkDataFrames+0)+1,f
  5428  02E4  3040               	movlw	(_RXLenAddr-__stringbase)
  5429  02E5  0084               	movwf	fsr0
  5430  02E6  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5431  02EB  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  5432  02F0  0774               	addwf	0+(??_checkDataFrames+0)+0,w
  5433  02F1  00F6               	movwf	(??_checkDataFrames+2)+0
  5434  02F2  0875               	movf	1+(??_checkDataFrames+0)+0,w
  5435  02F3  1803               	skipnc
  5436  02F4  0A75               	incf	1+(??_checkDataFrames+0)+0,w
  5437  02F5  00F7               	movwf	((??_checkDataFrames+2)+0)+1
  5438  02F6  0877               	movf	1+(??_checkDataFrames+2)+0,w
  5439  02F7  0476               	iorwf	0+(??_checkDataFrames+2)+0,w
  5440  02F8  1D03               	skipz
  5441  02F9  2AFB               	goto	u288_21
  5442  02FA  2AFC               	goto	u288_20
  5443  02FB                     u288_21:
  5444  02FB  2B09               	goto	i1l9425
  5445  02FC                     u288_20:
  5446                           	line	89
  5447                           	
  5448  02FC                     i1l9417:	
  5449                           ;Packet.c: 89: writeByte('D');
  5450  02FC  3044               	movlw	(044h)
  5451  02FD  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  5452                           	line	90
  5453                           	
  5454  0302                     i1l9419:	
  5455                           ;Packet.c: 90: return 1;
  5456  0302  3001               	movlw	low(01h)
  5457  0303  00F2               	movwf	(?_checkDataFrames)
  5458  0304  3000               	movlw	high(01h)
  5459  0305  00F3               	movwf	((?_checkDataFrames))+1
  5460  0306  2B5E               	goto	i1l1589
  5461                           	
  5462  0307                     i1l9421:	
  5463  0307  2B5E               	goto	i1l1589
  5464                           	line	94
  5465                           	
  5466  0308                     i1l9423:	
  5467                           ;Packet.c: 94: }else if((eeprom_read(RXLenAddr) - noDataLen) == (eeprom_read(lenByteAddr
                                 )*2)){
  5468  0308  2B55               	goto	i1l9433
  5469                           	
  5470  0309                     i1l1588:	
  5471                           	
  5472  0309                     i1l9425:	
  5473  0309  304D               	movlw	(_lenByteAddr-__stringbase)
  5474  030A  0084               	movwf	fsr0
  5475  030B  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5476  0310  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  5477  0315  00F4               	movwf	(??_checkDataFrames+0)+0
  5478  0316  01F5               	clrf	(??_checkDataFrames+0)+0+1
  5479  0317  3001               	movlw	01h
  5480  0318  00FF               	movwf	btemp+1
  5481  0319                     u289_25:
  5482  0319  1003               	clrc
  5483  031A  0DF4               	rlf	(??_checkDataFrames+0)+0,f
  5484  031B  0DF5               	rlf	(??_checkDataFrames+0)+1,f
  5485  031C  0BFF               	decfsz	btemp+1,f
  5486  031D  2B19               	goto	u289_25
  5487  031E  3051               	movlw	(_noDataLen-__stringbase)
  5488  031F  0084               	movwf	fsr0
  5489  0320  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5490  0325  00F6               	movwf	(??_checkDataFrames+2)+0
  5491  0326  01F7               	clrf	(??_checkDataFrames+2)+0+1
  5492  0327  09F6               	comf	(??_checkDataFrames+2)+0,f
  5493  0328  09F7               	comf	(??_checkDataFrames+2)+1,f
  5494  0329  0AF6               	incf	(??_checkDataFrames+2)+0,f
  5495  032A  1903               	skipnz
  5496  032B  0AF7               	incf	(??_checkDataFrames+2)+1,f
  5497  032C  3040               	movlw	(_RXLenAddr-__stringbase)
  5498  032D  0084               	movwf	fsr0
  5499  032E  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5500  0333  120A  118A  27E1   	fcall	_eeprom_read
              120A  118A         
  5501  0338  0776               	addwf	0+(??_checkDataFrames+2)+0,w
  5502  0339  00F8               	movwf	(??_checkDataFrames+4)+0
  5503  033A  0877               	movf	1+(??_checkDataFrames+2)+0,w
  5504  033B  1803               	skipnc
  5505  033C  0A77               	incf	1+(??_checkDataFrames+2)+0,w
  5506  033D  00F9               	movwf	((??_checkDataFrames+4)+0)+1
  5507  033E  0875               	movf	1+(??_checkDataFrames+0)+0,w
  5508  033F  0679               	xorwf	1+(??_checkDataFrames+4)+0,w
  5509  0340  1D03               	skipz
  5510  0341  2B44               	goto	u290_25
  5511  0342  0874               	movf	0+(??_checkDataFrames+0)+0,w
  5512  0343  0678               	xorwf	0+(??_checkDataFrames+4)+0,w
  5513  0344                     u290_25:
  5514                           
  5515  0344  1D03               	skipz
  5516  0345  2B47               	goto	u290_21
  5517  0346  2B48               	goto	u290_20
  5518  0347                     u290_21:
  5519  0347  2B55               	goto	i1l9433
  5520  0348                     u290_20:
  5521                           	line	96
  5522                           	
  5523  0348                     i1l9427:	
  5524                           ;Packet.c: 96: writeByte('D');
  5525  0348  3044               	movlw	(044h)
  5526  0349  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  5527                           	line	97
  5528                           	
  5529  034E                     i1l9429:	
  5530                           ;Packet.c: 97: return 1;
  5531  034E  3001               	movlw	low(01h)
  5532  034F  00F2               	movwf	(?_checkDataFrames)
  5533  0350  3000               	movlw	high(01h)
  5534  0351  00F3               	movwf	((?_checkDataFrames))+1
  5535  0352  2B5E               	goto	i1l1589
  5536                           	
  5537  0353                     i1l9431:	
  5538  0353  2B5E               	goto	i1l1589
  5539                           	line	98
  5540                           	
  5541  0354                     i1l1591:	
  5542  0354  2B55               	goto	i1l9433
  5543                           	line	101
  5544                           	
  5545  0355                     i1l1590:	
  5546                           	
  5547  0355                     i1l9433:	
  5548                           ;Packet.c: 98: }
  5549                           ;Packet.c: 101: writeByte('N');
  5550  0355  304E               	movlw	(04Eh)
  5551  0356  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  5552                           	line	102
  5553                           	
  5554  035B                     i1l9435:	
  5555                           ;Packet.c: 102: return 0;
  5556  035B  01F2               	clrf	(?_checkDataFrames)
  5557  035C  01F3               	clrf	(?_checkDataFrames+1)
  5558  035D  2B5E               	goto	i1l1589
  5559                           	
  5560  035E                     i1l9437:	
  5561                           	line	103
  5562                           	
  5563  035E                     i1l1589:	
  5564  035E  0008               	return
  5565                           	opt stack 0
  5566                           GLOBAL	__end_of_checkDataFrames
  5567  035F                     	__end_of_checkDataFrames:
  5568 ;; =============== function _checkDataFrames ends ============
  5569                           
  5570                           	signat	_checkDataFrames,90
  5571                           	global	_checkLength
  5572                           psect	text905,local,class=CODE,delta=2
  5573                           global __ptext905
  5574  0E6E                     __ptext905:
  5575                           
  5576 ;; *************** function _checkLength *****************
  5577 ;; Defined at:
  5578 ;;		line 64 in file "Packet.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  2    2[COMMON] int 
  5585 ;; Registers used:
  5586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5592 ;;      Params:         2       0       0       0       0
  5593 ;;      Locals:         0       0       0       0       0
  5594 ;;      Temps:          1       0       0       0       0
  5595 ;;      Totals:         3       0       0       0       0
  5596 ;;Total ram usage:        3 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    1
  5599 ;; This function calls:
  5600 ;;		_eeprom_read
  5601 ;;		i1_writeByte
  5602 ;; This function is called by:
  5603 ;;		_parsePacket
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           psect	text905
  5607                           	file	"Packet.c"
  5608                           	line	64
  5609                           	global	__size_of_checkLength
  5610  002F                     	__size_of_checkLength	equ	__end_of_checkLength-_checkLength
  5611                           	
  5612  0E6E                     _checkLength:	
  5613 ;; hardware stack exceeded
  5614                           	opt	stack 0
  5615                           ; Regs used in _checkLength: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5616                           	line	67
  5617                           	
  5618  0E6E                     i1l9399:	
  5619                           ;Packet.c: 67: if (eeprom_read(RXLenAddr) >= minSizeByte) {
  5620  0E6E  3040               	movlw	(_RXLenAddr-__stringbase)
  5621  0E6F  0084               	movwf	fsr0
  5622  0E70  120A  118A  2446   	fcall	stringdir
              120A  158A         
  5623  0E75  120A  118A  27E1   	fcall	_eeprom_read
              120A  158A         
  5624  0E7A  00F4               	movwf	(??_checkLength+0)+0
  5625  0E7B  304F               	movlw	(_minSizeByte-__stringbase)
  5626  0E7C  0084               	movwf	fsr0
  5627  0E7D  120A  118A  2446   	fcall	stringdir
              120A  158A         
  5628  0E82  0274               	subwf	0+(??_checkLength+0)+0,w
  5629  0E83  1C03               	skipc
  5630  0E84  2E86               	goto	u286_21
  5631  0E85  2E87               	goto	u286_20
  5632  0E86                     u286_21:
  5633  0E86  2E93               	goto	i1l9407
  5634  0E87                     u286_20:
  5635                           	line	69
  5636                           	
  5637  0E87                     i1l9401:	
  5638                           ;Packet.c: 69: writeByte('L');
  5639  0E87  304C               	movlw	(04Ch)
  5640  0E88  120A  158A  24AD   	fcall	i1_writeByte
              120A  158A         
  5641                           	line	70
  5642                           	
  5643  0E8D                     i1l9403:	
  5644                           ;Packet.c: 70: return 1;
  5645  0E8D  3001               	movlw	low(01h)
  5646  0E8E  00F2               	movwf	(?_checkLength)
  5647  0E8F  3000               	movlw	high(01h)
  5648  0E90  00F3               	movwf	((?_checkLength))+1
  5649  0E91  2E9C               	goto	i1l1585
  5650                           	
  5651  0E92                     i1l9405:	
  5652  0E92  2E9C               	goto	i1l1585
  5653                           	line	71
  5654                           	
  5655  0E93                     i1l1584:	
  5656                           	line	73
  5657                           	
  5658  0E93                     i1l9407:	
  5659                           ;Packet.c: 71: }
  5660                           ;Packet.c: 73: writeByte('N');
  5661  0E93  304E               	movlw	(04Eh)
  5662  0E94  120A  158A  24AD   	fcall	i1_writeByte
              120A  158A         
  5663                           	line	74
  5664                           	
  5665  0E99                     i1l9409:	
  5666                           ;Packet.c: 74: return 0;
  5667  0E99  01F2               	clrf	(?_checkLength)
  5668  0E9A  01F3               	clrf	(?_checkLength+1)
  5669  0E9B  2E9C               	goto	i1l1585
  5670                           	
  5671  0E9C                     i1l9411:	
  5672                           	line	75
  5673                           	
  5674  0E9C                     i1l1585:	
  5675  0E9C  0008               	return
  5676                           	opt stack 0
  5677                           GLOBAL	__end_of_checkLength
  5678  0E9D                     	__end_of_checkLength:
  5679 ;; =============== function _checkLength ends ============
  5680                           
  5681                           	signat	_checkLength,90
  5682                           	global	_checkEven
  5683                           psect	text906,local,class=CODE,delta=2
  5684                           global __ptext906
  5685  0DCA                     __ptext906:
  5686                           
  5687 ;; *************** function _checkEven *****************
  5688 ;; Defined at:
  5689 ;;		line 42 in file "Packet.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;		None
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;		None
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  2    2[COMMON] int 
  5696 ;; Registers used:
  5697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5703 ;;      Params:         2       0       0       0       0
  5704 ;;      Locals:         0       0       0       0       0
  5705 ;;      Temps:          1       0       0       0       0
  5706 ;;      Totals:         3       0       0       0       0
  5707 ;;Total ram usage:        3 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; Hardware stack levels required when called:    1
  5710 ;; This function calls:
  5711 ;;		_eeprom_read
  5712 ;;		i1_writeByte
  5713 ;; This function is called by:
  5714 ;;		_parsePacket
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           psect	text906
  5718                           	file	"Packet.c"
  5719                           	line	42
  5720                           	global	__size_of_checkEven
  5721  0027                     	__size_of_checkEven	equ	__end_of_checkEven-_checkEven
  5722                           	
  5723  0DCA                     _checkEven:	
  5724 ;; hardware stack exceeded
  5725                           	opt	stack 0
  5726                           ; Regs used in _checkEven: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5727                           	line	45
  5728                           	
  5729  0DCA                     i1l9381:	
  5730                           ;Packet.c: 45: if (eeprom_read(RXLenAddr) % 2 == 0) {
  5731  0DCA  3040               	movlw	(_RXLenAddr-__stringbase)
  5732  0DCB  0084               	movwf	fsr0
  5733  0DCC  120A  118A  2446   	fcall	stringdir
              120A  158A         
  5734  0DD1  120A  118A  27E1   	fcall	_eeprom_read
              120A  158A         
  5735  0DD6  00F4               	movwf	(??_checkEven+0)+0
  5736  0DD7  1874               	btfsc	0+(??_checkEven+0)+0,(0)&7
  5737  0DD8  2DDA               	goto	u284_21
  5738  0DD9  2DDB               	goto	u284_20
  5739  0DDA                     u284_21:
  5740  0DDA  2DE7               	goto	i1l9389
  5741  0DDB                     u284_20:
  5742                           	line	47
  5743                           	
  5744  0DDB                     i1l9383:	
  5745                           ;Packet.c: 47: writeByte('E');
  5746  0DDB  3045               	movlw	(045h)
  5747  0DDC  120A  158A  24AD   	fcall	i1_writeByte
              120A  158A         
  5748                           	line	48
  5749                           	
  5750  0DE1                     i1l9385:	
  5751                           ;Packet.c: 48: return 1;
  5752  0DE1  3001               	movlw	low(01h)
  5753  0DE2  00F2               	movwf	(?_checkEven)
  5754  0DE3  3000               	movlw	high(01h)
  5755  0DE4  00F3               	movwf	((?_checkEven))+1
  5756  0DE5  2DF0               	goto	i1l1581
  5757                           	
  5758  0DE6                     i1l9387:	
  5759  0DE6  2DF0               	goto	i1l1581
  5760                           	line	49
  5761                           	
  5762  0DE7                     i1l1580:	
  5763                           	line	51
  5764                           	
  5765  0DE7                     i1l9389:	
  5766                           ;Packet.c: 49: }
  5767                           ;Packet.c: 51: writeByte('N');
  5768  0DE7  304E               	movlw	(04Eh)
  5769  0DE8  120A  158A  24AD   	fcall	i1_writeByte
              120A  158A         
  5770                           	line	52
  5771                           	
  5772  0DED                     i1l9391:	
  5773                           ;Packet.c: 52: return 0;
  5774  0DED  01F2               	clrf	(?_checkEven)
  5775  0DEE  01F3               	clrf	(?_checkEven+1)
  5776  0DEF  2DF0               	goto	i1l1581
  5777                           	
  5778  0DF0                     i1l9393:	
  5779                           	line	53
  5780                           	
  5781  0DF0                     i1l1581:	
  5782  0DF0  0008               	return
  5783                           	opt stack 0
  5784                           GLOBAL	__end_of_checkEven
  5785  0DF1                     	__end_of_checkEven:
  5786 ;; =============== function _checkEven ends ============
  5787                           
  5788                           	signat	_checkEven,90
  5789                           	global	_makeHexByte
  5790                           psect	text907,local,class=CODE,delta=2
  5791                           global __ptext907
  5792  0DA5                     __ptext907:
  5793                           
  5794 ;; *************** function _makeHexByte *****************
  5795 ;; Defined at:
  5796 ;;		line 216 in file "Bluetooth.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  nibOne          1    wreg     unsigned char 
  5799 ;;  nibTwo          1   13[COMMON] unsigned char 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  nibOne          1    2[BANK0 ] unsigned char 
  5802 ;;  input_byte      1    3[BANK0 ] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      unsigned char 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0, pclath, cstack
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5812 ;;      Params:         1       0       0       0       0
  5813 ;;      Locals:         0       2       0       0       0
  5814 ;;      Temps:          0       2       0       0       0
  5815 ;;      Totals:         1       4       0       0       0
  5816 ;;Total ram usage:        5 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    1
  5819 ;; This function calls:
  5820 ;;		_makeNibble
  5821 ;; This function is called by:
  5822 ;;		_parsePacket
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           psect	text907
  5826                           	file	"Bluetooth.c"
  5827                           	line	216
  5828                           	global	__size_of_makeHexByte
  5829  0025                     	__size_of_makeHexByte	equ	__end_of_makeHexByte-_makeHexByte
  5830                           	
  5831  0DA5                     _makeHexByte:	
  5832 ;; hardware stack exceeded
  5833                           	opt	stack 0
  5834                           ; Regs used in _makeHexByte: [wreg+status,2+status,0+pclath+cstack]
  5835                           ;makeHexByte@nibOne stored from wreg
  5836                           	line	218
  5837  0DA5  1283               	bcf	status, 5	;RP0=0, select bank0
  5838  0DA6  1303               	bcf	status, 6	;RP1=0, select bank0
  5839  0DA7  00A2               	movwf	(makeHexByte@nibOne)
  5840                           	
  5841  0DA8                     i1l9375:	
  5842                           ;Bluetooth.c: 217: unsigned char input_byte;
  5843                           ;Bluetooth.c: 218: input_byte = (makeNibble(nibOne)<<4);
  5844  0DA8  0822               	movf	(makeHexByte@nibOne),w
  5845  0DA9  120A  158A  24B9   	fcall	_makeNibble
              120A  158A         
  5846  0DAE  1283               	bcf	status, 5	;RP0=0, select bank0
  5847  0DAF  1303               	bcf	status, 6	;RP1=0, select bank0
  5848  0DB0  00A0               	movwf	(??_makeHexByte+0)+0
  5849  0DB1  3003               	movlw	(04h)-1
  5850  0DB2                     u283_25:
  5851  0DB2  1003               	clrc
  5852  0DB3  0DA0               	rlf	(??_makeHexByte+0)+0,f
  5853  0DB4  3EFF               	addlw	-1
  5854  0DB5  1D03               	skipz
  5855  0DB6  2DB2               	goto	u283_25
  5856  0DB7  1003               	clrc
  5857  0DB8  0D20               	rlf	(??_makeHexByte+0)+0,w
  5858  0DB9  00A1               	movwf	(??_makeHexByte+1)+0
  5859  0DBA  0821               	movf	(??_makeHexByte+1)+0,w
  5860  0DBB  00A3               	movwf	(makeHexByte@input_byte)
  5861                           	line	219
  5862                           ;Bluetooth.c: 219: input_byte|= makeNibble(nibTwo);
  5863  0DBC  087D               	movf	(makeHexByte@nibTwo),w
  5864  0DBD  120A  158A  24B9   	fcall	_makeNibble
              120A  158A         
  5865  0DC2  1283               	bcf	status, 5	;RP0=0, select bank0
  5866  0DC3  1303               	bcf	status, 6	;RP1=0, select bank0
  5867  0DC4  00A0               	movwf	(??_makeHexByte+0)+0
  5868  0DC5  0820               	movf	(??_makeHexByte+0)+0,w
  5869  0DC6  04A3               	iorwf	(makeHexByte@input_byte),f
  5870                           	line	220
  5871                           	
  5872  0DC7                     i1l9377:	
  5873                           ;Bluetooth.c: 220: return input_byte;
  5874  0DC7  0823               	movf	(makeHexByte@input_byte),w
  5875  0DC8  2DC9               	goto	i1l803
  5876                           	
  5877  0DC9                     i1l9379:	
  5878                           	line	221
  5879                           	
  5880  0DC9                     i1l803:	
  5881  0DC9  0008               	return
  5882                           	opt stack 0
  5883                           GLOBAL	__end_of_makeHexByte
  5884  0DCA                     	__end_of_makeHexByte:
  5885 ;; =============== function _makeHexByte ends ============
  5886                           
  5887                           	signat	_makeHexByte,8313
  5888                           	global	_readString
  5889                           psect	text908,local,class=CODE,delta=2
  5890                           global __ptext908
  5891  06A2                     __ptext908:
  5892                           
  5893 ;; *************** function _readString *****************
  5894 ;; Defined at:
  5895 ;;		line 163 in file "Bluetooth.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  readStorage     1    wreg     PTR unsigned char 
  5898 ;;		 -> getPacket@arrStore(50), 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;  readStorage     1    2[BANK0 ] PTR unsigned char 
  5901 ;;		 -> getPacket@arrStore(50), 
  5902 ;;  i               2    3[BANK0 ] unsigned int 
  5903 ;;  ch              1    5[BANK0 ] unsigned char 
  5904 ;; Return value:  Size  Location     Type
  5905 ;;		None               void
  5906 ;; Registers used:
  5907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5913 ;;      Params:         0       0       0       0       0
  5914 ;;      Locals:         0       4       0       0       0
  5915 ;;      Temps:          0       2       0       0       0
  5916 ;;      Totals:         0       6       0       0       0
  5917 ;;Total ram usage:        6 bytes
  5918 ;; Hardware stack levels used:    1
  5919 ;; Hardware stack levels required when called:    1
  5920 ;; This function calls:
  5921 ;;		_readByte
  5922 ;;		i1_writeByte
  5923 ;;		i1_eeprom_write
  5924 ;; This function is called by:
  5925 ;;		_getPacket
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           psect	text908
  5929                           	file	"Bluetooth.c"
  5930                           	line	163
  5931                           	global	__size_of_readString
  5932  005B                     	__size_of_readString	equ	__end_of_readString-_readString
  5933                           	
  5934  06A2                     _readString:	
  5935 ;; using string table level
  5936                           	opt	stack 1
  5937                           ; Regs used in _readString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5938                           ;readString@readStorage stored from wreg
  5939                           	line	165
  5940  06A2  1283               	bcf	status, 5	;RP0=0, select bank0
  5941  06A3  1303               	bcf	status, 6	;RP1=0, select bank0
  5942  06A4  00A2               	movwf	(readString@readStorage)
  5943                           	
  5944  06A5                     i1l9327:	
  5945                           ;Bluetooth.c: 165: unsigned int i = 0;
  5946  06A5  01A3               	clrf	(readString@i)
  5947  06A6  01A4               	clrf	(readString@i+1)
  5948                           	line	169
  5949                           	
  5950  06A7                     i1l9329:	
  5951                           ;Bluetooth.c: 167: unsigned char ch;
  5952                           ;Bluetooth.c: 169: ch = readByte();
  5953  06A7  120A  158A  2497   	fcall	_readByte
              120A  118A         
  5954  06AC  1283               	bcf	status, 5	;RP0=0, select bank0
  5955  06AD  1303               	bcf	status, 6	;RP1=0, select bank0
  5956  06AE  00A0               	movwf	(??_readString+0)+0
  5957  06AF  0820               	movf	(??_readString+0)+0,w
  5958  06B0  00A5               	movwf	(readString@ch)
  5959                           	line	170
  5960                           	
  5961  06B1                     i1l9331:	
  5962                           ;Bluetooth.c: 170: writeByte(ch);
  5963  06B1  0825               	movf	(readString@ch),w
  5964  06B2  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  5965                           	line	172
  5966                           ;Bluetooth.c: 172: while(ch != userEndByte)
  5967  06B7  2EDB               	goto	i1l9341
  5968                           	
  5969  06B8                     i1l794:	
  5970                           	line	175
  5971                           	
  5972  06B8                     i1l9333:	
  5973                           ;Bluetooth.c: 173: {
  5974                           ;Bluetooth.c: 175: readStorage[i] = ch;
  5975  06B8  1283               	bcf	status, 5	;RP0=0, select bank0
  5976  06B9  1303               	bcf	status, 6	;RP1=0, select bank0
  5977  06BA  0825               	movf	(readString@ch),w
  5978  06BB  00A0               	movwf	(??_readString+0)+0
  5979  06BC  0823               	movf	(readString@i),w
  5980  06BD  0722               	addwf	(readString@readStorage),w
  5981  06BE  00A1               	movwf	(??_readString+1)+0
  5982  06BF  0821               	movf	0+(??_readString+1)+0,w
  5983  06C0  0084               	movwf	fsr0
  5984  06C1  0820               	movf	(??_readString+0)+0,w
  5985  06C2  1383               	bcf	status, 7	;select IRP bank0
  5986  06C3  0080               	movwf	indf
  5987                           	line	177
  5988                           	
  5989  06C4                     i1l9335:	
  5990                           ;Bluetooth.c: 177: i++;
  5991  06C4  3001               	movlw	low(01h)
  5992  06C5  07A3               	addwf	(readString@i),f
  5993  06C6  1803               	skipnc
  5994  06C7  0AA4               	incf	(readString@i+1),f
  5995  06C8  3000               	movlw	high(01h)
  5996  06C9  07A4               	addwf	(readString@i+1),f
  5997                           	line	179
  5998                           	
  5999  06CA                     i1l9337:	
  6000                           ;Bluetooth.c: 179: ch = readByte();
  6001  06CA  120A  158A  2497   	fcall	_readByte
              120A  118A         
  6002  06CF  1283               	bcf	status, 5	;RP0=0, select bank0
  6003  06D0  1303               	bcf	status, 6	;RP1=0, select bank0
  6004  06D1  00A0               	movwf	(??_readString+0)+0
  6005  06D2  0820               	movf	(??_readString+0)+0,w
  6006  06D3  00A5               	movwf	(readString@ch)
  6007                           	line	180
  6008                           	
  6009  06D4                     i1l9339:	
  6010                           ;Bluetooth.c: 180: writeByte(ch);
  6011  06D4  0825               	movf	(readString@ch),w
  6012  06D5  120A  158A  24AD   	fcall	i1_writeByte
              120A  118A         
  6013  06DA  2EDB               	goto	i1l9341
  6014                           	line	181
  6015                           	
  6016  06DB                     i1l793:	
  6017                           	line	172
  6018                           	
  6019  06DB                     i1l9341:	
  6020  06DB  305F               	movlw	(_userEndByte-__stringbase)
  6021  06DC  0084               	movwf	fsr0
  6022  06DD  120A  118A  2446   	fcall	stringdir
              120A  118A         
  6023  06E2  1283               	bcf	status, 5	;RP0=0, select bank0
  6024  06E3  1303               	bcf	status, 6	;RP1=0, select bank0
  6025  06E4  00A0               	movwf	(??_readString+0)+0
  6026  06E5  0825               	movf	(readString@ch),w
  6027  06E6  0620               	xorwf	(??_readString+0)+0,w
  6028  06E7  1D03               	skipz
  6029  06E8  2EEA               	goto	u278_21
  6030  06E9  2EEB               	goto	u278_20
  6031  06EA                     u278_21:
  6032  06EA  2EB8               	goto	i1l9333
  6033  06EB                     u278_20:
  6034  06EB  2EEC               	goto	i1l9343
  6035                           	
  6036  06EC                     i1l795:	
  6037                           	line	186
  6038                           	
  6039  06EC                     i1l9343:	
  6040                           ;Bluetooth.c: 181: }
  6041                           ;Bluetooth.c: 186: eeprom_write(RXLenAddr,i);
  6042  06EC  0823               	movf	(readString@i),w
  6043  06ED  00A0               	movwf	(??_readString+0)+0
  6044  06EE  0820               	movf	(??_readString+0)+0,w
  6045  06EF  00FA               	movwf	(?i1_eeprom_write)
  6046  06F0  3040               	movlw	(_RXLenAddr-__stringbase)
  6047  06F1  0084               	movwf	fsr0
  6048  06F2  120A  118A  2446   	fcall	stringdir
              120A  118A         
  6049  06F7  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  6050                           	line	189
  6051                           	
  6052  06FC                     i1l796:	
  6053  06FC  0008               	return
  6054                           	opt stack 0
  6055                           GLOBAL	__end_of_readString
  6056  06FD                     	__end_of_readString:
  6057 ;; =============== function _readString ends ============
  6058                           
  6059                           	signat	_readString,4216
  6060                           	global	i1_strlen
  6061                           psect	text909,local,class=CODE,delta=2
  6062                           global __ptext909
  6063  0EFD                     __ptext909:
  6064                           
  6065 ;; *************** function i1_strlen *****************
  6066 ;; Defined at:
  6067 ;;		line 5 in file "C:\Microchip\HiTech\sources\strlen.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;  strlen          1    wreg     PTR const unsigned char 
  6070 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  strlen          1    8[COMMON] PTR const unsigned char 
  6073 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  6074 ;;  strlen          1    9[COMMON] PTR const unsigned char 
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  2    0[COMMON] unsigned int 
  6077 ;; Registers used:
  6078 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6084 ;;      Params:         2       0       0       0       0
  6085 ;;      Locals:         2       0       0       0       0
  6086 ;;      Temps:          6       0       0       0       0
  6087 ;;      Totals:        10       0       0       0       0
  6088 ;;Total ram usage:       10 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_parsePacket
  6094 ;;		i1_writeString
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           psect	text909
  6098                           	file	"C:\Microchip\HiTech\sources\strlen.c"
  6099                           	line	5
  6100                           	global	__size_ofi1_strlen
  6101  0031                     	__size_ofi1_strlen	equ	__end_ofi1_strlen-i1_strlen
  6102                           	
  6103  0EFD                     i1_strlen:	
  6104 ;; hardware stack exceeded
  6105                           	opt	stack 0
  6106                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  6107                           ;i1strlen@s stored from wreg
  6108                           	line	8
  6109  0EFD  00F8               	movwf	(i1strlen@s)
  6110                           	
  6111  0EFE                     i1l9661:	
  6112  0EFE  0878               	movf	(i1strlen@s),w
  6113  0EFF  00F2               	movwf	(??i1_strlen+0)+0
  6114  0F00  0872               	movf	(??i1_strlen+0)+0,w
  6115  0F01  00F9               	movwf	(i1strlen@cp)
  6116                           	line	9
  6117  0F02  2F04               	goto	i1l9663
  6118                           	
  6119  0F03                     i1l7508:	
  6120                           	line	10
  6121  0F03  2F04               	goto	i1l9663
  6122                           	
  6123  0F04                     i1l7507:	
  6124                           	line	9
  6125                           	
  6126  0F04                     i1l9663:	
  6127  0F04  0879               	movf	(i1strlen@cp),w
  6128  0F05  0084               	movwf	fsr0
  6129  0F06  3001               	movlw	01h
  6130  0F07  07F9               	addwf	(i1strlen@cp),f
  6131  0F08  1383               	bcf	status, 7	;select IRP bank0
  6132  0F09  0880               	movf	indf,f
  6133  0F0A  1D03               	skipz
  6134  0F0B  2F0D               	goto	u316_21
  6135  0F0C  2F0E               	goto	u316_20
  6136  0F0D                     u316_21:
  6137  0F0D  2F04               	goto	i1l9663
  6138  0F0E                     u316_20:
  6139  0F0E  2F0F               	goto	i1l9665
  6140                           	
  6141  0F0F                     i1l7509:	
  6142                           	line	11
  6143                           	
  6144  0F0F                     i1l9665:	
  6145  0F0F  0878               	movf	(i1strlen@s),w
  6146  0F10  00F2               	movwf	(??i1_strlen+0)+0
  6147  0F11  3000               	movlw	((0x0/2))
  6148  0F12  00F3               	movwf	(??i1_strlen+0)+0+1
  6149  0F13  09F2               	comf	(??i1_strlen+0)+0,f
  6150  0F14  09F3               	comf	(??i1_strlen+0)+1,f
  6151  0F15  0AF2               	incf	(??i1_strlen+0)+0,f
  6152  0F16  1903               	skipnz
  6153  0F17  0AF3               	incf	(??i1_strlen+0)+1,f
  6154  0F18  0879               	movf	(i1strlen@cp),w
  6155  0F19  00F4               	movwf	(??i1_strlen+2)+0
  6156  0F1A  3000               	movlw	((0x0/2))
  6157  0F1B  00F5               	movwf	(??i1_strlen+2)+0+1
  6158  0F1C  0872               	movf	0+(??i1_strlen+0)+0,w
  6159  0F1D  0774               	addwf	0+(??i1_strlen+2)+0,w
  6160  0F1E  00F6               	movwf	(??i1_strlen+4)+0
  6161  0F1F  0873               	movf	1+(??i1_strlen+0)+0,w
  6162  0F20  1803               	skipnc
  6163  0F21  0A73               	incf	1+(??i1_strlen+0)+0,w
  6164  0F22  0775               	addwf	1+(??i1_strlen+2)+0,w
  6165  0F23  00F7               	movwf	1+(??i1_strlen+4)+0
  6166  0F24  0876               	movf	0+(??i1_strlen+4)+0,w
  6167  0F25  3EFF               	addlw	low(-1)
  6168  0F26  00F0               	movwf	(?i1_strlen)
  6169  0F27  0877               	movf	1+(??i1_strlen+4)+0,w
  6170  0F28  1803               	skipnc
  6171  0F29  3E01               	addlw	1
  6172  0F2A  3EFF               	addlw	high(-1)
  6173  0F2B  00F1               	movwf	1+(?i1_strlen)
  6174  0F2C  2F2D               	goto	i1l7510
  6175                           	
  6176  0F2D                     i1l9667:	
  6177                           	line	12
  6178                           	
  6179  0F2D                     i1l7510:	
  6180  0F2D  0008               	return
  6181                           	opt stack 0
  6182                           GLOBAL	__end_ofi1_strlen
  6183  0F2E                     	__end_ofi1_strlen:
  6184 ;; =============== function i1_strlen ends ============
  6185                           
  6186                           	signat	i1_strlen,90
  6187                           	global	i1_eeprom_write
  6188                           psect	text910,local,class=CODE,delta=2
  6189                           global __ptext910
  6190  0ECC                     __ptext910:
  6191                           
  6192 ;; *************** function i1_eeprom_write *****************
  6193 ;; Defined at:
  6194 ;;		line 7 in file "C:\Microchip\HiTech\sources\eewrite.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  eeprom_write    1    wreg     unsigned char 
  6197 ;;  eeprom_write    1   10[COMMON] unsigned char 
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;  eeprom_write    1   12[COMMON] unsigned char 
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  1    wreg      unsigned char 
  6202 ;; Registers used:
  6203 ;;		wreg, status,2, status,0
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6209 ;;      Params:         1       0       0       0       0
  6210 ;;      Locals:         1       0       0       0       0
  6211 ;;      Temps:          1       0       0       0       0
  6212 ;;      Totals:         3       0       0       0       0
  6213 ;;Total ram usage:        3 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; This function calls:
  6216 ;;		Nothing
  6217 ;; This function is called by:
  6218 ;;		_readString
  6219 ;;		_parsePacket
  6220 ;;		_checkStartByte
  6221 ;;		_checkRWByte
  6222 ;;		_checkCMDByte
  6223 ;;		_addDataToCheckSum
  6224 ;;		_getPacket
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           psect	text910
  6228                           	file	"C:\Microchip\HiTech\sources\eewrite.c"
  6229                           	line	7
  6230                           	global	__size_ofi1_eeprom_write
  6231  0031                     	__size_ofi1_eeprom_write	equ	__end_ofi1_eeprom_write-i1_eeprom_write
  6232                           	
  6233  0ECC                     i1_eeprom_write:	
  6234 ;; hardware stack exceeded
  6235                           	opt	stack 0
  6236                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0]
  6237                           ;i1eeprom_write@addr stored from wreg
  6238  0ECC  00FC               	movwf	(i1eeprom_write@addr)
  6239                           	line	8
  6240                           	
  6241  0ECD                     i1l6823:	
  6242  0ECD  2ECE               	goto	i1l6824
  6243                           	
  6244  0ECE                     i1l6825:	
  6245                           	
  6246  0ECE                     i1l6824:	
  6247  0ECE  1683               	bsf	status, 5	;RP0=1, select bank3
  6248  0ECF  1703               	bsf	status, 6	;RP1=1, select bank3
  6249  0ED0  188C               	btfsc	(3169/8)^0180h,(3169)&7
  6250  0ED1  2ED3               	goto	u313_21
  6251  0ED2  2ED4               	goto	u313_20
  6252  0ED3                     u313_21:
  6253  0ED3  2ECE               	goto	i1l6824
  6254  0ED4                     u313_20:
  6255  0ED4  2ED5               	goto	i1l9641
  6256                           	
  6257  0ED5                     i1l6826:	
  6258                           	
  6259  0ED5                     i1l9641:	
  6260  0ED5  087C               	movf	(i1eeprom_write@addr),w
  6261  0ED6  1283               	bcf	status, 5	;RP0=0, select bank2
  6262  0ED7  1703               	bsf	status, 6	;RP1=1, select bank2
  6263  0ED8  008D               	movwf	(269)^0100h	;volatile
  6264  0ED9  087A               	movf	(i1eeprom_write@value),w
  6265  0EDA  008C               	movwf	(268)^0100h	;volatile
  6266                           	
  6267  0EDB                     i1l9643:	
  6268  0EDB  303F               	movlw	(03Fh)
  6269  0EDC  00FB               	movwf	(??i1_eeprom_write+0)+0
  6270  0EDD  087B               	movf	(??i1_eeprom_write+0)+0,w
  6271  0EDE  1683               	bsf	status, 5	;RP0=1, select bank3
  6272  0EDF  1703               	bsf	status, 6	;RP1=1, select bank3
  6273  0EE0  058C               	andwf	(396)^0180h,f	;volatile
  6274                           	
  6275  0EE1                     i1l9645:	
  6276  0EE1  1283               	bcf	status, 5	;RP0=0, select bank0
  6277  0EE2  1303               	bcf	status, 6	;RP1=0, select bank0
  6278  0EE3  1003               	bcf	(24/8),(24)&7
  6279                           	
  6280  0EE4                     i1l9647:	
  6281  0EE4  1F8B               	btfss	(95/8),(95)&7
  6282  0EE5  2EE7               	goto	u314_21
  6283  0EE6  2EE8               	goto	u314_20
  6284  0EE7                     u314_21:
  6285  0EE7  2EE9               	goto	i1l6827
  6286  0EE8                     u314_20:
  6287                           	
  6288  0EE8                     i1l9649:	
  6289  0EE8  1403               	bsf	(24/8),(24)&7
  6290                           	
  6291  0EE9                     i1l6827:	
  6292  0EE9  138B               	bcf	(95/8),(95)&7
  6293  0EEA  1683               	bsf	status, 5	;RP0=1, select bank3
  6294  0EEB  1703               	bsf	status, 6	;RP1=1, select bank3
  6295  0EEC  150C               	bsf	(3170/8)^0180h,(3170)&7
  6296                           	
  6297  0EED                     i1l9651:	
  6298  0EED  3055               	movlw	(055h)
  6299  0EEE  008D               	movwf	(397)^0180h	;volatile
  6300  0EEF  30AA               	movlw	(0AAh)
  6301  0EF0  008D               	movwf	(397)^0180h	;volatile
  6302                           	
  6303  0EF1                     i1l9653:	
  6304  0EF1  148C               	bsf	(3169/8)^0180h,(3169)&7
  6305                           	
  6306  0EF2                     i1l9655:	
  6307  0EF2  110C               	bcf	(3170/8)^0180h,(3170)&7
  6308                           	
  6309  0EF3                     i1l9657:	
  6310  0EF3  1283               	bcf	status, 5	;RP0=0, select bank0
  6311  0EF4  1303               	bcf	status, 6	;RP1=0, select bank0
  6312  0EF5  1C03               	btfss	(24/8),(24)&7
  6313  0EF6  2EF8               	goto	u315_21
  6314  0EF7  2EF9               	goto	u315_20
  6315  0EF8                     u315_21:
  6316  0EF8  2EFC               	goto	i1l6830
  6317  0EF9                     u315_20:
  6318                           	
  6319  0EF9                     i1l9659:	
  6320  0EF9  178B               	bsf	(95/8),(95)&7
  6321  0EFA  2EFC               	goto	i1l6830
  6322                           	
  6323  0EFB                     i1l6828:	
  6324  0EFB  2EFC               	goto	i1l6830
  6325                           	
  6326  0EFC                     i1l6829:	
  6327                           	line	10
  6328                           ;	Return value of i1_eeprom_write is never used
  6329                           	
  6330  0EFC                     i1l6830:	
  6331  0EFC  0008               	return
  6332                           	opt stack 0
  6333                           GLOBAL	__end_ofi1_eeprom_write
  6334  0EFD                     	__end_ofi1_eeprom_write:
  6335 ;; =============== function i1_eeprom_write ends ============
  6336                           
  6337                           	signat	i1_eeprom_write,89
  6338                           	global	i1_writeByte
  6339                           psect	text911,local,class=CODE,delta=2
  6340                           global __ptext911
  6341  0CAD                     __ptext911:
  6342                           
  6343 ;; *************** function i1_writeByte *****************
  6344 ;; Defined at:
  6345 ;;		line 75 in file "Bluetooth.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  writeByte       1    wreg     unsigned char 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;  writeByte       1    0[COMMON] unsigned char 
  6350 ;; Return value:  Size  Location     Type
  6351 ;;		None               void
  6352 ;; Registers used:
  6353 ;;		wreg
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6359 ;;      Params:         0       0       0       0       0
  6360 ;;      Locals:         1       0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0
  6362 ;;      Totals:         1       0       0       0       0
  6363 ;;Total ram usage:        1 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_readString
  6369 ;;		_checkEven
  6370 ;;		_checkLength
  6371 ;;		_checkDataFrames
  6372 ;;		_checkStartByte
  6373 ;;		_checkRWByte
  6374 ;;		_checkCMDByte
  6375 ;;		_checkCS
  6376 ;;		_readCommands
  6377 ;;		i1_writeString
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           psect	text911
  6381                           	file	"Bluetooth.c"
  6382                           	line	75
  6383                           	global	__size_ofi1_writeByte
  6384  000C                     	__size_ofi1_writeByte	equ	__end_ofi1_writeByte-i1_writeByte
  6385                           	
  6386  0CAD                     i1_writeByte:	
  6387 ;; hardware stack exceeded
  6388                           	opt	stack 0
  6389                           ; Regs used in i1_writeByte: [wreg]
  6390                           ;i1writeByte@Byte stored from wreg
  6391  0CAD  00F0               	movwf	(i1writeByte@Byte)
  6392                           	line	79
  6393                           	
  6394  0CAE                     i1l9627:	
  6395                           ;Bluetooth.c: 79: while(!TXIF);
  6396  0CAE  2CAF               	goto	i1l772
  6397                           	
  6398  0CAF                     i1l773:	
  6399                           	
  6400  0CAF                     i1l772:	
  6401  0CAF  1283               	bcf	status, 5	;RP0=0, select bank0
  6402  0CB0  1303               	bcf	status, 6	;RP1=0, select bank0
  6403  0CB1  1E0C               	btfss	(100/8),(100)&7
  6404  0CB2  2CB4               	goto	u311_21
  6405  0CB3  2CB5               	goto	u311_20
  6406  0CB4                     u311_21:
  6407  0CB4  2CAF               	goto	i1l772
  6408  0CB5                     u311_20:
  6409  0CB5  2CB6               	goto	i1l9629
  6410                           	
  6411  0CB6                     i1l774:	
  6412                           	line	82
  6413                           	
  6414  0CB6                     i1l9629:	
  6415                           ;Bluetooth.c: 82: TXREG = Byte;
  6416  0CB6  0870               	movf	(i1writeByte@Byte),w
  6417  0CB7  0099               	movwf	(25)	;volatile
  6418                           	line	83
  6419                           	
  6420  0CB8                     i1l775:	
  6421  0CB8  0008               	return
  6422                           	opt stack 0
  6423                           GLOBAL	__end_ofi1_writeByte
  6424  0CB9                     	__end_ofi1_writeByte:
  6425 ;; =============== function i1_writeByte ends ============
  6426                           
  6427                           	signat	i1_writeByte,88
  6428                           	global	_writeCommands
  6429                           psect	text912,local,class=CODE,delta=2
  6430                           global __ptext912
  6431  0003                     __ptext912:
  6432                           
  6433 ;; *************** function _writeCommands *****************
  6434 ;; Defined at:
  6435 ;;		line 85 in file "Command.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;		None               void
  6442 ;; Registers used:
  6443 ;;		None
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6449 ;;      Params:         0       0       0       0       0
  6450 ;;      Locals:         0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0
  6452 ;;      Totals:         0       0       0       0       0
  6453 ;;Total ram usage:        0 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; This function calls:
  6456 ;;		Nothing
  6457 ;; This function is called by:
  6458 ;;		_getPacket
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           psect	text912
  6462                           	file	"Command.c"
  6463                           	line	85
  6464                           	global	__size_of_writeCommands
  6465  0001                     	__size_of_writeCommands	equ	__end_of_writeCommands-_writeCommands
  6466                           	
  6467  0003                     _writeCommands:	
  6468                           	opt	stack 1
  6469                           ; Regs used in _writeCommands: []
  6470                           	line	89
  6471                           	
  6472  0003                     i1l4797:	
  6473  0003  0008               	return
  6474                           	opt stack 0
  6475                           GLOBAL	__end_of_writeCommands
  6476  0004                     	__end_of_writeCommands:
  6477 ;; =============== function _writeCommands ends ============
  6478                           
  6479                           	signat	_writeCommands,88
  6480                           	global	_eeprom_read
  6481                           psect	text913,local,class=CODE,delta=2
  6482                           global __ptext913
  6483  07E1                     __ptext913:
  6484                           
  6485 ;; *************** function _eeprom_read *****************
  6486 ;; Defined at:
  6487 ;;		line 7 in file "eeread.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  addr            1    wreg     unsigned char 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  addr            1    1[COMMON] unsigned char 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      unsigned char 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6501 ;;      Params:         0       0       0       0       0
  6502 ;;      Locals:         1       0       0       0       0
  6503 ;;      Temps:          1       0       0       0       0
  6504 ;;      Totals:         2       0       0       0       0
  6505 ;;Total ram usage:        2 bytes
  6506 ;; Hardware stack levels used:    1
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_checkEven
  6511 ;;		_checkLength
  6512 ;;		_checkDataFrames
  6513 ;;		_parsePacket
  6514 ;;		_checkStartByte
  6515 ;;		_checkRWByte
  6516 ;;		_checkCMDByte
  6517 ;;		_checkCS
  6518 ;;		_addDataToCheckSum
  6519 ;;		_getPacket
  6520 ;;		_readCommands
  6521 ;;		_displayPacket
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           psect	text913
  6525                           	file	"C:\Microchip\HiTech\sources\eeread.c"
  6526                           	line	7
  6527                           	global	__size_of_eeprom_read
  6528  001F                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
  6529                           	
  6530  07E1                     _eeprom_read:	
  6531                           	opt	stack 0
  6532                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  6533                           ;eeprom_read@addr stored from wreg
  6534                           	line	9
  6535  07E1  00F1               	movwf	(eeprom_read@addr)
  6536                           	line	8
  6537                           	
  6538  07E2                     i1l6206:	
  6539                           	line	9
  6540                           # 9 "C:\Microchip\HiTech\sources\eeread.c"
  6541  07E2  0064               clrwdt ;#
  6542                           psect	text913
  6543                           	line	10
  6544  07E3  1683               	bsf	status, 5	;RP0=1, select bank3
  6545  07E4  1703               	bsf	status, 6	;RP1=1, select bank3
  6546  07E5  188C               	btfsc	(3169/8)^0180h,(3169)&7
  6547  07E6  2FE8               	goto	u285_21
  6548  07E7  2FE9               	goto	u285_20
  6549  07E8                     u285_21:
  6550  07E8  2FE2               	goto	i1l6206
  6551  07E9                     u285_20:
  6552  07E9  2FEA               	goto	i1l9395
  6553                           	
  6554  07EA                     i1l6207:	
  6555                           	line	11
  6556                           	
  6557  07EA                     i1l9395:	
  6558  07EA  0871               	movf	(eeprom_read@addr),w
  6559  07EB  1283               	bcf	status, 5	;RP0=0, select bank2
  6560  07EC  1703               	bsf	status, 6	;RP1=1, select bank2
  6561  07ED  008D               	movwf	(269)^0100h	;volatile
  6562  07EE  303F               	movlw	(03Fh)
  6563  07EF  00F0               	movwf	(??_eeprom_read+0)+0
  6564  07F0  0870               	movf	(??_eeprom_read+0)+0,w
  6565  07F1  1683               	bsf	status, 5	;RP0=1, select bank3
  6566  07F2  1703               	bsf	status, 6	;RP1=1, select bank3
  6567  07F3  058C               	andwf	(396)^0180h,f	;volatile
  6568  07F4  140C               	bsf	(3168/8)^0180h,(3168)&7
  6569  07F5  1003               	clrc
  6570  07F6  180C               	btfsc	(3168/8)^0180h,(3168)&7
  6571  07F7  1403               	setc
  6572  07F8  3000               	movlw	0
  6573  07F9  1803               	skipnc
  6574  07FA  3001               	movlw	1
  6575                           
  6576  07FB  1283               	bcf	status, 5	;RP0=0, select bank2
  6577  07FC  1703               	bsf	status, 6	;RP1=1, select bank2
  6578  07FD  080C               	movf	(268)^0100h,w	;volatile
  6579  07FE  2FFF               	goto	i1l6208
  6580                           	
  6581  07FF                     i1l9397:	
  6582                           	line	12
  6583                           	
  6584  07FF                     i1l6208:	
  6585  07FF  0008               	return
  6586                           	opt stack 0
  6587                           GLOBAL	__end_of_eeprom_read
  6588  0800                     	__end_of_eeprom_read:
  6589 ;; =============== function _eeprom_read ends ============
  6590                           
  6591                           	signat	_eeprom_read,4217
  6592                           	global	_makeNibble
  6593                           psect	text914,local,class=CODE,delta=2
  6594                           global __ptext914
  6595  0CB9                     __ptext914:
  6596                           
  6597 ;; *************** function _makeNibble *****************
  6598 ;; Defined at:
  6599 ;;		line 200 in file "Bluetooth.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;  tempNib         1    wreg     unsigned char 
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;  tempNib         1    0[COMMON] unsigned char 
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  1    wreg      unsigned char 
  6606 ;; Registers used:
  6607 ;;		wreg, status,2, status,0
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6613 ;;      Params:         0       0       0       0       0
  6614 ;;      Locals:         1       0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0
  6616 ;;      Totals:         1       0       0       0       0
  6617 ;;Total ram usage:        1 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_makeHexByte
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           psect	text914
  6626                           	file	"Bluetooth.c"
  6627                           	line	200
  6628                           	global	__size_of_makeNibble
  6629  000F                     	__size_of_makeNibble	equ	__end_of_makeNibble-_makeNibble
  6630                           	
  6631  0CB9                     _makeNibble:	
  6632 ;; hardware stack exceeded
  6633                           	opt	stack 0
  6634                           ; Regs used in _makeNibble: [wreg+status,2+status,0]
  6635                           ;makeNibble@tempNib stored from wreg
  6636  0CB9  00F0               	movwf	(makeNibble@tempNib)
  6637                           	line	201
  6638                           	
  6639  0CBA                     i1l9365:	
  6640                           ;Bluetooth.c: 201: if(tempNib>='A'){
  6641  0CBA  3041               	movlw	(041h)
  6642  0CBB  0270               	subwf	(makeNibble@tempNib),w
  6643  0CBC  1C03               	skipc
  6644  0CBD  2CBF               	goto	u282_21
  6645  0CBE  2CC0               	goto	u282_20
  6646  0CBF                     u282_21:
  6647  0CBF  2CC4               	goto	i1l9371
  6648  0CC0                     u282_20:
  6649                           	line	202
  6650                           	
  6651  0CC0                     i1l9367:	
  6652                           ;Bluetooth.c: 202: return ((tempNib - (unsigned char)'A')+10);
  6653  0CC0  0870               	movf	(makeNibble@tempNib),w
  6654  0CC1  3EC9               	addlw	0C9h
  6655  0CC2  2CC7               	goto	i1l800
  6656                           	
  6657  0CC3                     i1l9369:	
  6658  0CC3  2CC7               	goto	i1l800
  6659                           	line	203
  6660                           	
  6661  0CC4                     i1l799:	
  6662                           	line	204
  6663                           	
  6664  0CC4                     i1l9371:	
  6665                           ;Bluetooth.c: 203: }
  6666                           ;Bluetooth.c: 204: return (tempNib - '0');
  6667  0CC4  0870               	movf	(makeNibble@tempNib),w
  6668  0CC5  3ED0               	addlw	0D0h
  6669  0CC6  2CC7               	goto	i1l800
  6670                           	
  6671  0CC7                     i1l9373:	
  6672                           	line	205
  6673                           	
  6674  0CC7                     i1l800:	
  6675  0CC7  0008               	return
  6676                           	opt stack 0
  6677                           GLOBAL	__end_of_makeNibble
  6678  0CC8                     	__end_of_makeNibble:
  6679 ;; =============== function _makeNibble ends ============
  6680                           
  6681                           	signat	_makeNibble,4217
  6682                           	global	_readByte
  6683                           psect	text915,local,class=CODE,delta=2
  6684                           global __ptext915
  6685  0C97                     __ptext915:
  6686                           
  6687 ;; *************** function _readByte *****************
  6688 ;; Defined at:
  6689 ;;		line 93 in file "Bluetooth.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;		None
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;		None
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  1    wreg      unsigned char 
  6696 ;; Registers used:
  6697 ;;		wreg
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6703 ;;      Params:         0       0       0       0       0
  6704 ;;      Locals:         0       0       0       0       0
  6705 ;;      Temps:          0       0       0       0       0
  6706 ;;      Totals:         0       0       0       0       0
  6707 ;;Total ram usage:        0 bytes
  6708 ;; Hardware stack levels used:    1
  6709 ;; This function calls:
  6710 ;;		Nothing
  6711 ;; This function is called by:
  6712 ;;		_readString
  6713 ;;		_echoBack
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           psect	text915
  6717                           	file	"Bluetooth.c"
  6718                           	line	93
  6719                           	global	__size_of_readByte
  6720  000B                     	__size_of_readByte	equ	__end_of_readByte-_readByte
  6721                           	
  6722  0C97                     _readByte:	
  6723                           	opt	stack 0
  6724                           ; Regs used in _readByte: [wreg]
  6725                           	line	98
  6726                           	
  6727  0C97                     i1l9307:	
  6728                           ;Bluetooth.c: 98: while(!RCIF);
  6729  0C97  2C98               	goto	i1l778
  6730                           	
  6731  0C98                     i1l779:	
  6732                           	
  6733  0C98                     i1l778:	
  6734  0C98  1283               	bcf	status, 5	;RP0=0, select bank0
  6735  0C99  1303               	bcf	status, 6	;RP1=0, select bank0
  6736  0C9A  1E8C               	btfss	(101/8),(101)&7
  6737  0C9B  2C9D               	goto	u276_21
  6738  0C9C  2C9E               	goto	u276_20
  6739  0C9D                     u276_21:
  6740  0C9D  2C98               	goto	i1l778
  6741  0C9E                     u276_20:
  6742  0C9E  2C9F               	goto	i1l9309
  6743                           	
  6744  0C9F                     i1l780:	
  6745                           	line	107
  6746                           	
  6747  0C9F                     i1l9309:	
  6748                           ;Bluetooth.c: 107: return RCREG;
  6749  0C9F  081A               	movf	(26),w	;volatile
  6750  0CA0  2CA1               	goto	i1l781
  6751                           	
  6752  0CA1                     i1l9311:	
  6753                           	line	110
  6754                           	
  6755  0CA1                     i1l781:	
  6756  0CA1  0008               	return
  6757                           	opt stack 0
  6758                           GLOBAL	__end_of_readByte
  6759  0CA2                     	__end_of_readByte:
  6760 ;; =============== function _readByte ends ============
  6761                           
  6762                           	signat	_readByte,89
  6763                           psect	text916,local,class=CODE,delta=2
  6764                           global __ptext916
  6765  0000                     __ptext916:
  6766                           	global	btemp
  6767  007E                     	btemp set 07Eh
  6768                           
  6769                           	DABS	1,126,2	;btemp
  6770                           	global	wtemp0
  6771  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Dec 15 10:02:46 2013

                         pc 0002                          _RD 0C60                          _WR 0C61  
                        fsr 0004                 _userEndByte 04AA                         l772 0CCC  
                       l773 0CCC                         l774 0CD2                         l790 0FC9  
                       l775 0CD8                         l769 0CEA                         l787 0FB0  
                       l788 0F9B                         l789 0FC3                         _GIE 005F  
                       _RD0 0040                         _RD1 0041                         _RD2 0042  
                       _RD4 0044                         _RD5 0045                         _RD6 0046  
                       _RD7 0047                         _isr 0D49                         fsr0 0004  
                       indf 0000         __end_ofi1_writeByte 0CB9            ?_checkDataFrames 0072  
                      l4000 0740                        l4001 0751                        l2410 0583  
                      l4002 0752                        l4003 0752                        l2404 0E2B  
                      l2405 0E2B                        l2406 0E30                        l2422 0FFF  
                      l2407 0E41                        l3190 0C8E                        l3187 0CAC  
                      l5570 06A1                        l5573 0D82                        l7510 0F60  
                      l5582 0E5E                        l5591 0D2D                        l5583 0E49  
                      l5576 0E18                        l5584 0E6D                        l5585 0E6D  
                      l7507 0F37                        l5579 0D12                        l7508 0F36  
                      ?_isr 0070                        l9301 0CE9                        l7509 0F42  
                      l6830 07E0                        l9303 0CCB                        l6823 07A9  
                      l6824 07AA                        l9305 0CD2                        l9321 0F37  
                      l6825 07AA                        l6826 07B1                        l9323 0F42  
                      l6827 07CD                        l6828 07DF                        l9325 0F60  
                      l6829 07E0                        l9319 0F31                        l9351 07C8  
                      l9361 07D7                        l9353 07CC                        l9345 07B1  
                      l9363 07DD                        l9355 07D1                        l9347 07BD  
                      _ADON 00F8                        l9293 0CD9                        l9357 07D5  
                      l9349 07C5                        l9701 0FDC                        l9295 0CDD  
                      l9359 07D6                        l9703 0FEC                        l9711 0E0C  
                      l9297 0CE7                        l9561 0C8A                        l9713 0E13  
                      l9705 0DF4                        l9721 0D16                        l9299 0CE8  
                      l9563 0CA2                        l9707 0DF8                        l9715 0CFE  
                      l9723 0D19                        l9731 0E57                        l9709 0E07  
                      l9717 0D01                        l9725 0D22                        l9733 0E5E  
                      l9741 064D                        l9671 0F9B                        l9719 0D07  
                      l9727 0E45                        l9751 0652                        l9743 064E  
                      l9735 0646                        l9673 0FA7                        l9681 0E1C  
                      l9729 0E49                        l9761 0675                        l9753 065D  
                      l9745 064F                        l9737 0649                        l9675 0FB0  
                      l9683 0E27                        l9691 0D66                        l9771 0690  
                      l9763 067C                        l9755 0661                        l9747 0650  
                      l9739 064C                        l9677 0FC3                        l9669 0F98  
                      l9685 0E30                        l9693 0D69                        l9773 0696  
                      l9765 0681                        l9757 0666                        l9749 0651  
                      l9781 0719                        l9687 0E41                        l9679 0E19  
                      l9695 0D74                        l9775 069B                        l9767 0685  
                      l9759 0670                        l9791 0733                        l9783 071E  
                      STR_1 04AD                        l9689 051D                        l9697 0FCA  
                      l9769 068A                        l9793 0739                        l9785 0723  
                      l9777 06FD                        l9699 0FCF                        l9795 0740  
                      l9787 0728                        l9779 0714                        l9797 0745  
                      l9789 072D                        u3200 0E6C                        u3201 0E6B  
                      u3210 0707                        u3170 0FC2                        u3171 0FC1  
                      u3307 0D7D                        u3227 074B                        u3180 0E2F  
                      u3181 0E2E                        u3317 0E22                        u3237 0658  
                      u3175 0FBE                        u3247 066C                        u2800 07CC  
                      u2801 07CB                        u3257 0679                        u2810 07DD  
                      u2811 07DC                        u3195 0DFD                        u3267 0D28  
                      u3277 0D0D                        u2750 0CD1                        u2751 0CD0  
                      u3287 0DF6                        u3297 0D6F                        u2770 0F41  
                      u2771 0F40                        _PEIE 005E                        u2790 07B0  
                      u2791 07AF                        _RCIE 0465                        _RCIF 0065  
                      _WREN 0C62                        _TXIF 0064              ??_eeprom_write 00C3  
    __end_of_checkStartByte 05E8                        _main 06FD                        _togE 0D66  
             _startByteAddr 049F                        btemp 007E                        start 0012  
         _addDataToCheckSum 035F          ?_addDataToCheckSum 0070       makeHexByte@input_byte 0023  
                     ??_isr 0062                       ?_main 0070         ??_addDataToCheckSum 0020  
                     _EEADR 010D                       ?_togE 0070                       _CARRY 0018  
      __size_of_checkRWByte 006A                       i1l800 0CC7                       i1l803 0DC9  
                     i1l780 0C9F                       i1l772 0CAF                       i1l781 0CA1  
                     i1l773 0CAF                       i1l774 0CB6                       i1l790 0ECB  
                     i1l775 0CB8                       i1l793 06DB                       i1l778 0C98  
                     i1l794 06B8                       i1l779 0C98                       i1l795 06EC  
                     i1l787 0EB4                       i1l796 06FC                       i1l788 0EA1  
                     i1l789 0EC5                       i1l799 0CC4                       _RCREG 001A  
                     _RCSTA 0018                       _SPBRG 0099                       _PORTD 0008  
           __end_of_checkCS 0F95        __size_of_checkLength 002F                       _TRISA 0085  
                     _TRISD 0088                       _TXREG 0019                       _TXSTA 0098  
               _writeString 0F95             __end_of_lcdGoto 0D2E             __end_of_getTemp 1000  
           __end_of_lcdPuts 0E6E             __end_of_initADC 0CAD             __end_of_initLCD 06A2  
           i1writeByte@Byte 0070                       _tempC 04A0                       _tempF 04A1  
                     pclath 000A                       status 0003             ?_checkStartByte 0020  
                     wtemp0 007E   __end_of_addDataToCheckSum 03D6                ?_parsePacket 0070  
          __end_ofi1_strlen 0F2E                __end_of_main 0755                __end_of_togE 0D83  
     __size_of_checkCMDByte 0070               ?_readCommands 0070                      ??_main 00D0  
                    ??_togE 00C2                  i1strlen@cp 0079                 i1_writeByte 0CAD  
     __end_ofi1_writeString 0ECC               _userStartByte 04AB                      _ADCON0 001F  
                    _ADCON1 009F                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _EECON1 018C                      _EECON2 018D  
              _writeByteVal 04AC                      i1l1601 05DC                      i1l1602 05E7  
                    i1l4010 0643                      i1l1611 043A                      i1l4011 0645  
                    i1l1612 0445                      i1l1620 079F                      i1l4012 0645  
                    i1l1605 0511                      i1l1621 07A5                      i1l1607 04D6  
                    i1l1615 0F8B                      i1l1608 051C                      i1l1616 0F94  
                    i1l1624 03C3                      i1l4008 0644                      i1l1625 038E  
                    i1l4009 063D                      i1l1626 03D5                      i1l1627 03D5  
                    i1l1619 07A0                      i1l1580 0DE7                      i1l1581 0DF0  
                    i1l1590 0355                      i1l1591 0354                      i1l1584 0E93  
                    i1l1585 0E9C                      i1l1594 02C4                      i1l1595 02AF  
                    i1l1588 0309                      i1l1596 0279                      i1l1589 035E  
                    i1l1597 02C3                      i1l1598 02C4                      i1l6206 07E2  
                    i1l6207 07EA                      i1l6208 07FF                      u300_20 076F  
                    u300_21 076E                      u301_20 077C                      u301_21 077B  
                    i1l7510 0F2D                      i1l4790 00AB                      i1l4783 016A  
                    i1l4791 00C4                      u302_20 0787                      i1l4792 00E3  
                    i1l4784 0016                      u310_20 0637                      u302_21 0786  
                    i1l4785 018F                      i1l4793 0162                      u310_21 0636  
                    i1l4786 003B                      i1l4794 018F                      i1l3994 0D59  
                    i1l7507 0F04                      i1l4787 0054                      i1l3995 0D59  
                    i1l7508 0F03                      i1l4788 006D                      i1l4797 0003  
                    i1l7509 0F0F                      i1l4789 0092                      i1l6830 0EFC  
                    i1l9311 0CA1                      i1l6823 0ECD                      u311_20 0CB5  
                    i1l6824 0ECE                      u303_20 0797                      u311_21 0CB4  
                    i1l6825 0ECE                      i1l9401 0E87                      u303_21 0796  
                    i1l6826 0ED5                      i1l9307 0C97                      i1l6827 0EE9  
                    i1l9331 06B1                      i1l9411 0E9C                      i1l9403 0E8D  
                    i1l6828 0EFB                      i1l9309 0C9F                      i1l6829 0EFC  
                    i1l9333 06B8                      i1l9341 06DB                      i1l9405 0E92  
                    i1l9421 0307                      i1l9413 02C5                      i1l9501 043A  
                    i1l9343 06EC                      i1l9335 06C4                      i1l9327 06A5  
                    i1l9407 0E93                      i1l9431 0353                      i1l9423 0308  
                    i1l9415 02D6                      i1l9503 0440                      i1l9511 0F85  
                    u304_20 03D4                      u312_20 0EC4                      i1l9337 06CA  
                    i1l9329 06A7                      i1l9409 0E99                      i1l9433 0355  
                    i1l9417 02FC                      i1l9425 0309                      i1l9505 0445  
                    i1l9513 0F8A                      u304_21 03D3                      u312_21 0EC3  
                    i1l9441 0195                      i1l9521 0755                      i1l9601 00C4  
                    i1l9371 0CC4                      i1l9339 06D4                      i1l9435 035B  
                    i1l9427 0348                      i1l9419 0302                      i1l9515 0F8B  
                    i1l9507 0F61                      i1l9451 02A2                      i1l9443 01A0  
                    i1l9531 0797                      i1l9523 0762                      i1l9611 014F  
                    i1l9603 00D0                      i1l9373 0CC7                      i1l9365 0CBA  
                    i1l9381 0DCA                      i1l9437 035E                      i1l9429 034E  
                    i1l9461 05A7                      i1l9517 0F91                      i1l9509 0F7F  
                    i1l9541 038C                      u312_25 0EC0                      i1l9453 02AA  
                    i1l9445 01AB                      i1l9533 079E                      i1l9525 076F  
                    i1l9613 0155                      i1l9605 00D6                      i1l9621 016A  
                    i1l9367 0CC0                      i1l9375 0DA8                      i1l9391 0DED  
                    i1l9383 0DDB                      i1l9471 05E7                      i1l9463 05D4  
                    i1l9519 0F94                      i1l9543 038E                      i1l9631 0E9E  
                    i1l9455 02AF                      i1l9447 0275                      i1l9439 0193  
                    i1l9527 077C                      i1l9535 07A0                      i1l9615 015B  
                    i1l9607 00DC                      u313_20 0ED4                      i1l9369 0CC3  
                    i1l9641 0ED5                      u313_21 0ED3                      i1l9377 0DC7  
                    i1l9393 0DF0                      i1l9385 0DE1                      i1l9465 05DB  
                    i1l9457 0584                      i1l9481 0509                      i1l9473 04B3  
                    i1l9545 03BC                      i1l9633 0EA1                      i1l9449 0279  
                    i1l9537 07A5                      i1l9529 0787                      i1l9617 0162  
                    i1l9609 00E3                      i1l9395 07EA                      i1l9627 0CAE  
                    i1l9651 0EED                      i1l9643 0EDB                      i1l9379 0DC9  
                    i1l9387 0DE6                      i1l9459 05A1                      i1l9467 05DC  
                    i1l9483 0510                      i1l9475 04C4                      i1l9491 03D6  
                    i1l9547 03C3                      i1l9539 035F                      i1l9635 0EAD  
                    i1l9619 0169                      i1l9571 05E8                      i1l9397 07FF  
                    i1l9629 0CB6                      i1l9653 0EF1                      i1l9645 0EE1  
                    i1l9661 0EFE                      i1l9389 0DE7                      i1l9469 05E2  
                    i1l9485 0511                      i1l9477 04D6                      i1l9493 03FF  
                    i1l9637 0EB4                      i1l9581 0626                      i1l9573 05F5  
                    i1l9565 0D49                      i1l9655 0EF2                      i1l9647 0EE4  
                    i1l9663 0F04                      i1l9399 0E6E                      i1l9487 0517  
                    i1l9479 04DC                      i1l9495 042C                      i1l9639 0EC5  
                    i1l9591 003B                      i1l9583 0637                      i1l9575 060D  
                    i1l9567 0D4D                      u314_20 0EE8                      u306_20 0D4D  
                    i1l9657 0EF3                      i1l9649 0EE8                      u314_21 0EE7  
                    i1l9665 0F0F                      i1l9489 051C                      i1l9497 0432  
                    i1l9593 0054                      i1l9585 063D                      i1l9577 0613  
                    i1l9569 0D53                      u306_21 0D4C                      i1l9659 0EF9  
                    i1l9667 0F2D                      i1l9499 0439                      i1l9595 006D  
                    i1l9587 0015                      i1l9579 0619                      i1l9597 0092  
                    i1l9589 0016                      i1l9599 00AB                      u315_20 0EF9  
                    u307_20 0D53                      u315_21 0EF8                      u307_21 0D52  
                    u316_20 0F0E                      u308_20 05FF                      u316_21 0F0D  
                    u309_20 0626                      u309_21 0625                      u282_20 0CC0  
                    u290_20 0348                      u282_21 0CBF                      u290_21 0347  
                    u290_25 0344                      u291_20 01A0                      u291_21 019F  
                    u283_25 0DB2                      u276_20 0C9E                      u284_20 0DDB  
                    u292_20 01AB                      u276_21 0C9D                      u284_21 0DDA  
                    u292_21 01AA                      u285_20 07E9                      u293_20 02C2  
                    u285_21 07E8                      u293_21 02C1                      u278_20 06EB  
                    u286_20 0E87                      u294_20 05A1                      u278_21 06EA  
                    u286_21 0E86                      u294_21 05A0                      u287_20 02D6  
                    u295_20 04C4                      u287_21 02D5                      u295_21 04C3  
                    u288_20 02FC                      u296_20 04D5                      u288_21 02FB  
                    u296_21 04D4                      u297_20 03FF                      u297_21 03FE  
                    u289_25 0319                      u298_20 0F7F                      u298_21 0F7E  
                    u299_20 0762                      u299_21 0761                      _TRISC6 043E  
                    _TRISC7 043F            __end_of_lcdClear 0D13                _checkCMDByte 03D6  
      __size_of_eeprom_read 001F            __end_of_lcdWrite 0E19        __size_of_makeHexByte 0025  
                    _maxCmd 0499            __end_of_initTemp 0584            __end_of_readByte 0CA2  
                 ??_checkCS 0074              ??_readCommands 007E            __end_of_readTemp 0E42  
      __end_of_eeprom_write 07E1                   ??_lcdGoto 00C6     __size_of_validatePacket 0051  
                 ??_getTemp 00C6                   ??_lcdPuts 00C6       readString@readStorage 0022  
                    clrloop 0C90                      _strlen 0F2E                   ??_initADC 00C2  
                 ??_initLCD 00C8                 readString@i 0023                      saved_w 007E  
    __size_of_writeCommands 0001           makeHexByte@nibOne 0022           makeHexByte@nibTwo 007D  
           eeprom_read@addr 0071  __size_of_addDataToCheckSum 0077              __pcstackCOMMON 0070  
              __pidataBANK1 0D83          __size_of_checkEven 0027          __size_of_getPacket 005E  
         eeprom_write@value 00C2                   ?i1_strlen 0070                  _csByteAddr 048E  
                __pbssBANK3 0190          __size_of_initUSART 0012     __size_ofi1_eeprom_write 0031  
            _calcCSByteAddr 048C                  __pmaintext 06FD        __size_of_parsePacket 0135  
             _writeCommands 0003                  __pintentry 0004                     ?_strlen 00C2  
              ?_writeString 0070                   ?_lcdClear 0070                  ??i1_strlen 0072  
                _makeNibble 0CB9            ??_checkStartByte 0022                   ?_lcdWrite 0070  
         __end_of_checkEven 0DF1        __end_of_readCommands 0190                   ?_initTemp 0070  
                 ?_readByte 0070                   ?_readTemp 00C2          __size_of_writeByte 0011  
  __size_of_checkDataFrames 009A           __end_of_getPacket 0646       __size_of_eeprom_write 003B  
            ?_writeCommands 0070               ??_checkRWByte 0022                     _checkCS 0F61  
                _readString 06A2               ??_checkLength 0074              _validatePacket 0755  
                _humStartHi 0494           __end_of_initUSART 0CEB                  _humStartLo 0495  
                   _lcdGoto 0D13                     _getTemp 0FCA                     _lcdPuts 0E42  
              ?i1_writeByte 0070                     _initADC 0CA2             __size_of_strlen 0033  
                   _initLCD 0646                     _member1 046D                     _member2 044C  
                   _member3 0460                __size_of_isr 001D                  ??_lcdClear 00C6  
                ??_lcdWrite 00C4        end_of_initialization 0D45       parsePacket@dataPacket 002B  
                ??_initTemp 00C5                  ??_readByte 0070                     init_ram 0CEF  
                _selectTemp 0C8A                  ??_readTemp 00C4                _eeprom_write 07A6  
              readString@ch 0025              main@testString 00D4                  _tempHiAddr 04A2  
                _rwByteAddr 049E                  _tempLoAddr 04A3               _dataBytesAddr 048F  
                lcdGoto@pos 00C8              getPacket@F1189 0190      __end_of_validatePacket 07A6  
                   strlen@s 00CA           __end_of_writeByte 0CD9         __end_of_checkRWByte 051D  
       __end_of_checkLength 0E9D                 ?_makeNibble 0070                writeString@i 00CE  
             ??_eeprom_read 0070                   _RXLenAddr 048B              i1_eeprom_write 0ECC  
           ??_writeCommands 0070               ??_makeHexByte 0020      __size_ofi1_writeString 002F  
           ?_validatePacket 0024           ??_checkDataFrames 0074                 ?_readString 0070  
            __end_of_strlen 0F61         start_initialization 0D2E       __size_of_readCommands 017B  
               __end_of_isr 0D66        __size_of_writeString 0035                parsePacket@i 002A  
                 i1strlen@s 0078           __size_ofi1_strlen 0031                 ?_selectTemp 0070  
    __end_ofi1_eeprom_write 0EFD              i1writeString@i 007C         __end_of_eeprom_read 0800  
       __size_of_makeNibble 000F                 __pdataBANK1 00A0                 _checkRWByte 04B3  
               _cmdByteAddr 048D         __end_of_makeHexByte 0DCA                 _checkLength 0E6E  
              _readCommands 0015                    ??_strlen 00C4        __size_ofi1_writeByte 000C  
             __pcstackBANK0 0020               __pcstackBANK1 00C2               i1_writeString 0E9D  
         __size_of_lcdClear 0015            eeprom_write@addr 00C4           __size_of_lcdWrite 0028  
       __size_of_readString 005B             ?i1_eeprom_write 007A                   _checkEven 0DCA  
               _endByteAddr 0490               ??_parsePacket 0024           __size_of_initTemp 0067  
         __size_of_readByte 000B           __size_of_readTemp 0029         i1eeprom_write@value 007A  
                 _classTerm 0479                   _getPacket 05E8                   __ptext900 0F61  
                 __ptext901 03D6                   __ptext910 0ECC                   __ptext902 04B3  
                 __ptext911 0CAD                   __ptext903 0584                   __ptext912 0003  
                 __ptext904 02C5                   __ptext913 07E1                   __ptext905 0E6E  
                 __ptext914 0CB9                   __ptext906 0DCA                   __ptext915 0C97  
                 __ptext907 0DA5                   __ptext916 0000                   __ptext908 06A2  
                 __ptext909 0EFD                   __ptext880 0CFE                   __ptext881 0DF1  
                 __ptext890 0F2E                   __ptext882 0FCA                   __ptext891 0CC8  
                 __ptext883 0D66                   __ptext892 0CD9                   __ptext884 051D  
                 __ptext893 0D49                   __ptext885 0E19                   __ptext877 0646  
                 __ptext894 05E8                   __ptext886 0F95                   __ptext878 0E42  
                 __ptext895 0015                   __ptext887 0CA2                   __ptext879 0D13  
                 __ptext896 0755                   __ptext888 0C8A                   __ptext897 0190  
                 __ptext889 07A6                   __ptext898 0E9D                   __ptext899 035F  
                  ?_checkCS 0072                   _noDataLen 049C                   __pstrings 0446  
                  ?_lcdGoto 0070                    ?_getTemp 0070                    ?_lcdPuts 0070  
                  ?_initADC 0070         __size_of_selectTemp 0005                    ?_initLCD 0070  
                 _humHiAddr 0492              ?i1_writeString 0070                   _initUSART 0CD9  
                 _humLoAddr 0493     i1writeString@userString 007B                   _readError 00A9  
         interrupt_function 0004                  ?_checkEven 0072                 _eeprom_read 07E1  
             ?_checkCMDByte 0020                 _makeHexByte 0DA5                    _GO_nDONE 00FA  
                ?_getPacket 0070                   main@F1186 00A0                 _lenByteAddr 0498  
       __end_of_parsePacket 02C5                   lcdWrite@c 00C5                 __stringbase 044B  
                ?_initUSART 0070                ??_makeNibble 0070                    i1_strlen 0EFD  
                 _writeByte 0CC8             _checkDataFrames 02C5              ??_checkCMDByte 0022  
          ??_validatePacket 007E     __size_of_checkStartByte 0064                   init_fetch 0CEB  
        __end_of_makeNibble 0CC8                 _humValHAddr 0496                 _humValLAddr 0497  
               _readByteVal 049D                ??_readString 0020                 _newLineChar 049B  
               _minSizeByte 049A            __size_of_checkCS 0034             ??i1_writeString 007A  
          __size_of_lcdGoto 001B            __size_of_getTemp 0036            __size_of_lcdPuts 002C  
          __size_of_initADC 000B            __size_of_initLCD 005C          i1eeprom_write@addr 007C  
                  _lcdClear 0CFE                    _classNum 0483                  ?_writeByte 0070  
                  _lcdWrite 0DF1       writeString@userString 00CD                _tempValHAddr 04A7  
              _tempValLAddr 04A8                ??_selectTemp 00C2                    _initTemp 051D  
                  _readByte 0C97                    _readTemp 0E19               __size_of_main 0058  
               ??_checkEven 0074               __size_of_togE 001D          __end_of_readString 06FD  
                  _groupNum 0491                 _parsePacket 0190                    clear_ram 0C8F  
              _tempUnitAddr 04A6       __end_of_writeCommands 0004                 ??_getPacket 002C  
                  lcdPuts@s 00C7                ?_checkRWByte 0020                ?_checkLength 0072  
    parsePacket@dataCounter 0028               ??_writeString 00CC          addDataToCheckSum@i 007D  
        __end_of_selectTemp 0C8F                 ??_initUSART 00C2     __end_of_checkDataFrames 035F  
          ??i1_eeprom_write 007B                    intlevel1 0000                   stringcode 0446  
         makeNibble@tempNib 0070          getTemp@tempReading 00C7                 _tempStartHi 04A4  
               _tempStartLo 04A5               ??i1_writeByte 0070           getPacket@arrStore 0030  
             writeByte@Byte 00C2                    strlen@cp 00CB        __end_of_checkCMDByte 0446  
                  stringdir 0446                    stringtab 0446                 ??_writeByte 00C2  
               _timeoutByte 04A9         __end_of_writeString 0FCA               ?_eeprom_write 00C2  
              ?_eeprom_read 0070              _checkStartByte 0584                ?_makeHexByte 007D  
