

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Dec 13 13:50:29 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 30 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 30 "main.c"
    45  2007  FF3A               	dw 0xFFFB & 0xFF7F & 0xFFBF & 0xFFFE & 0xFFFF ;#
    46                           	FNCALL	_main,_initUSART
    47                           	FNCALL	_main,_initADC
    48                           	FNCALL	_main,_initTemp
    49                           	FNCALL	_main,_writeString
    50                           	FNCALL	_main,_getTemp
    51                           	FNCALL	_main,_getPacket
    52                           	FNCALL	_getPacket,_eeprom_write
    53                           	FNCALL	_getPacket,_readString
    54                           	FNCALL	_getPacket,_eeprom_read
    55                           	FNCALL	_getPacket,_writeByte
    56                           	FNCALL	_getPacket,_parsePacket
    57                           	FNCALL	_getPacket,_validatePacket
    58                           	FNCALL	_getTemp,_selectTemp
    59                           	FNCALL	_getTemp,_readTemp
    60                           	FNCALL	_getTemp,_writeByte
    61                           	FNCALL	_getTemp,_eeprom_write
    62                           	FNCALL	_getTemp,_eeprom_read
    63                           	FNCALL	_validatePacket,_checkStartByte
    64                           	FNCALL	_validatePacket,_checkRWByte
    65                           	FNCALL	_validatePacket,_checkCMDByte
    66                           	FNCALL	_validatePacket,_checkDataFrames
    67                           	FNCALL	_validatePacket,_addDataToCheckSum
    68                           	FNCALL	_validatePacket,_checkCS
    69                           	FNCALL	_parsePacket,_checkLength
    70                           	FNCALL	_parsePacket,_checkEven
    71                           	FNCALL	_parsePacket,_makeHexByte
    72                           	FNCALL	_parsePacket,_eeprom_write
    73                           	FNCALL	_parsePacket,_strlen
    74                           	FNCALL	_parsePacket,_eeprom_read
    75                           	FNCALL	_initTemp,_eeprom_write
    76                           	FNCALL	_addDataToCheckSum,_eeprom_read
    77                           	FNCALL	_addDataToCheckSum,_eeprom_write
    78                           	FNCALL	_checkCS,_eeprom_read
    79                           	FNCALL	_checkCS,_writeByte
    80                           	FNCALL	_checkCMDByte,_eeprom_read
    81                           	FNCALL	_checkCMDByte,_eeprom_write
    82                           	FNCALL	_checkCMDByte,_writeByte
    83                           	FNCALL	_checkRWByte,_eeprom_read
    84                           	FNCALL	_checkRWByte,_writeByte
    85                           	FNCALL	_checkRWByte,_eeprom_write
    86                           	FNCALL	_checkStartByte,_eeprom_read
    87                           	FNCALL	_checkStartByte,_writeByte
    88                           	FNCALL	_checkStartByte,_eeprom_write
    89                           	FNCALL	_checkDataFrames,_eeprom_read
    90                           	FNCALL	_checkDataFrames,_writeByte
    91                           	FNCALL	_checkLength,_eeprom_read
    92                           	FNCALL	_checkLength,_writeByte
    93                           	FNCALL	_checkEven,_eeprom_read
    94                           	FNCALL	_checkEven,_writeByte
    95                           	FNCALL	_makeHexByte,_makeNibble
    96                           	FNCALL	_readString,_readByte
    97                           	FNCALL	_readString,_eeprom_write
    98                           	FNCALL	_writeString,_writeByte
    99                           	FNCALL	_writeString,_strlen
   100                           	FNROOT	_main
   101                           	global	main@F1165
   102                           psect	idataBANK1,class=CODE,space=0,delta=2
   103                           global __pidataBANK1
   104  0078                     __pidataBANK1:
   105                           	file	"main.c"
   106                           	line	45
   107                           
   108                           ;initializer for main@F1165
   109  0078  3457               	retlw	057h
   110  0079  3465               	retlw	065h
   111  007A  346C               	retlw	06Ch
   112  007B  3463               	retlw	063h
   113  007C  346F               	retlw	06Fh
   114  007D  346D               	retlw	06Dh
   115  007E  3465               	retlw	065h
   116  007F  340A               	retlw	0Ah
   117  0080  3400               	retlw	0
   118                           	global	_member2
   119                           psect	strings,class=STRING,delta=2
   120                           global __pstrings
   121  0003                     __pstrings:
   122                           ;	global	stringdir,stringtab,__stringbase
   123  0003                     stringtab:
   124                           ;	String table - string pointers are 1 byte each
   125  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   126  0003  3000               movlw high(stringdir)
   127  0004  008A               movwf pclath
   128  0005  0804               movf fsr,w
   129  0006  0A84               incf fsr
   130  0007  0782               	addwf pc
   131  0008                     __stringbase:
   132  0008  3400               	retlw	0
   133                           psect	strings
   134                           	file	"userMacro.h"
   135                           	line	20
   136  0009                     _member2:
   137  0009  3444               	retlw	044h
   138  000A  3465               	retlw	065h
   139  000B  3465               	retlw	065h
   140  000C  3470               	retlw	070h
   141  000D  3461               	retlw	061h
   142  000E  346B               	retlw	06Bh
   143  000F  3420               	retlw	020h
   144  0010  3443               	retlw	043h
   145  0011  3468               	retlw	068h
   146  0012  3461               	retlw	061h
   147  0013  346E               	retlw	06Eh
   148  0014  3464               	retlw	064h
   149  0015  3472               	retlw	072h
   150  0016  3461               	retlw	061h
   151  0017  3473               	retlw	073h
   152  0018  3465               	retlw	065h
   153  0019  346B               	retlw	06Bh
   154  001A  3461               	retlw	061h
   155  001B  3472               	retlw	072h
   156  001C  3400               	retlw	0
   157                           	global	_member3
   158                           psect	strings
   159                           	file	"userMacro.h"
   160                           	line	21
   161  001D                     _member3:
   162  001D  3441               	retlw	041h
   163  001E  3470               	retlw	070h
   164  001F  3475               	retlw	075h
   165  0020  3472               	retlw	072h
   166  0021  3476               	retlw	076h
   167  0022  3465               	retlw	065h
   168  0023  3420               	retlw	020h
   169  0024  3442               	retlw	042h
   170  0025  3468               	retlw	068h
   171  0026  3469               	retlw	069h
   172  0027  3464               	retlw	064h
   173  0028  3465               	retlw	065h
   174  0029  3400               	retlw	0
   175                           	global	_member1
   176                           psect	strings
   177                           	file	"userMacro.h"
   178                           	line	19
   179  002A                     _member1:
   180  002A  3447               	retlw	047h
   181  002B  3472               	retlw	072h
   182  002C  3465               	retlw	065h
   183  002D  3467               	retlw	067h
   184  002E  3420               	retlw	020h
   185  002F  3447               	retlw	047h
   186  0030  3469               	retlw	069h
   187  0031  3472               	retlw	072h
   188  0032  3461               	retlw	061h
   189  0033  3472               	retlw	072h
   190  0034  3464               	retlw	064h
   191  0035  3400               	retlw	0
   192                           	global	_classTerm
   193                           psect	strings
   194                           	file	"userMacro.h"
   195                           	line	23
   196  0036                     _classTerm:
   197  0036  3446               	retlw	046h
   198  0037  3461               	retlw	061h
   199  0038  346C               	retlw	06Ch
   200  0039  346C               	retlw	06Ch
   201  003A  3420               	retlw	020h
   202  003B  3432               	retlw	032h
   203  003C  3430               	retlw	030h
   204  003D  3431               	retlw	031h
   205  003E  3433               	retlw	033h
   206  003F  3400               	retlw	0
   207                           	global	_classNum
   208                           psect	strings
   209                           	file	"userMacro.h"
   210                           	line	22
   211  0040                     _classNum:
   212  0040  3445               	retlw	045h
   213  0041  3443               	retlw	043h
   214  0042  3445               	retlw	045h
   215  0043  3435               	retlw	035h
   216  0044  3436               	retlw	036h
   217  0045  3432               	retlw	032h
   218  0046  3430               	retlw	030h
   219  0047  3400               	retlw	0
   220                           	global	_RXLenAddr
   221                           psect	strings
   222                           	file	"userMacro.h"
   223                           	line	33
   224  0048                     _RXLenAddr:
   225  0048  3400               	retlw	0
   226                           	global	_calcCSByteAddr
   227                           psect	strings
   228                           	file	"userMacro.h"
   229                           	line	42
   230  0049                     _calcCSByteAddr:
   231  0049  3430               	retlw	030h
   232                           	global	_cmdByteAddr
   233                           psect	strings
   234                           	file	"userMacro.h"
   235                           	line	36
   236  004A                     _cmdByteAddr:
   237  004A  3403               	retlw	03h
   238                           	global	_csByteAddr
   239                           psect	strings
   240                           	file	"userMacro.h"
   241                           	line	38
   242  004B                     _csByteAddr:
   243  004B  3405               	retlw	05h
   244                           	global	_dataBytesAddr
   245                           psect	strings
   246                           	file	"userMacro.h"
   247                           	line	40
   248  004C                     _dataBytesAddr:
   249  004C  3407               	retlw	07h
   250                           	global	_endByteAddr
   251                           psect	strings
   252                           	file	"userMacro.h"
   253                           	line	39
   254  004D                     _endByteAddr:
   255  004D  3406               	retlw	06h
   256                           	global	_groupNum
   257                           psect	strings
   258                           	file	"userMacro.h"
   259                           	line	24
   260  004E                     _groupNum:
   261  004E  3432               	retlw	032h
   262                           	global	_humHiAddr
   263                           psect	strings
   264                           	file	"userMacro.h"
   265                           	line	55
   266  004F                     _humHiAddr:
   267  004F  3482               	retlw	082h
   268                           	global	_humLoAddr
   269                           psect	strings
   270                           	file	"userMacro.h"
   271                           	line	56
   272  0050                     _humLoAddr:
   273  0050  3484               	retlw	084h
   274                           	global	_humStartHi
   275                           psect	strings
   276                           	file	"userMacro.h"
   277                           	line	58
   278  0051                     _humStartHi:
   279  0051  3450               	retlw	050h
   280                           	global	_humStartLo
   281                           psect	strings
   282                           	file	"userMacro.h"
   283                           	line	59
   284  0052                     _humStartLo:
   285  0052  340A               	retlw	0Ah
   286                           	global	_humValAddr
   287                           psect	strings
   288                           	file	"userMacro.h"
   289                           	line	54
   290  0053                     _humValAddr:
   291  0053  3480               	retlw	080h
   292                           	global	_lenByteAddr
   293                           psect	strings
   294                           	file	"userMacro.h"
   295                           	line	37
   296  0054                     _lenByteAddr:
   297  0054  3404               	retlw	04h
   298                           	global	_maxCmd
   299                           psect	strings
   300                           	file	"userMacro.h"
   301                           	line	31
   302  0055                     _maxCmd:
   303  0055  340E               	retlw	0Eh
   304                           	global	_minSizeByte
   305                           psect	strings
   306                           	file	"userMacro.h"
   307                           	line	29
   308  0056                     _minSizeByte:
   309  0056  340A               	retlw	0Ah
   310                           	global	_newLineChar
   311                           psect	strings
   312                           	file	"userMacro.h"
   313                           	line	28
   314  0057                     _newLineChar:
   315  0057  340A               	retlw	0Ah
   316                           	global	_noDataLen
   317                           psect	strings
   318                           	file	"userMacro.h"
   319                           	line	30
   320  0058                     _noDataLen:
   321  0058  340A               	retlw	0Ah
   322                           	global	_rwByteAddr
   323                           psect	strings
   324                           	file	"userMacro.h"
   325                           	line	35
   326  0059                     _rwByteAddr:
   327  0059  3402               	retlw	02h
   328                           	global	_startByteAddr
   329                           psect	strings
   330                           	file	"userMacro.h"
   331                           	line	34
   332  005A                     _startByteAddr:
   333  005A  3401               	retlw	01h
   334                           	global	_tempC
   335                           psect	strings
   336                           	file	"userMacro.h"
   337                           	line	51
   338  005B                     _tempC:
   339  005B  3400               	retlw	0
   340                           	global	_tempF
   341                           psect	strings
   342                           	file	"userMacro.h"
   343                           	line	52
   344  005C                     _tempF:
   345  005C  3410               	retlw	010h
   346                           	global	_tempHiAddr
   347                           psect	strings
   348                           	file	"userMacro.h"
   349                           	line	45
   350  005D                     _tempHiAddr:
   351  005D  3462               	retlw	062h
   352                           	global	_tempLoAddr
   353                           psect	strings
   354                           	file	"userMacro.h"
   355                           	line	46
   356  005E                     _tempLoAddr:
   357  005E  3464               	retlw	064h
   358                           	global	_tempStartHi
   359                           psect	strings
   360                           	file	"userMacro.h"
   361                           	line	49
   362  005F                     _tempStartHi:
   363  005F  3464               	retlw	064h
   364                           	global	_tempStartLo
   365                           psect	strings
   366                           	file	"userMacro.h"
   367                           	line	50
   368  0060                     _tempStartLo:
   369  0060  34A0               	retlw	0A0h
   370                           	global	_tempUnitAddr
   371                           psect	strings
   372                           	file	"userMacro.h"
   373                           	line	47
   374  0061                     _tempUnitAddr:
   375  0061  3466               	retlw	066h
   376                           	global	_tempValAddr
   377                           psect	strings
   378                           	file	"userMacro.h"
   379                           	line	44
   380  0062                     _tempValAddr:
   381  0062  3460               	retlw	060h
   382                           	global	_userEndByte
   383                           psect	strings
   384                           	file	"userMacro.h"
   385                           	line	27
   386  0063                     _userEndByte:
   387  0063  340A               	retlw	0Ah
   388                           	global	_userStartByte
   389                           psect	strings
   390                           	file	"userMacro.h"
   391                           	line	26
   392  0064                     _userStartByte:
   393  0064  34AA               	retlw	0AAh
   394                           	global	_member2
   395                           	global	_member3
   396                           	global	_member1
   397                           	global	_classTerm
   398                           	global	_classNum
   399                           	global	_RXLenAddr
   400                           	global	_calcCSByteAddr
   401                           	global	_cmdByteAddr
   402                           	global	_csByteAddr
   403                           	global	_dataBytesAddr
   404                           	global	_endByteAddr
   405                           	global	_groupNum
   406                           	global	_humHiAddr
   407                           	global	_humLoAddr
   408                           	global	_humStartHi
   409                           	global	_humStartLo
   410                           	global	_humValAddr
   411                           	global	_lenByteAddr
   412                           	global	_maxCmd
   413                           	global	_minSizeByte
   414                           	global	_newLineChar
   415                           	global	_noDataLen
   416                           	global	_rwByteAddr
   417                           	global	_startByteAddr
   418                           	global	_tempC
   419                           	global	_tempF
   420                           	global	_tempHiAddr
   421                           	global	_tempLoAddr
   422                           	global	_tempStartHi
   423                           	global	_tempStartLo
   424                           	global	_tempUnitAddr
   425                           	global	_tempValAddr
   426                           	global	_userEndByte
   427                           	global	_userStartByte
   428                           	global	getPacket@F1168
   429                           	global	_ADCON0
   430  001F                     _ADCON0	set	31
   431                           	global	_ADRESH
   432  001E                     _ADRESH	set	30
   433                           	global	_RCREG
   434  001A                     _RCREG	set	26
   435                           	global	_RCSTA
   436  0018                     _RCSTA	set	24
   437                           	global	_TXREG
   438  0019                     _TXREG	set	25
   439                           	global	_ADON
   440  00F8                     _ADON	set	248
   441                           	global	_CARRY
   442  0018                     _CARRY	set	24
   443                           	global	_GIE
   444  005F                     _GIE	set	95
   445                           	global	_GO_nDONE
   446  00FA                     _GO_nDONE	set	250
   447                           	global	_RCIF
   448  0065                     _RCIF	set	101
   449                           	global	_TXIF
   450  0064                     _TXIF	set	100
   451                           	global	_ADCON1
   452  009F                     _ADCON1	set	159
   453                           	global	_ADRESL
   454  009E                     _ADRESL	set	158
   455                           	global	_SPBRG
   456  0099                     _SPBRG	set	153
   457                           	global	_TRISA
   458  0085                     _TRISA	set	133
   459                           	global	_TXSTA
   460  0098                     _TXSTA	set	152
   461                           	global	_TRISC6
   462  043E                     _TRISC6	set	1086
   463                           	global	_TRISC7
   464  043F                     _TRISC7	set	1087
   465                           	global	_EEADR
   466  010D                     _EEADR	set	269
   467                           	global	_EEDATA
   468  010C                     _EEDATA	set	268
   469                           	global	_EECON1
   470  018C                     _EECON1	set	396
   471                           	global	_EECON2
   472  018D                     _EECON2	set	397
   473                           	global	_RD
   474  0C60                     _RD	set	3168
   475                           	global	_WR
   476  0C61                     _WR	set	3169
   477                           	global	_WREN
   478  0C62                     _WREN	set	3170
   479                           	file	"C:\Users\ggirard\AppData\Local\Temp\s72c."
   480                           	line	#
   481                           psect cinit,class=CODE,delta=2
   482                           global start_initialization
   483  00D4                     start_initialization:
   484                           
   485                           psect	bssBANK1,class=BANK1,space=1
   486                           global __pbssBANK1
   487  00A0                     __pbssBANK1:
   488  00A0                     getPacket@F1168:
   489  00A0                            ds      50
   490                           
   491                           psect	dataBANK1,class=BANK1,space=1
   492                           global __pdataBANK1
   493  00D2                     __pdataBANK1:
   494                           	file	"main.c"
   495                           	line	45
   496  00D2                     main@F1165:
   497  00D2                            ds      9
   498                           
   499                           psect clrtext,class=CODE,delta=2
   500                           global clear_ram
   501                           ;	Called with FSR containing the base address, and
   502                           ;	W with the last address+1
   503  0070                     clear_ram:
   504  0070  0064               	clrwdt			;clear the watchdog before getting into this loop
   505  0071                     clrloop:
   506  0071  0180               	clrf	indf		;clear RAM location pointed to by FSR
   507  0072  0A84               	incf	fsr,f		;increment pointer
   508  0073  0604               	xorwf	fsr,w		;XOR with final address
   509  0074  1903               	btfsc	status,2	;have we reached the end yet?
   510  0075  3400               	retlw	0		;all done for this memory range, return
   511  0076  0604               	xorwf	fsr,w		;XOR again to restore value
   512  0077  2871               	goto	clrloop		;do the next byte
   513                           
   514                           ; Clear objects allocated to BANK1
   515                           psect cinit,class=CODE,delta=2
   516  00D4  1383               	bcf	status, 7	;select IRP bank0
   517  00D5  30A0               	movlw	low(__pbssBANK1)
   518  00D6  0084               	movwf	fsr
   519  00D7  30D2               	movlw	low((__pbssBANK1)+032h)
   520  00D8  120A  118A  2070   	fcall	clear_ram
              120A  118A         
   521                           global btemp
   522                           psect inittext,class=CODE,delta=2
   523                           global init_fetch,btemp
   524                           ;	Called with low address in FSR and high address in W
   525  00C1                     init_fetch:
   526  00C1  087E               	movf btemp,w
   527  00C2  008A               	movwf pclath
   528  00C3  087F               	movf btemp+1,w
   529  00C4  0082               	movwf pc
   530                           global init_ram
   531                           ;Called with:
   532                           ;	high address of idata address in btemp 
   533                           ;	low address of idata address in btemp+1 
   534                           ;	low address of data in FSR
   535                           ;	high address + 1 of data in btemp-1
   536  00C5                     init_ram:
   537  00C5  120A  118A  20C1   	fcall init_fetch
              120A  118A         
   538  00CA  0080               	movwf indf,f
   539  00CB  0A84               	incf fsr,f
   540  00CC  0804               	movf fsr,w
   541  00CD  067D               	xorwf btemp-1,w
   542  00CE  1903               	btfsc status,2
   543  00CF  3400               	retlw 0
   544  00D0  0AFF               	incf btemp+1,f
   545  00D1  1903               	btfsc status,2
   546  00D2  0AFE               	incf btemp,f
   547  00D3  28C5               	goto init_ram
   548                           ; Initialize objects allocated to BANK1
   549                           psect cinit,class=CODE,delta=2
   550                           global init_ram, __pidataBANK1
   551  00DD  30DB               	movlw low(__pdataBANK1+9)
   552  00DE  00FD               	movwf btemp-1,f
   553  00DF  3000               	movlw high(__pidataBANK1)
   554  00E0  00FE               	movwf btemp,f
   555  00E1  3078               	movlw low(__pidataBANK1)
   556  00E2  00FF               	movwf btemp+1,f
   557  00E3  30D2               	movlw low(__pdataBANK1)
   558  00E4  0084               	movwf fsr,f
   559  00E5  120A  118A  20C5   	fcall init_ram
              120A  118A         
   560                           psect cinit,class=CODE,delta=2
   561                           global end_of_initialization
   562                           
   563                           ;End of C runtime variable initialization code
   564                           
   565  00EA                     end_of_initialization:
   566  00EA  0183               clrf status
   567  00EB  120A  118A  2B60   ljmp _main	;jump to C main() function
   568                           psect	cstackCOMMON,class=COMMON,space=1
   569                           global __pcstackCOMMON
   570  0070                     __pcstackCOMMON:
   571                           	global	??_eeprom_read
   572  0070                     ??_eeprom_read:	; 0 bytes @ 0x0
   573                           	global	?_addDataToCheckSum
   574  0070                     ?_addDataToCheckSum:	; 0 bytes @ 0x0
   575                           	global	?_getTemp
   576  0070                     ?_getTemp:	; 0 bytes @ 0x0
   577                           	global	?_getPacket
   578  0070                     ?_getPacket:	; 0 bytes @ 0x0
   579                           	global	?_initUSART
   580  0070                     ?_initUSART:	; 0 bytes @ 0x0
   581                           	global	??_initUSART
   582  0070                     ??_initUSART:	; 0 bytes @ 0x0
   583                           	global	?_writeByte
   584  0070                     ?_writeByte:	; 0 bytes @ 0x0
   585                           	global	??_writeByte
   586  0070                     ??_writeByte:	; 0 bytes @ 0x0
   587                           	global	??_readByte
   588  0070                     ??_readByte:	; 0 bytes @ 0x0
   589                           	global	?_writeString
   590  0070                     ?_writeString:	; 0 bytes @ 0x0
   591                           	global	?_readString
   592  0070                     ?_readString:	; 0 bytes @ 0x0
   593                           	global	??_makeNibble
   594  0070                     ??_makeNibble:	; 0 bytes @ 0x0
   595                           	global	?_parsePacket
   596  0070                     ?_parsePacket:	; 0 bytes @ 0x0
   597                           	global	?_initTemp
   598  0070                     ?_initTemp:	; 0 bytes @ 0x0
   599                           	global	?_initADC
   600  0070                     ?_initADC:	; 0 bytes @ 0x0
   601                           	global	??_initADC
   602  0070                     ??_initADC:	; 0 bytes @ 0x0
   603                           	global	?_selectTemp
   604  0070                     ?_selectTemp:	; 0 bytes @ 0x0
   605                           	global	??_selectTemp
   606  0070                     ??_selectTemp:	; 0 bytes @ 0x0
   607                           	global	?_eeprom_read
   608  0070                     ?_eeprom_read:	; 1 bytes @ 0x0
   609                           	global	?_readByte
   610  0070                     ?_readByte:	; 1 bytes @ 0x0
   611                           	global	?_makeNibble
   612  0070                     ?_makeNibble:	; 1 bytes @ 0x0
   613                           	global	?_strlen
   614  0070                     ?_strlen:	; 2 bytes @ 0x0
   615                           	global	?_readTemp
   616  0070                     ?_readTemp:	; 2 bytes @ 0x0
   617                           	global	?_main
   618  0070                     ?_main:	; 2 bytes @ 0x0
   619                           	global	writeByte@Byte
   620  0070                     writeByte@Byte:	; 1 bytes @ 0x0
   621                           	global	makeNibble@tempNib
   622  0070                     makeNibble@tempNib:	; 1 bytes @ 0x0
   623  0070                     	ds	1
   624                           	global	eeprom_read@addr
   625  0071                     eeprom_read@addr:	; 1 bytes @ 0x1
   626  0071                     	ds	1
   627                           	global	??_strlen
   628  0072                     ??_strlen:	; 0 bytes @ 0x2
   629                           	global	??_readTemp
   630  0072                     ??_readTemp:	; 0 bytes @ 0x2
   631                           	global	?_checkEven
   632  0072                     ?_checkEven:	; 2 bytes @ 0x2
   633                           	global	?_checkLength
   634  0072                     ?_checkLength:	; 2 bytes @ 0x2
   635                           	global	?_checkDataFrames
   636  0072                     ?_checkDataFrames:	; 2 bytes @ 0x2
   637                           	global	?_checkCS
   638  0072                     ?_checkCS:	; 2 bytes @ 0x2
   639  0072                     	ds	2
   640                           	global	??_checkEven
   641  0074                     ??_checkEven:	; 0 bytes @ 0x4
   642                           	global	??_checkLength
   643  0074                     ??_checkLength:	; 0 bytes @ 0x4
   644                           	global	??_checkDataFrames
   645  0074                     ??_checkDataFrames:	; 0 bytes @ 0x4
   646                           	global	??_checkCS
   647  0074                     ??_checkCS:	; 0 bytes @ 0x4
   648  0074                     	ds	4
   649                           	global	strlen@s
   650  0078                     strlen@s:	; 1 bytes @ 0x8
   651  0078                     	ds	1
   652                           	global	strlen@cp
   653  0079                     strlen@cp:	; 1 bytes @ 0x9
   654  0079                     	ds	1
   655                           	global	??_writeString
   656  007A                     ??_writeString:	; 0 bytes @ 0xA
   657                           	global	?_eeprom_write
   658  007A                     ?_eeprom_write:	; 1 bytes @ 0xA
   659                           	global	eeprom_write@value
   660  007A                     eeprom_write@value:	; 1 bytes @ 0xA
   661  007A                     	ds	1
   662                           	global	??_eeprom_write
   663  007B                     ??_eeprom_write:	; 0 bytes @ 0xB
   664                           	global	writeString@userString
   665  007B                     writeString@userString:	; 1 bytes @ 0xB
   666  007B                     	ds	1
   667                           	global	eeprom_write@addr
   668  007C                     eeprom_write@addr:	; 1 bytes @ 0xC
   669                           	global	writeString@i
   670  007C                     writeString@i:	; 2 bytes @ 0xC
   671  007C                     	ds	1
   672                           	global	??_getTemp
   673  007D                     ??_getTemp:	; 0 bytes @ 0xD
   674                           	global	??_initTemp
   675  007D                     ??_initTemp:	; 0 bytes @ 0xD
   676                           	global	?_makeHexByte
   677  007D                     ?_makeHexByte:	; 1 bytes @ 0xD
   678                           	global	makeHexByte@nibTwo
   679  007D                     makeHexByte@nibTwo:	; 1 bytes @ 0xD
   680                           	global	addDataToCheckSum@i
   681  007D                     addDataToCheckSum@i:	; 1 bytes @ 0xD
   682  007D                     	ds	1
   683                           	global	??_validatePacket
   684  007E                     ??_validatePacket:	; 0 bytes @ 0xE
   685                           psect	cstackBANK0,class=BANK0,space=1
   686                           global __pcstackBANK0
   687  0020                     __pcstackBANK0:
   688                           	global	??_addDataToCheckSum
   689  0020                     ??_addDataToCheckSum:	; 0 bytes @ 0x0
   690                           	global	??_readString
   691  0020                     ??_readString:	; 0 bytes @ 0x0
   692                           	global	??_makeHexByte
   693  0020                     ??_makeHexByte:	; 0 bytes @ 0x0
   694                           	global	?_checkStartByte
   695  0020                     ?_checkStartByte:	; 2 bytes @ 0x0
   696                           	global	?_checkRWByte
   697  0020                     ?_checkRWByte:	; 2 bytes @ 0x0
   698                           	global	?_checkCMDByte
   699  0020                     ?_checkCMDByte:	; 2 bytes @ 0x0
   700                           	global	getTemp@tempReading
   701  0020                     getTemp@tempReading:	; 2 bytes @ 0x0
   702  0020                     	ds	2
   703                           	global	??_checkStartByte
   704  0022                     ??_checkStartByte:	; 0 bytes @ 0x2
   705                           	global	??_checkRWByte
   706  0022                     ??_checkRWByte:	; 0 bytes @ 0x2
   707                           	global	??_checkCMDByte
   708  0022                     ??_checkCMDByte:	; 0 bytes @ 0x2
   709                           	global	readString@readStorage
   710  0022                     readString@readStorage:	; 1 bytes @ 0x2
   711                           	global	makeHexByte@nibOne
   712  0022                     makeHexByte@nibOne:	; 1 bytes @ 0x2
   713  0022                     	ds	1
   714                           	global	makeHexByte@input_byte
   715  0023                     makeHexByte@input_byte:	; 1 bytes @ 0x3
   716                           	global	readString@i
   717  0023                     readString@i:	; 2 bytes @ 0x3
   718  0023                     	ds	1
   719                           	global	??_parsePacket
   720  0024                     ??_parsePacket:	; 0 bytes @ 0x4
   721                           	global	?_validatePacket
   722  0024                     ?_validatePacket:	; 2 bytes @ 0x4
   723  0024                     	ds	1
   724                           	global	readString@ch
   725  0025                     readString@ch:	; 1 bytes @ 0x5
   726  0025                     	ds	3
   727                           	global	parsePacket@dataCounter
   728  0028                     parsePacket@dataCounter:	; 2 bytes @ 0x8
   729  0028                     	ds	2
   730                           	global	parsePacket@i
   731  002A                     parsePacket@i:	; 1 bytes @ 0xA
   732  002A                     	ds	1
   733                           	global	parsePacket@dataPacket
   734  002B                     parsePacket@dataPacket:	; 1 bytes @ 0xB
   735  002B                     	ds	1
   736                           	global	??_getPacket
   737  002C                     ??_getPacket:	; 0 bytes @ 0xC
   738  002C                     	ds	4
   739                           	global	getPacket@arrStore
   740  0030                     getPacket@arrStore:	; 50 bytes @ 0x10
   741  0030                     	ds	50
   742                           	global	??_main
   743  0062                     ??_main:	; 0 bytes @ 0x42
   744  0062                     	ds	4
   745                           	global	main@testString
   746  0066                     main@testString:	; 9 bytes @ 0x46
   747  0066                     	ds	9
   748 ;;Data sizes: Strings 0, constant 92, data 9, bss 50, persistent 0 stack 0
   749 ;;Auto spaces:   Size  Autos    Used
   750 ;; COMMON          14     14      14
   751 ;; BANK0           80     79      79
   752 ;; BANK1           80      0      59
   753 ;; BANK3           96      0       0
   754 ;; BANK2           96      0       0
   755                           
   756 ;;
   757 ;; Pointer list with targets:
   758                           
   759 ;; ?_readTemp	unsigned int  size(1) Largest target is 0
   760 ;;
   761 ;; ?_strlen	unsigned int  size(1) Largest target is 50
   762 ;;		 -> getPacket@arrStore(BANK0[50]), main@testString(BANK0[9]), 
   763 ;;
   764 ;; strlen@s	PTR const unsigned char  size(1) Largest target is 50
   765 ;;		 -> getPacket@arrStore(BANK0[50]), main@testString(BANK0[9]), 
   766 ;;
   767 ;; strlen@cp	PTR const unsigned char  size(1) Largest target is 50
   768 ;;		 -> getPacket@arrStore(BANK0[50]), main@testString(BANK0[9]), 
   769 ;;
   770 ;; parsePacket@dataPacket	PTR unsigned char  size(1) Largest target is 50
   771 ;;		 -> getPacket@arrStore(BANK0[50]), 
   772 ;;
   773 ;; readString@readStorage	PTR unsigned char  size(1) Largest target is 50
   774 ;;		 -> getPacket@arrStore(BANK0[50]), 
   775 ;;
   776 ;; writeString@userString	PTR unsigned char  size(1) Largest target is 9
   777 ;;		 -> main@testString(BANK0[9]), 
   778 ;;
   779                           
   780                           
   781 ;;
   782 ;; Critical Paths under _main in COMMON
   783 ;;
   784 ;;   _main->_initTemp
   785 ;;   _main->_writeString
   786 ;;   _main->_getTemp
   787 ;;   _getTemp->_eeprom_write
   788 ;;   _validatePacket->_addDataToCheckSum
   789 ;;   _parsePacket->_makeHexByte
   790 ;;   _initTemp->_eeprom_write
   791 ;;   _addDataToCheckSum->_eeprom_write
   792 ;;   _checkCS->_eeprom_read
   793 ;;   _checkCMDByte->_eeprom_write
   794 ;;   _checkRWByte->_eeprom_write
   795 ;;   _checkStartByte->_eeprom_write
   796 ;;   _checkDataFrames->_eeprom_read
   797 ;;   _checkLength->_eeprom_read
   798 ;;   _checkEven->_eeprom_read
   799 ;;   _makeHexByte->_eeprom_write
   800 ;;   _readString->_eeprom_write
   801 ;;   _writeString->_strlen
   802 ;;   _eeprom_write->_strlen
   803 ;;
   804 ;; Critical Paths under _main in BANK0
   805 ;;
   806 ;;   _main->_getPacket
   807 ;;   _getPacket->_parsePacket
   808 ;;   _validatePacket->_checkStartByte
   809 ;;   _validatePacket->_checkRWByte
   810 ;;   _validatePacket->_checkCMDByte
   811 ;;   _parsePacket->_makeHexByte
   812 ;;
   813 ;; Critical Paths under _main in BANK1
   814 ;;
   815 ;;   None.
   816 ;;
   817 ;; Critical Paths under _main in BANK3
   818 ;;
   819 ;;   None.
   820 ;;
   821 ;; Critical Paths under _main in BANK2
   822 ;;
   823 ;;   None.
   824                           
   825 ;;
   826 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   827 ;;
   828                           
   829 ;;
   830 ;;Call Graph Tables:
   831 ;;
   832 ;; ---------------------------------------------------------------------------------
   833 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   834 ;; ---------------------------------------------------------------------------------
   835 ;; (0) _main                                                13    13      0    2026
   836 ;;                                             66 BANK0     13    13      0
   837 ;;                          _initUSART
   838 ;;                            _initADC
   839 ;;                           _initTemp
   840 ;;                        _writeString
   841 ;;                            _getTemp
   842 ;;                          _getPacket
   843 ;; ---------------------------------------------------------------------------------
   844 ;; (1) _getPacket                                           54    54      0    1589
   845 ;;                                             12 BANK0     54    54      0
   846 ;;                       _eeprom_write
   847 ;;                         _readString
   848 ;;                        _eeprom_read
   849 ;;                          _writeByte
   850 ;;                        _parsePacket
   851 ;;                     _validatePacket
   852 ;; ---------------------------------------------------------------------------------
   853 ;; (1) _getTemp                                              3     3      0     139
   854 ;;                                             13 COMMON     1     1      0
   855 ;;                                              0 BANK0      2     2      0
   856 ;;                         _selectTemp
   857 ;;                           _readTemp
   858 ;;                          _writeByte
   859 ;;                       _eeprom_write
   860 ;;                        _eeprom_read
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (2) _validatePacket                                       2     0      2     488
   863 ;;                                              4 BANK0      2     0      2
   864 ;;                     _checkStartByte
   865 ;;                        _checkRWByte
   866 ;;                       _checkCMDByte
   867 ;;                    _checkDataFrames
   868 ;;                  _addDataToCheckSum
   869 ;;                            _checkCS
   870 ;; ---------------------------------------------------------------------------------
   871 ;; (2) _parsePacket                                          8     8      0     783
   872 ;;                                              4 BANK0      8     8      0
   873 ;;                        _checkLength
   874 ;;                          _checkEven
   875 ;;                        _makeHexByte
   876 ;;                       _eeprom_write
   877 ;;                             _strlen
   878 ;;                        _eeprom_read
   879 ;; ---------------------------------------------------------------------------------
   880 ;; (1) _initTemp                                             1     1      0      50
   881 ;;                                             13 COMMON     1     1      0
   882 ;;                       _eeprom_write
   883 ;; ---------------------------------------------------------------------------------
   884 ;; (2) _readTemp                                             4     2      2       0
   885 ;;                                              0 COMMON     4     2      2
   886 ;; ---------------------------------------------------------------------------------
   887 ;; (3) _addDataToCheckSum                                    3     3      0     118
   888 ;;                                             13 COMMON     1     1      0
   889 ;;                                              0 BANK0      2     2      0
   890 ;;                        _eeprom_read
   891 ;;                       _eeprom_write
   892 ;; ---------------------------------------------------------------------------------
   893 ;; (3) _checkCS                                              3     1      2      44
   894 ;;                                              2 COMMON     3     1      2
   895 ;;                        _eeprom_read
   896 ;;                          _writeByte
   897 ;; ---------------------------------------------------------------------------------
   898 ;; (3) _checkCMDByte                                         4     2      2      94
   899 ;;                                              0 BANK0      4     2      2
   900 ;;                        _eeprom_read
   901 ;;                       _eeprom_write
   902 ;;                          _writeByte
   903 ;; ---------------------------------------------------------------------------------
   904 ;; (3) _checkRWByte                                          4     2      2      94
   905 ;;                                              0 BANK0      4     2      2
   906 ;;                        _eeprom_read
   907 ;;                          _writeByte
   908 ;;                       _eeprom_write
   909 ;; ---------------------------------------------------------------------------------
   910 ;; (3) _checkStartByte                                       4     2      2      94
   911 ;;                                              0 BANK0      4     2      2
   912 ;;                        _eeprom_read
   913 ;;                          _writeByte
   914 ;;                       _eeprom_write
   915 ;; ---------------------------------------------------------------------------------
   916 ;; (3) _checkDataFrames                                      8     6      2      44
   917 ;;                                              2 COMMON     8     6      2
   918 ;;                        _eeprom_read
   919 ;;                          _writeByte
   920 ;; ---------------------------------------------------------------------------------
   921 ;; (3) _checkLength                                          3     1      2      44
   922 ;;                                              2 COMMON     3     1      2
   923 ;;                        _eeprom_read
   924 ;;                          _writeByte
   925 ;; ---------------------------------------------------------------------------------
   926 ;; (3) _checkEven                                            3     1      2      44
   927 ;;                                              2 COMMON     3     1      2
   928 ;;                        _eeprom_read
   929 ;;                          _writeByte
   930 ;; ---------------------------------------------------------------------------------
   931 ;; (3) _makeHexByte                                          5     4      1     134
   932 ;;                                             13 COMMON     1     0      1
   933 ;;                                              0 BANK0      4     4      0
   934 ;;                         _makeNibble
   935 ;;                       _eeprom_write (ARG)
   936 ;;                             _strlen (ARG)
   937 ;; ---------------------------------------------------------------------------------
   938 ;; (2) _readString                                           6     6      0     164
   939 ;;                                              0 BANK0      6     6      0
   940 ;;                           _readByte
   941 ;;                       _eeprom_write
   942 ;; ---------------------------------------------------------------------------------
   943 ;; (1) _writeString                                          4     4      0     223
   944 ;;                                             10 COMMON     4     4      0
   945 ;;                          _writeByte
   946 ;;                             _strlen
   947 ;; ---------------------------------------------------------------------------------
   948 ;; (2) _selectTemp                                           0     0      0       0
   949 ;; ---------------------------------------------------------------------------------
   950 ;; (1) _initADC                                              0     0      0       0
   951 ;; ---------------------------------------------------------------------------------
   952 ;; (4) _eeprom_read                                          2     2      0      22
   953 ;;                                              0 COMMON     2     2      0
   954 ;; ---------------------------------------------------------------------------------
   955 ;; (4) _makeNibble                                           1     1      0      66
   956 ;;                                              0 COMMON     1     1      0
   957 ;; ---------------------------------------------------------------------------------
   958 ;; (4) _eeprom_write                                         3     2      1      50
   959 ;;                                             10 COMMON     3     2      1
   960 ;;                         _makeNibble (ARG)
   961 ;;                             _strlen (ARG)
   962 ;;                        _eeprom_read (ARG)
   963 ;; ---------------------------------------------------------------------------------
   964 ;; (3) _strlen                                              10     8      2      89
   965 ;;                                              0 COMMON    10     8      2
   966 ;; ---------------------------------------------------------------------------------
   967 ;; (3) _readByte                                             0     0      0       0
   968 ;; ---------------------------------------------------------------------------------
   969 ;; (4) _writeByte                                            1     1      0      22
   970 ;;                                              0 COMMON     1     1      0
   971 ;; ---------------------------------------------------------------------------------
   972 ;; (1) _initUSART                                            0     0      0       0
   973 ;; ---------------------------------------------------------------------------------
   974 ;; Estimated maximum stack depth 4
   975 ;; ---------------------------------------------------------------------------------
   976                           
   977 ;; Call Graph Graphs:
   978                           
   979 ;; _main (ROOT)
   980 ;;   _initUSART
   981 ;;   _initADC
   982 ;;   _initTemp
   983 ;;     _eeprom_write
   984 ;;       _makeNibble (ARG)
   985 ;;       _strlen (ARG)
   986 ;;       _eeprom_read (ARG)
   987 ;;   _writeString
   988 ;;     _writeByte
   989 ;;     _strlen
   990 ;;   _getTemp
   991 ;;     _selectTemp
   992 ;;     _readTemp
   993 ;;     _writeByte
   994 ;;     _eeprom_write
   995 ;;       _makeNibble (ARG)
   996 ;;       _strlen (ARG)
   997 ;;       _eeprom_read (ARG)
   998 ;;     _eeprom_read
   999 ;;   _getPacket
  1000 ;;     _eeprom_write
  1001 ;;       _makeNibble (ARG)
  1002 ;;       _strlen (ARG)
  1003 ;;       _eeprom_read (ARG)
  1004 ;;     _readString
  1005 ;;       _readByte
  1006 ;;       _eeprom_write
  1007 ;;         _makeNibble (ARG)
  1008 ;;         _strlen (ARG)
  1009 ;;         _eeprom_read (ARG)
  1010 ;;     _eeprom_read
  1011 ;;     _writeByte
  1012 ;;     _parsePacket
  1013 ;;       _checkLength
  1014 ;;         _eeprom_read
  1015 ;;         _writeByte
  1016 ;;       _checkEven
  1017 ;;         _eeprom_read
  1018 ;;         _writeByte
  1019 ;;       _makeHexByte
  1020 ;;         _makeNibble
  1021 ;;         _eeprom_write (ARG)
  1022 ;;           _makeNibble (ARG)
  1023 ;;           _strlen (ARG)
  1024 ;;           _eeprom_read (ARG)
  1025 ;;         _strlen (ARG)
  1026 ;;       _eeprom_write
  1027 ;;         _makeNibble (ARG)
  1028 ;;         _strlen (ARG)
  1029 ;;         _eeprom_read (ARG)
  1030 ;;       _strlen
  1031 ;;       _eeprom_read
  1032 ;;     _validatePacket
  1033 ;;       _checkStartByte
  1034 ;;         _eeprom_read
  1035 ;;         _writeByte
  1036 ;;         _eeprom_write
  1037 ;;           _makeNibble (ARG)
  1038 ;;           _strlen (ARG)
  1039 ;;           _eeprom_read (ARG)
  1040 ;;       _checkRWByte
  1041 ;;         _eeprom_read
  1042 ;;         _writeByte
  1043 ;;         _eeprom_write
  1044 ;;           _makeNibble (ARG)
  1045 ;;           _strlen (ARG)
  1046 ;;           _eeprom_read (ARG)
  1047 ;;       _checkCMDByte
  1048 ;;         _eeprom_read
  1049 ;;         _eeprom_write
  1050 ;;           _makeNibble (ARG)
  1051 ;;           _strlen (ARG)
  1052 ;;           _eeprom_read (ARG)
  1053 ;;         _writeByte
  1054 ;;       _checkDataFrames
  1055 ;;         _eeprom_read
  1056 ;;         _writeByte
  1057 ;;       _addDataToCheckSum
  1058 ;;         _eeprom_read
  1059 ;;         _eeprom_write
  1060 ;;           _makeNibble (ARG)
  1061 ;;           _strlen (ARG)
  1062 ;;           _eeprom_read (ARG)
  1063 ;;       _checkCS
  1064 ;;         _eeprom_read
  1065 ;;         _writeByte
  1066 ;;
  1067                           
  1068 ;; Address spaces:
  1069                           
  1070 ;;Name               Size   Autos  Total    Cost      Usage
  1071 ;;BANK3               60      0       0       9        0.0%
  1072 ;;BITBANK3            60      0       0       8        0.0%
  1073 ;;SFR3                 0      0       0       4        0.0%
  1074 ;;BITSFR3              0      0       0       4        0.0%
  1075 ;;BANK2               60      0       0      11        0.0%
  1076 ;;BITBANK2            60      0       0      10        0.0%
  1077 ;;SFR2                 0      0       0       5        0.0%
  1078 ;;BITSFR2              0      0       0       5        0.0%
  1079 ;;SFR1                 0      0       0       2        0.0%
  1080 ;;BITSFR1              0      0       0       2        0.0%
  1081 ;;BANK1               50      0      3B       7       73.8%
  1082 ;;BITBANK1            50      0       0       6        0.0%
  1083 ;;CODE                 0      0       0       0        0.0%
  1084 ;;DATA                 0      0      9C      12        0.0%
  1085 ;;ABS                  0      0      98       3        0.0%
  1086 ;;NULL                 0      0       0       0        0.0%
  1087 ;;STACK                0      0       4       2        0.0%
  1088 ;;BANK0               50     4F      4F       5       98.8%
  1089 ;;BITBANK0            50      0       0       4        0.0%
  1090 ;;SFR0                 0      0       0       1        0.0%
  1091 ;;BITSFR0              0      0       0       1        0.0%
  1092 ;;COMMON               E      E       E       1      100.0%
  1093 ;;BITCOMMON            E      0       0       0        0.0%
  1094 ;;EEDATA             100      0       0       0        0.0%
  1095                           
  1096                           	global	_main
  1097                           psect	maintext,global,class=CODE,delta=2
  1098                           global __pmaintext
  1099  0360                     __pmaintext:
  1100                           
  1101 ;; *************** function _main *****************
  1102 ;; Defined at:
  1103 ;;		line 44 in file "main.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  testString      9   70[BANK0 ] unsigned char [9]
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  2  3922[COMMON] int 
  1110 ;; Registers used:
  1111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 17F/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1117 ;;      Params:         0       0       0       0       0
  1118 ;;      Locals:         0       9       0       0       0
  1119 ;;      Temps:          0       4       0       0       0
  1120 ;;      Totals:         0      13       0       0       0
  1121 ;;Total ram usage:       13 bytes
  1122 ;; Hardware stack levels required when called:    4
  1123 ;; This function calls:
  1124 ;;		_initUSART
  1125 ;;		_initADC
  1126 ;;		_initTemp
  1127 ;;		_writeString
  1128 ;;		_getTemp
  1129 ;;		_getPacket
  1130 ;; This function is called by:
  1131 ;;		Startup code after reset
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           psect	maintext
  1135                           	file	"main.c"
  1136                           	line	44
  1137                           	global	__size_of_main
  1138  0052                     	__size_of_main	equ	__end_of_main-_main
  1139                           	
  1140  0360                     _main:	
  1141                           	opt	stack 4
  1142                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1143                           	line	45
  1144                           	
  1145  0360                     l7745:	
  1146                           ;main.c: 45: char testString[] = "Welcome\n";
  1147  0360  3066               	movlw	(main@testString)&0ffh
  1148  0361  0084               	movwf	fsr0
  1149  0362  30D2               	movlw	low(main@F1165)
  1150  0363  1283               	bcf	status, 5	;RP0=0, select bank0
  1151  0364  1303               	bcf	status, 6	;RP1=0, select bank0
  1152  0365  00E2               	movwf	(??_main+0)+0
  1153  0366  0804               	movf	fsr0,w
  1154  0367  00E3               	movwf	((??_main+0)+0+1)
  1155  0368  3009               	movlw	9
  1156  0369  00E4               	movwf	((??_main+0)+0+2)
  1157  036A                     u2940:
  1158  036A  0862               	movf	(??_main+0)+0,w
  1159  036B  0084               	movwf	fsr0
  1160  036C  1383               	bcf	status, 7	;select IRP bank1
  1161                           	
  1162  036D  0800               	movf	indf,w
  1163  036E  00E5               	movwf	((??_main+0)+0+3)
  1164  036F  0AE2               	incf	(??_main+0)+0,f
  1165  0370  0863               	movf	((??_main+0)+0+1),w
  1166  0371  0084               	movwf	fsr0
  1167                           	
  1168  0372  0865               	movf	((??_main+0)+0+3),w
  1169  0373  0080               	movwf	indf
  1170  0374  0AE3               	incf	((??_main+0)+0+1),f
  1171  0375  0BE4               	decfsz	((??_main+0)+0+2),f
  1172  0376  2B6A               	goto	u2940
  1173                           	line	49
  1174                           	
  1175  0377                     l7747:	
  1176                           ;main.c: 49: initUSART();
  1177  0377  120A  118A  20A3   	fcall	_initUSART
              120A  118A         
  1178                           	line	51
  1179                           	
  1180  037C                     l7749:	
  1181                           ;main.c: 51: initADC();
  1182  037C  120A  118A  208C   	fcall	_initADC
              120A  118A         
  1183                           	line	54
  1184                           	
  1185  0381                     l7751:	
  1186                           ;main.c: 54: initTemp();
  1187  0381  120A  118A  22BF   	fcall	_initTemp
              120A  118A         
  1188                           	line	57
  1189                           	
  1190  0386                     l7753:	
  1191                           ;main.c: 57: writeString(testString);
  1192  0386  3066               	movlw	(main@testString)&0ffh
  1193  0387  120A  118A  2180   	fcall	_writeString
              120A  118A         
  1194  038C  2B8D               	goto	l7755
  1195                           	line	61
  1196                           ;main.c: 61: while(1){
  1197                           	
  1198  038D                     l3925:	
  1199                           	line	64
  1200                           	
  1201  038D                     l7755:	
  1202                           ;main.c: 64: getTemp();
  1203  038D  120A  118A  24DD   	fcall	_getTemp
              120A  118A         
  1204                           	line	65
  1205                           	
  1206  0392                     l7757:	
  1207                           ;main.c: 65: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1208                           	opt asmopt_off
  1209  0392  301A               movlw  26
  1210  0393  1283               	bcf	status, 5	;RP0=0, select bank0
  1211  0394  1303               	bcf	status, 6	;RP1=0, select bank0
  1212  0395  00E4               movwf	((??_main+0)+0+2),f
  1213  0396  305E               movlw	94
  1214  0397  00E3               movwf	((??_main+0)+0+1),f
  1215  0398  3086               	movlw	134
  1216  0399  00E2               movwf	((??_main+0)+0),f
  1217  039A                     u2967:
  1218  039A  0BE2               	decfsz	((??_main+0)+0),f
  1219  039B  2B9A               	goto	u2967
  1220  039C  0BE3               	decfsz	((??_main+0)+0+1),f
  1221  039D  2B9A               	goto	u2967
  1222  039E  0BE4               	decfsz	((??_main+0)+0+2),f
  1223  039F  2B9A               	goto	u2967
  1224  03A0  0064               	clrwdt
  1225                           opt asmopt_on
  1226                           
  1227                           	line	76
  1228                           	
  1229  03A1                     l7759:	
  1230                           ;main.c: 76: if(RCIF){
  1231  03A1  1283               	bcf	status, 5	;RP0=0, select bank0
  1232  03A2  1303               	bcf	status, 6	;RP1=0, select bank0
  1233  03A3  1E8C               	btfss	(101/8),(101)&7
  1234  03A4  2BA6               	goto	u2951
  1235  03A5  2BA7               	goto	u2950
  1236  03A6                     u2951:
  1237  03A6  2B8D               	goto	l7755
  1238  03A7                     u2950:
  1239                           	line	77
  1240                           	
  1241  03A7                     l7761:	
  1242                           ;main.c: 77: getPacket();
  1243  03A7  120A  118A  23B2   	fcall	_getPacket
              120A  118A         
  1244  03AC  2B8D               	goto	l7755
  1245                           	line	78
  1246                           	
  1247  03AD                     l3926:	
  1248  03AD  2B8D               	goto	l7755
  1249                           	line	79
  1250                           	
  1251  03AE                     l3927:	
  1252                           	line	61
  1253  03AE  2B8D               	goto	l7755
  1254                           	
  1255  03AF                     l3928:	
  1256                           	line	84
  1257                           ;main.c: 78: }
  1258                           ;main.c: 79: }
  1259                           ;main.c: 83: return 0;
  1260                           ;	Return value of _main is never used
  1261                           	
  1262  03AF                     l3929:	
  1263                           	global	start
  1264  03AF  120A  118A  2800   	ljmp	start
  1265                           	opt stack 0
  1266                           GLOBAL	__end_of_main
  1267  03B2                     	__end_of_main:
  1268 ;; =============== function _main ends ============
  1269                           
  1270                           	signat	_main,90
  1271                           	global	_getPacket
  1272                           psect	text572,local,class=CODE,delta=2
  1273                           global __ptext572
  1274  03B2                     __ptext572:
  1275                           
  1276 ;; *************** function _getPacket *****************
  1277 ;; Defined at:
  1278 ;;		line 86 in file "main.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  arrStore       50   16[BANK0 ] unsigned char [50]
  1283 ;; Return value:  Size  Location     Type
  1284 ;;		None               void
  1285 ;; Registers used:
  1286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       0       0       0
  1293 ;;      Locals:         0      50       0       0       0
  1294 ;;      Temps:          0       4       0       0       0
  1295 ;;      Totals:         0      54       0       0       0
  1296 ;;Total ram usage:       54 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    3
  1299 ;; This function calls:
  1300 ;;		_eeprom_write
  1301 ;;		_readString
  1302 ;;		_eeprom_read
  1303 ;;		_writeByte
  1304 ;;		_parsePacket
  1305 ;;		_validatePacket
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           psect	text572
  1311                           	file	"main.c"
  1312                           	line	86
  1313                           	global	__size_of_getPacket
  1314  005D                     	__size_of_getPacket	equ	__end_of_getPacket-_getPacket
  1315                           	
  1316  03B2                     _getPacket:	
  1317                           	opt	stack 4
  1318                           ; Regs used in _getPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1319                           	line	88
  1320                           	
  1321  03B2                     l7729:	
  1322                           ;main.c: 88: eeprom_write(calcCSByteAddr,0x00);
  1323  03B2  01FA               	clrf	(?_eeprom_write)
  1324  03B3  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1325  03B4  0084               	movwf	fsr0
  1326  03B5  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1327  03BA  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  1328                           	line	91
  1329                           	
  1330  03BF                     l7731:	
  1331                           ;main.c: 91: char arrStore[50] = {0};
  1332  03BF  3030               	movlw	(getPacket@arrStore)&0ffh
  1333  03C0  0084               	movwf	fsr0
  1334  03C1  30A0               	movlw	low(getPacket@F1168)
  1335  03C2  1283               	bcf	status, 5	;RP0=0, select bank0
  1336  03C3  1303               	bcf	status, 6	;RP1=0, select bank0
  1337  03C4  00AC               	movwf	(??_getPacket+0)+0
  1338  03C5  0804               	movf	fsr0,w
  1339  03C6  00AD               	movwf	((??_getPacket+0)+0+1)
  1340  03C7  3032               	movlw	50
  1341  03C8  00AE               	movwf	((??_getPacket+0)+0+2)
  1342  03C9                     u2920:
  1343  03C9  082C               	movf	(??_getPacket+0)+0,w
  1344  03CA  0084               	movwf	fsr0
  1345  03CB  1383               	bcf	status, 7	;select IRP bank1
  1346                           	
  1347  03CC  0800               	movf	indf,w
  1348  03CD  00AF               	movwf	((??_getPacket+0)+0+3)
  1349  03CE  0AAC               	incf	(??_getPacket+0)+0,f
  1350  03CF  082D               	movf	((??_getPacket+0)+0+1),w
  1351  03D0  0084               	movwf	fsr0
  1352                           	
  1353  03D1  082F               	movf	((??_getPacket+0)+0+3),w
  1354  03D2  0080               	movwf	indf
  1355  03D3  0AAD               	incf	((??_getPacket+0)+0+1),f
  1356  03D4  0BAE               	decfsz	((??_getPacket+0)+0+2),f
  1357  03D5  2BC9               	goto	u2920
  1358                           	line	94
  1359                           	
  1360  03D6                     l7733:	
  1361                           ;main.c: 94: readString(arrStore);
  1362  03D6  3030               	movlw	(getPacket@arrStore)&0ffh
  1363  03D7  120A  118A  2274   	fcall	_readString
              120A  118A         
  1364                           	line	105
  1365                           	
  1366  03DC                     l7735:	
  1367                           ;main.c: 105: writeByte(eeprom_read(RXLenAddr));
  1368  03DC  3040               	movlw	(_RXLenAddr-__stringbase)
  1369  03DD  0084               	movwf	fsr0
  1370  03DE  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1371  03E3  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  1372  03E8  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  1373                           	line	108
  1374                           	
  1375  03ED                     l7737:	
  1376                           ;main.c: 108: parsePacket(arrStore);
  1377  03ED  3030               	movlw	(getPacket@arrStore)&0ffh
  1378  03EE  120A  118A  26CB   	fcall	_parsePacket
              120A  118A         
  1379                           	line	112
  1380                           	
  1381  03F3                     l7739:	
  1382                           ;main.c: 112: if(validatePacket()){
  1383  03F3  120A  118A  230F   	fcall	_validatePacket
              120A  118A         
  1384  03F8  1283               	bcf	status, 5	;RP0=0, select bank0
  1385  03F9  1303               	bcf	status, 6	;RP1=0, select bank0
  1386  03FA  0825               	movf	(1+(?_validatePacket)),w
  1387  03FB  0424               	iorwf	(0+(?_validatePacket)),w
  1388  03FC  1903               	skipnz
  1389  03FD  2BFF               	goto	u2931
  1390  03FE  2C00               	goto	u2930
  1391  03FF                     u2931:
  1392  03FF  2C07               	goto	l7743
  1393  0400                     u2930:
  1394                           	line	113
  1395                           	
  1396  0400                     l7741:	
  1397                           ;main.c: 113: writeByte('V');
  1398  0400  3056               	movlw	(056h)
  1399  0401  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  1400                           	line	118
  1401                           ;main.c: 118: }else{
  1402  0406  2C0E               	goto	l3936
  1403                           	
  1404  0407                     l3934:	
  1405                           	line	120
  1406                           	
  1407  0407                     l7743:	
  1408                           ;main.c: 120: writeByte('N');
  1409  0407  304E               	movlw	(04Eh)
  1410  0408  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  1411  040D  2C0E               	goto	l3936
  1412                           	line	121
  1413                           	
  1414  040E                     l3935:	
  1415                           	line	122
  1416                           	
  1417  040E                     l3936:	
  1418  040E  0008               	return
  1419                           	opt stack 0
  1420                           GLOBAL	__end_of_getPacket
  1421  040F                     	__end_of_getPacket:
  1422 ;; =============== function _getPacket ends ============
  1423                           
  1424                           	signat	_getPacket,88
  1425                           	global	_getTemp
  1426                           psect	text573,local,class=CODE,delta=2
  1427                           global __ptext573
  1428  04DD                     __ptext573:
  1429                           
  1430 ;; *************** function _getTemp *****************
  1431 ;; Defined at:
  1432 ;;		line 124 in file "main.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  tempReading     2    0[BANK0 ] unsigned int 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;		None               void
  1439 ;; Registers used:
  1440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       0       0       0       0
  1447 ;;      Locals:         0       2       0       0       0
  1448 ;;      Temps:          1       0       0       0       0
  1449 ;;      Totals:         1       2       0       0       0
  1450 ;;Total ram usage:        3 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    1
  1453 ;; This function calls:
  1454 ;;		_selectTemp
  1455 ;;		_readTemp
  1456 ;;		_writeByte
  1457 ;;		_eeprom_write
  1458 ;;		_eeprom_read
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           psect	text573
  1464                           	file	"main.c"
  1465                           	line	124
  1466                           	global	__size_of_getTemp
  1467  006D                     	__size_of_getTemp	equ	__end_of_getTemp-_getTemp
  1468                           	
  1469  04DD                     _getTemp:	
  1470                           	opt	stack 6
  1471                           ; Regs used in _getTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1472                           	line	127
  1473                           	
  1474  04DD                     l7711:	
  1475                           ;main.c: 125: unsigned int tempReading;
  1476                           ;main.c: 127: selectTemp();
  1477  04DD  120A  118A  206B   	fcall	_selectTemp
              120A  118A         
  1478                           	line	129
  1479                           	
  1480  04E2                     l7713:	
  1481                           ;main.c: 129: tempReading = readTemp();
  1482  04E2  120A  118A  2159   	fcall	_readTemp
              120A  118A         
  1483  04E7  0871               	movf	(1+(?_readTemp)),w
  1484  04E8  1283               	bcf	status, 5	;RP0=0, select bank0
  1485  04E9  1303               	bcf	status, 6	;RP1=0, select bank0
  1486  04EA  01A1               	clrf	(getTemp@tempReading+1)
  1487  04EB  07A1               	addwf	(getTemp@tempReading+1)
  1488  04EC  0870               	movf	(0+(?_readTemp)),w
  1489  04ED  01A0               	clrf	(getTemp@tempReading)
  1490  04EE  07A0               	addwf	(getTemp@tempReading)
  1491                           
  1492                           	line	130
  1493                           	
  1494  04EF                     l7715:	
  1495                           ;main.c: 130: writeByte('T');
  1496  04EF  3054               	movlw	(054h)
  1497  04F0  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  1498                           	line	132
  1499                           	
  1500  04F5                     l7717:	
  1501                           ;main.c: 132: eeprom_write(tempValAddr,tempReading);
  1502  04F5  1283               	bcf	status, 5	;RP0=0, select bank0
  1503  04F6  1303               	bcf	status, 6	;RP1=0, select bank0
  1504  04F7  0820               	movf	(getTemp@tempReading),w
  1505  04F8  00FD               	movwf	(??_getTemp+0)+0
  1506  04F9  087D               	movf	(??_getTemp+0)+0,w
  1507  04FA  00FA               	movwf	(?_eeprom_write)
  1508  04FB  305A               	movlw	(_tempValAddr-__stringbase)
  1509  04FC  0084               	movwf	fsr0
  1510  04FD  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1511  0502  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  1512                           	line	134
  1513                           	
  1514  0507                     l7719:	
  1515                           ;main.c: 134: eeprom_write(tempValAddr+1,tempReading>>8);
  1516  0507  1283               	bcf	status, 5	;RP0=0, select bank0
  1517  0508  1303               	bcf	status, 6	;RP1=0, select bank0
  1518  0509  0821               	movf	(getTemp@tempReading+1),w
  1519  050A  00FD               	movwf	(??_getTemp+0)+0
  1520  050B  087D               	movf	(??_getTemp+0)+0,w
  1521  050C  00FA               	movwf	(?_eeprom_write)
  1522  050D  305A               	movlw	(_tempValAddr-__stringbase)
  1523  050E  0084               	movwf	fsr0
  1524  050F  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1525  0514  3E01               	addlw	01h
  1526  0515  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  1527                           	line	135
  1528                           	
  1529  051A                     l7721:	
  1530                           ;main.c: 135: writeByte('F');
  1531  051A  3046               	movlw	(046h)
  1532  051B  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  1533                           	line	136
  1534                           	
  1535  0520                     l7723:	
  1536                           ;main.c: 136: writeByte(eeprom_read(tempValAddr));
  1537  0520  305A               	movlw	(_tempValAddr-__stringbase)
  1538  0521  0084               	movwf	fsr0
  1539  0522  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1540  0527  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  1541  052C  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  1542                           	line	137
  1543                           	
  1544  0531                     l7725:	
  1545                           ;main.c: 137: writeByte('S');
  1546  0531  3053               	movlw	(053h)
  1547  0532  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  1548                           	line	138
  1549                           	
  1550  0537                     l7727:	
  1551                           ;main.c: 138: writeByte(eeprom_read(tempValAddr+1));
  1552  0537  305A               	movlw	(_tempValAddr-__stringbase)
  1553  0538  0084               	movwf	fsr0
  1554  0539  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1555  053E  3E01               	addlw	01h
  1556  053F  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  1557  0544  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  1558                           	line	139
  1559                           	
  1560  0549                     l3939:	
  1561  0549  0008               	return
  1562                           	opt stack 0
  1563                           GLOBAL	__end_of_getTemp
  1564  054A                     	__end_of_getTemp:
  1565 ;; =============== function _getTemp ends ============
  1566                           
  1567                           	signat	_getTemp,88
  1568                           	global	_validatePacket
  1569                           psect	text574,local,class=CODE,delta=2
  1570                           global __ptext574
  1571  030F                     __ptext574:
  1572                           
  1573 ;; *************** function _validatePacket *****************
  1574 ;; Defined at:
  1575 ;;		line 236 in file "Packet.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  2    4[BANK0 ] int 
  1582 ;; Registers used:
  1583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         0       2       0       0       0
  1590 ;;      Locals:         0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0
  1592 ;;      Totals:         0       2       0       0       0
  1593 ;;Total ram usage:        2 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    2
  1596 ;; This function calls:
  1597 ;;		_checkStartByte
  1598 ;;		_checkRWByte
  1599 ;;		_checkCMDByte
  1600 ;;		_checkDataFrames
  1601 ;;		_addDataToCheckSum
  1602 ;;		_checkCS
  1603 ;; This function is called by:
  1604 ;;		_getPacket
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           psect	text574
  1608                           	file	"Packet.c"
  1609                           	line	236
  1610                           	global	__size_of_validatePacket
  1611  0051                     	__size_of_validatePacket	equ	__end_of_validatePacket-_validatePacket
  1612                           	
  1613  030F                     _validatePacket:	
  1614                           	opt	stack 4
  1615                           ; Regs used in _validatePacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1616                           	line	238
  1617                           	
  1618  030F                     l7693:	
  1619                           ;Packet.c: 238: if(checkStartByte() && checkRWByte() && checkCMDByte() && checkDataFrame
                                 s()){
  1620  030F  120A  118A  240F   	fcall	_checkStartByte
              120A  118A         
  1621  0314  1283               	bcf	status, 5	;RP0=0, select bank0
  1622  0315  1303               	bcf	status, 6	;RP1=0, select bank0
  1623  0316  0821               	movf	(1+(?_checkStartByte)),w
  1624  0317  0420               	iorwf	(0+(?_checkStartByte)),w
  1625  0318  1903               	skipnz
  1626  0319  2B1B               	goto	u2871
  1627  031A  2B1C               	goto	u2870
  1628  031B                     u2871:
  1629  031B  2B5A               	goto	l7707
  1630  031C                     u2870:
  1631                           	
  1632  031C                     l7695:	
  1633  031C  120A  118A  2473   	fcall	_checkRWByte
              120A  118A         
  1634  0321  1283               	bcf	status, 5	;RP0=0, select bank0
  1635  0322  1303               	bcf	status, 6	;RP1=0, select bank0
  1636  0323  0821               	movf	(1+(?_checkRWByte)),w
  1637  0324  0420               	iorwf	(0+(?_checkRWByte)),w
  1638  0325  1903               	skipnz
  1639  0326  2B28               	goto	u2881
  1640  0327  2B29               	goto	u2880
  1641  0328                     u2881:
  1642  0328  2B5A               	goto	l7707
  1643  0329                     u2880:
  1644                           	
  1645  0329                     l7697:	
  1646  0329  120A  118A  254A   	fcall	_checkCMDByte
              120A  118A         
  1647  032E  1283               	bcf	status, 5	;RP0=0, select bank0
  1648  032F  1303               	bcf	status, 6	;RP1=0, select bank0
  1649  0330  0821               	movf	(1+(?_checkCMDByte)),w
  1650  0331  0420               	iorwf	(0+(?_checkCMDByte)),w
  1651  0332  1903               	skipnz
  1652  0333  2B35               	goto	u2891
  1653  0334  2B36               	goto	u2890
  1654  0335                     u2891:
  1655  0335  2B5A               	goto	l7707
  1656  0336                     u2890:
  1657                           	
  1658  0336                     l7699:	
  1659  0336  120A  118A  2631   	fcall	_checkDataFrames
              120A  118A         
  1660  033B  0873               	movf	(1+(?_checkDataFrames)),w
  1661  033C  0472               	iorwf	(0+(?_checkDataFrames)),w
  1662  033D  1903               	skipnz
  1663  033E  2B40               	goto	u2901
  1664  033F  2B41               	goto	u2900
  1665  0340                     u2901:
  1666  0340  2B5A               	goto	l7707
  1667  0341                     u2900:
  1668                           	line	240
  1669                           	
  1670  0341                     l7701:	
  1671                           ;Packet.c: 240: addDataToCheckSum();
  1672  0341  120A  118A  25BA   	fcall	_addDataToCheckSum
              120A  118A         
  1673                           	line	242
  1674                           ;Packet.c: 242: if(checkCS())
  1675  0346  120A  118A  2240   	fcall	_checkCS
              120A  118A         
  1676  034B  0873               	movf	(1+(?_checkCS)),w
  1677  034C  0472               	iorwf	(0+(?_checkCS)),w
  1678  034D  1903               	skipnz
  1679  034E  2B50               	goto	u2911
  1680  034F  2B51               	goto	u2910
  1681  0350                     u2911:
  1682  0350  2B5A               	goto	l7707
  1683  0351                     u2910:
  1684                           	line	244
  1685                           	
  1686  0351                     l7703:	
  1687                           ;Packet.c: 244: return 1;
  1688  0351  3001               	movlw	low(01h)
  1689  0352  1283               	bcf	status, 5	;RP0=0, select bank0
  1690  0353  1303               	bcf	status, 6	;RP1=0, select bank0
  1691  0354  00A4               	movwf	(?_validatePacket)
  1692  0355  3000               	movlw	high(01h)
  1693  0356  00A5               	movwf	((?_validatePacket))+1
  1694  0357  2B5F               	goto	l1597
  1695                           	
  1696  0358                     l7705:	
  1697  0358  2B5F               	goto	l1597
  1698                           	
  1699  0359                     l1596:	
  1700  0359  2B5A               	goto	l7707
  1701                           	line	245
  1702                           	
  1703  035A                     l1595:	
  1704                           	line	247
  1705                           	
  1706  035A                     l7707:	
  1707                           ;Packet.c: 245: }
  1708                           ;Packet.c: 247: return 0;
  1709  035A  1283               	bcf	status, 5	;RP0=0, select bank0
  1710  035B  1303               	bcf	status, 6	;RP1=0, select bank0
  1711  035C  01A4               	clrf	(?_validatePacket)
  1712  035D  01A5               	clrf	(?_validatePacket+1)
  1713  035E  2B5F               	goto	l1597
  1714                           	
  1715  035F                     l7709:	
  1716                           	line	249
  1717                           	
  1718  035F                     l1597:	
  1719  035F  0008               	return
  1720                           	opt stack 0
  1721                           GLOBAL	__end_of_validatePacket
  1722  0360                     	__end_of_validatePacket:
  1723 ;; =============== function _validatePacket ends ============
  1724                           
  1725                           	signat	_validatePacket,90
  1726                           	global	_parsePacket
  1727                           psect	text575,local,class=CODE,delta=2
  1728                           global __ptext575
  1729  06CB                     __ptext575:
  1730                           
  1731 ;; *************** function _parsePacket *****************
  1732 ;; Defined at:
  1733 ;;		line 114 in file "Packet.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  dataPacket      1    wreg     PTR unsigned char 
  1736 ;;		 -> getPacket@arrStore(50), 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  dataPacket      1   11[BANK0 ] PTR unsigned char 
  1739 ;;		 -> getPacket@arrStore(50), 
  1740 ;;  i               1   10[BANK0 ] unsigned char 
  1741 ;;  dataCounter     2    8[BANK0 ] int 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;		None               void
  1744 ;; Registers used:
  1745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         0       0       0       0       0
  1752 ;;      Locals:         0       4       0       0       0
  1753 ;;      Temps:          0       4       0       0       0
  1754 ;;      Totals:         0       8       0       0       0
  1755 ;;Total ram usage:        8 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    2
  1758 ;; This function calls:
  1759 ;;		_checkLength
  1760 ;;		_checkEven
  1761 ;;		_makeHexByte
  1762 ;;		_eeprom_write
  1763 ;;		_strlen
  1764 ;;		_eeprom_read
  1765 ;; This function is called by:
  1766 ;;		_getPacket
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           psect	text575
  1770                           	file	"Packet.c"
  1771                           	line	114
  1772                           	global	__size_of_parsePacket
  1773  0135                     	__size_of_parsePacket	equ	__end_of_parsePacket-_parsePacket
  1774                           	
  1775  06CB                     _parsePacket:	
  1776                           	opt	stack 4
  1777                           ; Regs used in _parsePacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1778                           ;parsePacket@dataPacket stored from wreg
  1779                           	line	116
  1780  06CB  1283               	bcf	status, 5	;RP0=0, select bank0
  1781  06CC  1303               	bcf	status, 6	;RP1=0, select bank0
  1782  06CD  00AB               	movwf	(parsePacket@dataPacket)
  1783                           	
  1784  06CE                     l7675:	
  1785                           ;Packet.c: 116: int dataCounter = 0;
  1786  06CE  01A8               	clrf	(parsePacket@dataCounter)
  1787  06CF  01A9               	clrf	(parsePacket@dataCounter+1)
  1788                           	line	119
  1789                           	
  1790  06D0                     l7677:	
  1791                           ;Packet.c: 119: if (checkLength() && checkEven()) {
  1792  06D0  120A  118A  21AF   	fcall	_checkLength
              120A  118A         
  1793  06D5  0873               	movf	(1+(?_checkLength)),w
  1794  06D6  0472               	iorwf	(0+(?_checkLength)),w
  1795  06D7  1903               	skipnz
  1796  06D8  2EDA               	goto	u2841
  1797  06D9  2EDB               	goto	u2840
  1798  06DA                     u2841:
  1799  06DA  2FFF               	goto	l1574
  1800  06DB                     u2840:
  1801                           	
  1802  06DB                     l7679:	
  1803  06DB  120A  118A  2132   	fcall	_checkEven
              120A  118A         
  1804  06E0  0873               	movf	(1+(?_checkEven)),w
  1805  06E1  0472               	iorwf	(0+(?_checkEven)),w
  1806  06E2  1903               	skipnz
  1807  06E3  2EE5               	goto	u2851
  1808  06E4  2EE6               	goto	u2850
  1809  06E5                     u2851:
  1810  06E5  2FFF               	goto	l1574
  1811  06E6                     u2850:
  1812                           	line	122
  1813                           	
  1814  06E6                     l7681:	
  1815                           ;Packet.c: 122: eeprom_write(startByteAddr, makeHexByte(dataPacket[0], dataPacket[1]));
  1816  06E6  1283               	bcf	status, 5	;RP0=0, select bank0
  1817  06E7  1303               	bcf	status, 6	;RP1=0, select bank0
  1818  06E8  082B               	movf	(parsePacket@dataPacket),w
  1819  06E9  3E01               	addlw	01h
  1820  06EA  0084               	movwf	fsr0
  1821  06EB  1383               	bcf	status, 7	;select IRP bank0
  1822  06EC  0800               	movf	indf,w
  1823  06ED  00A4               	movwf	(??_parsePacket+0)+0
  1824  06EE  0824               	movf	(??_parsePacket+0)+0,w
  1825  06EF  00FD               	movwf	(?_makeHexByte)
  1826  06F0  082B               	movf	(parsePacket@dataPacket),w
  1827  06F1  0084               	movwf	fsr0
  1828  06F2  0800               	movf	indf,w
  1829  06F3  120A  118A  210D   	fcall	_makeHexByte
              120A  118A         
  1830  06F8  1283               	bcf	status, 5	;RP0=0, select bank0
  1831  06F9  1303               	bcf	status, 6	;RP1=0, select bank0
  1832  06FA  00A5               	movwf	(??_parsePacket+1)+0
  1833  06FB  0825               	movf	(??_parsePacket+1)+0,w
  1834  06FC  00FA               	movwf	(?_eeprom_write)
  1835  06FD  3052               	movlw	(_startByteAddr-__stringbase)
  1836  06FE  0084               	movwf	fsr0
  1837  06FF  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1838  0704  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  1839                           	line	124
  1840                           ;Packet.c: 124: eeprom_write(rwByteAddr, makeHexByte(dataPacket[2], dataPacket[3]));
  1841  0709  1283               	bcf	status, 5	;RP0=0, select bank0
  1842  070A  1303               	bcf	status, 6	;RP1=0, select bank0
  1843  070B  082B               	movf	(parsePacket@dataPacket),w
  1844  070C  3E03               	addlw	03h
  1845  070D  0084               	movwf	fsr0
  1846  070E  1383               	bcf	status, 7	;select IRP bank0
  1847  070F  0800               	movf	indf,w
  1848  0710  00A4               	movwf	(??_parsePacket+0)+0
  1849  0711  0824               	movf	(??_parsePacket+0)+0,w
  1850  0712  00FD               	movwf	(?_makeHexByte)
  1851  0713  082B               	movf	(parsePacket@dataPacket),w
  1852  0714  3E02               	addlw	02h
  1853  0715  0084               	movwf	fsr0
  1854  0716  0800               	movf	indf,w
  1855  0717  120A  118A  210D   	fcall	_makeHexByte
              120A  118A         
  1856  071C  1283               	bcf	status, 5	;RP0=0, select bank0
  1857  071D  1303               	bcf	status, 6	;RP1=0, select bank0
  1858  071E  00A5               	movwf	(??_parsePacket+1)+0
  1859  071F  0825               	movf	(??_parsePacket+1)+0,w
  1860  0720  00FA               	movwf	(?_eeprom_write)
  1861  0721  3051               	movlw	(_rwByteAddr-__stringbase)
  1862  0722  0084               	movwf	fsr0
  1863  0723  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1864  0728  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  1865                           	line	126
  1866                           ;Packet.c: 126: eeprom_write(cmdByteAddr, makeHexByte(dataPacket[4], dataPacket[5]));
  1867  072D  1283               	bcf	status, 5	;RP0=0, select bank0
  1868  072E  1303               	bcf	status, 6	;RP1=0, select bank0
  1869  072F  082B               	movf	(parsePacket@dataPacket),w
  1870  0730  3E05               	addlw	05h
  1871  0731  0084               	movwf	fsr0
  1872  0732  1383               	bcf	status, 7	;select IRP bank0
  1873  0733  0800               	movf	indf,w
  1874  0734  00A4               	movwf	(??_parsePacket+0)+0
  1875  0735  0824               	movf	(??_parsePacket+0)+0,w
  1876  0736  00FD               	movwf	(?_makeHexByte)
  1877  0737  082B               	movf	(parsePacket@dataPacket),w
  1878  0738  3E04               	addlw	04h
  1879  0739  0084               	movwf	fsr0
  1880  073A  0800               	movf	indf,w
  1881  073B  120A  118A  210D   	fcall	_makeHexByte
              120A  118A         
  1882  0740  1283               	bcf	status, 5	;RP0=0, select bank0
  1883  0741  1303               	bcf	status, 6	;RP1=0, select bank0
  1884  0742  00A5               	movwf	(??_parsePacket+1)+0
  1885  0743  0825               	movf	(??_parsePacket+1)+0,w
  1886  0744  00FA               	movwf	(?_eeprom_write)
  1887  0745  3042               	movlw	(_cmdByteAddr-__stringbase)
  1888  0746  0084               	movwf	fsr0
  1889  0747  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1890  074C  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  1891                           	line	128
  1892                           ;Packet.c: 128: eeprom_write(lenByteAddr, makeHexByte(dataPacket[6], dataPacket[7]));
  1893  0751  1283               	bcf	status, 5	;RP0=0, select bank0
  1894  0752  1303               	bcf	status, 6	;RP1=0, select bank0
  1895  0753  082B               	movf	(parsePacket@dataPacket),w
  1896  0754  3E07               	addlw	07h
  1897  0755  0084               	movwf	fsr0
  1898  0756  1383               	bcf	status, 7	;select IRP bank0
  1899  0757  0800               	movf	indf,w
  1900  0758  00A4               	movwf	(??_parsePacket+0)+0
  1901  0759  0824               	movf	(??_parsePacket+0)+0,w
  1902  075A  00FD               	movwf	(?_makeHexByte)
  1903  075B  082B               	movf	(parsePacket@dataPacket),w
  1904  075C  3E06               	addlw	06h
  1905  075D  0084               	movwf	fsr0
  1906  075E  0800               	movf	indf,w
  1907  075F  120A  118A  210D   	fcall	_makeHexByte
              120A  118A         
  1908  0764  1283               	bcf	status, 5	;RP0=0, select bank0
  1909  0765  1303               	bcf	status, 6	;RP1=0, select bank0
  1910  0766  00A5               	movwf	(??_parsePacket+1)+0
  1911  0767  0825               	movf	(??_parsePacket+1)+0,w
  1912  0768  00FA               	movwf	(?_eeprom_write)
  1913  0769  304C               	movlw	(_lenByteAddr-__stringbase)
  1914  076A  0084               	movwf	fsr0
  1915  076B  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1916  0770  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  1917                           	line	130
  1918                           ;Packet.c: 130: eeprom_write(csByteAddr, makeHexByte(dataPacket[strlen(dataPacket) - 2],
                                  dataPacket[strlen(dataPacket) - 1]));
  1919  0775  1283               	bcf	status, 5	;RP0=0, select bank0
  1920  0776  1303               	bcf	status, 6	;RP1=0, select bank0
  1921  0777  082B               	movf	(parsePacket@dataPacket),w
  1922  0778  120A  118A  21DE   	fcall	_strlen
              120A  118A         
  1923  077D  0870               	movf	(0+(?_strlen)),w
  1924  077E  3EFF               	addlw	0FFh
  1925  077F  1283               	bcf	status, 5	;RP0=0, select bank0
  1926  0780  1303               	bcf	status, 6	;RP1=0, select bank0
  1927  0781  072B               	addwf	(parsePacket@dataPacket),w
  1928  0782  00A4               	movwf	(??_parsePacket+0)+0
  1929  0783  0824               	movf	0+(??_parsePacket+0)+0,w
  1930  0784  0084               	movwf	fsr0
  1931  0785  1383               	bcf	status, 7	;select IRP bank0
  1932  0786  0800               	movf	indf,w
  1933  0787  00A5               	movwf	(??_parsePacket+1)+0
  1934  0788  0825               	movf	(??_parsePacket+1)+0,w
  1935  0789  00FD               	movwf	(?_makeHexByte)
  1936  078A  082B               	movf	(parsePacket@dataPacket),w
  1937  078B  120A  118A  21DE   	fcall	_strlen
              120A  118A         
  1938  0790  0870               	movf	(0+(?_strlen)),w
  1939  0791  3EFE               	addlw	0FEh
  1940  0792  1283               	bcf	status, 5	;RP0=0, select bank0
  1941  0793  1303               	bcf	status, 6	;RP1=0, select bank0
  1942  0794  072B               	addwf	(parsePacket@dataPacket),w
  1943  0795  00A6               	movwf	(??_parsePacket+2)+0
  1944  0796  0826               	movf	0+(??_parsePacket+2)+0,w
  1945  0797  0084               	movwf	fsr0
  1946  0798  1383               	bcf	status, 7	;select IRP bank0
  1947  0799  0800               	movf	indf,w
  1948  079A  120A  118A  210D   	fcall	_makeHexByte
              120A  118A         
  1949  079F  1283               	bcf	status, 5	;RP0=0, select bank0
  1950  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
  1951  07A1  00A7               	movwf	(??_parsePacket+3)+0
  1952  07A2  0827               	movf	(??_parsePacket+3)+0,w
  1953  07A3  00FA               	movwf	(?_eeprom_write)
  1954  07A4  3043               	movlw	(_csByteAddr-__stringbase)
  1955  07A5  0084               	movwf	fsr0
  1956  07A6  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1957  07AB  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  1958                           	line	133
  1959                           	
  1960  07B0                     l7683:	
  1961                           ;Packet.c: 133: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  1962  07B0  1283               	bcf	status, 5	;RP0=0, select bank0
  1963  07B1  1303               	bcf	status, 6	;RP1=0, select bank0
  1964  07B2  01AA               	clrf	(parsePacket@i)
  1965  07B3  2FEA               	goto	l7691
  1966                           	
  1967  07B4                     l1572:	
  1968                           	line	134
  1969                           	
  1970  07B4                     l7685:	
  1971                           ;Packet.c: 134: eeprom_write(dataBytesAddr+i, makeHexByte(dataPacket[8 + dataCounter], d
                                 ataPacket[9 + dataCounter]));
  1972  07B4  0828               	movf	(parsePacket@dataCounter),w
  1973  07B5  3E09               	addlw	09h
  1974  07B6  072B               	addwf	(parsePacket@dataPacket),w
  1975  07B7  00A4               	movwf	(??_parsePacket+0)+0
  1976  07B8  0824               	movf	0+(??_parsePacket+0)+0,w
  1977  07B9  0084               	movwf	fsr0
  1978  07BA  1383               	bcf	status, 7	;select IRP bank0
  1979  07BB  0800               	movf	indf,w
  1980  07BC  00A5               	movwf	(??_parsePacket+1)+0
  1981  07BD  0825               	movf	(??_parsePacket+1)+0,w
  1982  07BE  00FD               	movwf	(?_makeHexByte)
  1983  07BF  0828               	movf	(parsePacket@dataCounter),w
  1984  07C0  3E08               	addlw	08h
  1985  07C1  072B               	addwf	(parsePacket@dataPacket),w
  1986  07C2  00A6               	movwf	(??_parsePacket+2)+0
  1987  07C3  0826               	movf	0+(??_parsePacket+2)+0,w
  1988  07C4  0084               	movwf	fsr0
  1989  07C5  0800               	movf	indf,w
  1990  07C6  120A  118A  210D   	fcall	_makeHexByte
              120A  118A         
  1991  07CB  1283               	bcf	status, 5	;RP0=0, select bank0
  1992  07CC  1303               	bcf	status, 6	;RP1=0, select bank0
  1993  07CD  00A7               	movwf	(??_parsePacket+3)+0
  1994  07CE  0827               	movf	(??_parsePacket+3)+0,w
  1995  07CF  00FA               	movwf	(?_eeprom_write)
  1996  07D0  3044               	movlw	(_dataBytesAddr-__stringbase)
  1997  07D1  0084               	movwf	fsr0
  1998  07D2  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1999  07D7  072A               	addwf	(parsePacket@i),w
  2000  07D8  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  2001                           	line	135
  2002                           	
  2003  07DD                     l7687:	
  2004                           ;Packet.c: 135: dataCounter += 2;
  2005  07DD  3002               	movlw	low(02h)
  2006  07DE  1283               	bcf	status, 5	;RP0=0, select bank0
  2007  07DF  1303               	bcf	status, 6	;RP1=0, select bank0
  2008  07E0  07A8               	addwf	(parsePacket@dataCounter),f
  2009  07E1  1803               	skipnc
  2010  07E2  0AA9               	incf	(parsePacket@dataCounter+1),f
  2011  07E3  3000               	movlw	high(02h)
  2012  07E4  07A9               	addwf	(parsePacket@dataCounter+1),f
  2013                           	line	133
  2014                           	
  2015  07E5                     l7689:	
  2016  07E5  3001               	movlw	(01h)
  2017  07E6  00A4               	movwf	(??_parsePacket+0)+0
  2018  07E7  0824               	movf	(??_parsePacket+0)+0,w
  2019  07E8  07AA               	addwf	(parsePacket@i),f
  2020  07E9  2FEA               	goto	l7691
  2021                           	
  2022  07EA                     l1571:	
  2023                           	
  2024  07EA                     l7691:	
  2025  07EA  304C               	movlw	(_lenByteAddr-__stringbase)
  2026  07EB  0084               	movwf	fsr0
  2027  07EC  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2028  07F1  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2029  07F6  1283               	bcf	status, 5	;RP0=0, select bank0
  2030  07F7  1303               	bcf	status, 6	;RP1=0, select bank0
  2031  07F8  022A               	subwf	(parsePacket@i),w
  2032  07F9  1C03               	skipc
  2033  07FA  2FFC               	goto	u2861
  2034  07FB  2FFD               	goto	u2860
  2035  07FC                     u2861:
  2036  07FC  2FB4               	goto	l7685
  2037  07FD                     u2860:
  2038  07FD  2FFF               	goto	l1574
  2039                           	
  2040  07FE                     l1573:	
  2041  07FE  2FFF               	goto	l1574
  2042                           	line	137
  2043                           	
  2044  07FF                     l1570:	
  2045                           	line	138
  2046                           	
  2047  07FF                     l1574:	
  2048  07FF  0008               	return
  2049                           	opt stack 0
  2050                           GLOBAL	__end_of_parsePacket
  2051  0800                     	__end_of_parsePacket:
  2052 ;; =============== function _parsePacket ends ============
  2053                           
  2054                           	signat	_parsePacket,4216
  2055                           	global	_initTemp
  2056                           psect	text576,local,class=CODE,delta=2
  2057                           global __ptext576
  2058  02BF                     __ptext576:
  2059                           
  2060 ;; *************** function _initTemp *****************
  2061 ;; Defined at:
  2062 ;;		line 23 in file "Temperature.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;		None               void
  2069 ;; Registers used:
  2070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2076 ;;      Params:         0       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0
  2078 ;;      Temps:          1       0       0       0       0
  2079 ;;      Totals:         1       0       0       0       0
  2080 ;;Total ram usage:        1 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    1
  2083 ;; This function calls:
  2084 ;;		_eeprom_write
  2085 ;; This function is called by:
  2086 ;;		_main
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           psect	text576
  2090                           	file	"Temperature.c"
  2091                           	line	23
  2092                           	global	__size_of_initTemp
  2093  0050                     	__size_of_initTemp	equ	__end_of_initTemp-_initTemp
  2094                           	
  2095  02BF                     _initTemp:	
  2096                           	opt	stack 6
  2097                           ; Regs used in _initTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2098                           	line	25
  2099                           	
  2100  02BF                     l7673:	
  2101                           ;Temperature.c: 25: eeprom_write(tempValAddr,0x00);
  2102  02BF  01FA               	clrf	(?_eeprom_write)
  2103  02C0  305A               	movlw	(_tempValAddr-__stringbase)
  2104  02C1  0084               	movwf	fsr0
  2105  02C2  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2106  02C7  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  2107                           	line	26
  2108                           ;Temperature.c: 26: eeprom_write(tempHiAddr, tempStartHi);
  2109  02CC  3057               	movlw	(_tempStartHi-__stringbase)
  2110  02CD  0084               	movwf	fsr0
  2111  02CE  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2112  02D3  00FD               	movwf	(??_initTemp+0)+0
  2113  02D4  087D               	movf	(??_initTemp+0)+0,w
  2114  02D5  00FA               	movwf	(?_eeprom_write)
  2115  02D6  3055               	movlw	(_tempHiAddr-__stringbase)
  2116  02D7  0084               	movwf	fsr0
  2117  02D8  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2118  02DD  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  2119                           	line	27
  2120                           ;Temperature.c: 27: eeprom_write(tempLoAddr, tempStartLo);
  2121  02E2  3058               	movlw	(_tempStartLo-__stringbase)
  2122  02E3  0084               	movwf	fsr0
  2123  02E4  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2124  02E9  00FD               	movwf	(??_initTemp+0)+0
  2125  02EA  087D               	movf	(??_initTemp+0)+0,w
  2126  02EB  00FA               	movwf	(?_eeprom_write)
  2127  02EC  3056               	movlw	(_tempLoAddr-__stringbase)
  2128  02ED  0084               	movwf	fsr0
  2129  02EE  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2130  02F3  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  2131                           	line	28
  2132                           ;Temperature.c: 28: eeprom_write(tempUnitAddr, tempC);
  2133  02F8  3053               	movlw	(_tempC-__stringbase)
  2134  02F9  0084               	movwf	fsr0
  2135  02FA  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2136  02FF  00FD               	movwf	(??_initTemp+0)+0
  2137  0300  087D               	movf	(??_initTemp+0)+0,w
  2138  0301  00FA               	movwf	(?_eeprom_write)
  2139  0302  3059               	movlw	(_tempUnitAddr-__stringbase)
  2140  0303  0084               	movwf	fsr0
  2141  0304  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2142  0309  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  2143                           	line	29
  2144                           	
  2145  030E                     l2372:	
  2146  030E  0008               	return
  2147                           	opt stack 0
  2148                           GLOBAL	__end_of_initTemp
  2149  030F                     	__end_of_initTemp:
  2150 ;; =============== function _initTemp ends ============
  2151                           
  2152                           	signat	_initTemp,88
  2153                           	global	_readTemp
  2154                           psect	text577,local,class=CODE,delta=2
  2155                           global __ptext577
  2156  0159                     __ptext577:
  2157                           
  2158 ;; *************** function _readTemp *****************
  2159 ;; Defined at:
  2160 ;;		line 6 in file "Temperature.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  2    0[COMMON] unsigned int 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0, btemp+1
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2174 ;;      Params:         2       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0
  2176 ;;      Temps:          2       0       0       0       0
  2177 ;;      Totals:         4       0       0       0       0
  2178 ;;Total ram usage:        4 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_getTemp
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           psect	text577
  2187                           	file	"Temperature.c"
  2188                           	line	6
  2189                           	global	__size_of_readTemp
  2190  0027                     	__size_of_readTemp	equ	__end_of_readTemp-_readTemp
  2191                           	
  2192  0159                     _readTemp:	
  2193                           	opt	stack 6
  2194                           ; Regs used in _readTemp: [wreg+status,2+status,0+btemp+1]
  2195                           	line	8
  2196                           	
  2197  0159                     l7663:	
  2198                           ;Temperature.c: 8: ADON = 1;
  2199  0159  1283               	bcf	status, 5	;RP0=0, select bank0
  2200  015A  1303               	bcf	status, 6	;RP1=0, select bank0
  2201  015B  141F               	bsf	(248/8),(248)&7
  2202                           	line	12
  2203                           	
  2204  015C                     l7665:	
  2205                           ;Temperature.c: 12: _delay((unsigned long)((10)*(20000000/4000.0)));
  2206                           	opt asmopt_off
  2207  015C  3041               movlw	65
  2208  015D  00F3               movwf	((??_readTemp+0)+0+1),f
  2209  015E  30EE               	movlw	238
  2210  015F  00F2               movwf	((??_readTemp+0)+0),f
  2211  0160                     u2977:
  2212  0160  0BF2               	decfsz	((??_readTemp+0)+0),f
  2213  0161  2960               	goto	u2977
  2214  0162  0BF3               	decfsz	((??_readTemp+0)+0+1),f
  2215  0163  2960               	goto	u2977
  2216  0164  0064               	clrwdt
  2217                           opt asmopt_on
  2218                           
  2219                           	line	14
  2220                           	
  2221  0165                     l7667:	
  2222                           ;Temperature.c: 14: GO_nDONE = 1;
  2223  0165  1283               	bcf	status, 5	;RP0=0, select bank0
  2224  0166  1303               	bcf	status, 6	;RP1=0, select bank0
  2225  0167  151F               	bsf	(250/8),(250)&7
  2226                           	line	17
  2227                           ;Temperature.c: 17: while(GO_nDONE);
  2228  0168  2969               	goto	l2366
  2229                           	
  2230  0169                     l2367:	
  2231                           	
  2232  0169                     l2366:	
  2233  0169  191F               	btfsc	(250/8),(250)&7
  2234  016A  296C               	goto	u2831
  2235  016B  296D               	goto	u2830
  2236  016C                     u2831:
  2237  016C  2969               	goto	l2366
  2238  016D                     u2830:
  2239  016D  296E               	goto	l7669
  2240                           	
  2241  016E                     l2368:	
  2242                           	line	20
  2243                           	
  2244  016E                     l7669:	
  2245                           ;Temperature.c: 20: return ((ADRESH<<8)+ADRESL);
  2246  016E  081E               	movf	(30),w	;volatile
  2247  016F  00F2               	movwf	(??_readTemp+0)+0
  2248  0170  01F3               	clrf	(??_readTemp+0)+0+1
  2249  0171  0872               	movf	(??_readTemp+0)+0,w
  2250  0172  00F3               	movwf	(??_readTemp+0)+1
  2251  0173  01F2               	clrf	(??_readTemp+0)+0
  2252  0174  1683               	bsf	status, 5	;RP0=1, select bank1
  2253  0175  1303               	bcf	status, 6	;RP1=0, select bank1
  2254  0176  081E               	movf	(158)^080h,w	;volatile
  2255  0177  0772               	addwf	0+(??_readTemp+0)+0,w
  2256  0178  00F0               	movwf	(?_readTemp)
  2257  0179  3000               	movlw	0
  2258  017A  1803               	skipnc
  2259  017B  3001               	movlw	1
  2260  017C  0773               	addwf	1+(??_readTemp+0)+0,w
  2261  017D  00F1               	movwf	1+(?_readTemp)
  2262  017E  297F               	goto	l2369
  2263                           	
  2264  017F                     l7671:	
  2265                           	line	21
  2266                           	
  2267  017F                     l2369:	
  2268  017F  0008               	return
  2269                           	opt stack 0
  2270                           GLOBAL	__end_of_readTemp
  2271  0180                     	__end_of_readTemp:
  2272 ;; =============== function _readTemp ends ============
  2273                           
  2274                           	signat	_readTemp,90
  2275                           	global	_addDataToCheckSum
  2276                           psect	text578,local,class=CODE,delta=2
  2277                           global __ptext578
  2278  05BA                     __ptext578:
  2279                           
  2280 ;; *************** function _addDataToCheckSum *****************
  2281 ;; Defined at:
  2282 ;;		line 258 in file "Packet.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  i               1   13[COMMON] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;		None               void
  2289 ;; Registers used:
  2290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2296 ;;      Params:         0       0       0       0       0
  2297 ;;      Locals:         1       0       0       0       0
  2298 ;;      Temps:          0       2       0       0       0
  2299 ;;      Totals:         1       2       0       0       0
  2300 ;;Total ram usage:        3 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    1
  2303 ;; This function calls:
  2304 ;;		_eeprom_read
  2305 ;;		_eeprom_write
  2306 ;; This function is called by:
  2307 ;;		_validatePacket
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           psect	text578
  2311                           	file	"Packet.c"
  2312                           	line	258
  2313                           	global	__size_of_addDataToCheckSum
  2314  0077                     	__size_of_addDataToCheckSum	equ	__end_of_addDataToCheckSum-_addDataToCheckSum
  2315                           	
  2316  05BA                     _addDataToCheckSum:	
  2317                           	opt	stack 4
  2318                           ; Regs used in _addDataToCheckSum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2319                           	line	260
  2320                           	
  2321  05BA                     l7653:	
  2322                           ;Packet.c: 260: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(lenB
                                 yteAddr));
  2323  05BA  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2324  05BB  0084               	movwf	fsr0
  2325  05BC  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2326  05C1  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2327  05C6  1283               	bcf	status, 5	;RP0=0, select bank0
  2328  05C7  1303               	bcf	status, 6	;RP1=0, select bank0
  2329  05C8  00A0               	movwf	(??_addDataToCheckSum+0)+0
  2330  05C9  304C               	movlw	(_lenByteAddr-__stringbase)
  2331  05CA  0084               	movwf	fsr0
  2332  05CB  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2333  05D0  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2334  05D5  1283               	bcf	status, 5	;RP0=0, select bank0
  2335  05D6  1303               	bcf	status, 6	;RP1=0, select bank0
  2336  05D7  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  2337  05D8  00A1               	movwf	(??_addDataToCheckSum+1)+0
  2338  05D9  0821               	movf	(??_addDataToCheckSum+1)+0,w
  2339  05DA  00FA               	movwf	(?_eeprom_write)
  2340  05DB  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2341  05DC  0084               	movwf	fsr0
  2342  05DD  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2343  05E2  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  2344                           	line	263
  2345                           	
  2346  05E7                     l7655:	
  2347                           ;Packet.c: 263: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  2348  05E7  01FD               	clrf	(addDataToCheckSum@i)
  2349  05E8  2E1E               	goto	l7661
  2350                           	
  2351  05E9                     l1601:	
  2352                           	line	265
  2353                           	
  2354  05E9                     l7657:	
  2355                           ;Packet.c: 265: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(data
                                 BytesAddr+i));
  2356  05E9  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2357  05EA  0084               	movwf	fsr0
  2358  05EB  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2359  05F0  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2360  05F5  1283               	bcf	status, 5	;RP0=0, select bank0
  2361  05F6  1303               	bcf	status, 6	;RP1=0, select bank0
  2362  05F7  00A0               	movwf	(??_addDataToCheckSum+0)+0
  2363  05F8  3044               	movlw	(_dataBytesAddr-__stringbase)
  2364  05F9  0084               	movwf	fsr0
  2365  05FA  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2366  05FF  077D               	addwf	(addDataToCheckSum@i),w
  2367  0600  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2368  0605  1283               	bcf	status, 5	;RP0=0, select bank0
  2369  0606  1303               	bcf	status, 6	;RP1=0, select bank0
  2370  0607  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  2371  0608  00A1               	movwf	(??_addDataToCheckSum+1)+0
  2372  0609  0821               	movf	(??_addDataToCheckSum+1)+0,w
  2373  060A  00FA               	movwf	(?_eeprom_write)
  2374  060B  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2375  060C  0084               	movwf	fsr0
  2376  060D  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2377  0612  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  2378                           	line	263
  2379                           	
  2380  0617                     l7659:	
  2381  0617  3001               	movlw	(01h)
  2382  0618  1283               	bcf	status, 5	;RP0=0, select bank0
  2383  0619  1303               	bcf	status, 6	;RP1=0, select bank0
  2384  061A  00A0               	movwf	(??_addDataToCheckSum+0)+0
  2385  061B  0820               	movf	(??_addDataToCheckSum+0)+0,w
  2386  061C  07FD               	addwf	(addDataToCheckSum@i),f
  2387  061D  2E1E               	goto	l7661
  2388                           	
  2389  061E                     l1600:	
  2390                           	
  2391  061E                     l7661:	
  2392  061E  304C               	movlw	(_lenByteAddr-__stringbase)
  2393  061F  0084               	movwf	fsr0
  2394  0620  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2395  0625  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2396  062A  027D               	subwf	(addDataToCheckSum@i),w
  2397  062B  1C03               	skipc
  2398  062C  2E2E               	goto	u2821
  2399  062D  2E2F               	goto	u2820
  2400  062E                     u2821:
  2401  062E  2DE9               	goto	l7657
  2402  062F                     u2820:
  2403  062F  2E30               	goto	l1603
  2404                           	
  2405  0630                     l1602:	
  2406                           	line	267
  2407                           	
  2408  0630                     l1603:	
  2409  0630  0008               	return
  2410                           	opt stack 0
  2411                           GLOBAL	__end_of_addDataToCheckSum
  2412  0631                     	__end_of_addDataToCheckSum:
  2413 ;; =============== function _addDataToCheckSum ends ============
  2414                           
  2415                           	signat	_addDataToCheckSum,88
  2416                           	global	_checkCS
  2417                           psect	text579,local,class=CODE,delta=2
  2418                           global __ptext579
  2419  0240                     __ptext579:
  2420                           
  2421 ;; *************** function _checkCS *****************
  2422 ;; Defined at:
  2423 ;;		line 216 in file "Packet.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  2    2[COMMON] int 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2437 ;;      Params:         2       0       0       0       0
  2438 ;;      Locals:         0       0       0       0       0
  2439 ;;      Temps:          1       0       0       0       0
  2440 ;;      Totals:         3       0       0       0       0
  2441 ;;Total ram usage:        3 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    1
  2444 ;; This function calls:
  2445 ;;		_eeprom_read
  2446 ;;		_writeByte
  2447 ;; This function is called by:
  2448 ;;		_validatePacket
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           psect	text579
  2452                           	file	"Packet.c"
  2453                           	line	216
  2454                           	global	__size_of_checkCS
  2455  0034                     	__size_of_checkCS	equ	__end_of_checkCS-_checkCS
  2456                           	
  2457  0240                     _checkCS:	
  2458                           	opt	stack 4
  2459                           ; Regs used in _checkCS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2460                           	line	218
  2461                           	
  2462  0240                     l7639:	
  2463                           ;Packet.c: 218: if(eeprom_read(csByteAddr) == eeprom_read(calcCSByteAddr)){
  2464  0240  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2465  0241  0084               	movwf	fsr0
  2466  0242  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2467  0247  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2468  024C  00F4               	movwf	(??_checkCS+0)+0
  2469  024D  3043               	movlw	(_csByteAddr-__stringbase)
  2470  024E  0084               	movwf	fsr0
  2471  024F  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2472  0254  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2473  0259  0674               	xorwf	0+(??_checkCS+0)+0,w
  2474  025A  1D03               	skipz
  2475  025B  2A5D               	goto	u2811
  2476  025C  2A5E               	goto	u2810
  2477  025D                     u2811:
  2478  025D  2A6A               	goto	l7647
  2479  025E                     u2810:
  2480                           	line	220
  2481                           	
  2482  025E                     l7641:	
  2483                           ;Packet.c: 220: writeByte('Y');
  2484  025E  3059               	movlw	(059h)
  2485  025F  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  2486                           	line	221
  2487                           	
  2488  0264                     l7643:	
  2489                           ;Packet.c: 221: return 1;
  2490  0264  3001               	movlw	low(01h)
  2491  0265  00F2               	movwf	(?_checkCS)
  2492  0266  3000               	movlw	high(01h)
  2493  0267  00F3               	movwf	((?_checkCS))+1
  2494  0268  2A73               	goto	l1592
  2495                           	
  2496  0269                     l7645:	
  2497  0269  2A73               	goto	l1592
  2498                           	line	222
  2499                           	
  2500  026A                     l1591:	
  2501                           	line	224
  2502                           	
  2503  026A                     l7647:	
  2504                           ;Packet.c: 222: }
  2505                           ;Packet.c: 224: writeByte('N');
  2506  026A  304E               	movlw	(04Eh)
  2507  026B  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  2508                           	line	225
  2509                           	
  2510  0270                     l7649:	
  2511                           ;Packet.c: 225: return 0;
  2512  0270  01F2               	clrf	(?_checkCS)
  2513  0271  01F3               	clrf	(?_checkCS+1)
  2514  0272  2A73               	goto	l1592
  2515                           	
  2516  0273                     l7651:	
  2517                           	line	226
  2518                           	
  2519  0273                     l1592:	
  2520  0273  0008               	return
  2521                           	opt stack 0
  2522                           GLOBAL	__end_of_checkCS
  2523  0274                     	__end_of_checkCS:
  2524 ;; =============== function _checkCS ends ============
  2525                           
  2526                           	signat	_checkCS,90
  2527                           	global	_checkCMDByte
  2528                           psect	text580,local,class=CODE,delta=2
  2529                           global __ptext580
  2530  054A                     __ptext580:
  2531                           
  2532 ;; *************** function _checkCMDByte *****************
  2533 ;; Defined at:
  2534 ;;		line 193 in file "Packet.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  2    0[BANK0 ] int 
  2541 ;; Registers used:
  2542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2548 ;;      Params:         0       2       0       0       0
  2549 ;;      Locals:         0       0       0       0       0
  2550 ;;      Temps:          0       2       0       0       0
  2551 ;;      Totals:         0       4       0       0       0
  2552 ;;Total ram usage:        4 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    1
  2555 ;; This function calls:
  2556 ;;		_eeprom_read
  2557 ;;		_eeprom_write
  2558 ;;		_writeByte
  2559 ;; This function is called by:
  2560 ;;		_validatePacket
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           psect	text580
  2564                           	file	"Packet.c"
  2565                           	line	193
  2566                           	global	__size_of_checkCMDByte
  2567  0070                     	__size_of_checkCMDByte	equ	__end_of_checkCMDByte-_checkCMDByte
  2568                           	
  2569  054A                     _checkCMDByte:	
  2570                           	opt	stack 4
  2571                           ; Regs used in _checkCMDByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2572                           	line	195
  2573                           	
  2574  054A                     l7623:	
  2575                           ;Packet.c: 195: if(eeprom_read(cmdByteAddr) >= 0 && eeprom_read(cmdByteAddr) <= maxCmd){
  2576  054A  3042               	movlw	(_cmdByteAddr-__stringbase)
  2577  054B  0084               	movwf	fsr0
  2578  054C  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2579  0551  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2580  0556  3042               	movlw	(_cmdByteAddr-__stringbase)
  2581  0557  0084               	movwf	fsr0
  2582  0558  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2583  055D  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2584  0562  1283               	bcf	status, 5	;RP0=0, select bank0
  2585  0563  1303               	bcf	status, 6	;RP1=0, select bank0
  2586  0564  00A2               	movwf	(??_checkCMDByte+0)+0
  2587  0565  304D               	movlw	(_maxCmd-__stringbase)
  2588  0566  0084               	movwf	fsr0
  2589  0567  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2590  056C  00A3               	movwf	(??_checkCMDByte+1)+0
  2591  056D  0822               	movf	0+(??_checkCMDByte+0)+0,w
  2592  056E  0223               	subwf	(??_checkCMDByte+1)+0,w
  2593  056F  1C03               	skipc
  2594  0570  2D72               	goto	u2801
  2595  0571  2D73               	goto	u2800
  2596  0572                     u2801:
  2597  0572  2DAE               	goto	l7633
  2598  0573                     u2800:
  2599                           	line	197
  2600                           	
  2601  0573                     l7625:	
  2602                           ;Packet.c: 197: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(cmdB
                                 yteAddr));
  2603  0573  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2604  0574  0084               	movwf	fsr0
  2605  0575  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2606  057A  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2607  057F  1283               	bcf	status, 5	;RP0=0, select bank0
  2608  0580  1303               	bcf	status, 6	;RP1=0, select bank0
  2609  0581  00A2               	movwf	(??_checkCMDByte+0)+0
  2610  0582  3042               	movlw	(_cmdByteAddr-__stringbase)
  2611  0583  0084               	movwf	fsr0
  2612  0584  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2613  0589  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2614  058E  1283               	bcf	status, 5	;RP0=0, select bank0
  2615  058F  1303               	bcf	status, 6	;RP1=0, select bank0
  2616  0590  0722               	addwf	0+(??_checkCMDByte+0)+0,w
  2617  0591  00A3               	movwf	(??_checkCMDByte+1)+0
  2618  0592  0823               	movf	(??_checkCMDByte+1)+0,w
  2619  0593  00FA               	movwf	(?_eeprom_write)
  2620  0594  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2621  0595  0084               	movwf	fsr0
  2622  0596  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2623  059B  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  2624                           	line	199
  2625                           	
  2626  05A0                     l7627:	
  2627                           ;Packet.c: 199: writeByte('C');
  2628  05A0  3043               	movlw	(043h)
  2629  05A1  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  2630                           	line	200
  2631                           	
  2632  05A6                     l7629:	
  2633                           ;Packet.c: 200: return 1;
  2634  05A6  3001               	movlw	low(01h)
  2635  05A7  1283               	bcf	status, 5	;RP0=0, select bank0
  2636  05A8  1303               	bcf	status, 6	;RP1=0, select bank0
  2637  05A9  00A0               	movwf	(?_checkCMDByte)
  2638  05AA  3000               	movlw	high(01h)
  2639  05AB  00A1               	movwf	((?_checkCMDByte))+1
  2640  05AC  2DB9               	goto	l1588
  2641                           	
  2642  05AD                     l7631:	
  2643  05AD  2DB9               	goto	l1588
  2644                           	line	201
  2645                           	
  2646  05AE                     l1587:	
  2647                           	line	203
  2648                           	
  2649  05AE                     l7633:	
  2650                           ;Packet.c: 201: }
  2651                           ;Packet.c: 203: writeByte('N');
  2652  05AE  304E               	movlw	(04Eh)
  2653  05AF  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  2654                           	line	204
  2655                           	
  2656  05B4                     l7635:	
  2657                           ;Packet.c: 204: return 0;
  2658  05B4  1283               	bcf	status, 5	;RP0=0, select bank0
  2659  05B5  1303               	bcf	status, 6	;RP1=0, select bank0
  2660  05B6  01A0               	clrf	(?_checkCMDByte)
  2661  05B7  01A1               	clrf	(?_checkCMDByte+1)
  2662  05B8  2DB9               	goto	l1588
  2663                           	
  2664  05B9                     l7637:	
  2665                           	line	205
  2666                           	
  2667  05B9                     l1588:	
  2668  05B9  0008               	return
  2669                           	opt stack 0
  2670                           GLOBAL	__end_of_checkCMDByte
  2671  05BA                     	__end_of_checkCMDByte:
  2672 ;; =============== function _checkCMDByte ends ============
  2673                           
  2674                           	signat	_checkCMDByte,90
  2675                           	global	_checkRWByte
  2676                           psect	text581,local,class=CODE,delta=2
  2677                           global __ptext581
  2678  0473                     __ptext581:
  2679                           
  2680 ;; *************** function _checkRWByte *****************
  2681 ;; Defined at:
  2682 ;;		line 171 in file "Packet.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  2    0[BANK0 ] int 
  2689 ;; Registers used:
  2690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2696 ;;      Params:         0       2       0       0       0
  2697 ;;      Locals:         0       0       0       0       0
  2698 ;;      Temps:          0       2       0       0       0
  2699 ;;      Totals:         0       4       0       0       0
  2700 ;;Total ram usage:        4 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    1
  2703 ;; This function calls:
  2704 ;;		_eeprom_read
  2705 ;;		_writeByte
  2706 ;;		_eeprom_write
  2707 ;; This function is called by:
  2708 ;;		_validatePacket
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           psect	text581
  2712                           	file	"Packet.c"
  2713                           	line	171
  2714                           	global	__size_of_checkRWByte
  2715  006A                     	__size_of_checkRWByte	equ	__end_of_checkRWByte-_checkRWByte
  2716                           	
  2717  0473                     _checkRWByte:	
  2718                           	opt	stack 4
  2719                           ; Regs used in _checkRWByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2720                           	line	174
  2721                           	
  2722  0473                     l7605:	
  2723                           ;Packet.c: 174: if(eeprom_read(rwByteAddr) == 0 || eeprom_read(rwByteAddr) == 1){
  2724  0473  3051               	movlw	(_rwByteAddr-__stringbase)
  2725  0474  0084               	movwf	fsr0
  2726  0475  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2727  047A  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2728  047F  3A00               	xorlw	0
  2729  0480  1903               	skipnz
  2730  0481  2C83               	goto	u2781
  2731  0482  2C84               	goto	u2780
  2732  0483                     u2781:
  2733  0483  2C96               	goto	l7609
  2734  0484                     u2780:
  2735                           	
  2736  0484                     l7607:	
  2737  0484  3051               	movlw	(_rwByteAddr-__stringbase)
  2738  0485  0084               	movwf	fsr0
  2739  0486  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2740  048B  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2741  0490  3A01               	xorlw	01h
  2742  0491  1D03               	skipz
  2743  0492  2C94               	goto	u2791
  2744  0493  2C95               	goto	u2790
  2745  0494                     u2791:
  2746  0494  2CD1               	goto	l7617
  2747  0495                     u2790:
  2748  0495  2C96               	goto	l7609
  2749                           	
  2750  0496                     l1583:	
  2751                           	line	176
  2752                           	
  2753  0496                     l7609:	
  2754                           ;Packet.c: 176: writeByte('R');
  2755  0496  3052               	movlw	(052h)
  2756  0497  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  2757                           	line	178
  2758                           	
  2759  049C                     l7611:	
  2760                           ;Packet.c: 178: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(rwBy
                                 teAddr));
  2761  049C  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2762  049D  0084               	movwf	fsr0
  2763  049E  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2764  04A3  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2765  04A8  1283               	bcf	status, 5	;RP0=0, select bank0
  2766  04A9  1303               	bcf	status, 6	;RP1=0, select bank0
  2767  04AA  00A2               	movwf	(??_checkRWByte+0)+0
  2768  04AB  3051               	movlw	(_rwByteAddr-__stringbase)
  2769  04AC  0084               	movwf	fsr0
  2770  04AD  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2771  04B2  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2772  04B7  1283               	bcf	status, 5	;RP0=0, select bank0
  2773  04B8  1303               	bcf	status, 6	;RP1=0, select bank0
  2774  04B9  0722               	addwf	0+(??_checkRWByte+0)+0,w
  2775  04BA  00A3               	movwf	(??_checkRWByte+1)+0
  2776  04BB  0823               	movf	(??_checkRWByte+1)+0,w
  2777  04BC  00FA               	movwf	(?_eeprom_write)
  2778  04BD  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2779  04BE  0084               	movwf	fsr0
  2780  04BF  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2781  04C4  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  2782                           	line	179
  2783                           	
  2784  04C9                     l7613:	
  2785                           ;Packet.c: 179: return 1;
  2786  04C9  3001               	movlw	low(01h)
  2787  04CA  1283               	bcf	status, 5	;RP0=0, select bank0
  2788  04CB  1303               	bcf	status, 6	;RP1=0, select bank0
  2789  04CC  00A0               	movwf	(?_checkRWByte)
  2790  04CD  3000               	movlw	high(01h)
  2791  04CE  00A1               	movwf	((?_checkRWByte))+1
  2792  04CF  2CDC               	goto	l1584
  2793                           	
  2794  04D0                     l7615:	
  2795  04D0  2CDC               	goto	l1584
  2796                           	line	180
  2797                           	
  2798  04D1                     l1581:	
  2799                           	line	182
  2800                           	
  2801  04D1                     l7617:	
  2802                           ;Packet.c: 180: }
  2803                           ;Packet.c: 182: writeByte('N');
  2804  04D1  304E               	movlw	(04Eh)
  2805  04D2  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  2806                           	line	183
  2807                           	
  2808  04D7                     l7619:	
  2809                           ;Packet.c: 183: return 0;
  2810  04D7  1283               	bcf	status, 5	;RP0=0, select bank0
  2811  04D8  1303               	bcf	status, 6	;RP1=0, select bank0
  2812  04D9  01A0               	clrf	(?_checkRWByte)
  2813  04DA  01A1               	clrf	(?_checkRWByte+1)
  2814  04DB  2CDC               	goto	l1584
  2815                           	
  2816  04DC                     l7621:	
  2817                           	line	184
  2818                           	
  2819  04DC                     l1584:	
  2820  04DC  0008               	return
  2821                           	opt stack 0
  2822                           GLOBAL	__end_of_checkRWByte
  2823  04DD                     	__end_of_checkRWByte:
  2824 ;; =============== function _checkRWByte ends ============
  2825                           
  2826                           	signat	_checkRWByte,90
  2827                           	global	_checkStartByte
  2828                           psect	text582,local,class=CODE,delta=2
  2829                           global __ptext582
  2830  040F                     __ptext582:
  2831                           
  2832 ;; *************** function _checkStartByte *****************
  2833 ;; Defined at:
  2834 ;;		line 148 in file "Packet.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  2    0[BANK0 ] int 
  2841 ;; Registers used:
  2842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2848 ;;      Params:         0       2       0       0       0
  2849 ;;      Locals:         0       0       0       0       0
  2850 ;;      Temps:          0       2       0       0       0
  2851 ;;      Totals:         0       4       0       0       0
  2852 ;;Total ram usage:        4 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    1
  2855 ;; This function calls:
  2856 ;;		_eeprom_read
  2857 ;;		_writeByte
  2858 ;;		_eeprom_write
  2859 ;; This function is called by:
  2860 ;;		_validatePacket
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           psect	text582
  2864                           	file	"Packet.c"
  2865                           	line	148
  2866                           	global	__size_of_checkStartByte
  2867  0064                     	__size_of_checkStartByte	equ	__end_of_checkStartByte-_checkStartByte
  2868                           	
  2869  040F                     _checkStartByte:	
  2870                           	opt	stack 4
  2871                           ; Regs used in _checkStartByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2872                           	line	151
  2873                           	
  2874  040F                     l7589:	
  2875                           ;Packet.c: 151: if (eeprom_read(startByteAddr) == userStartByte) {
  2876  040F  305C               	movlw	(_userStartByte-__stringbase)
  2877  0410  0084               	movwf	fsr0
  2878  0411  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2879  0416  1283               	bcf	status, 5	;RP0=0, select bank0
  2880  0417  1303               	bcf	status, 6	;RP1=0, select bank0
  2881  0418  00A2               	movwf	(??_checkStartByte+0)+0
  2882  0419  3052               	movlw	(_startByteAddr-__stringbase)
  2883  041A  0084               	movwf	fsr0
  2884  041B  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2885  0420  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2886  0425  1283               	bcf	status, 5	;RP0=0, select bank0
  2887  0426  1303               	bcf	status, 6	;RP1=0, select bank0
  2888  0427  0622               	xorwf	(??_checkStartByte+0)+0,w
  2889  0428  1D03               	skipz
  2890  0429  2C2B               	goto	u2771
  2891  042A  2C2C               	goto	u2770
  2892  042B                     u2771:
  2893  042B  2C67               	goto	l7599
  2894  042C                     u2770:
  2895                           	line	153
  2896                           	
  2897  042C                     l7591:	
  2898                           ;Packet.c: 153: writeByte('S');
  2899  042C  3053               	movlw	(053h)
  2900  042D  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  2901                           	line	155
  2902                           	
  2903  0432                     l7593:	
  2904                           ;Packet.c: 155: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(star
                                 tByteAddr));
  2905  0432  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2906  0433  0084               	movwf	fsr0
  2907  0434  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2908  0439  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2909  043E  1283               	bcf	status, 5	;RP0=0, select bank0
  2910  043F  1303               	bcf	status, 6	;RP1=0, select bank0
  2911  0440  00A2               	movwf	(??_checkStartByte+0)+0
  2912  0441  3052               	movlw	(_startByteAddr-__stringbase)
  2913  0442  0084               	movwf	fsr0
  2914  0443  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2915  0448  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  2916  044D  1283               	bcf	status, 5	;RP0=0, select bank0
  2917  044E  1303               	bcf	status, 6	;RP1=0, select bank0
  2918  044F  0722               	addwf	0+(??_checkStartByte+0)+0,w
  2919  0450  00A3               	movwf	(??_checkStartByte+1)+0
  2920  0451  0823               	movf	(??_checkStartByte+1)+0,w
  2921  0452  00FA               	movwf	(?_eeprom_write)
  2922  0453  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2923  0454  0084               	movwf	fsr0
  2924  0455  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2925  045A  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  2926                           	line	156
  2927                           	
  2928  045F                     l7595:	
  2929                           ;Packet.c: 156: return 1;
  2930  045F  3001               	movlw	low(01h)
  2931  0460  1283               	bcf	status, 5	;RP0=0, select bank0
  2932  0461  1303               	bcf	status, 6	;RP1=0, select bank0
  2933  0462  00A0               	movwf	(?_checkStartByte)
  2934  0463  3000               	movlw	high(01h)
  2935  0464  00A1               	movwf	((?_checkStartByte))+1
  2936  0465  2C72               	goto	l1578
  2937                           	
  2938  0466                     l7597:	
  2939  0466  2C72               	goto	l1578
  2940                           	line	157
  2941                           	
  2942  0467                     l1577:	
  2943                           	line	159
  2944                           	
  2945  0467                     l7599:	
  2946                           ;Packet.c: 157: }
  2947                           ;Packet.c: 159: writeByte('N');
  2948  0467  304E               	movlw	(04Eh)
  2949  0468  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  2950                           	line	160
  2951                           	
  2952  046D                     l7601:	
  2953                           ;Packet.c: 160: return 0;
  2954  046D  1283               	bcf	status, 5	;RP0=0, select bank0
  2955  046E  1303               	bcf	status, 6	;RP1=0, select bank0
  2956  046F  01A0               	clrf	(?_checkStartByte)
  2957  0470  01A1               	clrf	(?_checkStartByte+1)
  2958  0471  2C72               	goto	l1578
  2959                           	
  2960  0472                     l7603:	
  2961                           	line	161
  2962                           	
  2963  0472                     l1578:	
  2964  0472  0008               	return
  2965                           	opt stack 0
  2966                           GLOBAL	__end_of_checkStartByte
  2967  0473                     	__end_of_checkStartByte:
  2968 ;; =============== function _checkStartByte ends ============
  2969                           
  2970                           	signat	_checkStartByte,90
  2971                           	global	_checkDataFrames
  2972                           psect	text583,local,class=CODE,delta=2
  2973                           global __ptext583
  2974  0631                     __ptext583:
  2975                           
  2976 ;; *************** function _checkDataFrames *****************
  2977 ;; Defined at:
  2978 ;;		line 85 in file "Packet.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  2    2[COMMON] int 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2992 ;;      Params:         2       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0
  2994 ;;      Temps:          6       0       0       0       0
  2995 ;;      Totals:         8       0       0       0       0
  2996 ;;Total ram usage:        8 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    1
  2999 ;; This function calls:
  3000 ;;		_eeprom_read
  3001 ;;		_writeByte
  3002 ;; This function is called by:
  3003 ;;		_validatePacket
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           psect	text583
  3007                           	file	"Packet.c"
  3008                           	line	85
  3009                           	global	__size_of_checkDataFrames
  3010  009A                     	__size_of_checkDataFrames	equ	__end_of_checkDataFrames-_checkDataFrames
  3011                           	
  3012  0631                     _checkDataFrames:	
  3013                           	opt	stack 4
  3014                           ; Regs used in _checkDataFrames: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3015                           	line	87
  3016                           	
  3017  0631                     l7563:	
  3018                           ;Packet.c: 87: if(eeprom_read(lenByteAddr) == 0 && (eeprom_read(RXLenAddr)-noDataLen) ==
                                  0){
  3019  0631  304C               	movlw	(_lenByteAddr-__stringbase)
  3020  0632  0084               	movwf	fsr0
  3021  0633  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3022  0638  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  3023  063D  3800               	iorlw	0
  3024  063E  1D03               	skipz
  3025  063F  2E41               	goto	u2731
  3026  0640  2E42               	goto	u2730
  3027  0641                     u2731:
  3028  0641  2E75               	goto	l7575
  3029  0642                     u2730:
  3030                           	
  3031  0642                     l7565:	
  3032  0642  3050               	movlw	(_noDataLen-__stringbase)
  3033  0643  0084               	movwf	fsr0
  3034  0644  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3035  0649  00F4               	movwf	(??_checkDataFrames+0)+0
  3036  064A  01F5               	clrf	(??_checkDataFrames+0)+0+1
  3037  064B  09F4               	comf	(??_checkDataFrames+0)+0,f
  3038  064C  09F5               	comf	(??_checkDataFrames+0)+1,f
  3039  064D  0AF4               	incf	(??_checkDataFrames+0)+0,f
  3040  064E  1903               	skipnz
  3041  064F  0AF5               	incf	(??_checkDataFrames+0)+1,f
  3042  0650  3040               	movlw	(_RXLenAddr-__stringbase)
  3043  0651  0084               	movwf	fsr0
  3044  0652  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3045  0657  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  3046  065C  0774               	addwf	0+(??_checkDataFrames+0)+0,w
  3047  065D  00F6               	movwf	(??_checkDataFrames+2)+0
  3048  065E  0875               	movf	1+(??_checkDataFrames+0)+0,w
  3049  065F  1803               	skipnc
  3050  0660  0A75               	incf	1+(??_checkDataFrames+0)+0,w
  3051  0661  00F7               	movwf	((??_checkDataFrames+2)+0)+1
  3052  0662  0877               	movf	1+(??_checkDataFrames+2)+0,w
  3053  0663  0476               	iorwf	0+(??_checkDataFrames+2)+0,w
  3054  0664  1D03               	skipz
  3055  0665  2E67               	goto	u2741
  3056  0666  2E68               	goto	u2740
  3057  0667                     u2741:
  3058  0667  2E75               	goto	l7575
  3059  0668                     u2740:
  3060                           	line	89
  3061                           	
  3062  0668                     l7567:	
  3063                           ;Packet.c: 89: writeByte('D');
  3064  0668  3044               	movlw	(044h)
  3065  0669  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  3066                           	line	90
  3067                           	
  3068  066E                     l7569:	
  3069                           ;Packet.c: 90: return 1;
  3070  066E  3001               	movlw	low(01h)
  3071  066F  00F2               	movwf	(?_checkDataFrames)
  3072  0670  3000               	movlw	high(01h)
  3073  0671  00F3               	movwf	((?_checkDataFrames))+1
  3074  0672  2ECA               	goto	l1565
  3075                           	
  3076  0673                     l7571:	
  3077  0673  2ECA               	goto	l1565
  3078                           	line	94
  3079                           	
  3080  0674                     l7573:	
  3081                           ;Packet.c: 94: }else if((eeprom_read(RXLenAddr) - noDataLen) == (eeprom_read(lenByteAddr
                                 )*2)){
  3082  0674  2EC1               	goto	l7583
  3083                           	
  3084  0675                     l1564:	
  3085                           	
  3086  0675                     l7575:	
  3087  0675  304C               	movlw	(_lenByteAddr-__stringbase)
  3088  0676  0084               	movwf	fsr0
  3089  0677  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3090  067C  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  3091  0681  00F4               	movwf	(??_checkDataFrames+0)+0
  3092  0682  01F5               	clrf	(??_checkDataFrames+0)+0+1
  3093  0683  3001               	movlw	01h
  3094  0684  00FF               	movwf	btemp+1
  3095  0685                     u2755:
  3096  0685  1003               	clrc
  3097  0686  0DF4               	rlf	(??_checkDataFrames+0)+0,f
  3098  0687  0DF5               	rlf	(??_checkDataFrames+0)+1,f
  3099  0688  0BFF               	decfsz	btemp+1,f
  3100  0689  2E85               	goto	u2755
  3101  068A  3050               	movlw	(_noDataLen-__stringbase)
  3102  068B  0084               	movwf	fsr0
  3103  068C  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3104  0691  00F6               	movwf	(??_checkDataFrames+2)+0
  3105  0692  01F7               	clrf	(??_checkDataFrames+2)+0+1
  3106  0693  09F6               	comf	(??_checkDataFrames+2)+0,f
  3107  0694  09F7               	comf	(??_checkDataFrames+2)+1,f
  3108  0695  0AF6               	incf	(??_checkDataFrames+2)+0,f
  3109  0696  1903               	skipnz
  3110  0697  0AF7               	incf	(??_checkDataFrames+2)+1,f
  3111  0698  3040               	movlw	(_RXLenAddr-__stringbase)
  3112  0699  0084               	movwf	fsr0
  3113  069A  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3114  069F  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  3115  06A4  0776               	addwf	0+(??_checkDataFrames+2)+0,w
  3116  06A5  00F8               	movwf	(??_checkDataFrames+4)+0
  3117  06A6  0877               	movf	1+(??_checkDataFrames+2)+0,w
  3118  06A7  1803               	skipnc
  3119  06A8  0A77               	incf	1+(??_checkDataFrames+2)+0,w
  3120  06A9  00F9               	movwf	((??_checkDataFrames+4)+0)+1
  3121  06AA  0875               	movf	1+(??_checkDataFrames+0)+0,w
  3122  06AB  0679               	xorwf	1+(??_checkDataFrames+4)+0,w
  3123  06AC  1D03               	skipz
  3124  06AD  2EB0               	goto	u2765
  3125  06AE  0874               	movf	0+(??_checkDataFrames+0)+0,w
  3126  06AF  0678               	xorwf	0+(??_checkDataFrames+4)+0,w
  3127  06B0                     u2765:
  3128                           
  3129  06B0  1D03               	skipz
  3130  06B1  2EB3               	goto	u2761
  3131  06B2  2EB4               	goto	u2760
  3132  06B3                     u2761:
  3133  06B3  2EC1               	goto	l7583
  3134  06B4                     u2760:
  3135                           	line	96
  3136                           	
  3137  06B4                     l7577:	
  3138                           ;Packet.c: 96: writeByte('D');
  3139  06B4  3044               	movlw	(044h)
  3140  06B5  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  3141                           	line	97
  3142                           	
  3143  06BA                     l7579:	
  3144                           ;Packet.c: 97: return 1;
  3145  06BA  3001               	movlw	low(01h)
  3146  06BB  00F2               	movwf	(?_checkDataFrames)
  3147  06BC  3000               	movlw	high(01h)
  3148  06BD  00F3               	movwf	((?_checkDataFrames))+1
  3149  06BE  2ECA               	goto	l1565
  3150                           	
  3151  06BF                     l7581:	
  3152  06BF  2ECA               	goto	l1565
  3153                           	line	98
  3154                           	
  3155  06C0                     l1567:	
  3156  06C0  2EC1               	goto	l7583
  3157                           	line	101
  3158                           	
  3159  06C1                     l1566:	
  3160                           	
  3161  06C1                     l7583:	
  3162                           ;Packet.c: 98: }
  3163                           ;Packet.c: 101: writeByte('N');
  3164  06C1  304E               	movlw	(04Eh)
  3165  06C2  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  3166                           	line	102
  3167                           	
  3168  06C7                     l7585:	
  3169                           ;Packet.c: 102: return 0;
  3170  06C7  01F2               	clrf	(?_checkDataFrames)
  3171  06C8  01F3               	clrf	(?_checkDataFrames+1)
  3172  06C9  2ECA               	goto	l1565
  3173                           	
  3174  06CA                     l7587:	
  3175                           	line	103
  3176                           	
  3177  06CA                     l1565:	
  3178  06CA  0008               	return
  3179                           	opt stack 0
  3180                           GLOBAL	__end_of_checkDataFrames
  3181  06CB                     	__end_of_checkDataFrames:
  3182 ;; =============== function _checkDataFrames ends ============
  3183                           
  3184                           	signat	_checkDataFrames,90
  3185                           	global	_checkLength
  3186                           psect	text584,local,class=CODE,delta=2
  3187                           global __ptext584
  3188  01AF                     __ptext584:
  3189                           
  3190 ;; *************** function _checkLength *****************
  3191 ;; Defined at:
  3192 ;;		line 64 in file "Packet.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  2    2[COMMON] int 
  3199 ;; Registers used:
  3200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3206 ;;      Params:         2       0       0       0       0
  3207 ;;      Locals:         0       0       0       0       0
  3208 ;;      Temps:          1       0       0       0       0
  3209 ;;      Totals:         3       0       0       0       0
  3210 ;;Total ram usage:        3 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    1
  3213 ;; This function calls:
  3214 ;;		_eeprom_read
  3215 ;;		_writeByte
  3216 ;; This function is called by:
  3217 ;;		_parsePacket
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           psect	text584
  3221                           	file	"Packet.c"
  3222                           	line	64
  3223                           	global	__size_of_checkLength
  3224  002F                     	__size_of_checkLength	equ	__end_of_checkLength-_checkLength
  3225                           	
  3226  01AF                     _checkLength:	
  3227                           	opt	stack 4
  3228                           ; Regs used in _checkLength: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3229                           	line	67
  3230                           	
  3231  01AF                     l7549:	
  3232                           ;Packet.c: 67: if (eeprom_read(RXLenAddr) >= minSizeByte) {
  3233  01AF  3040               	movlw	(_RXLenAddr-__stringbase)
  3234  01B0  0084               	movwf	fsr0
  3235  01B1  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3236  01B6  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  3237  01BB  00F4               	movwf	(??_checkLength+0)+0
  3238  01BC  304E               	movlw	(_minSizeByte-__stringbase)
  3239  01BD  0084               	movwf	fsr0
  3240  01BE  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3241  01C3  0274               	subwf	0+(??_checkLength+0)+0,w
  3242  01C4  1C03               	skipc
  3243  01C5  29C7               	goto	u2721
  3244  01C6  29C8               	goto	u2720
  3245  01C7                     u2721:
  3246  01C7  29D4               	goto	l7557
  3247  01C8                     u2720:
  3248                           	line	69
  3249                           	
  3250  01C8                     l7551:	
  3251                           ;Packet.c: 69: writeByte('L');
  3252  01C8  304C               	movlw	(04Ch)
  3253  01C9  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  3254                           	line	70
  3255                           	
  3256  01CE                     l7553:	
  3257                           ;Packet.c: 70: return 1;
  3258  01CE  3001               	movlw	low(01h)
  3259  01CF  00F2               	movwf	(?_checkLength)
  3260  01D0  3000               	movlw	high(01h)
  3261  01D1  00F3               	movwf	((?_checkLength))+1
  3262  01D2  29DD               	goto	l1561
  3263                           	
  3264  01D3                     l7555:	
  3265  01D3  29DD               	goto	l1561
  3266                           	line	71
  3267                           	
  3268  01D4                     l1560:	
  3269                           	line	73
  3270                           	
  3271  01D4                     l7557:	
  3272                           ;Packet.c: 71: }
  3273                           ;Packet.c: 73: writeByte('N');
  3274  01D4  304E               	movlw	(04Eh)
  3275  01D5  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  3276                           	line	74
  3277                           	
  3278  01DA                     l7559:	
  3279                           ;Packet.c: 74: return 0;
  3280  01DA  01F2               	clrf	(?_checkLength)
  3281  01DB  01F3               	clrf	(?_checkLength+1)
  3282  01DC  29DD               	goto	l1561
  3283                           	
  3284  01DD                     l7561:	
  3285                           	line	75
  3286                           	
  3287  01DD                     l1561:	
  3288  01DD  0008               	return
  3289                           	opt stack 0
  3290                           GLOBAL	__end_of_checkLength
  3291  01DE                     	__end_of_checkLength:
  3292 ;; =============== function _checkLength ends ============
  3293                           
  3294                           	signat	_checkLength,90
  3295                           	global	_checkEven
  3296                           psect	text585,local,class=CODE,delta=2
  3297                           global __ptext585
  3298  0132                     __ptext585:
  3299                           
  3300 ;; *************** function _checkEven *****************
  3301 ;; Defined at:
  3302 ;;		line 42 in file "Packet.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  2    2[COMMON] int 
  3309 ;; Registers used:
  3310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         2       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0
  3318 ;;      Temps:          1       0       0       0       0
  3319 ;;      Totals:         3       0       0       0       0
  3320 ;;Total ram usage:        3 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    1
  3323 ;; This function calls:
  3324 ;;		_eeprom_read
  3325 ;;		_writeByte
  3326 ;; This function is called by:
  3327 ;;		_parsePacket
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           psect	text585
  3331                           	file	"Packet.c"
  3332                           	line	42
  3333                           	global	__size_of_checkEven
  3334  0027                     	__size_of_checkEven	equ	__end_of_checkEven-_checkEven
  3335                           	
  3336  0132                     _checkEven:	
  3337                           	opt	stack 4
  3338                           ; Regs used in _checkEven: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3339                           	line	45
  3340                           	
  3341  0132                     l7535:	
  3342                           ;Packet.c: 45: if (eeprom_read(RXLenAddr) % 2 == 0) {
  3343  0132  3040               	movlw	(_RXLenAddr-__stringbase)
  3344  0133  0084               	movwf	fsr0
  3345  0134  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3346  0139  120A  118A  20EE   	fcall	_eeprom_read
              120A  118A         
  3347  013E  00F4               	movwf	(??_checkEven+0)+0
  3348  013F  1874               	btfsc	0+(??_checkEven+0)+0,(0)&7
  3349  0140  2942               	goto	u2711
  3350  0141  2943               	goto	u2710
  3351  0142                     u2711:
  3352  0142  294F               	goto	l7543
  3353  0143                     u2710:
  3354                           	line	47
  3355                           	
  3356  0143                     l7537:	
  3357                           ;Packet.c: 47: writeByte('E');
  3358  0143  3045               	movlw	(045h)
  3359  0144  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  3360                           	line	48
  3361                           	
  3362  0149                     l7539:	
  3363                           ;Packet.c: 48: return 1;
  3364  0149  3001               	movlw	low(01h)
  3365  014A  00F2               	movwf	(?_checkEven)
  3366  014B  3000               	movlw	high(01h)
  3367  014C  00F3               	movwf	((?_checkEven))+1
  3368  014D  2958               	goto	l1557
  3369                           	
  3370  014E                     l7541:	
  3371  014E  2958               	goto	l1557
  3372                           	line	49
  3373                           	
  3374  014F                     l1556:	
  3375                           	line	51
  3376                           	
  3377  014F                     l7543:	
  3378                           ;Packet.c: 49: }
  3379                           ;Packet.c: 51: writeByte('N');
  3380  014F  304E               	movlw	(04Eh)
  3381  0150  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  3382                           	line	52
  3383                           	
  3384  0155                     l7545:	
  3385                           ;Packet.c: 52: return 0;
  3386  0155  01F2               	clrf	(?_checkEven)
  3387  0156  01F3               	clrf	(?_checkEven+1)
  3388  0157  2958               	goto	l1557
  3389                           	
  3390  0158                     l7547:	
  3391                           	line	53
  3392                           	
  3393  0158                     l1557:	
  3394  0158  0008               	return
  3395                           	opt stack 0
  3396                           GLOBAL	__end_of_checkEven
  3397  0159                     	__end_of_checkEven:
  3398 ;; =============== function _checkEven ends ============
  3399                           
  3400                           	signat	_checkEven,90
  3401                           	global	_makeHexByte
  3402                           psect	text586,local,class=CODE,delta=2
  3403                           global __ptext586
  3404  010D                     __ptext586:
  3405                           
  3406 ;; *************** function _makeHexByte *****************
  3407 ;; Defined at:
  3408 ;;		line 195 in file "Bluetooth.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  nibOne          1    wreg     unsigned char 
  3411 ;;  nibTwo          1   13[COMMON] unsigned char 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  nibOne          1    2[BANK0 ] unsigned char 
  3414 ;;  input_byte      1    3[BANK0 ] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      unsigned char 
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0, pclath, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3424 ;;      Params:         1       0       0       0       0
  3425 ;;      Locals:         0       2       0       0       0
  3426 ;;      Temps:          0       2       0       0       0
  3427 ;;      Totals:         1       4       0       0       0
  3428 ;;Total ram usage:        5 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    1
  3431 ;; This function calls:
  3432 ;;		_makeNibble
  3433 ;; This function is called by:
  3434 ;;		_parsePacket
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           psect	text586
  3438                           	file	"Bluetooth.c"
  3439                           	line	195
  3440                           	global	__size_of_makeHexByte
  3441  0025                     	__size_of_makeHexByte	equ	__end_of_makeHexByte-_makeHexByte
  3442                           	
  3443  010D                     _makeHexByte:	
  3444                           	opt	stack 4
  3445                           ; Regs used in _makeHexByte: [wreg+status,2+status,0+pclath+cstack]
  3446                           ;makeHexByte@nibOne stored from wreg
  3447                           	line	197
  3448  010D  1283               	bcf	status, 5	;RP0=0, select bank0
  3449  010E  1303               	bcf	status, 6	;RP1=0, select bank0
  3450  010F  00A2               	movwf	(makeHexByte@nibOne)
  3451                           	
  3452  0110                     l7529:	
  3453                           ;Bluetooth.c: 196: unsigned char input_byte;
  3454                           ;Bluetooth.c: 197: input_byte = (makeNibble(nibOne)<<4);
  3455  0110  0822               	movf	(makeHexByte@nibOne),w
  3456  0111  120A  118A  20B2   	fcall	_makeNibble
              120A  118A         
  3457  0116  1283               	bcf	status, 5	;RP0=0, select bank0
  3458  0117  1303               	bcf	status, 6	;RP1=0, select bank0
  3459  0118  00A0               	movwf	(??_makeHexByte+0)+0
  3460  0119  3003               	movlw	(04h)-1
  3461  011A                     u2705:
  3462  011A  1003               	clrc
  3463  011B  0DA0               	rlf	(??_makeHexByte+0)+0,f
  3464  011C  3EFF               	addlw	-1
  3465  011D  1D03               	skipz
  3466  011E  291A               	goto	u2705
  3467  011F  1003               	clrc
  3468  0120  0D20               	rlf	(??_makeHexByte+0)+0,w
  3469  0121  00A1               	movwf	(??_makeHexByte+1)+0
  3470  0122  0821               	movf	(??_makeHexByte+1)+0,w
  3471  0123  00A3               	movwf	(makeHexByte@input_byte)
  3472                           	line	198
  3473                           ;Bluetooth.c: 198: input_byte|= makeNibble(nibTwo);
  3474  0124  087D               	movf	(makeHexByte@nibTwo),w
  3475  0125  120A  118A  20B2   	fcall	_makeNibble
              120A  118A         
  3476  012A  1283               	bcf	status, 5	;RP0=0, select bank0
  3477  012B  1303               	bcf	status, 6	;RP1=0, select bank0
  3478  012C  00A0               	movwf	(??_makeHexByte+0)+0
  3479  012D  0820               	movf	(??_makeHexByte+0)+0,w
  3480  012E  04A3               	iorwf	(makeHexByte@input_byte),f
  3481                           	line	199
  3482                           	
  3483  012F                     l7531:	
  3484                           ;Bluetooth.c: 199: return input_byte;
  3485  012F  0823               	movf	(makeHexByte@input_byte),w
  3486  0130  2931               	goto	l791
  3487                           	
  3488  0131                     l7533:	
  3489                           	line	200
  3490                           	
  3491  0131                     l791:	
  3492  0131  0008               	return
  3493                           	opt stack 0
  3494                           GLOBAL	__end_of_makeHexByte
  3495  0132                     	__end_of_makeHexByte:
  3496 ;; =============== function _makeHexByte ends ============
  3497                           
  3498                           	signat	_makeHexByte,8313
  3499                           	global	_readString
  3500                           psect	text587,local,class=CODE,delta=2
  3501                           global __ptext587
  3502  0274                     __ptext587:
  3503                           
  3504 ;; *************** function _readString *****************
  3505 ;; Defined at:
  3506 ;;		line 147 in file "Bluetooth.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  readStorage     1    wreg     PTR unsigned char 
  3509 ;;		 -> getPacket@arrStore(50), 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  readStorage     1    2[BANK0 ] PTR unsigned char 
  3512 ;;		 -> getPacket@arrStore(50), 
  3513 ;;  i               2    3[BANK0 ] unsigned int 
  3514 ;;  ch              1    5[BANK0 ] unsigned char 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;		None               void
  3517 ;; Registers used:
  3518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3524 ;;      Params:         0       0       0       0       0
  3525 ;;      Locals:         0       4       0       0       0
  3526 ;;      Temps:          0       2       0       0       0
  3527 ;;      Totals:         0       6       0       0       0
  3528 ;;Total ram usage:        6 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    1
  3531 ;; This function calls:
  3532 ;;		_readByte
  3533 ;;		_eeprom_write
  3534 ;; This function is called by:
  3535 ;;		_getPacket
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           psect	text587
  3539                           	file	"Bluetooth.c"
  3540                           	line	147
  3541                           	global	__size_of_readString
  3542  004B                     	__size_of_readString	equ	__end_of_readString-_readString
  3543                           	
  3544  0274                     _readString:	
  3545                           	opt	stack 5
  3546                           ; Regs used in _readString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3547                           ;readString@readStorage stored from wreg
  3548                           	line	149
  3549  0274  1283               	bcf	status, 5	;RP0=0, select bank0
  3550  0275  1303               	bcf	status, 6	;RP1=0, select bank0
  3551  0276  00A2               	movwf	(readString@readStorage)
  3552                           	
  3553  0277                     l7515:	
  3554                           ;Bluetooth.c: 149: unsigned int i = 0;
  3555  0277  01A3               	clrf	(readString@i)
  3556  0278  01A4               	clrf	(readString@i+1)
  3557                           	line	154
  3558                           	
  3559  0279                     l7517:	
  3560                           ;Bluetooth.c: 151: unsigned char ch;
  3561                           ;Bluetooth.c: 154: ch = readByte();
  3562  0279  120A  118A  2081   	fcall	_readByte
              120A  118A         
  3563  027E  1283               	bcf	status, 5	;RP0=0, select bank0
  3564  027F  1303               	bcf	status, 6	;RP1=0, select bank0
  3565  0280  00A0               	movwf	(??_readString+0)+0
  3566  0281  0820               	movf	(??_readString+0)+0,w
  3567  0282  00A5               	movwf	(readString@ch)
  3568                           	line	156
  3569                           ;Bluetooth.c: 156: while(ch != userEndByte)
  3570  0283  2A9F               	goto	l7525
  3571                           	
  3572  0284                     l782:	
  3573                           	line	159
  3574                           	
  3575  0284                     l7519:	
  3576                           ;Bluetooth.c: 157: {
  3577                           ;Bluetooth.c: 159: readStorage[i] = ch;
  3578  0284  0825               	movf	(readString@ch),w
  3579  0285  00A0               	movwf	(??_readString+0)+0
  3580  0286  0823               	movf	(readString@i),w
  3581  0287  0722               	addwf	(readString@readStorage),w
  3582  0288  00A1               	movwf	(??_readString+1)+0
  3583  0289  0821               	movf	0+(??_readString+1)+0,w
  3584  028A  0084               	movwf	fsr0
  3585  028B  0820               	movf	(??_readString+0)+0,w
  3586  028C  1383               	bcf	status, 7	;select IRP bank0
  3587  028D  0080               	movwf	indf
  3588                           	line	161
  3589                           	
  3590  028E                     l7521:	
  3591                           ;Bluetooth.c: 161: i++;
  3592  028E  3001               	movlw	low(01h)
  3593  028F  07A3               	addwf	(readString@i),f
  3594  0290  1803               	skipnc
  3595  0291  0AA4               	incf	(readString@i+1),f
  3596  0292  3000               	movlw	high(01h)
  3597  0293  07A4               	addwf	(readString@i+1),f
  3598                           	line	163
  3599                           	
  3600  0294                     l7523:	
  3601                           ;Bluetooth.c: 163: ch = readByte();
  3602  0294  120A  118A  2081   	fcall	_readByte
              120A  118A         
  3603  0299  1283               	bcf	status, 5	;RP0=0, select bank0
  3604  029A  1303               	bcf	status, 6	;RP1=0, select bank0
  3605  029B  00A0               	movwf	(??_readString+0)+0
  3606  029C  0820               	movf	(??_readString+0)+0,w
  3607  029D  00A5               	movwf	(readString@ch)
  3608  029E  2A9F               	goto	l7525
  3609                           	line	164
  3610                           	
  3611  029F                     l781:	
  3612                           	line	156
  3613                           	
  3614  029F                     l7525:	
  3615  029F  305B               	movlw	(_userEndByte-__stringbase)
  3616  02A0  0084               	movwf	fsr0
  3617  02A1  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3618  02A6  00A0               	movwf	(??_readString+0)+0
  3619  02A7  0825               	movf	(readString@ch),w
  3620  02A8  0620               	xorwf	(??_readString+0)+0,w
  3621  02A9  1D03               	skipz
  3622  02AA  2AAC               	goto	u2691
  3623  02AB  2AAD               	goto	u2690
  3624  02AC                     u2691:
  3625  02AC  2A84               	goto	l7519
  3626  02AD                     u2690:
  3627  02AD  2AAE               	goto	l7527
  3628                           	
  3629  02AE                     l783:	
  3630                           	line	167
  3631                           	
  3632  02AE                     l7527:	
  3633                           ;Bluetooth.c: 164: }
  3634                           ;Bluetooth.c: 167: eeprom_write(RXLenAddr,i);
  3635  02AE  0823               	movf	(readString@i),w
  3636  02AF  00A0               	movwf	(??_readString+0)+0
  3637  02B0  0820               	movf	(??_readString+0)+0,w
  3638  02B1  00FA               	movwf	(?_eeprom_write)
  3639  02B2  3040               	movlw	(_RXLenAddr-__stringbase)
  3640  02B3  0084               	movwf	fsr0
  3641  02B4  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3642  02B9  120A  118A  220F   	fcall	_eeprom_write
              120A  118A         
  3643                           	line	168
  3644                           	
  3645  02BE                     l784:	
  3646  02BE  0008               	return
  3647                           	opt stack 0
  3648                           GLOBAL	__end_of_readString
  3649  02BF                     	__end_of_readString:
  3650 ;; =============== function _readString ends ============
  3651                           
  3652                           	signat	_readString,4216
  3653                           	global	_writeString
  3654                           psect	text588,local,class=CODE,delta=2
  3655                           global __ptext588
  3656  0180                     __ptext588:
  3657                           
  3658 ;; *************** function _writeString *****************
  3659 ;; Defined at:
  3660 ;;		line 125 in file "Bluetooth.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  userString      1    wreg     PTR unsigned char 
  3663 ;;		 -> main@testString(9), 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  userString      1   11[COMMON] PTR unsigned char 
  3666 ;;		 -> main@testString(9), 
  3667 ;;  i               2   12[COMMON] unsigned int 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;		None               void
  3670 ;; Registers used:
  3671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3677 ;;      Params:         0       0       0       0       0
  3678 ;;      Locals:         3       0       0       0       0
  3679 ;;      Temps:          1       0       0       0       0
  3680 ;;      Totals:         4       0       0       0       0
  3681 ;;Total ram usage:        4 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    1
  3684 ;; This function calls:
  3685 ;;		_writeByte
  3686 ;;		_strlen
  3687 ;; This function is called by:
  3688 ;;		_main
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           psect	text588
  3692                           	file	"Bluetooth.c"
  3693                           	line	125
  3694                           	global	__size_of_writeString
  3695  002F                     	__size_of_writeString	equ	__end_of_writeString-_writeString
  3696                           	
  3697  0180                     _writeString:	
  3698                           	opt	stack 6
  3699                           ; Regs used in _writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3700                           ;writeString@userString stored from wreg
  3701                           	line	129
  3702  0180  00FB               	movwf	(writeString@userString)
  3703                           	
  3704  0181                     l7505:	
  3705                           ;Bluetooth.c: 127: unsigned int i;
  3706                           ;Bluetooth.c: 129: for(i = 0;i<strlen(userString);i++){
  3707  0181  01FC               	clrf	(writeString@i)
  3708  0182  01FD               	clrf	(writeString@i+1)
  3709  0183  2997               	goto	l7511
  3710                           	
  3711  0184                     l776:	
  3712                           	line	130
  3713                           	
  3714  0184                     l7507:	
  3715                           ;Bluetooth.c: 130: writeByte(userString[i]);
  3716  0184  087C               	movf	(writeString@i),w
  3717  0185  077B               	addwf	(writeString@userString),w
  3718  0186  00FA               	movwf	(??_writeString+0)+0
  3719  0187  087A               	movf	0+(??_writeString+0)+0,w
  3720  0188  0084               	movwf	fsr0
  3721  0189  1383               	bcf	status, 7	;select IRP bank0
  3722  018A  0800               	movf	indf,w
  3723  018B  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  3724                           	line	129
  3725                           	
  3726  0190                     l7509:	
  3727  0190  3001               	movlw	low(01h)
  3728  0191  07FC               	addwf	(writeString@i),f
  3729  0192  1803               	skipnc
  3730  0193  0AFD               	incf	(writeString@i+1),f
  3731  0194  3000               	movlw	high(01h)
  3732  0195  07FD               	addwf	(writeString@i+1),f
  3733  0196  2997               	goto	l7511
  3734                           	
  3735  0197                     l775:	
  3736                           	
  3737  0197                     l7511:	
  3738  0197  087B               	movf	(writeString@userString),w
  3739  0198  120A  118A  21DE   	fcall	_strlen
              120A  118A         
  3740  019D  0871               	movf	(1+(?_strlen)),w
  3741  019E  027D               	subwf	(writeString@i+1),w
  3742  019F  1D03               	skipz
  3743  01A0  29A3               	goto	u2685
  3744  01A1  0870               	movf	(0+(?_strlen)),w
  3745  01A2  027C               	subwf	(writeString@i),w
  3746  01A3                     u2685:
  3747  01A3  1C03               	skipc
  3748  01A4  29A6               	goto	u2681
  3749  01A5  29A7               	goto	u2680
  3750  01A6                     u2681:
  3751  01A6  2984               	goto	l7507
  3752  01A7                     u2680:
  3753  01A7  29A8               	goto	l7513
  3754                           	
  3755  01A8                     l777:	
  3756                           	line	133
  3757                           	
  3758  01A8                     l7513:	
  3759                           ;Bluetooth.c: 131: }
  3760                           ;Bluetooth.c: 133: writeByte((unsigned char)i);
  3761  01A8  087C               	movf	(writeString@i),w
  3762  01A9  120A  118A  2097   	fcall	_writeByte
              120A  118A         
  3763                           	line	135
  3764                           	
  3765  01AE                     l778:	
  3766  01AE  0008               	return
  3767                           	opt stack 0
  3768                           GLOBAL	__end_of_writeString
  3769  01AF                     	__end_of_writeString:
  3770 ;; =============== function _writeString ends ============
  3771                           
  3772                           	signat	_writeString,4216
  3773                           	global	_selectTemp
  3774                           psect	text589,local,class=CODE,delta=2
  3775                           global __ptext589
  3776  006B                     __ptext589:
  3777                           
  3778 ;; *************** function _selectTemp *****************
  3779 ;; Defined at:
  3780 ;;		line 43 in file "customADC.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;		None               void
  3787 ;; Registers used:
  3788 ;;		wreg
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3794 ;;      Params:         0       0       0       0       0
  3795 ;;      Locals:         0       0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0
  3797 ;;      Totals:         0       0       0       0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_getTemp
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           psect	text589
  3807                           	file	"customADC.c"
  3808                           	line	43
  3809                           	global	__size_of_selectTemp
  3810  0005                     	__size_of_selectTemp	equ	__end_of_selectTemp-_selectTemp
  3811                           	
  3812  006B                     _selectTemp:	
  3813                           	opt	stack 6
  3814                           ; Regs used in _selectTemp: [wreg]
  3815                           	line	44
  3816                           	
  3817  006B                     l7503:	
  3818                           ;customADC.c: 44: ADCON0 = 0x80;
  3819  006B  3080               	movlw	(080h)
  3820  006C  1283               	bcf	status, 5	;RP0=0, select bank0
  3821  006D  1303               	bcf	status, 6	;RP1=0, select bank0
  3822  006E  009F               	movwf	(31)	;volatile
  3823                           	line	45
  3824                           	
  3825  006F                     l3137:	
  3826  006F  0008               	return
  3827                           	opt stack 0
  3828                           GLOBAL	__end_of_selectTemp
  3829  0070                     	__end_of_selectTemp:
  3830 ;; =============== function _selectTemp ends ============
  3831                           
  3832                           	signat	_selectTemp,88
  3833                           	global	_initADC
  3834                           psect	text590,local,class=CODE,delta=2
  3835                           global __ptext590
  3836  008C                     __ptext590:
  3837                           
  3838 ;; *************** function _initADC *****************
  3839 ;; Defined at:
  3840 ;;		line 7 in file "customADC.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;		None
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;		None
  3845 ;; Return value:  Size  Location     Type
  3846 ;;		None               void
  3847 ;; Registers used:
  3848 ;;		wreg
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3854 ;;      Params:         0       0       0       0       0
  3855 ;;      Locals:         0       0       0       0       0
  3856 ;;      Temps:          0       0       0       0       0
  3857 ;;      Totals:         0       0       0       0       0
  3858 ;;Total ram usage:        0 bytes
  3859 ;; Hardware stack levels used:    1
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_main
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           psect	text590
  3867                           	file	"customADC.c"
  3868                           	line	7
  3869                           	global	__size_of_initADC
  3870  000B                     	__size_of_initADC	equ	__end_of_initADC-_initADC
  3871                           	
  3872  008C                     _initADC:	
  3873                           	opt	stack 7
  3874                           ; Regs used in _initADC: [wreg]
  3875                           	line	8
  3876                           	
  3877  008C                     l7501:	
  3878                           ;customADC.c: 8: TRISA = 0x03;
  3879  008C  3003               	movlw	(03h)
  3880  008D  1683               	bsf	status, 5	;RP0=1, select bank1
  3881  008E  1303               	bcf	status, 6	;RP1=0, select bank1
  3882  008F  0085               	movwf	(133)^080h	;volatile
  3883                           	line	22
  3884                           ;customADC.c: 22: ADCON1 = 0x80;
  3885  0090  3080               	movlw	(080h)
  3886  0091  009F               	movwf	(159)^080h	;volatile
  3887                           	line	39
  3888                           ;customADC.c: 39: ADCON0 = 0x80;
  3889  0092  3080               	movlw	(080h)
  3890  0093  1283               	bcf	status, 5	;RP0=0, select bank0
  3891  0094  1303               	bcf	status, 6	;RP1=0, select bank0
  3892  0095  009F               	movwf	(31)	;volatile
  3893                           	line	40
  3894                           	
  3895  0096                     l3134:	
  3896  0096  0008               	return
  3897                           	opt stack 0
  3898                           GLOBAL	__end_of_initADC
  3899  0097                     	__end_of_initADC:
  3900 ;; =============== function _initADC ends ============
  3901                           
  3902                           	signat	_initADC,88
  3903                           	global	_eeprom_read
  3904                           psect	text591,local,class=CODE,delta=2
  3905                           global __ptext591
  3906  00EE                     __ptext591:
  3907                           
  3908 ;; *************** function _eeprom_read *****************
  3909 ;; Defined at:
  3910 ;;		line 7 in file "eeread.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  addr            1    wreg     unsigned char 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  addr            1    1[COMMON] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      unsigned char 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3924 ;;      Params:         0       0       0       0       0
  3925 ;;      Locals:         1       0       0       0       0
  3926 ;;      Temps:          1       0       0       0       0
  3927 ;;      Totals:         2       0       0       0       0
  3928 ;;Total ram usage:        2 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_checkEven
  3934 ;;		_checkLength
  3935 ;;		_checkDataFrames
  3936 ;;		_parsePacket
  3937 ;;		_checkStartByte
  3938 ;;		_checkRWByte
  3939 ;;		_checkCMDByte
  3940 ;;		_checkCS
  3941 ;;		_addDataToCheckSum
  3942 ;;		_getPacket
  3943 ;;		_getTemp
  3944 ;;		_displayPacket
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           psect	text591
  3948                           	file	"C:\Microchip\Hitech\sources\eeread.c"
  3949                           	line	7
  3950                           	global	__size_of_eeprom_read
  3951  001F                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
  3952                           	
  3953  00EE                     _eeprom_read:	
  3954                           	opt	stack 4
  3955                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3956                           ;eeprom_read@addr stored from wreg
  3957                           	line	9
  3958  00EE  00F1               	movwf	(eeprom_read@addr)
  3959                           	line	8
  3960                           	
  3961  00EF                     l4554:	
  3962                           	line	9
  3963                           # 9 "C:\Microchip\Hitech\sources\eeread.c"
  3964  00EF  0064               clrwdt ;#
  3965                           psect	text591
  3966                           	line	10
  3967  00F0  1683               	bsf	status, 5	;RP0=1, select bank3
  3968  00F1  1703               	bsf	status, 6	;RP1=1, select bank3
  3969  00F2  188C               	btfsc	(3169/8)^0180h,(3169)&7
  3970  00F3  28F5               	goto	u2661
  3971  00F4  28F6               	goto	u2660
  3972  00F5                     u2661:
  3973  00F5  28EF               	goto	l4554
  3974  00F6                     u2660:
  3975  00F6  28F7               	goto	l7485
  3976                           	
  3977  00F7                     l4555:	
  3978                           	line	11
  3979                           	
  3980  00F7                     l7485:	
  3981  00F7  0871               	movf	(eeprom_read@addr),w
  3982  00F8  1283               	bcf	status, 5	;RP0=0, select bank2
  3983  00F9  1703               	bsf	status, 6	;RP1=1, select bank2
  3984  00FA  008D               	movwf	(269)^0100h	;volatile
  3985  00FB  303F               	movlw	(03Fh)
  3986  00FC  00F0               	movwf	(??_eeprom_read+0)+0
  3987  00FD  0870               	movf	(??_eeprom_read+0)+0,w
  3988  00FE  1683               	bsf	status, 5	;RP0=1, select bank3
  3989  00FF  1703               	bsf	status, 6	;RP1=1, select bank3
  3990  0100  058C               	andwf	(396)^0180h,f	;volatile
  3991  0101  140C               	bsf	(3168/8)^0180h,(3168)&7
  3992  0102  1003               	clrc
  3993  0103  180C               	btfsc	(3168/8)^0180h,(3168)&7
  3994  0104  1403               	setc
  3995  0105  3000               	movlw	0
  3996  0106  1803               	skipnc
  3997  0107  3001               	movlw	1
  3998                           
  3999  0108  1283               	bcf	status, 5	;RP0=0, select bank2
  4000  0109  1703               	bsf	status, 6	;RP1=1, select bank2
  4001  010A  080C               	movf	(268)^0100h,w	;volatile
  4002  010B  290C               	goto	l4556
  4003                           	
  4004  010C                     l7487:	
  4005                           	line	12
  4006                           	
  4007  010C                     l4556:	
  4008  010C  0008               	return
  4009                           	opt stack 0
  4010                           GLOBAL	__end_of_eeprom_read
  4011  010D                     	__end_of_eeprom_read:
  4012 ;; =============== function _eeprom_read ends ============
  4013                           
  4014                           	signat	_eeprom_read,4217
  4015                           	global	_makeNibble
  4016                           psect	text592,local,class=CODE,delta=2
  4017                           global __ptext592
  4018  00B2                     __ptext592:
  4019                           
  4020 ;; *************** function _makeNibble *****************
  4021 ;; Defined at:
  4022 ;;		line 179 in file "Bluetooth.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  tempNib         1    wreg     unsigned char 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  tempNib         1    0[COMMON] unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      unsigned char 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4036 ;;      Params:         0       0       0       0       0
  4037 ;;      Locals:         1       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0
  4039 ;;      Totals:         1       0       0       0       0
  4040 ;;Total ram usage:        1 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_makeHexByte
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           psect	text592
  4049                           	file	"Bluetooth.c"
  4050                           	line	179
  4051                           	global	__size_of_makeNibble
  4052  000F                     	__size_of_makeNibble	equ	__end_of_makeNibble-_makeNibble
  4053                           	
  4054  00B2                     _makeNibble:	
  4055                           	opt	stack 4
  4056                           ; Regs used in _makeNibble: [wreg+status,2+status,0]
  4057                           ;makeNibble@tempNib stored from wreg
  4058  00B2  00F0               	movwf	(makeNibble@tempNib)
  4059                           	line	180
  4060                           	
  4061  00B3                     l7475:	
  4062                           ;Bluetooth.c: 180: if(tempNib>='A'){
  4063  00B3  3041               	movlw	(041h)
  4064  00B4  0270               	subwf	(makeNibble@tempNib),w
  4065  00B5  1C03               	skipc
  4066  00B6  28B8               	goto	u2651
  4067  00B7  28B9               	goto	u2650
  4068  00B8                     u2651:
  4069  00B8  28BD               	goto	l7481
  4070  00B9                     u2650:
  4071                           	line	181
  4072                           	
  4073  00B9                     l7477:	
  4074                           ;Bluetooth.c: 181: return ((tempNib - (unsigned char)'A')+10);
  4075  00B9  0870               	movf	(makeNibble@tempNib),w
  4076  00BA  3EC9               	addlw	0C9h
  4077  00BB  28C0               	goto	l788
  4078                           	
  4079  00BC                     l7479:	
  4080  00BC  28C0               	goto	l788
  4081                           	line	182
  4082                           	
  4083  00BD                     l787:	
  4084                           	line	183
  4085                           	
  4086  00BD                     l7481:	
  4087                           ;Bluetooth.c: 182: }
  4088                           ;Bluetooth.c: 183: return (tempNib - '0');
  4089  00BD  0870               	movf	(makeNibble@tempNib),w
  4090  00BE  3ED0               	addlw	0D0h
  4091  00BF  28C0               	goto	l788
  4092                           	
  4093  00C0                     l7483:	
  4094                           	line	184
  4095                           	
  4096  00C0                     l788:	
  4097  00C0  0008               	return
  4098                           	opt stack 0
  4099                           GLOBAL	__end_of_makeNibble
  4100  00C1                     	__end_of_makeNibble:
  4101 ;; =============== function _makeNibble ends ============
  4102                           
  4103                           	signat	_makeNibble,4217
  4104                           	global	_eeprom_write
  4105                           psect	text593,local,class=CODE,delta=2
  4106                           global __ptext593
  4107  020F                     __ptext593:
  4108                           
  4109 ;; *************** function _eeprom_write *****************
  4110 ;; Defined at:
  4111 ;;		line 7 in file "C:\Microchip\Hitech\sources\eewrite.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  addr            1    wreg     unsigned char 
  4114 ;;  value           1   10[COMMON] unsigned char 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  addr            1   12[COMMON] unsigned char 
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      unsigned char 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4126 ;;      Params:         1       0       0       0       0
  4127 ;;      Locals:         1       0       0       0       0
  4128 ;;      Temps:          1       0       0       0       0
  4129 ;;      Totals:         3       0       0       0       0
  4130 ;;Total ram usage:        3 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		_readString
  4136 ;;		_parsePacket
  4137 ;;		_checkStartByte
  4138 ;;		_checkRWByte
  4139 ;;		_checkCMDByte
  4140 ;;		_addDataToCheckSum
  4141 ;;		_initTemp
  4142 ;;		_getPacket
  4143 ;;		_getTemp
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           psect	text593
  4147                           	file	"C:\Microchip\Hitech\sources\eewrite.c"
  4148                           	line	7
  4149                           	global	__size_of_eeprom_write
  4150  0031                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
  4151                           	
  4152  020F                     _eeprom_write:	
  4153                           	opt	stack 4
  4154                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4155                           ;eeprom_write@addr stored from wreg
  4156  020F  00FC               	movwf	(eeprom_write@addr)
  4157                           	line	8
  4158                           	
  4159  0210                     l5171:	
  4160  0210  2A11               	goto	l5172
  4161                           	
  4162  0211                     l5173:	
  4163                           	
  4164  0211                     l5172:	
  4165  0211  1683               	bsf	status, 5	;RP0=1, select bank3
  4166  0212  1703               	bsf	status, 6	;RP1=1, select bank3
  4167  0213  188C               	btfsc	(3169/8)^0180h,(3169)&7
  4168  0214  2A16               	goto	u2621
  4169  0215  2A17               	goto	u2620
  4170  0216                     u2621:
  4171  0216  2A11               	goto	l5172
  4172  0217                     u2620:
  4173  0217  2A18               	goto	l7455
  4174                           	
  4175  0218                     l5174:	
  4176                           	
  4177  0218                     l7455:	
  4178  0218  087C               	movf	(eeprom_write@addr),w
  4179  0219  1283               	bcf	status, 5	;RP0=0, select bank2
  4180  021A  1703               	bsf	status, 6	;RP1=1, select bank2
  4181  021B  008D               	movwf	(269)^0100h	;volatile
  4182  021C  087A               	movf	(eeprom_write@value),w
  4183  021D  008C               	movwf	(268)^0100h	;volatile
  4184                           	
  4185  021E                     l7457:	
  4186  021E  303F               	movlw	(03Fh)
  4187  021F  00FB               	movwf	(??_eeprom_write+0)+0
  4188  0220  087B               	movf	(??_eeprom_write+0)+0,w
  4189  0221  1683               	bsf	status, 5	;RP0=1, select bank3
  4190  0222  1703               	bsf	status, 6	;RP1=1, select bank3
  4191  0223  058C               	andwf	(396)^0180h,f	;volatile
  4192                           	
  4193  0224                     l7459:	
  4194  0224  1283               	bcf	status, 5	;RP0=0, select bank0
  4195  0225  1303               	bcf	status, 6	;RP1=0, select bank0
  4196  0226  1003               	bcf	(24/8),(24)&7
  4197                           	
  4198  0227                     l7461:	
  4199  0227  1F8B               	btfss	(95/8),(95)&7
  4200  0228  2A2A               	goto	u2631
  4201  0229  2A2B               	goto	u2630
  4202  022A                     u2631:
  4203  022A  2A2C               	goto	l5175
  4204  022B                     u2630:
  4205                           	
  4206  022B                     l7463:	
  4207  022B  1403               	bsf	(24/8),(24)&7
  4208                           	
  4209  022C                     l5175:	
  4210  022C  138B               	bcf	(95/8),(95)&7
  4211  022D  1683               	bsf	status, 5	;RP0=1, select bank3
  4212  022E  1703               	bsf	status, 6	;RP1=1, select bank3
  4213  022F  150C               	bsf	(3170/8)^0180h,(3170)&7
  4214                           	
  4215  0230                     l7465:	
  4216  0230  3055               	movlw	(055h)
  4217  0231  008D               	movwf	(397)^0180h	;volatile
  4218  0232  30AA               	movlw	(0AAh)
  4219  0233  008D               	movwf	(397)^0180h	;volatile
  4220                           	
  4221  0234                     l7467:	
  4222  0234  148C               	bsf	(3169/8)^0180h,(3169)&7
  4223                           	
  4224  0235                     l7469:	
  4225  0235  110C               	bcf	(3170/8)^0180h,(3170)&7
  4226                           	
  4227  0236                     l7471:	
  4228  0236  1283               	bcf	status, 5	;RP0=0, select bank0
  4229  0237  1303               	bcf	status, 6	;RP1=0, select bank0
  4230  0238  1C03               	btfss	(24/8),(24)&7
  4231  0239  2A3B               	goto	u2641
  4232  023A  2A3C               	goto	u2640
  4233  023B                     u2641:
  4234  023B  2A3F               	goto	l5178
  4235  023C                     u2640:
  4236                           	
  4237  023C                     l7473:	
  4238  023C  178B               	bsf	(95/8),(95)&7
  4239  023D  2A3F               	goto	l5178
  4240                           	
  4241  023E                     l5176:	
  4242  023E  2A3F               	goto	l5178
  4243                           	
  4244  023F                     l5177:	
  4245                           	line	10
  4246                           ;	Return value of _eeprom_write is never used
  4247                           	
  4248  023F                     l5178:	
  4249  023F  0008               	return
  4250                           	opt stack 0
  4251                           GLOBAL	__end_of_eeprom_write
  4252  0240                     	__end_of_eeprom_write:
  4253 ;; =============== function _eeprom_write ends ============
  4254                           
  4255                           	signat	_eeprom_write,8313
  4256                           	global	_strlen
  4257                           psect	text594,local,class=CODE,delta=2
  4258                           global __ptext594
  4259  01DE                     __ptext594:
  4260                           
  4261 ;; *************** function _strlen *****************
  4262 ;; Defined at:
  4263 ;;		line 5 in file "C:\Microchip\Hitech\sources\strlen.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  s               1    wreg     PTR const unsigned char 
  4266 ;;		 -> getPacket@arrStore(50), main@testString(9), 
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  s               1    8[COMMON] PTR const unsigned char 
  4269 ;;		 -> getPacket@arrStore(50), main@testString(9), 
  4270 ;;  cp              1    9[COMMON] PTR const unsigned char 
  4271 ;;		 -> getPacket@arrStore(50), main@testString(9), 
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  2    0[COMMON] unsigned int 
  4274 ;; Registers used:
  4275 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4281 ;;      Params:         2       0       0       0       0
  4282 ;;      Locals:         2       0       0       0       0
  4283 ;;      Temps:          6       0       0       0       0
  4284 ;;      Totals:        10       0       0       0       0
  4285 ;;Total ram usage:       10 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_writeString
  4291 ;;		_parsePacket
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           psect	text594
  4295                           	file	"C:\Microchip\Hitech\sources\strlen.c"
  4296                           	line	5
  4297                           	global	__size_of_strlen
  4298  0031                     	__size_of_strlen	equ	__end_of_strlen-_strlen
  4299                           	
  4300  01DE                     _strlen:	
  4301                           	opt	stack 5
  4302                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  4303                           ;strlen@s stored from wreg
  4304                           	line	8
  4305  01DE  00F8               	movwf	(strlen@s)
  4306                           	
  4307  01DF                     l7447:	
  4308  01DF  0878               	movf	(strlen@s),w
  4309  01E0  00F2               	movwf	(??_strlen+0)+0
  4310  01E1  0872               	movf	(??_strlen+0)+0,w
  4311  01E2  00F9               	movwf	(strlen@cp)
  4312                           	line	9
  4313  01E3  29E5               	goto	l7449
  4314                           	
  4315  01E4                     l5856:	
  4316                           	line	10
  4317  01E4  29E5               	goto	l7449
  4318                           	
  4319  01E5                     l5855:	
  4320                           	line	9
  4321                           	
  4322  01E5                     l7449:	
  4323  01E5  0879               	movf	(strlen@cp),w
  4324  01E6  0084               	movwf	fsr0
  4325  01E7  3001               	movlw	01h
  4326  01E8  07F9               	addwf	(strlen@cp),f
  4327  01E9  1383               	bcf	status, 7	;select IRP bank0
  4328  01EA  0880               	movf	indf,f
  4329  01EB  1D03               	skipz
  4330  01EC  29EE               	goto	u2611
  4331  01ED  29EF               	goto	u2610
  4332  01EE                     u2611:
  4333  01EE  29E5               	goto	l7449
  4334  01EF                     u2610:
  4335  01EF  29F0               	goto	l7451
  4336                           	
  4337  01F0                     l5857:	
  4338                           	line	11
  4339                           	
  4340  01F0                     l7451:	
  4341  01F0  0878               	movf	(strlen@s),w
  4342  01F1  00F2               	movwf	(??_strlen+0)+0
  4343  01F2  3000               	movlw	((0x0/2))
  4344  01F3  00F3               	movwf	(??_strlen+0)+0+1
  4345  01F4  09F2               	comf	(??_strlen+0)+0,f
  4346  01F5  09F3               	comf	(??_strlen+0)+1,f
  4347  01F6  0AF2               	incf	(??_strlen+0)+0,f
  4348  01F7  1903               	skipnz
  4349  01F8  0AF3               	incf	(??_strlen+0)+1,f
  4350  01F9  0879               	movf	(strlen@cp),w
  4351  01FA  00F4               	movwf	(??_strlen+2)+0
  4352  01FB  3000               	movlw	((0x0/2))
  4353  01FC  00F5               	movwf	(??_strlen+2)+0+1
  4354  01FD  0872               	movf	0+(??_strlen+0)+0,w
  4355  01FE  0774               	addwf	0+(??_strlen+2)+0,w
  4356  01FF  00F6               	movwf	(??_strlen+4)+0
  4357  0200  0873               	movf	1+(??_strlen+0)+0,w
  4358  0201  1803               	skipnc
  4359  0202  0A73               	incf	1+(??_strlen+0)+0,w
  4360  0203  0775               	addwf	1+(??_strlen+2)+0,w
  4361  0204  00F7               	movwf	1+(??_strlen+4)+0
  4362  0205  0876               	movf	0+(??_strlen+4)+0,w
  4363  0206  3EFF               	addlw	low(-1)
  4364  0207  00F0               	movwf	(?_strlen)
  4365  0208  0877               	movf	1+(??_strlen+4)+0,w
  4366  0209  1803               	skipnc
  4367  020A  3E01               	addlw	1
  4368  020B  3EFF               	addlw	high(-1)
  4369  020C  00F1               	movwf	1+(?_strlen)
  4370  020D  2A0E               	goto	l5858
  4371                           	
  4372  020E                     l7453:	
  4373                           	line	12
  4374                           	
  4375  020E                     l5858:	
  4376  020E  0008               	return
  4377                           	opt stack 0
  4378                           GLOBAL	__end_of_strlen
  4379  020F                     	__end_of_strlen:
  4380 ;; =============== function _strlen ends ============
  4381                           
  4382                           	signat	_strlen,4218
  4383                           	global	_readByte
  4384                           psect	text595,local,class=CODE,delta=2
  4385                           global __ptext595
  4386  0081                     __ptext595:
  4387                           
  4388 ;; *************** function _readByte *****************
  4389 ;; Defined at:
  4390 ;;		line 86 in file "Bluetooth.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;		None
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      unsigned char 
  4397 ;; Registers used:
  4398 ;;		wreg
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4404 ;;      Params:         0       0       0       0       0
  4405 ;;      Locals:         0       0       0       0       0
  4406 ;;      Temps:          0       0       0       0       0
  4407 ;;      Totals:         0       0       0       0       0
  4408 ;;Total ram usage:        0 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_readString
  4414 ;;		_echoBack
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           psect	text595
  4418                           	file	"Bluetooth.c"
  4419                           	line	86
  4420                           	global	__size_of_readByte
  4421  000B                     	__size_of_readByte	equ	__end_of_readByte-_readByte
  4422                           	
  4423  0081                     _readByte:	
  4424                           	opt	stack 5
  4425                           ; Regs used in _readByte: [wreg]
  4426                           	line	90
  4427                           	
  4428  0081                     l7435:	
  4429                           ;Bluetooth.c: 90: while(!RCIF);
  4430  0081  2882               	goto	l766
  4431                           	
  4432  0082                     l767:	
  4433                           	
  4434  0082                     l766:	
  4435  0082  1283               	bcf	status, 5	;RP0=0, select bank0
  4436  0083  1303               	bcf	status, 6	;RP1=0, select bank0
  4437  0084  1E8C               	btfss	(101/8),(101)&7
  4438  0085  2887               	goto	u2601
  4439  0086  2888               	goto	u2600
  4440  0087                     u2601:
  4441  0087  2882               	goto	l766
  4442  0088                     u2600:
  4443  0088  2889               	goto	l7437
  4444                           	
  4445  0089                     l768:	
  4446                           	line	93
  4447                           	
  4448  0089                     l7437:	
  4449                           ;Bluetooth.c: 93: return RCREG;
  4450  0089  081A               	movf	(26),w	;volatile
  4451  008A  288B               	goto	l769
  4452                           	
  4453  008B                     l7439:	
  4454                           	line	94
  4455                           	
  4456  008B                     l769:	
  4457  008B  0008               	return
  4458                           	opt stack 0
  4459                           GLOBAL	__end_of_readByte
  4460  008C                     	__end_of_readByte:
  4461 ;; =============== function _readByte ends ============
  4462                           
  4463                           	signat	_readByte,89
  4464                           	global	_writeByte
  4465                           psect	text596,local,class=CODE,delta=2
  4466                           global __ptext596
  4467  0097                     __ptext596:
  4468                           
  4469 ;; *************** function _writeByte *****************
  4470 ;; Defined at:
  4471 ;;		line 68 in file "Bluetooth.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  Byte            1    wreg     unsigned char 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  Byte            1    0[COMMON] unsigned char 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;		None               void
  4478 ;; Registers used:
  4479 ;;		wreg
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4485 ;;      Params:         0       0       0       0       0
  4486 ;;      Locals:         1       0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0
  4488 ;;      Totals:         1       0       0       0       0
  4489 ;;Total ram usage:        1 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_writeString
  4495 ;;		_checkEven
  4496 ;;		_checkLength
  4497 ;;		_checkDataFrames
  4498 ;;		_checkStartByte
  4499 ;;		_checkRWByte
  4500 ;;		_checkCMDByte
  4501 ;;		_checkCS
  4502 ;;		_getPacket
  4503 ;;		_getTemp
  4504 ;;		_echoBack
  4505 ;;		_displayPacket
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           psect	text596
  4509                           	file	"Bluetooth.c"
  4510                           	line	68
  4511                           	global	__size_of_writeByte
  4512  000C                     	__size_of_writeByte	equ	__end_of_writeByte-_writeByte
  4513                           	
  4514  0097                     _writeByte:	
  4515                           	opt	stack 4
  4516                           ; Regs used in _writeByte: [wreg]
  4517                           ;writeByte@Byte stored from wreg
  4518  0097  00F0               	movwf	(writeByte@Byte)
  4519                           	line	72
  4520                           	
  4521  0098                     l7431:	
  4522                           ;Bluetooth.c: 72: while(!TXIF);
  4523  0098  2899               	goto	l760
  4524                           	
  4525  0099                     l761:	
  4526                           	
  4527  0099                     l760:	
  4528  0099  1283               	bcf	status, 5	;RP0=0, select bank0
  4529  009A  1303               	bcf	status, 6	;RP1=0, select bank0
  4530  009B  1E0C               	btfss	(100/8),(100)&7
  4531  009C  289E               	goto	u2591
  4532  009D  289F               	goto	u2590
  4533  009E                     u2591:
  4534  009E  2899               	goto	l760
  4535  009F                     u2590:
  4536  009F  28A0               	goto	l7433
  4537                           	
  4538  00A0                     l762:	
  4539                           	line	75
  4540                           	
  4541  00A0                     l7433:	
  4542                           ;Bluetooth.c: 75: TXREG = Byte;
  4543  00A0  0870               	movf	(writeByte@Byte),w
  4544  00A1  0099               	movwf	(25)	;volatile
  4545                           	line	76
  4546                           	
  4547  00A2                     l763:	
  4548  00A2  0008               	return
  4549                           	opt stack 0
  4550                           GLOBAL	__end_of_writeByte
  4551  00A3                     	__end_of_writeByte:
  4552 ;; =============== function _writeByte ends ============
  4553                           
  4554                           	signat	_writeByte,4216
  4555                           	global	_initUSART
  4556                           psect	text597,local,class=CODE,delta=2
  4557                           global __ptext597
  4558  00A3                     __ptext597:
  4559                           
  4560 ;; *************** function _initUSART *****************
  4561 ;; Defined at:
  4562 ;;		line 17 in file "Bluetooth.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;		None
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;		None
  4567 ;; Return value:  Size  Location     Type
  4568 ;;		None               void
  4569 ;; Registers used:
  4570 ;;		wreg
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4576 ;;      Params:         0       0       0       0       0
  4577 ;;      Locals:         0       0       0       0       0
  4578 ;;      Temps:          0       0       0       0       0
  4579 ;;      Totals:         0       0       0       0       0
  4580 ;;Total ram usage:        0 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_main
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           psect	text597
  4589                           	file	"Bluetooth.c"
  4590                           	line	17
  4591                           	global	__size_of_initUSART
  4592  000F                     	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  4593                           	
  4594  00A3                     _initUSART:	
  4595                           	opt	stack 7
  4596                           ; Regs used in _initUSART: [wreg]
  4597                           	line	19
  4598                           	
  4599  00A3                     l7427:	
  4600                           ;Bluetooth.c: 19: TRISC6 = 0;
  4601  00A3  1683               	bsf	status, 5	;RP0=1, select bank1
  4602  00A4  1303               	bcf	status, 6	;RP1=0, select bank1
  4603  00A5  1307               	bcf	(1086/8)^080h,(1086)&7
  4604                           	line	22
  4605                           ;Bluetooth.c: 22: TRISC7 = 1;
  4606  00A6  1787               	bsf	(1087/8)^080h,(1087)&7
  4607                           	line	35
  4608                           	
  4609  00A7                     l7429:	
  4610                           ;Bluetooth.c: 35: RCSTA = 0x90;
  4611  00A7  3090               	movlw	(090h)
  4612  00A8  1283               	bcf	status, 5	;RP0=0, select bank0
  4613  00A9  1303               	bcf	status, 6	;RP1=0, select bank0
  4614  00AA  0098               	movwf	(24)	;volatile
  4615                           	line	49
  4616                           ;Bluetooth.c: 49: TXSTA = 0x24;
  4617  00AB  3024               	movlw	(024h)
  4618  00AC  1683               	bsf	status, 5	;RP0=1, select bank1
  4619  00AD  1303               	bcf	status, 6	;RP1=0, select bank1
  4620  00AE  0098               	movwf	(152)^080h	;volatile
  4621                           	line	57
  4622                           ;Bluetooth.c: 57: SPBRG = 129;
  4623  00AF  3081               	movlw	(081h)
  4624  00B0  0099               	movwf	(153)^080h	;volatile
  4625                           	line	58
  4626                           	
  4627  00B1                     l757:	
  4628  00B1  0008               	return
  4629                           	opt stack 0
  4630                           GLOBAL	__end_of_initUSART
  4631  00B2                     	__end_of_initUSART:
  4632 ;; =============== function _initUSART ends ============
  4633                           
  4634                           	signat	_initUSART,88
  4635                           psect	text598,local,class=CODE,delta=2
  4636                           global __ptext598
  4637  0000                     __ptext598:
  4638                           	global	btemp
  4639  007E                     	btemp set 07Eh
  4640                           
  4641                           	DABS	1,126,2	;btemp
  4642                           	global	wtemp0
  4643  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Dec 13 13:50:29 2013

                         pc 0002                          _RD 0C60                          _WR 0C61  
                        fsr 0004                 _userEndByte 0063                         l760 0099  
                       l761 0099                         l762 00A0                         l763 00A2  
                       l757 00B1                         l781 029F                         l766 0082  
                       l782 0284                         l767 0082                         l775 0197  
                       l783 02AE                         l791 0131                         l768 0089  
                       l776 0184                         l784 02BE                         l769 008B  
                       l777 01A8                         l778 01AE                         l787 00BD  
                       l788 00C0                         _GIE 005F                         fsr0 0004  
                       indf 0000            ?_checkDataFrames 0072                        l1600 061E  
                      l1601 05E9                        l1602 0630                        l1603 0630  
                      l3134 0096                        l1560 01D4                        l3137 006F  
                      l1561 01DD                        l1570 07FF                        l1571 07EA  
                      l1556 014F                        l1564 0675                        l2372 030E  
                      l1572 07B4                        l1557 0158                        l1565 06CA  
                      l1581 04D1                        l1573 07FE                        l1566 06C1  
                      l2366 0169                        l1574 07FF                        l1567 06C0  
                      l1583 0496                        l1591 026A                        l2367 0169  
                      l1584 04DC                        l1592 0273                        l2368 016E  
                      l1577 0467                        l2369 017F                        l1578 0472  
                      l1587 05AE                        l1595 035A                        l1588 05B9  
                      l1596 0359                        l1597 035F                        l5171 0210  
                      l5172 0211                        l5173 0211                        l5174 0218  
                      l5175 022C                        l5176 023E                        l5177 023F  
                      l5178 023F                        l4554 00EF                        l4555 00F7  
                      l4556 010C                        l3925 038D                        l3934 0407  
                      l3926 03AD                        l3935 040E                        l3927 03AE  
                      l3936 040E                        l3928 03AF                        l3929 03AF  
                      l3939 0549                        l7501 008C                        l7431 0098  
                      l7503 006B                        l7511 0197                        l7433 00A0  
                      l7513 01A8                        l7505 0181                        l7521 028E  
                      l7601 046D                        l7427 00A3                        l7435 0081  
                      l7451 01F0                        l7507 0184                        l7523 0294  
                      l7515 0277                        l7531 012F                        l7603 0472  
                      l7611 049C                        l7429 00A7                        l7437 0089  
                      l7453 020E                        l7461 0227                        l7509 0190  
                      l7525 029F                        l7517 0279                        l7533 0131  
                      l7541 014E                        l7621 04DC                        l7613 04C9  
                      l7605 0473                        l7701 0341                        l7439 008B  
                      l5855 01E5                        l7447 01DF                        l7471 0236  
                      l7463 022B                        l7455 0218                        l7527 02AE  
                      l7519 0284                        l7543 014F                        l7535 0132  
                      l7551 01C8                        l7615 04D0                        l7607 0484  
                      l7631 05AD                        l7623 054A                        l7703 0351  
                      l7711 04DD                        l5856 01E4                        l5857 01F0  
                      l7449 01E5                        l7473 023C                        l7465 0230  
                      l7457 021E                        l7481 00BD                        l7529 0110  
                      l7545 0155                        l7537 0143                        l7561 01DD  
                      l7553 01CE                        l7617 04D1                        l7609 0496  
                      l7625 0573                        l7633 05AE                        l7641 025E  
                      l7705 0358                        l7721 051A                        l7713 04E2  
                      l5858 020E                        l7467 0234                        l7459 0224  
                      l7483 00C0                        l7475 00B3                        l7547 0158  
                      l7539 0149                        l7555 01D3                        l7571 0673  
                      l7563 0631                        l7619 04D7                        l7635 05B4  
                      l7627 05A0                        l7651 0273                        l7643 0264  
                      l7707 035A                        l7723 0520                        l7715 04EF  
                      l7731 03BF                        l7469 0235                        l7477 00B9  
                      l7485 00F7                        l7557 01D4                        l7549 01AF  
                      l7581 06BF                        l7573 0674                        l7565 0642  
                      l7637 05B9                        l7629 05A6                        l7645 0269  
                      l7661 061E                        l7653 05BA                        l7709 035F  
                      l7725 0531                        l7717 04F5                        l7741 0400  
                      l7733 03D6                        l7479 00BC                        l7487 010C  
                      l7559 01DA                        l7583 06C1                        l7567 0668  
                      l7575 0675                        l7591 042C                        l7647 026A  
                      l7639 0240                        l7655 05E7                        l7671 017F  
                      l7663 0159                        l7727 0537                        l7719 0507  
                      l7743 0407                        l7735 03DC                        l7751 0381  
                      l7585 06C7                        l7577 06B4                        l7569 066E  
                      l7593 0432                        l7649 0270                        l7657 05E9  
                      l7665 015C                        l7673 02BF                        l7681 06E6  
                      l7737 03ED                        l7729 03B2                        l7761 03A7  
                      l7753 0386                        l7745 0360                        l7587 06CA  
                      l7579 06BA                        l7595 045F                        l7659 0617  
                      l7667 0165                        l7691 07EA                        l7683 07B0  
                      l7675 06CE                        l7739 03F3                        l7755 038D  
                      l7747 0377                        _ADON 00F8                        l7597 0466  
                      l7589 040F                        l7669 016E                        l7685 07B4  
                      l7677 06D0                        l7693 030F                        l7757 0392  
                      l7749 037C                        l7599 0467                        l7687 07DD  
                      l7679 06DB                        l7695 031C                        l7759 03A1  
                      l7689 07E5                        l7697 0329                        l7699 0336  
                      u2600 0088                        u2601 0087                        u2610 01EF  
                      u2611 01EE                        u2620 0217                        u2621 0216  
                      u2630 022B                        u2710 0143                        u2631 022A  
                      u2711 0142                        u2640 023C                        u2720 01C8  
                      u2800 0573                        u2641 023B                        u2705 011A  
                      u2721 01C7                        u2801 0572                        u2650 00B9  
                      u2730 0642                        u2810 025E                        u2651 00B8  
                      u2731 0641                        u2811 025D                        u2660 00F6  
                      u2740 0668                        u2820 062F                        u2900 0341  
                      u2661 00F5                        u2741 0667                        u2821 062E  
                      u2901 0340                        u2590 009F                        u2830 016D  
                      u2910 0351                        u2591 009E                        u2831 016C  
                      u2911 0350                        u2680 01A7                        u2760 06B4  
                      u2840 06DB                        u2920 03C9                        u2681 01A6  
                      u2761 06B3                        u2841 06DA                        u2690 02AD  
                      u2770 042C                        u2850 06E6                        u2930 0400  
                      u2691 02AC                        u2755 0685                        u2771 042B  
                      u2851 06E5                        u2931 03FF                        u2780 0484  
                      u2860 07FD                        u2940 036A                        u2685 01A3  
                      u2765 06B0                        u2781 0483                        u2861 07FC  
                      u2790 0495                        u2870 031C                        u2950 03A7  
                      u2791 0494                        u2871 031B                        u2951 03A6  
                      u2880 0329                        u2881 0328                        u2890 0336  
                      u2891 0335                        _RCIF 0065                        u2967 039A  
                      u2977 0160                        _WREN 0C62                        _TXIF 0064  
            ??_eeprom_write 007B      __end_of_checkStartByte 0473                        _main 0360  
             _startByteAddr 005A                        btemp 007E                        start 0000  
         _addDataToCheckSum 05BA          ?_addDataToCheckSum 0070       makeHexByte@input_byte 0023  
                     ?_main 0070         ??_addDataToCheckSum 0020                       _EEADR 010D  
                     _CARRY 0018        __size_of_checkRWByte 006A                       _RCREG 001A  
                     _RCSTA 0018                       _SPBRG 0099             __end_of_checkCS 0274  
      __size_of_checkLength 002F                       _TRISA 0085                       _TXREG 0019  
                     _TXSTA 0098                 _writeString 0180             __end_of_getTemp 054A  
           __end_of_initADC 0097                       _tempC 005B                       _tempF 005C  
                     pclath 000A                       status 0003             ?_checkStartByte 0020  
                     wtemp0 007E   __end_of_addDataToCheckSum 0631                ?_parsePacket 0070  
              __end_of_main 03B2       __size_of_checkCMDByte 0070                      ??_main 0062  
             _userStartByte 0064                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D                      _TRISC6 043E  
                    _TRISC7 043F                _checkCMDByte 054A        __size_of_eeprom_read 001F  
      __size_of_makeHexByte 0025                      _maxCmd 0055            __end_of_initTemp 030F  
          __end_of_readByte 008C                   ??_checkCS 0074            __end_of_readTemp 0180  
      __end_of_eeprom_write 0240     __size_of_validatePacket 0051                   ??_getTemp 007D  
     readString@readStorage 0022                      clrloop 0071                      _strlen 01DE  
                 ??_initADC 0070                 readString@i 0023           makeHexByte@nibOne 0022  
         makeHexByte@nibTwo 007D             eeprom_read@addr 0071  __size_of_addDataToCheckSum 0077  
            __pcstackCOMMON 0070                __pidataBANK1 0078          __size_of_checkEven 0027  
        __size_of_getPacket 005D           eeprom_write@value 007A                  _csByteAddr 004B  
                __pbssBANK1 00A0          __size_of_initUSART 000F              _calcCSByteAddr 0049  
                __pmaintext 0360        __size_of_parsePacket 0135                     ?_strlen 0070  
              ?_writeString 0070                  _makeNibble 00B2            ??_checkStartByte 0022  
         __end_of_checkEven 0159                   ?_initTemp 0070                   ?_readByte 0070  
                 ?_readTemp 0070          __size_of_writeByte 000C    __size_of_checkDataFrames 009A  
         __end_of_getPacket 040F       __size_of_eeprom_write 0031                  _humValAddr 0053  
             ??_checkRWByte 0022                     _checkCS 0240                  _readString 0274  
             ??_checkLength 0074              _validatePacket 030F                  _humStartHi 0051  
         __end_of_initUSART 00B2                  _humStartLo 0052                     _getTemp 04DD  
                   _initADC 008C             __size_of_strlen 0031                     _member1 002A  
                   _member2 0009                     _member3 001D        end_of_initialization 00EA  
     parsePacket@dataPacket 002B                  ??_initTemp 007D                  ??_readByte 0070  
                   init_ram 00C5                  _selectTemp 006B                  ??_readTemp 0072  
              _eeprom_write 020F                readString@ch 0025              main@testString 0066  
                _tempHiAddr 005D                  _rwByteAddr 0059                  _tempLoAddr 005E  
             _dataBytesAddr 004C              getPacket@F1168 00A0      __end_of_validatePacket 0360  
                   strlen@s 0078           __end_of_writeByte 00A3         __end_of_checkRWByte 04DD  
       __end_of_checkLength 01DE                 ?_makeNibble 0070                writeString@i 007C  
             ??_eeprom_read 0070                   _RXLenAddr 0048               ??_makeHexByte 0020  
           ?_validatePacket 0024           ??_checkDataFrames 0074                 ?_readString 0070  
            __end_of_strlen 020F         start_initialization 00D4        __size_of_writeString 002F  
              parsePacket@i 002A                 ?_selectTemp 0070         __end_of_eeprom_read 010D  
       __size_of_makeNibble 000F                 __pdataBANK1 00D2                 _checkRWByte 0473  
               _cmdByteAddr 004A         __end_of_makeHexByte 0132                 _checkLength 01AF  
                  ??_strlen 0072               __pcstackBANK0 0020            eeprom_write@addr 007C  
       __size_of_readString 004B                   _checkEven 0132                 _endByteAddr 004D  
             ??_parsePacket 0024           __size_of_initTemp 0050           __size_of_readByte 000B  
         __size_of_readTemp 0027                   _classTerm 0036                   _getPacket 03B2  
                 __ptext580 054A                   __ptext572 03B2                   __ptext581 0473  
                 __ptext573 04DD                   __ptext590 008C                   __ptext582 040F  
                 __ptext574 030F                   __ptext591 00EE                   __ptext583 0631  
                 __ptext575 06CB                   __ptext592 00B2                   __ptext584 01AF  
                 __ptext576 02BF                   __ptext593 020F                   __ptext585 0132  
                 __ptext577 0159                   __ptext594 01DE                   __ptext586 010D  
                 __ptext578 05BA                   __ptext595 0081                   __ptext587 0274  
                 __ptext579 0240                   __ptext596 0097                   __ptext588 0180  
                 __ptext597 00A3                   __ptext589 006B                   __ptext598 0000  
                  ?_checkCS 0072                   _noDataLen 0058                   __pstrings 0003  
                  ?_getTemp 0070                    ?_initADC 0070         __size_of_selectTemp 0005  
                 _humHiAddr 004F                   _initUSART 00A3                   _humLoAddr 0050  
                ?_checkEven 0072                 _eeprom_read 00EE               ?_checkCMDByte 0020  
               _makeHexByte 010D                    _GO_nDONE 00FA                  ?_getPacket 0070  
                 main@F1165 00D2                 _lenByteAddr 0054         __end_of_parsePacket 0800  
               __stringbase 0008                  ?_initUSART 0070                ??_makeNibble 0070  
                 _writeByte 0097             _checkDataFrames 0631              ??_checkCMDByte 0022  
          ??_validatePacket 007E     __size_of_checkStartByte 0064                   init_fetch 00C1  
        __end_of_makeNibble 00C1                ??_readString 0020                 _newLineChar 0057  
               _minSizeByte 0056            __size_of_checkCS 0034            __size_of_getTemp 006D  
          __size_of_initADC 000B                    _classNum 0040                  ?_writeByte 0070  
     writeString@userString 007B                ??_selectTemp 0070                    _initTemp 02BF  
                  _readByte 0081                    _readTemp 0159               __size_of_main 0052  
               ??_checkEven 0074          __end_of_readString 02BF                    _groupNum 004E  
               _parsePacket 06CB                    clear_ram 0070                _tempUnitAddr 0061  
               ??_getPacket 002C                ?_checkRWByte 0020                ?_checkLength 0072  
    parsePacket@dataCounter 0028               ??_writeString 007A          addDataToCheckSum@i 007D  
        __end_of_selectTemp 0070                 ??_initUSART 0070     __end_of_checkDataFrames 06CB  
               _tempValAddr 0062                   stringcode 0003           makeNibble@tempNib 0070  
        getTemp@tempReading 0020                 _tempStartHi 005F                 _tempStartLo 0060  
         getPacket@arrStore 0030               writeByte@Byte 0070                    strlen@cp 0079  
      __end_of_checkCMDByte 05BA                    stringdir 0003                    stringtab 0003  
               ??_writeByte 0070         __end_of_writeString 01AF               ?_eeprom_write 007A  
              ?_eeprom_read 0070              _checkStartByte 040F                ?_makeHexByte 007D  
