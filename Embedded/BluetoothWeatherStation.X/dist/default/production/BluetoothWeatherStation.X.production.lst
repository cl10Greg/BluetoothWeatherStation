

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Dec 13 14:45:28 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 31 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 31 "main.c"
    45  2007  FF3A               	dw 0xFFFB & 0xFF7F & 0xFFBF & 0xFFFE & 0xFFFF ;#
    46                           	FNCALL	_main,_initUSART
    47                           	FNCALL	_main,_initADC
    48                           	FNCALL	_main,_initTemp
    49                           	FNCALL	_main,_writeString
    50                           	FNCALL	_main,_getTemp
    51                           	FNCALL	_main,_writeByte
    52                           	FNCALL	_main,_getPacket
    53                           	FNCALL	_getPacket,_eeprom_write
    54                           	FNCALL	_getPacket,_writeByte
    55                           	FNCALL	_getPacket,_readString
    56                           	FNCALL	_getPacket,_eeprom_read
    57                           	FNCALL	_getPacket,_parsePacket
    58                           	FNCALL	_getPacket,_validatePacket
    59                           	FNCALL	_getPacket,_getCommands
    60                           	FNCALL	_getPacket,_setCommands
    61                           	FNCALL	_getTemp,_selectTemp
    62                           	FNCALL	_getTemp,_readTemp
    63                           	FNCALL	_getTemp,_eeprom_write
    64                           	FNCALL	_validatePacket,_checkStartByte
    65                           	FNCALL	_validatePacket,_checkRWByte
    66                           	FNCALL	_validatePacket,_checkCMDByte
    67                           	FNCALL	_validatePacket,_checkDataFrames
    68                           	FNCALL	_validatePacket,_addDataToCheckSum
    69                           	FNCALL	_validatePacket,_checkCS
    70                           	FNCALL	_parsePacket,_checkLength
    71                           	FNCALL	_parsePacket,_checkEven
    72                           	FNCALL	_parsePacket,_makeHexByte
    73                           	FNCALL	_parsePacket,_eeprom_write
    74                           	FNCALL	_parsePacket,_strlen
    75                           	FNCALL	_parsePacket,_eeprom_read
    76                           	FNCALL	_getCommands,_writeByte
    77                           	FNCALL	_getCommands,_eeprom_read
    78                           	FNCALL	_initTemp,_eeprom_write
    79                           	FNCALL	_addDataToCheckSum,_eeprom_read
    80                           	FNCALL	_addDataToCheckSum,_eeprom_write
    81                           	FNCALL	_checkCS,_eeprom_read
    82                           	FNCALL	_checkCS,_writeByte
    83                           	FNCALL	_checkCMDByte,_eeprom_read
    84                           	FNCALL	_checkCMDByte,_eeprom_write
    85                           	FNCALL	_checkCMDByte,_writeByte
    86                           	FNCALL	_checkRWByte,_eeprom_read
    87                           	FNCALL	_checkRWByte,_writeByte
    88                           	FNCALL	_checkRWByte,_eeprom_write
    89                           	FNCALL	_checkStartByte,_eeprom_read
    90                           	FNCALL	_checkStartByte,_writeByte
    91                           	FNCALL	_checkStartByte,_eeprom_write
    92                           	FNCALL	_checkDataFrames,_eeprom_read
    93                           	FNCALL	_checkDataFrames,_writeByte
    94                           	FNCALL	_checkLength,_eeprom_read
    95                           	FNCALL	_checkLength,_writeByte
    96                           	FNCALL	_checkEven,_eeprom_read
    97                           	FNCALL	_checkEven,_writeByte
    98                           	FNCALL	_makeHexByte,_makeNibble
    99                           	FNCALL	_readString,_readByte
   100                           	FNCALL	_readString,_eeprom_write
   101                           	FNCALL	_writeString,_writeByte
   102                           	FNCALL	_writeString,_strlen
   103                           	FNROOT	_main
   104                           	global	main@F1170
   105                           psect	idataBANK1,class=CODE,space=0,delta=2
   106                           global __pidataBANK1
   107  0FD5                     __pidataBANK1:
   108                           	file	"main.c"
   109                           	line	46
   110                           
   111                           ;initializer for main@F1170
   112  0FD5  3457               	retlw	057h
   113  0FD6  3465               	retlw	065h
   114  0FD7  346C               	retlw	06Ch
   115  0FD8  3463               	retlw	063h
   116  0FD9  346F               	retlw	06Fh
   117  0FDA  346D               	retlw	06Dh
   118  0FDB  3465               	retlw	065h
   119  0FDC  340A               	retlw	0Ah
   120  0FDD  3400               	retlw	0
   121                           	global	_member2
   122                           psect	strings,class=STRING,delta=2
   123                           global __pstrings
   124  0003                     __pstrings:
   125                           ;	global	stringdir,stringtab,__stringbase
   126  0003                     stringtab:
   127                           ;	String table - string pointers are 1 byte each
   128  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   129  0003  3000               movlw high(stringdir)
   130  0004  008A               movwf pclath
   131  0005  0804               movf fsr,w
   132  0006  0A84               incf fsr
   133  0007  0782               	addwf pc
   134  0008                     __stringbase:
   135  0008  3400               	retlw	0
   136                           psect	strings
   137                           	file	"userMacro.h"
   138                           	line	20
   139  0009                     _member2:
   140  0009  3444               	retlw	044h
   141  000A  3465               	retlw	065h
   142  000B  3465               	retlw	065h
   143  000C  3470               	retlw	070h
   144  000D  3461               	retlw	061h
   145  000E  346B               	retlw	06Bh
   146  000F  3420               	retlw	020h
   147  0010  3443               	retlw	043h
   148  0011  3468               	retlw	068h
   149  0012  3461               	retlw	061h
   150  0013  346E               	retlw	06Eh
   151  0014  3464               	retlw	064h
   152  0015  3472               	retlw	072h
   153  0016  3461               	retlw	061h
   154  0017  3473               	retlw	073h
   155  0018  3465               	retlw	065h
   156  0019  346B               	retlw	06Bh
   157  001A  3461               	retlw	061h
   158  001B  3472               	retlw	072h
   159  001C  3400               	retlw	0
   160                           	global	_member3
   161                           psect	strings
   162                           	file	"userMacro.h"
   163                           	line	21
   164  001D                     _member3:
   165  001D  3441               	retlw	041h
   166  001E  3470               	retlw	070h
   167  001F  3475               	retlw	075h
   168  0020  3472               	retlw	072h
   169  0021  3476               	retlw	076h
   170  0022  3465               	retlw	065h
   171  0023  3420               	retlw	020h
   172  0024  3442               	retlw	042h
   173  0025  3468               	retlw	068h
   174  0026  3469               	retlw	069h
   175  0027  3464               	retlw	064h
   176  0028  3465               	retlw	065h
   177  0029  3400               	retlw	0
   178                           	global	_member1
   179                           psect	strings
   180                           	file	"userMacro.h"
   181                           	line	19
   182  002A                     _member1:
   183  002A  3447               	retlw	047h
   184  002B  3472               	retlw	072h
   185  002C  3465               	retlw	065h
   186  002D  3467               	retlw	067h
   187  002E  3420               	retlw	020h
   188  002F  3447               	retlw	047h
   189  0030  3469               	retlw	069h
   190  0031  3472               	retlw	072h
   191  0032  3461               	retlw	061h
   192  0033  3472               	retlw	072h
   193  0034  3464               	retlw	064h
   194  0035  3400               	retlw	0
   195                           	global	_classTerm
   196                           psect	strings
   197                           	file	"userMacro.h"
   198                           	line	23
   199  0036                     _classTerm:
   200  0036  3446               	retlw	046h
   201  0037  3461               	retlw	061h
   202  0038  346C               	retlw	06Ch
   203  0039  346C               	retlw	06Ch
   204  003A  3420               	retlw	020h
   205  003B  3432               	retlw	032h
   206  003C  3430               	retlw	030h
   207  003D  3431               	retlw	031h
   208  003E  3433               	retlw	033h
   209  003F  3400               	retlw	0
   210                           	global	_classNum
   211                           psect	strings
   212                           	file	"userMacro.h"
   213                           	line	22
   214  0040                     _classNum:
   215  0040  3445               	retlw	045h
   216  0041  3443               	retlw	043h
   217  0042  3445               	retlw	045h
   218  0043  3435               	retlw	035h
   219  0044  3436               	retlw	036h
   220  0045  3432               	retlw	032h
   221  0046  3430               	retlw	030h
   222  0047  3400               	retlw	0
   223                           	global	_RXLenAddr
   224                           psect	strings
   225                           	file	"userMacro.h"
   226                           	line	35
   227  0048                     _RXLenAddr:
   228  0048  3400               	retlw	0
   229                           	global	_calcCSByteAddr
   230                           psect	strings
   231                           	file	"userMacro.h"
   232                           	line	44
   233  0049                     _calcCSByteAddr:
   234  0049  3430               	retlw	030h
   235                           	global	_cmdByteAddr
   236                           psect	strings
   237                           	file	"userMacro.h"
   238                           	line	38
   239  004A                     _cmdByteAddr:
   240  004A  3403               	retlw	03h
   241                           	global	_csByteAddr
   242                           psect	strings
   243                           	file	"userMacro.h"
   244                           	line	40
   245  004B                     _csByteAddr:
   246  004B  3405               	retlw	05h
   247                           	global	_dataBytesAddr
   248                           psect	strings
   249                           	file	"userMacro.h"
   250                           	line	42
   251  004C                     _dataBytesAddr:
   252  004C  3407               	retlw	07h
   253                           	global	_endByteAddr
   254                           psect	strings
   255                           	file	"userMacro.h"
   256                           	line	41
   257  004D                     _endByteAddr:
   258  004D  3406               	retlw	06h
   259                           	global	_groupNum
   260                           psect	strings
   261                           	file	"userMacro.h"
   262                           	line	24
   263  004E                     _groupNum:
   264  004E  3432               	retlw	032h
   265                           	global	_humHiAddr
   266                           psect	strings
   267                           	file	"userMacro.h"
   268                           	line	58
   269  004F                     _humHiAddr:
   270  004F  3482               	retlw	082h
   271                           	global	_humLoAddr
   272                           psect	strings
   273                           	file	"userMacro.h"
   274                           	line	59
   275  0050                     _humLoAddr:
   276  0050  3484               	retlw	084h
   277                           	global	_humStartHi
   278                           psect	strings
   279                           	file	"userMacro.h"
   280                           	line	61
   281  0051                     _humStartHi:
   282  0051  3450               	retlw	050h
   283                           	global	_humStartLo
   284                           psect	strings
   285                           	file	"userMacro.h"
   286                           	line	62
   287  0052                     _humStartLo:
   288  0052  340A               	retlw	0Ah
   289                           	global	_humValAddr
   290                           psect	strings
   291                           	file	"userMacro.h"
   292                           	line	57
   293  0053                     _humValAddr:
   294  0053  3480               	retlw	080h
   295                           	global	_lenByteAddr
   296                           psect	strings
   297                           	file	"userMacro.h"
   298                           	line	39
   299  0054                     _lenByteAddr:
   300  0054  3404               	retlw	04h
   301                           	global	_maxCmd
   302                           psect	strings
   303                           	file	"userMacro.h"
   304                           	line	31
   305  0055                     _maxCmd:
   306  0055  340E               	retlw	0Eh
   307                           	global	_minSizeByte
   308                           psect	strings
   309                           	file	"userMacro.h"
   310                           	line	29
   311  0056                     _minSizeByte:
   312  0056  340A               	retlw	0Ah
   313                           	global	_newLineChar
   314                           psect	strings
   315                           	file	"userMacro.h"
   316                           	line	28
   317  0057                     _newLineChar:
   318  0057  340A               	retlw	0Ah
   319                           	global	_noDataLen
   320                           psect	strings
   321                           	file	"userMacro.h"
   322                           	line	30
   323  0058                     _noDataLen:
   324  0058  340A               	retlw	0Ah
   325                           	global	_readByteVal
   326                           psect	strings
   327                           	file	"userMacro.h"
   328                           	line	32
   329  0059                     _readByteVal:
   330  0059  3400               	retlw	0
   331                           	global	_rwByteAddr
   332                           psect	strings
   333                           	file	"userMacro.h"
   334                           	line	37
   335  005A                     _rwByteAddr:
   336  005A  3402               	retlw	02h
   337                           	global	_startByteAddr
   338                           psect	strings
   339                           	file	"userMacro.h"
   340                           	line	36
   341  005B                     _startByteAddr:
   342  005B  3401               	retlw	01h
   343                           	global	_tempC
   344                           psect	strings
   345                           	file	"userMacro.h"
   346                           	line	54
   347  005C                     _tempC:
   348  005C  3400               	retlw	0
   349                           	global	_tempF
   350                           psect	strings
   351                           	file	"userMacro.h"
   352                           	line	55
   353  005D                     _tempF:
   354  005D  3410               	retlw	010h
   355                           	global	_tempHiAddr
   356                           psect	strings
   357                           	file	"userMacro.h"
   358                           	line	48
   359  005E                     _tempHiAddr:
   360  005E  3462               	retlw	062h
   361                           	global	_tempLoAddr
   362                           psect	strings
   363                           	file	"userMacro.h"
   364                           	line	49
   365  005F                     _tempLoAddr:
   366  005F  3464               	retlw	064h
   367                           	global	_tempStartHi
   368                           psect	strings
   369                           	file	"userMacro.h"
   370                           	line	52
   371  0060                     _tempStartHi:
   372  0060  3464               	retlw	064h
   373                           	global	_tempStartLo
   374                           psect	strings
   375                           	file	"userMacro.h"
   376                           	line	53
   377  0061                     _tempStartLo:
   378  0061  34A0               	retlw	0A0h
   379                           	global	_tempUnitAddr
   380                           psect	strings
   381                           	file	"userMacro.h"
   382                           	line	50
   383  0062                     _tempUnitAddr:
   384  0062  3466               	retlw	066h
   385                           	global	_tempValHAddr
   386                           psect	strings
   387                           	file	"userMacro.h"
   388                           	line	46
   389  0063                     _tempValHAddr:
   390  0063  3460               	retlw	060h
   391                           	global	_tempValLAddr
   392                           psect	strings
   393                           	file	"userMacro.h"
   394                           	line	47
   395  0064                     _tempValLAddr:
   396  0064  3461               	retlw	061h
   397                           	global	_userEndByte
   398                           psect	strings
   399                           	file	"userMacro.h"
   400                           	line	27
   401  0065                     _userEndByte:
   402  0065  340A               	retlw	0Ah
   403                           	global	_userStartByte
   404                           psect	strings
   405                           	file	"userMacro.h"
   406                           	line	26
   407  0066                     _userStartByte:
   408  0066  34AA               	retlw	0AAh
   409                           	global	_writeByteVal
   410                           psect	strings
   411                           	file	"userMacro.h"
   412                           	line	33
   413  0067                     _writeByteVal:
   414  0067  3401               	retlw	01h
   415                           	global	_member2
   416                           	global	_member3
   417                           	global	_member1
   418                           	global	_classTerm
   419                           	global	_classNum
   420                           	global	_RXLenAddr
   421                           	global	_calcCSByteAddr
   422                           	global	_cmdByteAddr
   423                           	global	_csByteAddr
   424                           	global	_dataBytesAddr
   425                           	global	_endByteAddr
   426                           	global	_groupNum
   427                           	global	_humHiAddr
   428                           	global	_humLoAddr
   429                           	global	_humStartHi
   430                           	global	_humStartLo
   431                           	global	_humValAddr
   432                           	global	_lenByteAddr
   433                           	global	_maxCmd
   434                           	global	_minSizeByte
   435                           	global	_newLineChar
   436                           	global	_noDataLen
   437                           	global	_readByteVal
   438                           	global	_rwByteAddr
   439                           	global	_startByteAddr
   440                           	global	_tempC
   441                           	global	_tempF
   442                           	global	_tempHiAddr
   443                           	global	_tempLoAddr
   444                           	global	_tempStartHi
   445                           	global	_tempStartLo
   446                           	global	_tempUnitAddr
   447                           	global	_tempValHAddr
   448                           	global	_tempValLAddr
   449                           	global	_userEndByte
   450                           	global	_userStartByte
   451                           	global	_writeByteVal
   452                           	global	getPacket@F1173
   453                           	global	_ADCON0
   454  001F                     _ADCON0	set	31
   455                           	global	_ADRESH
   456  001E                     _ADRESH	set	30
   457                           	global	_RCREG
   458  001A                     _RCREG	set	26
   459                           	global	_RCSTA
   460  0018                     _RCSTA	set	24
   461                           	global	_TXREG
   462  0019                     _TXREG	set	25
   463                           	global	_ADON
   464  00F8                     _ADON	set	248
   465                           	global	_CARRY
   466  0018                     _CARRY	set	24
   467                           	global	_GIE
   468  005F                     _GIE	set	95
   469                           	global	_GO_nDONE
   470  00FA                     _GO_nDONE	set	250
   471                           	global	_RCIF
   472  0065                     _RCIF	set	101
   473                           	global	_TXIF
   474  0064                     _TXIF	set	100
   475                           	global	_ADCON1
   476  009F                     _ADCON1	set	159
   477                           	global	_ADRESL
   478  009E                     _ADRESL	set	158
   479                           	global	_SPBRG
   480  0099                     _SPBRG	set	153
   481                           	global	_TRISA
   482  0085                     _TRISA	set	133
   483                           	global	_TXSTA
   484  0098                     _TXSTA	set	152
   485                           	global	_TRISC6
   486  043E                     _TRISC6	set	1086
   487                           	global	_TRISC7
   488  043F                     _TRISC7	set	1087
   489                           	global	_EEADR
   490  010D                     _EEADR	set	269
   491                           	global	_EEDATA
   492  010C                     _EEDATA	set	268
   493                           	global	_EECON1
   494  018C                     _EECON1	set	396
   495                           	global	_EECON2
   496  018D                     _EECON2	set	397
   497                           	global	_RD
   498  0C60                     _RD	set	3168
   499                           	global	_WR
   500  0C61                     _WR	set	3169
   501                           	global	_WREN
   502  0C62                     _WREN	set	3170
   503                           	file	"C:\Users\ggirard\AppData\Local\Temp\s6sc."
   504                           	line	#
   505                           psect cinit,class=CODE,delta=2
   506                           global start_initialization
   507  009E                     start_initialization:
   508                           
   509                           psect	bssBANK1,class=BANK1,space=1
   510                           global __pbssBANK1
   511  00A0                     __pbssBANK1:
   512  00A0                     getPacket@F1173:
   513  00A0                            ds      50
   514                           
   515                           psect	dataBANK1,class=BANK1,space=1
   516                           global __pdataBANK1
   517  00D2                     __pdataBANK1:
   518                           	file	"main.c"
   519                           	line	46
   520  00D2                     main@F1170:
   521  00D2                            ds      9
   522                           
   523                           psect clrtext,class=CODE,delta=2
   524                           global clear_ram
   525                           ;	Called with FSR containing the base address, and
   526                           ;	W with the last address+1
   527  0FCD                     clear_ram:
   528  0FCD  0064               	clrwdt			;clear the watchdog before getting into this loop
   529  0FCE                     clrloop:
   530  0FCE  0180               	clrf	indf		;clear RAM location pointed to by FSR
   531  0FCF  0A84               	incf	fsr,f		;increment pointer
   532  0FD0  0604               	xorwf	fsr,w		;XOR with final address
   533  0FD1  1903               	btfsc	status,2	;have we reached the end yet?
   534  0FD2  3400               	retlw	0		;all done for this memory range, return
   535  0FD3  0604               	xorwf	fsr,w		;XOR again to restore value
   536  0FD4  2FCE               	goto	clrloop		;do the next byte
   537                           
   538                           ; Clear objects allocated to BANK1
   539                           psect cinit,class=CODE,delta=2
   540  009E  1383               	bcf	status, 7	;select IRP bank0
   541  009F  30A0               	movlw	low(__pbssBANK1)
   542  00A0  0084               	movwf	fsr
   543  00A1  30D2               	movlw	low((__pbssBANK1)+032h)
   544  00A2  120A  158A  27CD   	fcall	clear_ram
              120A  118A         
   545                           global btemp
   546                           psect inittext,class=CODE,delta=2
   547                           global init_fetch,btemp
   548                           ;	Called with low address in FSR and high address in W
   549  008B                     init_fetch:
   550  008B  087E               	movf btemp,w
   551  008C  008A               	movwf pclath
   552  008D  087F               	movf btemp+1,w
   553  008E  0082               	movwf pc
   554                           global init_ram
   555                           ;Called with:
   556                           ;	high address of idata address in btemp 
   557                           ;	low address of idata address in btemp+1 
   558                           ;	low address of data in FSR
   559                           ;	high address + 1 of data in btemp-1
   560  008F                     init_ram:
   561  008F  120A  118A  208B   	fcall init_fetch
              120A  118A         
   562  0094  0080               	movwf indf,f
   563  0095  0A84               	incf fsr,f
   564  0096  0804               	movf fsr,w
   565  0097  067D               	xorwf btemp-1,w
   566  0098  1903               	btfsc status,2
   567  0099  3400               	retlw 0
   568  009A  0AFF               	incf btemp+1,f
   569  009B  1903               	btfsc status,2
   570  009C  0AFE               	incf btemp,f
   571  009D  288F               	goto init_ram
   572                           ; Initialize objects allocated to BANK1
   573                           psect cinit,class=CODE,delta=2
   574                           global init_ram, __pidataBANK1
   575  00A7  30DB               	movlw low(__pdataBANK1+9)
   576  00A8  00FD               	movwf btemp-1,f
   577  00A9  300F               	movlw high(__pidataBANK1)
   578  00AA  00FE               	movwf btemp,f
   579  00AB  30D5               	movlw low(__pidataBANK1)
   580  00AC  00FF               	movwf btemp+1,f
   581  00AD  30D2               	movlw low(__pdataBANK1)
   582  00AE  0084               	movwf fsr,f
   583  00AF  120A  118A  208F   	fcall init_ram
              120A  118A         
   584                           psect cinit,class=CODE,delta=2
   585                           global end_of_initialization
   586                           
   587                           ;End of C runtime variable initialization code
   588                           
   589  00B4                     end_of_initialization:
   590  00B4  0183               clrf status
   591  00B5  120A  118A  2B31   ljmp _main	;jump to C main() function
   592                           psect	cstackCOMMON,class=COMMON,space=1
   593                           global __pcstackCOMMON
   594  0070                     __pcstackCOMMON:
   595                           	global	??_eeprom_read
   596  0070                     ??_eeprom_read:	; 0 bytes @ 0x0
   597                           	global	?_addDataToCheckSum
   598  0070                     ?_addDataToCheckSum:	; 0 bytes @ 0x0
   599                           	global	?_getTemp
   600  0070                     ?_getTemp:	; 0 bytes @ 0x0
   601                           	global	?_getPacket
   602  0070                     ?_getPacket:	; 0 bytes @ 0x0
   603                           	global	?_getCommands
   604  0070                     ?_getCommands:	; 0 bytes @ 0x0
   605                           	global	?_setCommands
   606  0070                     ?_setCommands:	; 0 bytes @ 0x0
   607                           	global	??_setCommands
   608  0070                     ??_setCommands:	; 0 bytes @ 0x0
   609                           	global	?_initUSART
   610  0070                     ?_initUSART:	; 0 bytes @ 0x0
   611                           	global	??_initUSART
   612  0070                     ??_initUSART:	; 0 bytes @ 0x0
   613                           	global	?_writeByte
   614  0070                     ?_writeByte:	; 0 bytes @ 0x0
   615                           	global	??_writeByte
   616  0070                     ??_writeByte:	; 0 bytes @ 0x0
   617                           	global	??_readByte
   618  0070                     ??_readByte:	; 0 bytes @ 0x0
   619                           	global	?_writeString
   620  0070                     ?_writeString:	; 0 bytes @ 0x0
   621                           	global	?_readString
   622  0070                     ?_readString:	; 0 bytes @ 0x0
   623                           	global	??_makeNibble
   624  0070                     ??_makeNibble:	; 0 bytes @ 0x0
   625                           	global	?_parsePacket
   626  0070                     ?_parsePacket:	; 0 bytes @ 0x0
   627                           	global	?_initTemp
   628  0070                     ?_initTemp:	; 0 bytes @ 0x0
   629                           	global	?_initADC
   630  0070                     ?_initADC:	; 0 bytes @ 0x0
   631                           	global	??_initADC
   632  0070                     ??_initADC:	; 0 bytes @ 0x0
   633                           	global	?_selectTemp
   634  0070                     ?_selectTemp:	; 0 bytes @ 0x0
   635                           	global	??_selectTemp
   636  0070                     ??_selectTemp:	; 0 bytes @ 0x0
   637                           	global	?_eeprom_read
   638  0070                     ?_eeprom_read:	; 1 bytes @ 0x0
   639                           	global	?_readByte
   640  0070                     ?_readByte:	; 1 bytes @ 0x0
   641                           	global	?_makeNibble
   642  0070                     ?_makeNibble:	; 1 bytes @ 0x0
   643                           	global	?_strlen
   644  0070                     ?_strlen:	; 2 bytes @ 0x0
   645                           	global	?_readTemp
   646  0070                     ?_readTemp:	; 2 bytes @ 0x0
   647                           	global	?_main
   648  0070                     ?_main:	; 2 bytes @ 0x0
   649                           	global	writeByte@Byte
   650  0070                     writeByte@Byte:	; 1 bytes @ 0x0
   651                           	global	makeNibble@tempNib
   652  0070                     makeNibble@tempNib:	; 1 bytes @ 0x0
   653  0070                     	ds	1
   654                           	global	eeprom_read@addr
   655  0071                     eeprom_read@addr:	; 1 bytes @ 0x1
   656  0071                     	ds	1
   657                           	global	??_strlen
   658  0072                     ??_strlen:	; 0 bytes @ 0x2
   659                           	global	??_getCommands
   660  0072                     ??_getCommands:	; 0 bytes @ 0x2
   661                           	global	??_readTemp
   662  0072                     ??_readTemp:	; 0 bytes @ 0x2
   663                           	global	?_checkEven
   664  0072                     ?_checkEven:	; 2 bytes @ 0x2
   665                           	global	?_checkLength
   666  0072                     ?_checkLength:	; 2 bytes @ 0x2
   667                           	global	?_checkDataFrames
   668  0072                     ?_checkDataFrames:	; 2 bytes @ 0x2
   669                           	global	?_checkCS
   670  0072                     ?_checkCS:	; 2 bytes @ 0x2
   671  0072                     	ds	2
   672                           	global	??_checkEven
   673  0074                     ??_checkEven:	; 0 bytes @ 0x4
   674                           	global	??_checkLength
   675  0074                     ??_checkLength:	; 0 bytes @ 0x4
   676                           	global	??_checkDataFrames
   677  0074                     ??_checkDataFrames:	; 0 bytes @ 0x4
   678                           	global	??_checkCS
   679  0074                     ??_checkCS:	; 0 bytes @ 0x4
   680  0074                     	ds	4
   681                           	global	strlen@s
   682  0078                     strlen@s:	; 1 bytes @ 0x8
   683  0078                     	ds	1
   684                           	global	strlen@cp
   685  0079                     strlen@cp:	; 1 bytes @ 0x9
   686  0079                     	ds	1
   687                           	global	??_writeString
   688  007A                     ??_writeString:	; 0 bytes @ 0xA
   689                           	global	?_eeprom_write
   690  007A                     ?_eeprom_write:	; 1 bytes @ 0xA
   691                           	global	eeprom_write@value
   692  007A                     eeprom_write@value:	; 1 bytes @ 0xA
   693  007A                     	ds	1
   694                           	global	??_eeprom_write
   695  007B                     ??_eeprom_write:	; 0 bytes @ 0xB
   696                           	global	writeString@userString
   697  007B                     writeString@userString:	; 1 bytes @ 0xB
   698  007B                     	ds	1
   699                           	global	eeprom_write@addr
   700  007C                     eeprom_write@addr:	; 1 bytes @ 0xC
   701                           	global	writeString@i
   702  007C                     writeString@i:	; 2 bytes @ 0xC
   703  007C                     	ds	1
   704                           	global	??_getTemp
   705  007D                     ??_getTemp:	; 0 bytes @ 0xD
   706                           	global	??_initTemp
   707  007D                     ??_initTemp:	; 0 bytes @ 0xD
   708                           	global	?_makeHexByte
   709  007D                     ?_makeHexByte:	; 1 bytes @ 0xD
   710                           	global	makeHexByte@nibTwo
   711  007D                     makeHexByte@nibTwo:	; 1 bytes @ 0xD
   712                           	global	addDataToCheckSum@i
   713  007D                     addDataToCheckSum@i:	; 1 bytes @ 0xD
   714  007D                     	ds	1
   715                           	global	??_validatePacket
   716  007E                     ??_validatePacket:	; 0 bytes @ 0xE
   717                           psect	cstackBANK0,class=BANK0,space=1
   718                           global __pcstackBANK0
   719  0020                     __pcstackBANK0:
   720                           	global	??_addDataToCheckSum
   721  0020                     ??_addDataToCheckSum:	; 0 bytes @ 0x0
   722                           	global	??_readString
   723  0020                     ??_readString:	; 0 bytes @ 0x0
   724                           	global	??_makeHexByte
   725  0020                     ??_makeHexByte:	; 0 bytes @ 0x0
   726                           	global	?_checkStartByte
   727  0020                     ?_checkStartByte:	; 2 bytes @ 0x0
   728                           	global	?_checkRWByte
   729  0020                     ?_checkRWByte:	; 2 bytes @ 0x0
   730                           	global	?_checkCMDByte
   731  0020                     ?_checkCMDByte:	; 2 bytes @ 0x0
   732                           	global	getTemp@tempReading
   733  0020                     getTemp@tempReading:	; 2 bytes @ 0x0
   734  0020                     	ds	2
   735                           	global	??_checkStartByte
   736  0022                     ??_checkStartByte:	; 0 bytes @ 0x2
   737                           	global	??_checkRWByte
   738  0022                     ??_checkRWByte:	; 0 bytes @ 0x2
   739                           	global	??_checkCMDByte
   740  0022                     ??_checkCMDByte:	; 0 bytes @ 0x2
   741                           	global	readString@readStorage
   742  0022                     readString@readStorage:	; 1 bytes @ 0x2
   743                           	global	makeHexByte@nibOne
   744  0022                     makeHexByte@nibOne:	; 1 bytes @ 0x2
   745  0022                     	ds	1
   746                           	global	makeHexByte@input_byte
   747  0023                     makeHexByte@input_byte:	; 1 bytes @ 0x3
   748                           	global	readString@i
   749  0023                     readString@i:	; 2 bytes @ 0x3
   750  0023                     	ds	1
   751                           	global	??_parsePacket
   752  0024                     ??_parsePacket:	; 0 bytes @ 0x4
   753                           	global	?_validatePacket
   754  0024                     ?_validatePacket:	; 2 bytes @ 0x4
   755  0024                     	ds	1
   756                           	global	readString@ch
   757  0025                     readString@ch:	; 1 bytes @ 0x5
   758  0025                     	ds	3
   759                           	global	parsePacket@dataCounter
   760  0028                     parsePacket@dataCounter:	; 2 bytes @ 0x8
   761  0028                     	ds	2
   762                           	global	parsePacket@i
   763  002A                     parsePacket@i:	; 1 bytes @ 0xA
   764  002A                     	ds	1
   765                           	global	parsePacket@dataPacket
   766  002B                     parsePacket@dataPacket:	; 1 bytes @ 0xB
   767  002B                     	ds	1
   768                           	global	??_getPacket
   769  002C                     ??_getPacket:	; 0 bytes @ 0xC
   770  002C                     	ds	4
   771                           	global	getPacket@arrStore
   772  0030                     getPacket@arrStore:	; 50 bytes @ 0x10
   773  0030                     	ds	50
   774                           	global	??_main
   775  0062                     ??_main:	; 0 bytes @ 0x42
   776  0062                     	ds	4
   777                           	global	main@testString
   778  0066                     main@testString:	; 9 bytes @ 0x46
   779  0066                     	ds	9
   780 ;;Data sizes: Strings 0, constant 95, data 9, bss 50, persistent 0 stack 0
   781 ;;Auto spaces:   Size  Autos    Used
   782 ;; COMMON          14     14      14
   783 ;; BANK0           80     79      79
   784 ;; BANK1           80      0      59
   785 ;; BANK3           96      0       0
   786 ;; BANK2           96      0       0
   787                           
   788 ;;
   789 ;; Pointer list with targets:
   790                           
   791 ;; ?_readTemp	unsigned int  size(1) Largest target is 0
   792 ;;
   793 ;; ?_strlen	unsigned int  size(1) Largest target is 50
   794 ;;		 -> getPacket@arrStore(BANK0[50]), main@testString(BANK0[9]), 
   795 ;;
   796 ;; strlen@s	PTR const unsigned char  size(1) Largest target is 50
   797 ;;		 -> getPacket@arrStore(BANK0[50]), main@testString(BANK0[9]), 
   798 ;;
   799 ;; strlen@cp	PTR const unsigned char  size(1) Largest target is 50
   800 ;;		 -> getPacket@arrStore(BANK0[50]), main@testString(BANK0[9]), 
   801 ;;
   802 ;; parsePacket@dataPacket	PTR unsigned char  size(1) Largest target is 50
   803 ;;		 -> getPacket@arrStore(BANK0[50]), 
   804 ;;
   805 ;; readString@readStorage	PTR unsigned char  size(1) Largest target is 50
   806 ;;		 -> getPacket@arrStore(BANK0[50]), 
   807 ;;
   808 ;; writeString@userString	PTR unsigned char  size(1) Largest target is 9
   809 ;;		 -> main@testString(BANK0[9]), 
   810 ;;
   811                           
   812                           
   813 ;;
   814 ;; Critical Paths under _main in COMMON
   815 ;;
   816 ;;   _main->_initTemp
   817 ;;   _main->_writeString
   818 ;;   _main->_getTemp
   819 ;;   _getTemp->_eeprom_write
   820 ;;   _validatePacket->_addDataToCheckSum
   821 ;;   _parsePacket->_makeHexByte
   822 ;;   _getCommands->_eeprom_read
   823 ;;   _initTemp->_eeprom_write
   824 ;;   _addDataToCheckSum->_eeprom_write
   825 ;;   _checkCS->_eeprom_read
   826 ;;   _checkCMDByte->_eeprom_write
   827 ;;   _checkRWByte->_eeprom_write
   828 ;;   _checkStartByte->_eeprom_write
   829 ;;   _checkDataFrames->_eeprom_read
   830 ;;   _checkLength->_eeprom_read
   831 ;;   _checkEven->_eeprom_read
   832 ;;   _makeHexByte->_eeprom_write
   833 ;;   _readString->_eeprom_write
   834 ;;   _writeString->_strlen
   835 ;;   _eeprom_write->_strlen
   836 ;;
   837 ;; Critical Paths under _main in BANK0
   838 ;;
   839 ;;   _main->_getPacket
   840 ;;   _getPacket->_parsePacket
   841 ;;   _validatePacket->_checkStartByte
   842 ;;   _validatePacket->_checkRWByte
   843 ;;   _validatePacket->_checkCMDByte
   844 ;;   _parsePacket->_makeHexByte
   845 ;;
   846 ;; Critical Paths under _main in BANK1
   847 ;;
   848 ;;   None.
   849 ;;
   850 ;; Critical Paths under _main in BANK3
   851 ;;
   852 ;;   None.
   853 ;;
   854 ;; Critical Paths under _main in BANK2
   855 ;;
   856 ;;   None.
   857                           
   858 ;;
   859 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   860 ;;
   861                           
   862 ;;
   863 ;;Call Graph Tables:
   864 ;;
   865 ;; ---------------------------------------------------------------------------------
   866 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   867 ;; ---------------------------------------------------------------------------------
   868 ;; (0) _main                                                13    13      0    2048
   869 ;;                                             66 BANK0     13    13      0
   870 ;;                          _initUSART
   871 ;;                            _initADC
   872 ;;                           _initTemp
   873 ;;                        _writeString
   874 ;;                            _getTemp
   875 ;;                          _writeByte
   876 ;;                          _getPacket
   877 ;; ---------------------------------------------------------------------------------
   878 ;; (1) _getPacket                                           54    54      0    1633
   879 ;;                                             12 BANK0     54    54      0
   880 ;;                       _eeprom_write
   881 ;;                          _writeByte
   882 ;;                         _readString
   883 ;;                        _eeprom_read
   884 ;;                        _parsePacket
   885 ;;                     _validatePacket
   886 ;;                        _getCommands
   887 ;;                        _setCommands
   888 ;; ---------------------------------------------------------------------------------
   889 ;; (1) _getTemp                                              3     3      0      95
   890 ;;                                             13 COMMON     1     1      0
   891 ;;                                              0 BANK0      2     2      0
   892 ;;                         _selectTemp
   893 ;;                           _readTemp
   894 ;;                       _eeprom_write
   895 ;; ---------------------------------------------------------------------------------
   896 ;; (2) _validatePacket                                       2     0      2     488
   897 ;;                                              4 BANK0      2     0      2
   898 ;;                     _checkStartByte
   899 ;;                        _checkRWByte
   900 ;;                       _checkCMDByte
   901 ;;                    _checkDataFrames
   902 ;;                  _addDataToCheckSum
   903 ;;                            _checkCS
   904 ;; ---------------------------------------------------------------------------------
   905 ;; (2) _parsePacket                                          8     8      0     783
   906 ;;                                              4 BANK0      8     8      0
   907 ;;                        _checkLength
   908 ;;                          _checkEven
   909 ;;                        _makeHexByte
   910 ;;                       _eeprom_write
   911 ;;                             _strlen
   912 ;;                        _eeprom_read
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (2) _getCommands                                          0     0      0      44
   915 ;;                          _writeByte
   916 ;;                        _eeprom_read
   917 ;; ---------------------------------------------------------------------------------
   918 ;; (1) _initTemp                                             1     1      0      50
   919 ;;                                             13 COMMON     1     1      0
   920 ;;                       _eeprom_write
   921 ;; ---------------------------------------------------------------------------------
   922 ;; (2) _readTemp                                             4     2      2       0
   923 ;;                                              0 COMMON     4     2      2
   924 ;; ---------------------------------------------------------------------------------
   925 ;; (3) _addDataToCheckSum                                    3     3      0     118
   926 ;;                                             13 COMMON     1     1      0
   927 ;;                                              0 BANK0      2     2      0
   928 ;;                        _eeprom_read
   929 ;;                       _eeprom_write
   930 ;; ---------------------------------------------------------------------------------
   931 ;; (3) _checkCS                                              3     1      2      44
   932 ;;                                              2 COMMON     3     1      2
   933 ;;                        _eeprom_read
   934 ;;                          _writeByte
   935 ;; ---------------------------------------------------------------------------------
   936 ;; (3) _checkCMDByte                                         4     2      2      94
   937 ;;                                              0 BANK0      4     2      2
   938 ;;                        _eeprom_read
   939 ;;                       _eeprom_write
   940 ;;                          _writeByte
   941 ;; ---------------------------------------------------------------------------------
   942 ;; (3) _checkRWByte                                          4     2      2      94
   943 ;;                                              0 BANK0      4     2      2
   944 ;;                        _eeprom_read
   945 ;;                          _writeByte
   946 ;;                       _eeprom_write
   947 ;; ---------------------------------------------------------------------------------
   948 ;; (3) _checkStartByte                                       4     2      2      94
   949 ;;                                              0 BANK0      4     2      2
   950 ;;                        _eeprom_read
   951 ;;                          _writeByte
   952 ;;                       _eeprom_write
   953 ;; ---------------------------------------------------------------------------------
   954 ;; (3) _checkDataFrames                                      8     6      2      44
   955 ;;                                              2 COMMON     8     6      2
   956 ;;                        _eeprom_read
   957 ;;                          _writeByte
   958 ;; ---------------------------------------------------------------------------------
   959 ;; (3) _checkLength                                          3     1      2      44
   960 ;;                                              2 COMMON     3     1      2
   961 ;;                        _eeprom_read
   962 ;;                          _writeByte
   963 ;; ---------------------------------------------------------------------------------
   964 ;; (3) _checkEven                                            3     1      2      44
   965 ;;                                              2 COMMON     3     1      2
   966 ;;                        _eeprom_read
   967 ;;                          _writeByte
   968 ;; ---------------------------------------------------------------------------------
   969 ;; (3) _makeHexByte                                          5     4      1     134
   970 ;;                                             13 COMMON     1     0      1
   971 ;;                                              0 BANK0      4     4      0
   972 ;;                         _makeNibble
   973 ;;                       _eeprom_write (ARG)
   974 ;;                             _strlen (ARG)
   975 ;; ---------------------------------------------------------------------------------
   976 ;; (2) _readString                                           6     6      0     164
   977 ;;                                              0 BANK0      6     6      0
   978 ;;                           _readByte
   979 ;;                       _eeprom_write
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (1) _writeString                                          4     4      0     223
   982 ;;                                             10 COMMON     4     4      0
   983 ;;                          _writeByte
   984 ;;                             _strlen
   985 ;; ---------------------------------------------------------------------------------
   986 ;; (2) _setCommands                                          0     0      0       0
   987 ;; ---------------------------------------------------------------------------------
   988 ;; (2) _selectTemp                                           0     0      0       0
   989 ;; ---------------------------------------------------------------------------------
   990 ;; (1) _initADC                                              0     0      0       0
   991 ;; ---------------------------------------------------------------------------------
   992 ;; (3) _eeprom_read                                          2     2      0      22
   993 ;;                                              0 COMMON     2     2      0
   994 ;; ---------------------------------------------------------------------------------
   995 ;; (4) _makeNibble                                           1     1      0      66
   996 ;;                                              0 COMMON     1     1      0
   997 ;; ---------------------------------------------------------------------------------
   998 ;; (4) _eeprom_write                                         3     2      1      50
   999 ;;                                             10 COMMON     3     2      1
  1000 ;;                         _makeNibble (ARG)
  1001 ;;                             _strlen (ARG)
  1002 ;;                        _eeprom_read (ARG)
  1003 ;; ---------------------------------------------------------------------------------
  1004 ;; (3) _strlen                                              10     8      2      89
  1005 ;;                                              0 COMMON    10     8      2
  1006 ;; ---------------------------------------------------------------------------------
  1007 ;; (3) _readByte                                             0     0      0       0
  1008 ;; ---------------------------------------------------------------------------------
  1009 ;; (3) _writeByte                                            1     1      0      22
  1010 ;;                                              0 COMMON     1     1      0
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (1) _initUSART                                            0     0      0       0
  1013 ;; ---------------------------------------------------------------------------------
  1014 ;; Estimated maximum stack depth 4
  1015 ;; ---------------------------------------------------------------------------------
  1016                           
  1017 ;; Call Graph Graphs:
  1018                           
  1019 ;; _main (ROOT)
  1020 ;;   _initUSART
  1021 ;;   _initADC
  1022 ;;   _initTemp
  1023 ;;     _eeprom_write
  1024 ;;       _makeNibble (ARG)
  1025 ;;       _strlen (ARG)
  1026 ;;       _eeprom_read (ARG)
  1027 ;;   _writeString
  1028 ;;     _writeByte
  1029 ;;     _strlen
  1030 ;;   _getTemp
  1031 ;;     _selectTemp
  1032 ;;     _readTemp
  1033 ;;     _eeprom_write
  1034 ;;       _makeNibble (ARG)
  1035 ;;       _strlen (ARG)
  1036 ;;       _eeprom_read (ARG)
  1037 ;;   _writeByte
  1038 ;;   _getPacket
  1039 ;;     _eeprom_write
  1040 ;;       _makeNibble (ARG)
  1041 ;;       _strlen (ARG)
  1042 ;;       _eeprom_read (ARG)
  1043 ;;     _writeByte
  1044 ;;     _readString
  1045 ;;       _readByte
  1046 ;;       _eeprom_write
  1047 ;;         _makeNibble (ARG)
  1048 ;;         _strlen (ARG)
  1049 ;;         _eeprom_read (ARG)
  1050 ;;     _eeprom_read
  1051 ;;     _parsePacket
  1052 ;;       _checkLength
  1053 ;;         _eeprom_read
  1054 ;;         _writeByte
  1055 ;;       _checkEven
  1056 ;;         _eeprom_read
  1057 ;;         _writeByte
  1058 ;;       _makeHexByte
  1059 ;;         _makeNibble
  1060 ;;         _eeprom_write (ARG)
  1061 ;;           _makeNibble (ARG)
  1062 ;;           _strlen (ARG)
  1063 ;;           _eeprom_read (ARG)
  1064 ;;         _strlen (ARG)
  1065 ;;       _eeprom_write
  1066 ;;         _makeNibble (ARG)
  1067 ;;         _strlen (ARG)
  1068 ;;         _eeprom_read (ARG)
  1069 ;;       _strlen
  1070 ;;       _eeprom_read
  1071 ;;     _validatePacket
  1072 ;;       _checkStartByte
  1073 ;;         _eeprom_read
  1074 ;;         _writeByte
  1075 ;;         _eeprom_write
  1076 ;;           _makeNibble (ARG)
  1077 ;;           _strlen (ARG)
  1078 ;;           _eeprom_read (ARG)
  1079 ;;       _checkRWByte
  1080 ;;         _eeprom_read
  1081 ;;         _writeByte
  1082 ;;         _eeprom_write
  1083 ;;           _makeNibble (ARG)
  1084 ;;           _strlen (ARG)
  1085 ;;           _eeprom_read (ARG)
  1086 ;;       _checkCMDByte
  1087 ;;         _eeprom_read
  1088 ;;         _eeprom_write
  1089 ;;           _makeNibble (ARG)
  1090 ;;           _strlen (ARG)
  1091 ;;           _eeprom_read (ARG)
  1092 ;;         _writeByte
  1093 ;;       _checkDataFrames
  1094 ;;         _eeprom_read
  1095 ;;         _writeByte
  1096 ;;       _addDataToCheckSum
  1097 ;;         _eeprom_read
  1098 ;;         _eeprom_write
  1099 ;;           _makeNibble (ARG)
  1100 ;;           _strlen (ARG)
  1101 ;;           _eeprom_read (ARG)
  1102 ;;       _checkCS
  1103 ;;         _eeprom_read
  1104 ;;         _writeByte
  1105 ;;     _getCommands
  1106 ;;       _writeByte
  1107 ;;       _eeprom_read
  1108 ;;     _setCommands
  1109 ;;
  1110                           
  1111 ;; Address spaces:
  1112                           
  1113 ;;Name               Size   Autos  Total    Cost      Usage
  1114 ;;BANK3               60      0       0       9        0.0%
  1115 ;;BITBANK3            60      0       0       8        0.0%
  1116 ;;SFR3                 0      0       0       4        0.0%
  1117 ;;BITSFR3              0      0       0       4        0.0%
  1118 ;;BANK2               60      0       0      11        0.0%
  1119 ;;BITBANK2            60      0       0      10        0.0%
  1120 ;;SFR2                 0      0       0       5        0.0%
  1121 ;;BITSFR2              0      0       0       5        0.0%
  1122 ;;SFR1                 0      0       0       2        0.0%
  1123 ;;BITSFR1              0      0       0       2        0.0%
  1124 ;;BANK1               50      0      3B       7       73.8%
  1125 ;;BITBANK1            50      0       0       6        0.0%
  1126 ;;CODE                 0      0       0       0        0.0%
  1127 ;;DATA                 0      0      9C      12        0.0%
  1128 ;;ABS                  0      0      98       3        0.0%
  1129 ;;NULL                 0      0       0       0        0.0%
  1130 ;;STACK                0      0       4       2        0.0%
  1131 ;;BANK0               50     4F      4F       5       98.8%
  1132 ;;BITBANK0            50      0       0       4        0.0%
  1133 ;;SFR0                 0      0       0       1        0.0%
  1134 ;;BITSFR0              0      0       0       1        0.0%
  1135 ;;COMMON               E      E       E       1      100.0%
  1136 ;;BITCOMMON            E      0       0       0        0.0%
  1137 ;;EEDATA             100      0       0       0        0.0%
  1138                           
  1139                           	global	_main
  1140                           psect	maintext,global,class=CODE,delta=2
  1141                           global __pmaintext
  1142  0331                     __pmaintext:
  1143                           
  1144 ;; *************** function _main *****************
  1145 ;; Defined at:
  1146 ;;		line 45 in file "main.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  testString      9   70[BANK0 ] unsigned char [9]
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  2  3956[COMMON] int 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 17F/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         0       0       0       0       0
  1161 ;;      Locals:         0       9       0       0       0
  1162 ;;      Temps:          0       4       0       0       0
  1163 ;;      Totals:         0      13       0       0       0
  1164 ;;Total ram usage:       13 bytes
  1165 ;; Hardware stack levels required when called:    4
  1166 ;; This function calls:
  1167 ;;		_initUSART
  1168 ;;		_initADC
  1169 ;;		_initTemp
  1170 ;;		_writeString
  1171 ;;		_getTemp
  1172 ;;		_writeByte
  1173 ;;		_getPacket
  1174 ;; This function is called by:
  1175 ;;		Startup code after reset
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           psect	maintext
  1179                           	file	"main.c"
  1180                           	line	45
  1181                           	global	__size_of_main
  1182  0054                     	__size_of_main	equ	__end_of_main-_main
  1183                           	
  1184  0331                     _main:	
  1185                           	opt	stack 4
  1186                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1187                           	line	46
  1188                           	
  1189  0331                     l8588:	
  1190                           ;main.c: 46: char testString[] = "Welcome\n";
  1191  0331  3066               	movlw	(main@testString)&0ffh
  1192  0332  0084               	movwf	fsr0
  1193  0333  30D2               	movlw	low(main@F1170)
  1194  0334  1283               	bcf	status, 5	;RP0=0, select bank0
  1195  0335  1303               	bcf	status, 6	;RP1=0, select bank0
  1196  0336  00E2               	movwf	(??_main+0)+0
  1197  0337  0804               	movf	fsr0,w
  1198  0338  00E3               	movwf	((??_main+0)+0+1)
  1199  0339  3009               	movlw	9
  1200  033A  00E4               	movwf	((??_main+0)+0+2)
  1201  033B                     u2980:
  1202  033B  0862               	movf	(??_main+0)+0,w
  1203  033C  0084               	movwf	fsr0
  1204  033D  1383               	bcf	status, 7	;select IRP bank1
  1205                           	
  1206  033E  0800               	movf	indf,w
  1207  033F  00E5               	movwf	((??_main+0)+0+3)
  1208  0340  0AE2               	incf	(??_main+0)+0,f
  1209  0341  0863               	movf	((??_main+0)+0+1),w
  1210  0342  0084               	movwf	fsr0
  1211                           	
  1212  0343  0865               	movf	((??_main+0)+0+3),w
  1213  0344  0080               	movwf	indf
  1214  0345  0AE3               	incf	((??_main+0)+0+1),f
  1215  0346  0BE4               	decfsz	((??_main+0)+0+2),f
  1216  0347  2B3B               	goto	u2980
  1217                           	line	50
  1218                           	
  1219  0348                     l8590:	
  1220                           ;main.c: 50: initUSART();
  1221  0348  120A  118A  206D   	fcall	_initUSART
              120A  118A         
  1222                           	line	52
  1223                           	
  1224  034D                     l8592:	
  1225                           ;main.c: 52: initADC();
  1226  034D  120A  158A  27E9   	fcall	_initADC
              120A  118A         
  1227                           	line	55
  1228                           	
  1229  0352                     l8594:	
  1230                           ;main.c: 55: initTemp();
  1231  0352  120A  118A  2385   	fcall	_initTemp
              120A  118A         
  1232                           	line	58
  1233                           	
  1234  0357                     l8596:	
  1235                           ;main.c: 58: writeString(testString);
  1236  0357  3066               	movlw	(main@testString)&0ffh
  1237  0358  120A  118A  216B   	fcall	_writeString
              120A  118A         
  1238  035D  2B5E               	goto	l8598
  1239                           	line	62
  1240                           ;main.c: 62: while(1){
  1241                           	
  1242  035E                     l3959:	
  1243                           	line	65
  1244                           	
  1245  035E                     l8598:	
  1246                           ;main.c: 65: getTemp();
  1247  035E  120A  118A  225F   	fcall	_getTemp
              120A  118A         
  1248                           	line	76
  1249                           	
  1250  0363                     l8600:	
  1251                           ;main.c: 76: if(RCIF){
  1252  0363  1283               	bcf	status, 5	;RP0=0, select bank0
  1253  0364  1303               	bcf	status, 6	;RP1=0, select bank0
  1254  0365  1E8C               	btfss	(101/8),(101)&7
  1255  0366  2B68               	goto	u2991
  1256  0367  2B69               	goto	u2990
  1257  0368                     u2991:
  1258  0368  2B75               	goto	l8606
  1259  0369                     u2990:
  1260                           	line	77
  1261                           	
  1262  0369                     l8602:	
  1263                           ;main.c: 77: writeByte('P');
  1264  0369  3050               	movlw	(050h)
  1265  036A  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  1266                           	line	78
  1267                           	
  1268  036F                     l8604:	
  1269                           ;main.c: 78: getPacket();
  1270  036F  120A  118A  2631   	fcall	_getPacket
              120A  118A         
  1271  0374  2B75               	goto	l8606
  1272                           	line	79
  1273                           	
  1274  0375                     l3960:	
  1275                           	line	80
  1276                           	
  1277  0375                     l8606:	
  1278                           ;main.c: 79: }
  1279                           ;main.c: 80: _delay((unsigned long)((10)*(20000000/4000.0)));
  1280                           	opt asmopt_off
  1281  0375  3041               movlw	65
  1282  0376  1283               	bcf	status, 5	;RP0=0, select bank0
  1283  0377  1303               	bcf	status, 6	;RP1=0, select bank0
  1284  0378  00E3               movwf	((??_main+0)+0+1),f
  1285  0379  30EE               	movlw	238
  1286  037A  00E2               movwf	((??_main+0)+0),f
  1287  037B                     u3007:
  1288  037B  0BE2               	decfsz	((??_main+0)+0),f
  1289  037C  2B7B               	goto	u3007
  1290  037D  0BE3               	decfsz	((??_main+0)+0+1),f
  1291  037E  2B7B               	goto	u3007
  1292  037F  0064               	clrwdt
  1293                           opt asmopt_on
  1294                           
  1295  0380  2B5E               	goto	l8598
  1296                           	line	81
  1297                           	
  1298  0381                     l3961:	
  1299                           	line	62
  1300  0381  2B5E               	goto	l8598
  1301                           	
  1302  0382                     l3962:	
  1303                           	line	86
  1304                           ;main.c: 81: }
  1305                           ;main.c: 85: return 0;
  1306                           ;	Return value of _main is never used
  1307                           	
  1308  0382                     l3963:	
  1309                           	global	start
  1310  0382  120A  118A  2800   	ljmp	start
  1311                           	opt stack 0
  1312                           GLOBAL	__end_of_main
  1313  0385                     	__end_of_main:
  1314 ;; =============== function _main ends ============
  1315                           
  1316                           	signat	_main,90
  1317                           	global	_getPacket
  1318                           psect	text596,local,class=CODE,delta=2
  1319                           global __ptext596
  1320  0631                     __ptext596:
  1321                           
  1322 ;; *************** function _getPacket *****************
  1323 ;; Defined at:
  1324 ;;		line 88 in file "main.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  arrStore       50   16[BANK0 ] unsigned char [50]
  1329 ;; Return value:  Size  Location     Type
  1330 ;;		None               void
  1331 ;; Registers used:
  1332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1338 ;;      Params:         0       0       0       0       0
  1339 ;;      Locals:         0      50       0       0       0
  1340 ;;      Temps:          0       4       0       0       0
  1341 ;;      Totals:         0      54       0       0       0
  1342 ;;Total ram usage:       54 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    3
  1345 ;; This function calls:
  1346 ;;		_eeprom_write
  1347 ;;		_writeByte
  1348 ;;		_readString
  1349 ;;		_eeprom_read
  1350 ;;		_parsePacket
  1351 ;;		_validatePacket
  1352 ;;		_getCommands
  1353 ;;		_setCommands
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           psect	text596
  1359                           	file	"main.c"
  1360                           	line	88
  1361                           	global	__size_of_getPacket
  1362  009A                     	__size_of_getPacket	equ	__end_of_getPacket-_getPacket
  1363                           	
  1364  0631                     _getPacket:	
  1365                           	opt	stack 4
  1366                           ; Regs used in _getPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1367                           	line	90
  1368                           	
  1369  0631                     l8556:	
  1370                           ;main.c: 90: while(!RCIF);
  1371  0631  2E32               	goto	l3966
  1372                           	
  1373  0632                     l3967:	
  1374                           	
  1375  0632                     l3966:	
  1376  0632  1283               	bcf	status, 5	;RP0=0, select bank0
  1377  0633  1303               	bcf	status, 6	;RP1=0, select bank0
  1378  0634  1E8C               	btfss	(101/8),(101)&7
  1379  0635  2E37               	goto	u2941
  1380  0636  2E38               	goto	u2940
  1381  0637                     u2941:
  1382  0637  2E32               	goto	l3966
  1383  0638                     u2940:
  1384  0638  2E39               	goto	l8558
  1385                           	
  1386  0639                     l3968:	
  1387                           	line	92
  1388                           	
  1389  0639                     l8558:	
  1390                           ;main.c: 92: eeprom_write(calcCSByteAddr,0x00);
  1391  0639  01FA               	clrf	(?_eeprom_write)
  1392  063A  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1393  063B  0084               	movwf	fsr0
  1394  063C  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1395  0641  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  1396                           	line	93
  1397                           	
  1398  0646                     l8560:	
  1399                           ;main.c: 93: writeByte('H');
  1400  0646  3048               	movlw	(048h)
  1401  0647  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  1402                           	line	95
  1403                           	
  1404  064C                     l8562:	
  1405                           ;main.c: 95: char arrStore[50] = {0};
  1406  064C  3030               	movlw	(getPacket@arrStore)&0ffh
  1407  064D  0084               	movwf	fsr0
  1408  064E  30A0               	movlw	low(getPacket@F1173)
  1409  064F  1283               	bcf	status, 5	;RP0=0, select bank0
  1410  0650  1303               	bcf	status, 6	;RP1=0, select bank0
  1411  0651  00AC               	movwf	(??_getPacket+0)+0
  1412  0652  0804               	movf	fsr0,w
  1413  0653  00AD               	movwf	((??_getPacket+0)+0+1)
  1414  0654  3032               	movlw	50
  1415  0655  00AE               	movwf	((??_getPacket+0)+0+2)
  1416  0656                     u2950:
  1417  0656  082C               	movf	(??_getPacket+0)+0,w
  1418  0657  0084               	movwf	fsr0
  1419  0658  1383               	bcf	status, 7	;select IRP bank1
  1420                           	
  1421  0659  0800               	movf	indf,w
  1422  065A  00AF               	movwf	((??_getPacket+0)+0+3)
  1423  065B  0AAC               	incf	(??_getPacket+0)+0,f
  1424  065C  082D               	movf	((??_getPacket+0)+0+1),w
  1425  065D  0084               	movwf	fsr0
  1426                           	
  1427  065E  082F               	movf	((??_getPacket+0)+0+3),w
  1428  065F  0080               	movwf	indf
  1429  0660  0AAD               	incf	((??_getPacket+0)+0+1),f
  1430  0661  0BAE               	decfsz	((??_getPacket+0)+0+2),f
  1431  0662  2E56               	goto	u2950
  1432                           	line	96
  1433                           	
  1434  0663                     l8564:	
  1435                           ;main.c: 96: writeByte('H');
  1436  0663  3048               	movlw	(048h)
  1437  0664  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  1438                           	line	98
  1439                           	
  1440  0669                     l8566:	
  1441                           ;main.c: 98: readString(arrStore);
  1442  0669  3030               	movlw	(getPacket@arrStore)&0ffh
  1443  066A  120A  118A  2295   	fcall	_readString
              120A  118A         
  1444                           	line	99
  1445                           	
  1446  066F                     l8568:	
  1447                           ;main.c: 99: writeByte('H');
  1448  066F  3048               	movlw	(048h)
  1449  0670  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  1450                           	line	109
  1451                           	
  1452  0675                     l8570:	
  1453                           ;main.c: 109: writeByte(eeprom_read(RXLenAddr));
  1454  0675  3040               	movlw	(_RXLenAddr-__stringbase)
  1455  0676  0084               	movwf	fsr0
  1456  0677  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1457  067C  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  1458  0681  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  1459                           	line	110
  1460                           	
  1461  0686                     l8572:	
  1462                           ;main.c: 110: writeByte('H');
  1463  0686  3048               	movlw	(048h)
  1464  0687  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  1465                           	line	112
  1466                           	
  1467  068C                     l8574:	
  1468                           ;main.c: 112: parsePacket(arrStore);
  1469  068C  3030               	movlw	(getPacket@arrStore)&0ffh
  1470  068D  120A  118A  26CB   	fcall	_parsePacket
              120A  118A         
  1471                           	line	113
  1472                           	
  1473  0692                     l8576:	
  1474                           ;main.c: 113: writeByte('H');
  1475  0692  3048               	movlw	(048h)
  1476  0693  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  1477                           	line	116
  1478                           	
  1479  0698                     l8578:	
  1480                           ;main.c: 116: if(validatePacket()){
  1481  0698  120A  118A  22E0   	fcall	_validatePacket
              120A  118A         
  1482  069D  1283               	bcf	status, 5	;RP0=0, select bank0
  1483  069E  1303               	bcf	status, 6	;RP1=0, select bank0
  1484  069F  0825               	movf	(1+(?_validatePacket)),w
  1485  06A0  0424               	iorwf	(0+(?_validatePacket)),w
  1486  06A1  1903               	skipnz
  1487  06A2  2EA4               	goto	u2961
  1488  06A3  2EA5               	goto	u2960
  1489  06A4                     u2961:
  1490  06A4  2ECA               	goto	l3975
  1491  06A5                     u2960:
  1492                           	line	119
  1493                           	
  1494  06A5                     l8580:	
  1495                           ;main.c: 119: if(eeprom_read(rwByteAddr) == 0){
  1496  06A5  3052               	movlw	(_rwByteAddr-__stringbase)
  1497  06A6  0084               	movwf	fsr0
  1498  06A7  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1499  06AC  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  1500  06B1  3800               	iorlw	0
  1501  06B2  1D03               	skipz
  1502  06B3  2EB5               	goto	u2971
  1503  06B4  2EB6               	goto	u2970
  1504  06B5                     u2971:
  1505  06B5  2EC2               	goto	l8586
  1506  06B6                     u2970:
  1507                           	line	120
  1508                           	
  1509  06B6                     l8582:	
  1510                           ;main.c: 120: writeByte('H');
  1511  06B6  3048               	movlw	(048h)
  1512  06B7  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  1513                           	line	121
  1514                           	
  1515  06BC                     l8584:	
  1516                           ;main.c: 121: getCommands();
  1517  06BC  120A  118A  20D7   	fcall	_getCommands
              120A  118A         
  1518                           	line	122
  1519                           ;main.c: 122: }else{
  1520  06C1  2ECA               	goto	l3975
  1521                           	
  1522  06C2                     l3972:	
  1523                           	line	123
  1524                           	
  1525  06C2                     l8586:	
  1526                           ;main.c: 123: setCommands();
  1527  06C2  120A  158A  27CC   	fcall	_setCommands
              120A  118A         
  1528  06C7  2ECA               	goto	l3975
  1529                           	line	124
  1530                           	
  1531  06C8                     l3973:	
  1532                           	line	126
  1533                           ;main.c: 124: }
  1534                           ;main.c: 126: }else{
  1535  06C8  2ECA               	goto	l3975
  1536                           	
  1537  06C9                     l3971:	
  1538  06C9  2ECA               	goto	l3975
  1539                           	line	129
  1540                           	
  1541  06CA                     l3974:	
  1542                           	line	130
  1543                           	
  1544  06CA                     l3975:	
  1545  06CA  0008               	return
  1546                           	opt stack 0
  1547                           GLOBAL	__end_of_getPacket
  1548  06CB                     	__end_of_getPacket:
  1549 ;; =============== function _getPacket ends ============
  1550                           
  1551                           	signat	_getPacket,88
  1552                           	global	_getTemp
  1553                           psect	text597,local,class=CODE,delta=2
  1554                           global __ptext597
  1555  025F                     __ptext597:
  1556                           
  1557 ;; *************** function _getTemp *****************
  1558 ;; Defined at:
  1559 ;;		line 132 in file "main.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  tempReading     2    0[BANK0 ] unsigned int 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;		None               void
  1566 ;; Registers used:
  1567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1573 ;;      Params:         0       0       0       0       0
  1574 ;;      Locals:         0       2       0       0       0
  1575 ;;      Temps:          1       0       0       0       0
  1576 ;;      Totals:         1       2       0       0       0
  1577 ;;Total ram usage:        3 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:    1
  1580 ;; This function calls:
  1581 ;;		_selectTemp
  1582 ;;		_readTemp
  1583 ;;		_eeprom_write
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           psect	text597
  1589                           	file	"main.c"
  1590                           	line	132
  1591                           	global	__size_of_getTemp
  1592  0036                     	__size_of_getTemp	equ	__end_of_getTemp-_getTemp
  1593                           	
  1594  025F                     _getTemp:	
  1595                           	opt	stack 6
  1596                           ; Regs used in _getTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1597                           	line	135
  1598                           	
  1599  025F                     l8548:	
  1600                           ;main.c: 133: unsigned int tempReading;
  1601                           ;main.c: 135: selectTemp();
  1602  025F  120A  118A  2068   	fcall	_selectTemp
              120A  118A         
  1603                           	line	137
  1604                           	
  1605  0264                     l8550:	
  1606                           ;main.c: 137: tempReading = readTemp();
  1607  0264  120A  118A  2144   	fcall	_readTemp
              120A  118A         
  1608  0269  0871               	movf	(1+(?_readTemp)),w
  1609  026A  1283               	bcf	status, 5	;RP0=0, select bank0
  1610  026B  1303               	bcf	status, 6	;RP1=0, select bank0
  1611  026C  01A1               	clrf	(getTemp@tempReading+1)
  1612  026D  07A1               	addwf	(getTemp@tempReading+1)
  1613  026E  0870               	movf	(0+(?_readTemp)),w
  1614  026F  01A0               	clrf	(getTemp@tempReading)
  1615  0270  07A0               	addwf	(getTemp@tempReading)
  1616                           
  1617                           	line	139
  1618                           	
  1619  0271                     l8552:	
  1620                           ;main.c: 139: eeprom_write(tempValLAddr,tempReading);
  1621  0271  0820               	movf	(getTemp@tempReading),w
  1622  0272  00FD               	movwf	(??_getTemp+0)+0
  1623  0273  087D               	movf	(??_getTemp+0)+0,w
  1624  0274  00FA               	movwf	(?_eeprom_write)
  1625  0275  305C               	movlw	(_tempValLAddr-__stringbase)
  1626  0276  0084               	movwf	fsr0
  1627  0277  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1628  027C  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  1629                           	line	141
  1630                           	
  1631  0281                     l8554:	
  1632                           ;main.c: 141: eeprom_write(tempValHAddr+1,tempReading>>8);
  1633  0281  1283               	bcf	status, 5	;RP0=0, select bank0
  1634  0282  1303               	bcf	status, 6	;RP1=0, select bank0
  1635  0283  0821               	movf	(getTemp@tempReading+1),w
  1636  0284  00FD               	movwf	(??_getTemp+0)+0
  1637  0285  087D               	movf	(??_getTemp+0)+0,w
  1638  0286  00FA               	movwf	(?_eeprom_write)
  1639  0287  305B               	movlw	(_tempValHAddr-__stringbase)
  1640  0288  0084               	movwf	fsr0
  1641  0289  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1642  028E  3E01               	addlw	01h
  1643  028F  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  1644                           	line	142
  1645                           	
  1646  0294                     l3978:	
  1647  0294  0008               	return
  1648                           	opt stack 0
  1649                           GLOBAL	__end_of_getTemp
  1650  0295                     	__end_of_getTemp:
  1651 ;; =============== function _getTemp ends ============
  1652                           
  1653                           	signat	_getTemp,88
  1654                           	global	_validatePacket
  1655                           psect	text598,local,class=CODE,delta=2
  1656                           global __ptext598
  1657  02E0                     __ptext598:
  1658                           
  1659 ;; *************** function _validatePacket *****************
  1660 ;; Defined at:
  1661 ;;		line 236 in file "Packet.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  2    4[BANK0 ] int 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1675 ;;      Params:         0       2       0       0       0
  1676 ;;      Locals:         0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0
  1678 ;;      Totals:         0       2       0       0       0
  1679 ;;Total ram usage:        2 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    2
  1682 ;; This function calls:
  1683 ;;		_checkStartByte
  1684 ;;		_checkRWByte
  1685 ;;		_checkCMDByte
  1686 ;;		_checkDataFrames
  1687 ;;		_addDataToCheckSum
  1688 ;;		_checkCS
  1689 ;; This function is called by:
  1690 ;;		_getPacket
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           psect	text598
  1694                           	file	"Packet.c"
  1695                           	line	236
  1696                           	global	__size_of_validatePacket
  1697  0051                     	__size_of_validatePacket	equ	__end_of_validatePacket-_validatePacket
  1698                           	
  1699  02E0                     _validatePacket:	
  1700                           	opt	stack 4
  1701                           ; Regs used in _validatePacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1702                           	line	238
  1703                           	
  1704  02E0                     l8530:	
  1705                           ;Packet.c: 238: if(checkStartByte() && checkRWByte() && checkCMDByte() && checkDataFrame
                                 s()){
  1706  02E0  120A  118A  23E2   	fcall	_checkStartByte
              120A  118A         
  1707  02E5  1283               	bcf	status, 5	;RP0=0, select bank0
  1708  02E6  1303               	bcf	status, 6	;RP1=0, select bank0
  1709  02E7  0821               	movf	(1+(?_checkStartByte)),w
  1710  02E8  0420               	iorwf	(0+(?_checkStartByte)),w
  1711  02E9  1903               	skipnz
  1712  02EA  2AEC               	goto	u2891
  1713  02EB  2AED               	goto	u2890
  1714  02EC                     u2891:
  1715  02EC  2B2B               	goto	l8544
  1716  02ED                     u2890:
  1717                           	
  1718  02ED                     l8532:	
  1719  02ED  120A  118A  2446   	fcall	_checkRWByte
              120A  118A         
  1720  02F2  1283               	bcf	status, 5	;RP0=0, select bank0
  1721  02F3  1303               	bcf	status, 6	;RP1=0, select bank0
  1722  02F4  0821               	movf	(1+(?_checkRWByte)),w
  1723  02F5  0420               	iorwf	(0+(?_checkRWByte)),w
  1724  02F6  1903               	skipnz
  1725  02F7  2AF9               	goto	u2901
  1726  02F8  2AFA               	goto	u2900
  1727  02F9                     u2901:
  1728  02F9  2B2B               	goto	l8544
  1729  02FA                     u2900:
  1730                           	
  1731  02FA                     l8534:	
  1732  02FA  120A  118A  24B0   	fcall	_checkCMDByte
              120A  118A         
  1733  02FF  1283               	bcf	status, 5	;RP0=0, select bank0
  1734  0300  1303               	bcf	status, 6	;RP1=0, select bank0
  1735  0301  0821               	movf	(1+(?_checkCMDByte)),w
  1736  0302  0420               	iorwf	(0+(?_checkCMDByte)),w
  1737  0303  1903               	skipnz
  1738  0304  2B06               	goto	u2911
  1739  0305  2B07               	goto	u2910
  1740  0306                     u2911:
  1741  0306  2B2B               	goto	l8544
  1742  0307                     u2910:
  1743                           	
  1744  0307                     l8536:	
  1745  0307  120A  118A  2597   	fcall	_checkDataFrames
              120A  118A         
  1746  030C  0873               	movf	(1+(?_checkDataFrames)),w
  1747  030D  0472               	iorwf	(0+(?_checkDataFrames)),w
  1748  030E  1903               	skipnz
  1749  030F  2B11               	goto	u2921
  1750  0310  2B12               	goto	u2920
  1751  0311                     u2921:
  1752  0311  2B2B               	goto	l8544
  1753  0312                     u2920:
  1754                           	line	240
  1755                           	
  1756  0312                     l8538:	
  1757                           ;Packet.c: 240: addDataToCheckSum();
  1758  0312  120A  118A  2520   	fcall	_addDataToCheckSum
              120A  118A         
  1759                           	line	242
  1760                           ;Packet.c: 242: if(checkCS())
  1761  0317  120A  118A  222B   	fcall	_checkCS
              120A  118A         
  1762  031C  0873               	movf	(1+(?_checkCS)),w
  1763  031D  0472               	iorwf	(0+(?_checkCS)),w
  1764  031E  1903               	skipnz
  1765  031F  2B21               	goto	u2931
  1766  0320  2B22               	goto	u2930
  1767  0321                     u2931:
  1768  0321  2B2B               	goto	l8544
  1769  0322                     u2930:
  1770                           	line	244
  1771                           	
  1772  0322                     l8540:	
  1773                           ;Packet.c: 244: return 1;
  1774  0322  3001               	movlw	low(01h)
  1775  0323  1283               	bcf	status, 5	;RP0=0, select bank0
  1776  0324  1303               	bcf	status, 6	;RP1=0, select bank0
  1777  0325  00A4               	movwf	(?_validatePacket)
  1778  0326  3000               	movlw	high(01h)
  1779  0327  00A5               	movwf	((?_validatePacket))+1
  1780  0328  2B30               	goto	l1609
  1781                           	
  1782  0329                     l8542:	
  1783  0329  2B30               	goto	l1609
  1784                           	
  1785  032A                     l1608:	
  1786  032A  2B2B               	goto	l8544
  1787                           	line	245
  1788                           	
  1789  032B                     l1607:	
  1790                           	line	247
  1791                           	
  1792  032B                     l8544:	
  1793                           ;Packet.c: 245: }
  1794                           ;Packet.c: 247: return 0;
  1795  032B  1283               	bcf	status, 5	;RP0=0, select bank0
  1796  032C  1303               	bcf	status, 6	;RP1=0, select bank0
  1797  032D  01A4               	clrf	(?_validatePacket)
  1798  032E  01A5               	clrf	(?_validatePacket+1)
  1799  032F  2B30               	goto	l1609
  1800                           	
  1801  0330                     l8546:	
  1802                           	line	249
  1803                           	
  1804  0330                     l1609:	
  1805  0330  0008               	return
  1806                           	opt stack 0
  1807                           GLOBAL	__end_of_validatePacket
  1808  0331                     	__end_of_validatePacket:
  1809 ;; =============== function _validatePacket ends ============
  1810                           
  1811                           	signat	_validatePacket,90
  1812                           	global	_parsePacket
  1813                           psect	text599,local,class=CODE,delta=2
  1814                           global __ptext599
  1815  06CB                     __ptext599:
  1816                           
  1817 ;; *************** function _parsePacket *****************
  1818 ;; Defined at:
  1819 ;;		line 114 in file "Packet.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  dataPacket      1    wreg     PTR unsigned char 
  1822 ;;		 -> getPacket@arrStore(50), 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  dataPacket      1   11[BANK0 ] PTR unsigned char 
  1825 ;;		 -> getPacket@arrStore(50), 
  1826 ;;  i               1   10[BANK0 ] unsigned char 
  1827 ;;  dataCounter     2    8[BANK0 ] int 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;		None               void
  1830 ;; Registers used:
  1831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       0       0       0       0
  1838 ;;      Locals:         0       4       0       0       0
  1839 ;;      Temps:          0       4       0       0       0
  1840 ;;      Totals:         0       8       0       0       0
  1841 ;;Total ram usage:        8 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    2
  1844 ;; This function calls:
  1845 ;;		_checkLength
  1846 ;;		_checkEven
  1847 ;;		_makeHexByte
  1848 ;;		_eeprom_write
  1849 ;;		_strlen
  1850 ;;		_eeprom_read
  1851 ;; This function is called by:
  1852 ;;		_getPacket
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           psect	text599
  1856                           	file	"Packet.c"
  1857                           	line	114
  1858                           	global	__size_of_parsePacket
  1859  0135                     	__size_of_parsePacket	equ	__end_of_parsePacket-_parsePacket
  1860                           	
  1861  06CB                     _parsePacket:	
  1862                           	opt	stack 4
  1863                           ; Regs used in _parsePacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1864                           ;parsePacket@dataPacket stored from wreg
  1865                           	line	116
  1866  06CB  1283               	bcf	status, 5	;RP0=0, select bank0
  1867  06CC  1303               	bcf	status, 6	;RP1=0, select bank0
  1868  06CD  00AB               	movwf	(parsePacket@dataPacket)
  1869                           	
  1870  06CE                     l8512:	
  1871                           ;Packet.c: 116: int dataCounter = 0;
  1872  06CE  01A8               	clrf	(parsePacket@dataCounter)
  1873  06CF  01A9               	clrf	(parsePacket@dataCounter+1)
  1874                           	line	119
  1875                           	
  1876  06D0                     l8514:	
  1877                           ;Packet.c: 119: if (checkLength() && checkEven()) {
  1878  06D0  120A  118A  219A   	fcall	_checkLength
              120A  118A         
  1879  06D5  0873               	movf	(1+(?_checkLength)),w
  1880  06D6  0472               	iorwf	(0+(?_checkLength)),w
  1881  06D7  1903               	skipnz
  1882  06D8  2EDA               	goto	u2861
  1883  06D9  2EDB               	goto	u2860
  1884  06DA                     u2861:
  1885  06DA  2FFF               	goto	l1586
  1886  06DB                     u2860:
  1887                           	
  1888  06DB                     l8516:	
  1889  06DB  120A  118A  211D   	fcall	_checkEven
              120A  118A         
  1890  06E0  0873               	movf	(1+(?_checkEven)),w
  1891  06E1  0472               	iorwf	(0+(?_checkEven)),w
  1892  06E2  1903               	skipnz
  1893  06E3  2EE5               	goto	u2871
  1894  06E4  2EE6               	goto	u2870
  1895  06E5                     u2871:
  1896  06E5  2FFF               	goto	l1586
  1897  06E6                     u2870:
  1898                           	line	122
  1899                           	
  1900  06E6                     l8518:	
  1901                           ;Packet.c: 122: eeprom_write(startByteAddr, makeHexByte(dataPacket[0], dataPacket[1]));
  1902  06E6  1283               	bcf	status, 5	;RP0=0, select bank0
  1903  06E7  1303               	bcf	status, 6	;RP1=0, select bank0
  1904  06E8  082B               	movf	(parsePacket@dataPacket),w
  1905  06E9  3E01               	addlw	01h
  1906  06EA  0084               	movwf	fsr0
  1907  06EB  1383               	bcf	status, 7	;select IRP bank0
  1908  06EC  0800               	movf	indf,w
  1909  06ED  00A4               	movwf	(??_parsePacket+0)+0
  1910  06EE  0824               	movf	(??_parsePacket+0)+0,w
  1911  06EF  00FD               	movwf	(?_makeHexByte)
  1912  06F0  082B               	movf	(parsePacket@dataPacket),w
  1913  06F1  0084               	movwf	fsr0
  1914  06F2  0800               	movf	indf,w
  1915  06F3  120A  118A  20F8   	fcall	_makeHexByte
              120A  118A         
  1916  06F8  1283               	bcf	status, 5	;RP0=0, select bank0
  1917  06F9  1303               	bcf	status, 6	;RP1=0, select bank0
  1918  06FA  00A5               	movwf	(??_parsePacket+1)+0
  1919  06FB  0825               	movf	(??_parsePacket+1)+0,w
  1920  06FC  00FA               	movwf	(?_eeprom_write)
  1921  06FD  3053               	movlw	(_startByteAddr-__stringbase)
  1922  06FE  0084               	movwf	fsr0
  1923  06FF  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1924  0704  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  1925                           	line	124
  1926                           ;Packet.c: 124: eeprom_write(rwByteAddr, makeHexByte(dataPacket[2], dataPacket[3]));
  1927  0709  1283               	bcf	status, 5	;RP0=0, select bank0
  1928  070A  1303               	bcf	status, 6	;RP1=0, select bank0
  1929  070B  082B               	movf	(parsePacket@dataPacket),w
  1930  070C  3E03               	addlw	03h
  1931  070D  0084               	movwf	fsr0
  1932  070E  1383               	bcf	status, 7	;select IRP bank0
  1933  070F  0800               	movf	indf,w
  1934  0710  00A4               	movwf	(??_parsePacket+0)+0
  1935  0711  0824               	movf	(??_parsePacket+0)+0,w
  1936  0712  00FD               	movwf	(?_makeHexByte)
  1937  0713  082B               	movf	(parsePacket@dataPacket),w
  1938  0714  3E02               	addlw	02h
  1939  0715  0084               	movwf	fsr0
  1940  0716  0800               	movf	indf,w
  1941  0717  120A  118A  20F8   	fcall	_makeHexByte
              120A  118A         
  1942  071C  1283               	bcf	status, 5	;RP0=0, select bank0
  1943  071D  1303               	bcf	status, 6	;RP1=0, select bank0
  1944  071E  00A5               	movwf	(??_parsePacket+1)+0
  1945  071F  0825               	movf	(??_parsePacket+1)+0,w
  1946  0720  00FA               	movwf	(?_eeprom_write)
  1947  0721  3052               	movlw	(_rwByteAddr-__stringbase)
  1948  0722  0084               	movwf	fsr0
  1949  0723  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1950  0728  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  1951                           	line	126
  1952                           ;Packet.c: 126: eeprom_write(cmdByteAddr, makeHexByte(dataPacket[4], dataPacket[5]));
  1953  072D  1283               	bcf	status, 5	;RP0=0, select bank0
  1954  072E  1303               	bcf	status, 6	;RP1=0, select bank0
  1955  072F  082B               	movf	(parsePacket@dataPacket),w
  1956  0730  3E05               	addlw	05h
  1957  0731  0084               	movwf	fsr0
  1958  0732  1383               	bcf	status, 7	;select IRP bank0
  1959  0733  0800               	movf	indf,w
  1960  0734  00A4               	movwf	(??_parsePacket+0)+0
  1961  0735  0824               	movf	(??_parsePacket+0)+0,w
  1962  0736  00FD               	movwf	(?_makeHexByte)
  1963  0737  082B               	movf	(parsePacket@dataPacket),w
  1964  0738  3E04               	addlw	04h
  1965  0739  0084               	movwf	fsr0
  1966  073A  0800               	movf	indf,w
  1967  073B  120A  118A  20F8   	fcall	_makeHexByte
              120A  118A         
  1968  0740  1283               	bcf	status, 5	;RP0=0, select bank0
  1969  0741  1303               	bcf	status, 6	;RP1=0, select bank0
  1970  0742  00A5               	movwf	(??_parsePacket+1)+0
  1971  0743  0825               	movf	(??_parsePacket+1)+0,w
  1972  0744  00FA               	movwf	(?_eeprom_write)
  1973  0745  3042               	movlw	(_cmdByteAddr-__stringbase)
  1974  0746  0084               	movwf	fsr0
  1975  0747  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1976  074C  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  1977                           	line	128
  1978                           ;Packet.c: 128: eeprom_write(lenByteAddr, makeHexByte(dataPacket[6], dataPacket[7]));
  1979  0751  1283               	bcf	status, 5	;RP0=0, select bank0
  1980  0752  1303               	bcf	status, 6	;RP1=0, select bank0
  1981  0753  082B               	movf	(parsePacket@dataPacket),w
  1982  0754  3E07               	addlw	07h
  1983  0755  0084               	movwf	fsr0
  1984  0756  1383               	bcf	status, 7	;select IRP bank0
  1985  0757  0800               	movf	indf,w
  1986  0758  00A4               	movwf	(??_parsePacket+0)+0
  1987  0759  0824               	movf	(??_parsePacket+0)+0,w
  1988  075A  00FD               	movwf	(?_makeHexByte)
  1989  075B  082B               	movf	(parsePacket@dataPacket),w
  1990  075C  3E06               	addlw	06h
  1991  075D  0084               	movwf	fsr0
  1992  075E  0800               	movf	indf,w
  1993  075F  120A  118A  20F8   	fcall	_makeHexByte
              120A  118A         
  1994  0764  1283               	bcf	status, 5	;RP0=0, select bank0
  1995  0765  1303               	bcf	status, 6	;RP1=0, select bank0
  1996  0766  00A5               	movwf	(??_parsePacket+1)+0
  1997  0767  0825               	movf	(??_parsePacket+1)+0,w
  1998  0768  00FA               	movwf	(?_eeprom_write)
  1999  0769  304C               	movlw	(_lenByteAddr-__stringbase)
  2000  076A  0084               	movwf	fsr0
  2001  076B  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2002  0770  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  2003                           	line	130
  2004                           ;Packet.c: 130: eeprom_write(csByteAddr, makeHexByte(dataPacket[strlen(dataPacket) - 2],
                                  dataPacket[strlen(dataPacket) - 1]));
  2005  0775  1283               	bcf	status, 5	;RP0=0, select bank0
  2006  0776  1303               	bcf	status, 6	;RP1=0, select bank0
  2007  0777  082B               	movf	(parsePacket@dataPacket),w
  2008  0778  120A  118A  21C9   	fcall	_strlen
              120A  118A         
  2009  077D  0870               	movf	(0+(?_strlen)),w
  2010  077E  3EFF               	addlw	0FFh
  2011  077F  1283               	bcf	status, 5	;RP0=0, select bank0
  2012  0780  1303               	bcf	status, 6	;RP1=0, select bank0
  2013  0781  072B               	addwf	(parsePacket@dataPacket),w
  2014  0782  00A4               	movwf	(??_parsePacket+0)+0
  2015  0783  0824               	movf	0+(??_parsePacket+0)+0,w
  2016  0784  0084               	movwf	fsr0
  2017  0785  1383               	bcf	status, 7	;select IRP bank0
  2018  0786  0800               	movf	indf,w
  2019  0787  00A5               	movwf	(??_parsePacket+1)+0
  2020  0788  0825               	movf	(??_parsePacket+1)+0,w
  2021  0789  00FD               	movwf	(?_makeHexByte)
  2022  078A  082B               	movf	(parsePacket@dataPacket),w
  2023  078B  120A  118A  21C9   	fcall	_strlen
              120A  118A         
  2024  0790  0870               	movf	(0+(?_strlen)),w
  2025  0791  3EFE               	addlw	0FEh
  2026  0792  1283               	bcf	status, 5	;RP0=0, select bank0
  2027  0793  1303               	bcf	status, 6	;RP1=0, select bank0
  2028  0794  072B               	addwf	(parsePacket@dataPacket),w
  2029  0795  00A6               	movwf	(??_parsePacket+2)+0
  2030  0796  0826               	movf	0+(??_parsePacket+2)+0,w
  2031  0797  0084               	movwf	fsr0
  2032  0798  1383               	bcf	status, 7	;select IRP bank0
  2033  0799  0800               	movf	indf,w
  2034  079A  120A  118A  20F8   	fcall	_makeHexByte
              120A  118A         
  2035  079F  1283               	bcf	status, 5	;RP0=0, select bank0
  2036  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
  2037  07A1  00A7               	movwf	(??_parsePacket+3)+0
  2038  07A2  0827               	movf	(??_parsePacket+3)+0,w
  2039  07A3  00FA               	movwf	(?_eeprom_write)
  2040  07A4  3043               	movlw	(_csByteAddr-__stringbase)
  2041  07A5  0084               	movwf	fsr0
  2042  07A6  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2043  07AB  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  2044                           	line	133
  2045                           	
  2046  07B0                     l8520:	
  2047                           ;Packet.c: 133: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  2048  07B0  1283               	bcf	status, 5	;RP0=0, select bank0
  2049  07B1  1303               	bcf	status, 6	;RP1=0, select bank0
  2050  07B2  01AA               	clrf	(parsePacket@i)
  2051  07B3  2FEA               	goto	l8528
  2052                           	
  2053  07B4                     l1584:	
  2054                           	line	134
  2055                           	
  2056  07B4                     l8522:	
  2057                           ;Packet.c: 134: eeprom_write(dataBytesAddr+i, makeHexByte(dataPacket[8 + dataCounter], d
                                 ataPacket[9 + dataCounter]));
  2058  07B4  0828               	movf	(parsePacket@dataCounter),w
  2059  07B5  3E09               	addlw	09h
  2060  07B6  072B               	addwf	(parsePacket@dataPacket),w
  2061  07B7  00A4               	movwf	(??_parsePacket+0)+0
  2062  07B8  0824               	movf	0+(??_parsePacket+0)+0,w
  2063  07B9  0084               	movwf	fsr0
  2064  07BA  1383               	bcf	status, 7	;select IRP bank0
  2065  07BB  0800               	movf	indf,w
  2066  07BC  00A5               	movwf	(??_parsePacket+1)+0
  2067  07BD  0825               	movf	(??_parsePacket+1)+0,w
  2068  07BE  00FD               	movwf	(?_makeHexByte)
  2069  07BF  0828               	movf	(parsePacket@dataCounter),w
  2070  07C0  3E08               	addlw	08h
  2071  07C1  072B               	addwf	(parsePacket@dataPacket),w
  2072  07C2  00A6               	movwf	(??_parsePacket+2)+0
  2073  07C3  0826               	movf	0+(??_parsePacket+2)+0,w
  2074  07C4  0084               	movwf	fsr0
  2075  07C5  0800               	movf	indf,w
  2076  07C6  120A  118A  20F8   	fcall	_makeHexByte
              120A  118A         
  2077  07CB  1283               	bcf	status, 5	;RP0=0, select bank0
  2078  07CC  1303               	bcf	status, 6	;RP1=0, select bank0
  2079  07CD  00A7               	movwf	(??_parsePacket+3)+0
  2080  07CE  0827               	movf	(??_parsePacket+3)+0,w
  2081  07CF  00FA               	movwf	(?_eeprom_write)
  2082  07D0  3044               	movlw	(_dataBytesAddr-__stringbase)
  2083  07D1  0084               	movwf	fsr0
  2084  07D2  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2085  07D7  072A               	addwf	(parsePacket@i),w
  2086  07D8  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  2087                           	line	135
  2088                           	
  2089  07DD                     l8524:	
  2090                           ;Packet.c: 135: dataCounter += 2;
  2091  07DD  3002               	movlw	low(02h)
  2092  07DE  1283               	bcf	status, 5	;RP0=0, select bank0
  2093  07DF  1303               	bcf	status, 6	;RP1=0, select bank0
  2094  07E0  07A8               	addwf	(parsePacket@dataCounter),f
  2095  07E1  1803               	skipnc
  2096  07E2  0AA9               	incf	(parsePacket@dataCounter+1),f
  2097  07E3  3000               	movlw	high(02h)
  2098  07E4  07A9               	addwf	(parsePacket@dataCounter+1),f
  2099                           	line	133
  2100                           	
  2101  07E5                     l8526:	
  2102  07E5  3001               	movlw	(01h)
  2103  07E6  00A4               	movwf	(??_parsePacket+0)+0
  2104  07E7  0824               	movf	(??_parsePacket+0)+0,w
  2105  07E8  07AA               	addwf	(parsePacket@i),f
  2106  07E9  2FEA               	goto	l8528
  2107                           	
  2108  07EA                     l1583:	
  2109                           	
  2110  07EA                     l8528:	
  2111  07EA  304C               	movlw	(_lenByteAddr-__stringbase)
  2112  07EB  0084               	movwf	fsr0
  2113  07EC  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2114  07F1  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2115  07F6  1283               	bcf	status, 5	;RP0=0, select bank0
  2116  07F7  1303               	bcf	status, 6	;RP1=0, select bank0
  2117  07F8  022A               	subwf	(parsePacket@i),w
  2118  07F9  1C03               	skipc
  2119  07FA  2FFC               	goto	u2881
  2120  07FB  2FFD               	goto	u2880
  2121  07FC                     u2881:
  2122  07FC  2FB4               	goto	l8522
  2123  07FD                     u2880:
  2124  07FD  2FFF               	goto	l1586
  2125                           	
  2126  07FE                     l1585:	
  2127  07FE  2FFF               	goto	l1586
  2128                           	line	137
  2129                           	
  2130  07FF                     l1582:	
  2131                           	line	138
  2132                           	
  2133  07FF                     l1586:	
  2134  07FF  0008               	return
  2135                           	opt stack 0
  2136                           GLOBAL	__end_of_parsePacket
  2137  0800                     	__end_of_parsePacket:
  2138 ;; =============== function _parsePacket ends ============
  2139                           
  2140                           	signat	_parsePacket,4216
  2141                           	global	_getCommands
  2142                           psect	text600,local,class=CODE,delta=2
  2143                           global __ptext600
  2144  00D7                     __ptext600:
  2145                           
  2146 ;; *************** function _getCommands *****************
  2147 ;; Defined at:
  2148 ;;		line 6 in file "Command.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;		None
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;		None               void
  2155 ;; Registers used:
  2156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2162 ;;      Params:         0       0       0       0       0
  2163 ;;      Locals:         0       0       0       0       0
  2164 ;;      Temps:          0       0       0       0       0
  2165 ;;      Totals:         0       0       0       0       0
  2166 ;;Total ram usage:        0 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    1
  2169 ;; This function calls:
  2170 ;;		_writeByte
  2171 ;;		_eeprom_read
  2172 ;; This function is called by:
  2173 ;;		_getPacket
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           psect	text600
  2177                           	file	"Command.c"
  2178                           	line	6
  2179                           	global	__size_of_getCommands
  2180  0021                     	__size_of_getCommands	equ	__end_of_getCommands-_getCommands
  2181                           	
  2182  00D7                     _getCommands:	
  2183                           	opt	stack 5
  2184                           ; Regs used in _getCommands: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2185                           	line	8
  2186                           	
  2187  00D7                     l8502:	
  2188                           ;Command.c: 8: switch(eeprom_read(rwByteAddr)){
  2189  00D7  28E7               	goto	l8510
  2190                           	line	9
  2191                           ;Command.c: 9: case 0:
  2192                           	
  2193  00D8                     l4742:	
  2194                           	line	10
  2195                           	
  2196  00D8                     l8504:	
  2197                           ;Command.c: 10: writeByte('T');
  2198  00D8  3054               	movlw	(054h)
  2199  00D9  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  2200                           	line	11
  2201                           ;Command.c: 11: break;
  2202  00DE  28F7               	goto	l4745
  2203                           	line	12
  2204                           ;Command.c: 12: default:
  2205                           	
  2206  00DF                     l4744:	
  2207                           	line	13
  2208                           	
  2209  00DF                     l8506:	
  2210                           ;Command.c: 13: writeByte('N');
  2211  00DF  304E               	movlw	(04Eh)
  2212  00E0  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  2213                           	line	14
  2214                           ;Command.c: 14: break;
  2215  00E5  28F7               	goto	l4745
  2216                           	line	15
  2217                           	
  2218  00E6                     l8508:	
  2219                           ;Command.c: 15: }
  2220  00E6  28F7               	goto	l4745
  2221                           	line	8
  2222                           	
  2223  00E7                     l4741:	
  2224                           	
  2225  00E7                     l8510:	
  2226  00E7  3052               	movlw	(_rwByteAddr-__stringbase)
  2227  00E8  0084               	movwf	fsr0
  2228  00E9  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2229  00EE  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2230                           	; Switch size 1, requested type "space"
  2231                           ; Number of cases is 1, Range of values is 0 to 0
  2232                           ; switch strategies available:
  2233                           ; Name         Instructions Cycles
  2234                           ; simple_byte            4     3 (average)
  2235                           ; direct_byte           11     8 (fixed)
  2236                           ; jumptable            260     6 (fixed)
  2237                           ; rangetable             5     6 (fixed)
  2238                           ; spacedrange            8     9 (fixed)
  2239                           ; locatedrange           1     3 (fixed)
  2240                           ;	Chosen strategy is simple_byte
  2241                           
  2242                           	opt asmopt_off
  2243  00F3  3A00               	xorlw	0^0	; case 0
  2244  00F4  1903               	skipnz
  2245  00F5  28D8               	goto	l8504
  2246  00F6  28DF               	goto	l8506
  2247                           	opt asmopt_on
  2248                           
  2249                           	line	15
  2250                           	
  2251  00F7                     l4743:	
  2252                           	line	16
  2253                           	
  2254  00F7                     l4745:	
  2255  00F7  0008               	return
  2256                           	opt stack 0
  2257                           GLOBAL	__end_of_getCommands
  2258  00F8                     	__end_of_getCommands:
  2259 ;; =============== function _getCommands ends ============
  2260                           
  2261                           	signat	_getCommands,88
  2262                           	global	_initTemp
  2263                           psect	text601,local,class=CODE,delta=2
  2264                           global __ptext601
  2265  0385                     __ptext601:
  2266                           
  2267 ;; *************** function _initTemp *****************
  2268 ;; Defined at:
  2269 ;;		line 23 in file "Temperature.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;		None               void
  2276 ;; Registers used:
  2277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       0       0       0       0
  2284 ;;      Locals:         0       0       0       0       0
  2285 ;;      Temps:          1       0       0       0       0
  2286 ;;      Totals:         1       0       0       0       0
  2287 ;;Total ram usage:        1 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    1
  2290 ;; This function calls:
  2291 ;;		_eeprom_write
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           psect	text601
  2297                           	file	"Temperature.c"
  2298                           	line	23
  2299                           	global	__size_of_initTemp
  2300  005D                     	__size_of_initTemp	equ	__end_of_initTemp-_initTemp
  2301                           	
  2302  0385                     _initTemp:	
  2303                           	opt	stack 6
  2304                           ; Regs used in _initTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2305                           	line	25
  2306                           	
  2307  0385                     l8500:	
  2308                           ;Temperature.c: 25: eeprom_write(tempValHAddr,0x00);
  2309  0385  01FA               	clrf	(?_eeprom_write)
  2310  0386  305B               	movlw	(_tempValHAddr-__stringbase)
  2311  0387  0084               	movwf	fsr0
  2312  0388  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2313  038D  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  2314                           	line	26
  2315                           ;Temperature.c: 26: eeprom_write(tempValLAddr, 0x00);
  2316  0392  01FA               	clrf	(?_eeprom_write)
  2317  0393  305C               	movlw	(_tempValLAddr-__stringbase)
  2318  0394  0084               	movwf	fsr0
  2319  0395  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2320  039A  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  2321                           	line	27
  2322                           ;Temperature.c: 27: eeprom_write(tempHiAddr, tempStartHi);
  2323  039F  3058               	movlw	(_tempStartHi-__stringbase)
  2324  03A0  0084               	movwf	fsr0
  2325  03A1  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2326  03A6  00FD               	movwf	(??_initTemp+0)+0
  2327  03A7  087D               	movf	(??_initTemp+0)+0,w
  2328  03A8  00FA               	movwf	(?_eeprom_write)
  2329  03A9  3056               	movlw	(_tempHiAddr-__stringbase)
  2330  03AA  0084               	movwf	fsr0
  2331  03AB  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2332  03B0  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  2333                           	line	28
  2334                           ;Temperature.c: 28: eeprom_write(tempLoAddr, tempStartLo);
  2335  03B5  3059               	movlw	(_tempStartLo-__stringbase)
  2336  03B6  0084               	movwf	fsr0
  2337  03B7  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2338  03BC  00FD               	movwf	(??_initTemp+0)+0
  2339  03BD  087D               	movf	(??_initTemp+0)+0,w
  2340  03BE  00FA               	movwf	(?_eeprom_write)
  2341  03BF  3057               	movlw	(_tempLoAddr-__stringbase)
  2342  03C0  0084               	movwf	fsr0
  2343  03C1  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2344  03C6  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  2345                           	line	29
  2346                           ;Temperature.c: 29: eeprom_write(tempUnitAddr, tempC);
  2347  03CB  3054               	movlw	(_tempC-__stringbase)
  2348  03CC  0084               	movwf	fsr0
  2349  03CD  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2350  03D2  00FD               	movwf	(??_initTemp+0)+0
  2351  03D3  087D               	movf	(??_initTemp+0)+0,w
  2352  03D4  00FA               	movwf	(?_eeprom_write)
  2353  03D5  305A               	movlw	(_tempUnitAddr-__stringbase)
  2354  03D6  0084               	movwf	fsr0
  2355  03D7  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2356  03DC  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  2357                           	line	30
  2358                           	
  2359  03E1                     l2390:	
  2360  03E1  0008               	return
  2361                           	opt stack 0
  2362                           GLOBAL	__end_of_initTemp
  2363  03E2                     	__end_of_initTemp:
  2364 ;; =============== function _initTemp ends ============
  2365                           
  2366                           	signat	_initTemp,88
  2367                           	global	_readTemp
  2368                           psect	text602,local,class=CODE,delta=2
  2369                           global __ptext602
  2370  0144                     __ptext602:
  2371                           
  2372 ;; *************** function _readTemp *****************
  2373 ;; Defined at:
  2374 ;;		line 6 in file "Temperature.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  2    0[COMMON] unsigned int 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0, btemp+1
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2388 ;;      Params:         2       0       0       0       0
  2389 ;;      Locals:         0       0       0       0       0
  2390 ;;      Temps:          2       0       0       0       0
  2391 ;;      Totals:         4       0       0       0       0
  2392 ;;Total ram usage:        4 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_getTemp
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           psect	text602
  2401                           	file	"Temperature.c"
  2402                           	line	6
  2403                           	global	__size_of_readTemp
  2404  0027                     	__size_of_readTemp	equ	__end_of_readTemp-_readTemp
  2405                           	
  2406  0144                     _readTemp:	
  2407                           	opt	stack 6
  2408                           ; Regs used in _readTemp: [wreg+status,2+status,0+btemp+1]
  2409                           	line	8
  2410                           	
  2411  0144                     l8490:	
  2412                           ;Temperature.c: 8: ADON = 1;
  2413  0144  1283               	bcf	status, 5	;RP0=0, select bank0
  2414  0145  1303               	bcf	status, 6	;RP1=0, select bank0
  2415  0146  141F               	bsf	(248/8),(248)&7
  2416                           	line	12
  2417                           	
  2418  0147                     l8492:	
  2419                           ;Temperature.c: 12: _delay((unsigned long)((10)*(20000000/4000.0)));
  2420                           	opt asmopt_off
  2421  0147  3041               movlw	65
  2422  0148  00F3               movwf	((??_readTemp+0)+0+1),f
  2423  0149  30EE               	movlw	238
  2424  014A  00F2               movwf	((??_readTemp+0)+0),f
  2425  014B                     u3017:
  2426  014B  0BF2               	decfsz	((??_readTemp+0)+0),f
  2427  014C  294B               	goto	u3017
  2428  014D  0BF3               	decfsz	((??_readTemp+0)+0+1),f
  2429  014E  294B               	goto	u3017
  2430  014F  0064               	clrwdt
  2431                           opt asmopt_on
  2432                           
  2433                           	line	14
  2434                           	
  2435  0150                     l8494:	
  2436                           ;Temperature.c: 14: GO_nDONE = 1;
  2437  0150  1283               	bcf	status, 5	;RP0=0, select bank0
  2438  0151  1303               	bcf	status, 6	;RP1=0, select bank0
  2439  0152  151F               	bsf	(250/8),(250)&7
  2440                           	line	17
  2441                           ;Temperature.c: 17: while(GO_nDONE);
  2442  0153  2954               	goto	l2384
  2443                           	
  2444  0154                     l2385:	
  2445                           	
  2446  0154                     l2384:	
  2447  0154  191F               	btfsc	(250/8),(250)&7
  2448  0155  2957               	goto	u2851
  2449  0156  2958               	goto	u2850
  2450  0157                     u2851:
  2451  0157  2954               	goto	l2384
  2452  0158                     u2850:
  2453  0158  2959               	goto	l8496
  2454                           	
  2455  0159                     l2386:	
  2456                           	line	20
  2457                           	
  2458  0159                     l8496:	
  2459                           ;Temperature.c: 20: return ((ADRESH<<8)+ADRESL);
  2460  0159  081E               	movf	(30),w	;volatile
  2461  015A  00F2               	movwf	(??_readTemp+0)+0
  2462  015B  01F3               	clrf	(??_readTemp+0)+0+1
  2463  015C  0872               	movf	(??_readTemp+0)+0,w
  2464  015D  00F3               	movwf	(??_readTemp+0)+1
  2465  015E  01F2               	clrf	(??_readTemp+0)+0
  2466  015F  1683               	bsf	status, 5	;RP0=1, select bank1
  2467  0160  1303               	bcf	status, 6	;RP1=0, select bank1
  2468  0161  081E               	movf	(158)^080h,w	;volatile
  2469  0162  0772               	addwf	0+(??_readTemp+0)+0,w
  2470  0163  00F0               	movwf	(?_readTemp)
  2471  0164  3000               	movlw	0
  2472  0165  1803               	skipnc
  2473  0166  3001               	movlw	1
  2474  0167  0773               	addwf	1+(??_readTemp+0)+0,w
  2475  0168  00F1               	movwf	1+(?_readTemp)
  2476  0169  296A               	goto	l2387
  2477                           	
  2478  016A                     l8498:	
  2479                           	line	21
  2480                           	
  2481  016A                     l2387:	
  2482  016A  0008               	return
  2483                           	opt stack 0
  2484                           GLOBAL	__end_of_readTemp
  2485  016B                     	__end_of_readTemp:
  2486 ;; =============== function _readTemp ends ============
  2487                           
  2488                           	signat	_readTemp,90
  2489                           	global	_addDataToCheckSum
  2490                           psect	text603,local,class=CODE,delta=2
  2491                           global __ptext603
  2492  0520                     __ptext603:
  2493                           
  2494 ;; *************** function _addDataToCheckSum *****************
  2495 ;; Defined at:
  2496 ;;		line 258 in file "Packet.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  i               1   13[COMMON] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;		None               void
  2503 ;; Registers used:
  2504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2510 ;;      Params:         0       0       0       0       0
  2511 ;;      Locals:         1       0       0       0       0
  2512 ;;      Temps:          0       2       0       0       0
  2513 ;;      Totals:         1       2       0       0       0
  2514 ;;Total ram usage:        3 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    1
  2517 ;; This function calls:
  2518 ;;		_eeprom_read
  2519 ;;		_eeprom_write
  2520 ;; This function is called by:
  2521 ;;		_validatePacket
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           psect	text603
  2525                           	file	"Packet.c"
  2526                           	line	258
  2527                           	global	__size_of_addDataToCheckSum
  2528  0077                     	__size_of_addDataToCheckSum	equ	__end_of_addDataToCheckSum-_addDataToCheckSum
  2529                           	
  2530  0520                     _addDataToCheckSum:	
  2531                           	opt	stack 4
  2532                           ; Regs used in _addDataToCheckSum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2533                           	line	260
  2534                           	
  2535  0520                     l8480:	
  2536                           ;Packet.c: 260: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(lenB
                                 yteAddr));
  2537  0520  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2538  0521  0084               	movwf	fsr0
  2539  0522  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2540  0527  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2541  052C  1283               	bcf	status, 5	;RP0=0, select bank0
  2542  052D  1303               	bcf	status, 6	;RP1=0, select bank0
  2543  052E  00A0               	movwf	(??_addDataToCheckSum+0)+0
  2544  052F  304C               	movlw	(_lenByteAddr-__stringbase)
  2545  0530  0084               	movwf	fsr0
  2546  0531  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2547  0536  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2548  053B  1283               	bcf	status, 5	;RP0=0, select bank0
  2549  053C  1303               	bcf	status, 6	;RP1=0, select bank0
  2550  053D  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  2551  053E  00A1               	movwf	(??_addDataToCheckSum+1)+0
  2552  053F  0821               	movf	(??_addDataToCheckSum+1)+0,w
  2553  0540  00FA               	movwf	(?_eeprom_write)
  2554  0541  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2555  0542  0084               	movwf	fsr0
  2556  0543  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2557  0548  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  2558                           	line	263
  2559                           	
  2560  054D                     l8482:	
  2561                           ;Packet.c: 263: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  2562  054D  01FD               	clrf	(addDataToCheckSum@i)
  2563  054E  2D84               	goto	l8488
  2564                           	
  2565  054F                     l1613:	
  2566                           	line	265
  2567                           	
  2568  054F                     l8484:	
  2569                           ;Packet.c: 265: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(data
                                 BytesAddr+i));
  2570  054F  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2571  0550  0084               	movwf	fsr0
  2572  0551  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2573  0556  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2574  055B  1283               	bcf	status, 5	;RP0=0, select bank0
  2575  055C  1303               	bcf	status, 6	;RP1=0, select bank0
  2576  055D  00A0               	movwf	(??_addDataToCheckSum+0)+0
  2577  055E  3044               	movlw	(_dataBytesAddr-__stringbase)
  2578  055F  0084               	movwf	fsr0
  2579  0560  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2580  0565  077D               	addwf	(addDataToCheckSum@i),w
  2581  0566  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2582  056B  1283               	bcf	status, 5	;RP0=0, select bank0
  2583  056C  1303               	bcf	status, 6	;RP1=0, select bank0
  2584  056D  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  2585  056E  00A1               	movwf	(??_addDataToCheckSum+1)+0
  2586  056F  0821               	movf	(??_addDataToCheckSum+1)+0,w
  2587  0570  00FA               	movwf	(?_eeprom_write)
  2588  0571  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2589  0572  0084               	movwf	fsr0
  2590  0573  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2591  0578  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  2592                           	line	263
  2593                           	
  2594  057D                     l8486:	
  2595  057D  3001               	movlw	(01h)
  2596  057E  1283               	bcf	status, 5	;RP0=0, select bank0
  2597  057F  1303               	bcf	status, 6	;RP1=0, select bank0
  2598  0580  00A0               	movwf	(??_addDataToCheckSum+0)+0
  2599  0581  0820               	movf	(??_addDataToCheckSum+0)+0,w
  2600  0582  07FD               	addwf	(addDataToCheckSum@i),f
  2601  0583  2D84               	goto	l8488
  2602                           	
  2603  0584                     l1612:	
  2604                           	
  2605  0584                     l8488:	
  2606  0584  304C               	movlw	(_lenByteAddr-__stringbase)
  2607  0585  0084               	movwf	fsr0
  2608  0586  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2609  058B  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2610  0590  027D               	subwf	(addDataToCheckSum@i),w
  2611  0591  1C03               	skipc
  2612  0592  2D94               	goto	u2841
  2613  0593  2D95               	goto	u2840
  2614  0594                     u2841:
  2615  0594  2D4F               	goto	l8484
  2616  0595                     u2840:
  2617  0595  2D96               	goto	l1615
  2618                           	
  2619  0596                     l1614:	
  2620                           	line	267
  2621                           	
  2622  0596                     l1615:	
  2623  0596  0008               	return
  2624                           	opt stack 0
  2625                           GLOBAL	__end_of_addDataToCheckSum
  2626  0597                     	__end_of_addDataToCheckSum:
  2627 ;; =============== function _addDataToCheckSum ends ============
  2628                           
  2629                           	signat	_addDataToCheckSum,88
  2630                           	global	_checkCS
  2631                           psect	text604,local,class=CODE,delta=2
  2632                           global __ptext604
  2633  022B                     __ptext604:
  2634                           
  2635 ;; *************** function _checkCS *****************
  2636 ;; Defined at:
  2637 ;;		line 216 in file "Packet.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  2    2[COMMON] int 
  2644 ;; Registers used:
  2645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2651 ;;      Params:         2       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0
  2653 ;;      Temps:          1       0       0       0       0
  2654 ;;      Totals:         3       0       0       0       0
  2655 ;;Total ram usage:        3 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    1
  2658 ;; This function calls:
  2659 ;;		_eeprom_read
  2660 ;;		_writeByte
  2661 ;; This function is called by:
  2662 ;;		_validatePacket
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           psect	text604
  2666                           	file	"Packet.c"
  2667                           	line	216
  2668                           	global	__size_of_checkCS
  2669  0034                     	__size_of_checkCS	equ	__end_of_checkCS-_checkCS
  2670                           	
  2671  022B                     _checkCS:	
  2672                           	opt	stack 4
  2673                           ; Regs used in _checkCS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2674                           	line	218
  2675                           	
  2676  022B                     l8466:	
  2677                           ;Packet.c: 218: if(eeprom_read(csByteAddr) == eeprom_read(calcCSByteAddr)){
  2678  022B  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2679  022C  0084               	movwf	fsr0
  2680  022D  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2681  0232  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2682  0237  00F4               	movwf	(??_checkCS+0)+0
  2683  0238  3043               	movlw	(_csByteAddr-__stringbase)
  2684  0239  0084               	movwf	fsr0
  2685  023A  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2686  023F  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2687  0244  0674               	xorwf	0+(??_checkCS+0)+0,w
  2688  0245  1D03               	skipz
  2689  0246  2A48               	goto	u2831
  2690  0247  2A49               	goto	u2830
  2691  0248                     u2831:
  2692  0248  2A55               	goto	l8474
  2693  0249                     u2830:
  2694                           	line	220
  2695                           	
  2696  0249                     l8468:	
  2697                           ;Packet.c: 220: writeByte('Y');
  2698  0249  3059               	movlw	(059h)
  2699  024A  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  2700                           	line	221
  2701                           	
  2702  024F                     l8470:	
  2703                           ;Packet.c: 221: return 1;
  2704  024F  3001               	movlw	low(01h)
  2705  0250  00F2               	movwf	(?_checkCS)
  2706  0251  3000               	movlw	high(01h)
  2707  0252  00F3               	movwf	((?_checkCS))+1
  2708  0253  2A5E               	goto	l1604
  2709                           	
  2710  0254                     l8472:	
  2711  0254  2A5E               	goto	l1604
  2712                           	line	222
  2713                           	
  2714  0255                     l1603:	
  2715                           	line	224
  2716                           	
  2717  0255                     l8474:	
  2718                           ;Packet.c: 222: }
  2719                           ;Packet.c: 224: writeByte('N');
  2720  0255  304E               	movlw	(04Eh)
  2721  0256  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  2722                           	line	225
  2723                           	
  2724  025B                     l8476:	
  2725                           ;Packet.c: 225: return 0;
  2726  025B  01F2               	clrf	(?_checkCS)
  2727  025C  01F3               	clrf	(?_checkCS+1)
  2728  025D  2A5E               	goto	l1604
  2729                           	
  2730  025E                     l8478:	
  2731                           	line	226
  2732                           	
  2733  025E                     l1604:	
  2734  025E  0008               	return
  2735                           	opt stack 0
  2736                           GLOBAL	__end_of_checkCS
  2737  025F                     	__end_of_checkCS:
  2738 ;; =============== function _checkCS ends ============
  2739                           
  2740                           	signat	_checkCS,90
  2741                           	global	_checkCMDByte
  2742                           psect	text605,local,class=CODE,delta=2
  2743                           global __ptext605
  2744  04B0                     __ptext605:
  2745                           
  2746 ;; *************** function _checkCMDByte *****************
  2747 ;; Defined at:
  2748 ;;		line 193 in file "Packet.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  2    0[BANK0 ] int 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2762 ;;      Params:         0       2       0       0       0
  2763 ;;      Locals:         0       0       0       0       0
  2764 ;;      Temps:          0       2       0       0       0
  2765 ;;      Totals:         0       4       0       0       0
  2766 ;;Total ram usage:        4 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    1
  2769 ;; This function calls:
  2770 ;;		_eeprom_read
  2771 ;;		_eeprom_write
  2772 ;;		_writeByte
  2773 ;; This function is called by:
  2774 ;;		_validatePacket
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           psect	text605
  2778                           	file	"Packet.c"
  2779                           	line	193
  2780                           	global	__size_of_checkCMDByte
  2781  0070                     	__size_of_checkCMDByte	equ	__end_of_checkCMDByte-_checkCMDByte
  2782                           	
  2783  04B0                     _checkCMDByte:	
  2784                           	opt	stack 4
  2785                           ; Regs used in _checkCMDByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2786                           	line	195
  2787                           	
  2788  04B0                     l8450:	
  2789                           ;Packet.c: 195: if(eeprom_read(cmdByteAddr) >= 0 && eeprom_read(cmdByteAddr) <= maxCmd){
  2790  04B0  3042               	movlw	(_cmdByteAddr-__stringbase)
  2791  04B1  0084               	movwf	fsr0
  2792  04B2  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2793  04B7  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2794  04BC  3042               	movlw	(_cmdByteAddr-__stringbase)
  2795  04BD  0084               	movwf	fsr0
  2796  04BE  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2797  04C3  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2798  04C8  1283               	bcf	status, 5	;RP0=0, select bank0
  2799  04C9  1303               	bcf	status, 6	;RP1=0, select bank0
  2800  04CA  00A2               	movwf	(??_checkCMDByte+0)+0
  2801  04CB  304D               	movlw	(_maxCmd-__stringbase)
  2802  04CC  0084               	movwf	fsr0
  2803  04CD  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2804  04D2  00A3               	movwf	(??_checkCMDByte+1)+0
  2805  04D3  0822               	movf	0+(??_checkCMDByte+0)+0,w
  2806  04D4  0223               	subwf	(??_checkCMDByte+1)+0,w
  2807  04D5  1C03               	skipc
  2808  04D6  2CD8               	goto	u2821
  2809  04D7  2CD9               	goto	u2820
  2810  04D8                     u2821:
  2811  04D8  2D14               	goto	l8460
  2812  04D9                     u2820:
  2813                           	line	197
  2814                           	
  2815  04D9                     l8452:	
  2816                           ;Packet.c: 197: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(cmdB
                                 yteAddr));
  2817  04D9  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2818  04DA  0084               	movwf	fsr0
  2819  04DB  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2820  04E0  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2821  04E5  1283               	bcf	status, 5	;RP0=0, select bank0
  2822  04E6  1303               	bcf	status, 6	;RP1=0, select bank0
  2823  04E7  00A2               	movwf	(??_checkCMDByte+0)+0
  2824  04E8  3042               	movlw	(_cmdByteAddr-__stringbase)
  2825  04E9  0084               	movwf	fsr0
  2826  04EA  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2827  04EF  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2828  04F4  1283               	bcf	status, 5	;RP0=0, select bank0
  2829  04F5  1303               	bcf	status, 6	;RP1=0, select bank0
  2830  04F6  0722               	addwf	0+(??_checkCMDByte+0)+0,w
  2831  04F7  00A3               	movwf	(??_checkCMDByte+1)+0
  2832  04F8  0823               	movf	(??_checkCMDByte+1)+0,w
  2833  04F9  00FA               	movwf	(?_eeprom_write)
  2834  04FA  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2835  04FB  0084               	movwf	fsr0
  2836  04FC  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2837  0501  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  2838                           	line	199
  2839                           	
  2840  0506                     l8454:	
  2841                           ;Packet.c: 199: writeByte('C');
  2842  0506  3043               	movlw	(043h)
  2843  0507  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  2844                           	line	200
  2845                           	
  2846  050C                     l8456:	
  2847                           ;Packet.c: 200: return 1;
  2848  050C  3001               	movlw	low(01h)
  2849  050D  1283               	bcf	status, 5	;RP0=0, select bank0
  2850  050E  1303               	bcf	status, 6	;RP1=0, select bank0
  2851  050F  00A0               	movwf	(?_checkCMDByte)
  2852  0510  3000               	movlw	high(01h)
  2853  0511  00A1               	movwf	((?_checkCMDByte))+1
  2854  0512  2D1F               	goto	l1600
  2855                           	
  2856  0513                     l8458:	
  2857  0513  2D1F               	goto	l1600
  2858                           	line	201
  2859                           	
  2860  0514                     l1599:	
  2861                           	line	203
  2862                           	
  2863  0514                     l8460:	
  2864                           ;Packet.c: 201: }
  2865                           ;Packet.c: 203: writeByte('N');
  2866  0514  304E               	movlw	(04Eh)
  2867  0515  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  2868                           	line	204
  2869                           	
  2870  051A                     l8462:	
  2871                           ;Packet.c: 204: return 0;
  2872  051A  1283               	bcf	status, 5	;RP0=0, select bank0
  2873  051B  1303               	bcf	status, 6	;RP1=0, select bank0
  2874  051C  01A0               	clrf	(?_checkCMDByte)
  2875  051D  01A1               	clrf	(?_checkCMDByte+1)
  2876  051E  2D1F               	goto	l1600
  2877                           	
  2878  051F                     l8464:	
  2879                           	line	205
  2880                           	
  2881  051F                     l1600:	
  2882  051F  0008               	return
  2883                           	opt stack 0
  2884                           GLOBAL	__end_of_checkCMDByte
  2885  0520                     	__end_of_checkCMDByte:
  2886 ;; =============== function _checkCMDByte ends ============
  2887                           
  2888                           	signat	_checkCMDByte,90
  2889                           	global	_checkRWByte
  2890                           psect	text606,local,class=CODE,delta=2
  2891                           global __ptext606
  2892  0446                     __ptext606:
  2893                           
  2894 ;; *************** function _checkRWByte *****************
  2895 ;; Defined at:
  2896 ;;		line 171 in file "Packet.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  2    0[BANK0 ] int 
  2903 ;; Registers used:
  2904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2910 ;;      Params:         0       2       0       0       0
  2911 ;;      Locals:         0       0       0       0       0
  2912 ;;      Temps:          0       2       0       0       0
  2913 ;;      Totals:         0       4       0       0       0
  2914 ;;Total ram usage:        4 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    1
  2917 ;; This function calls:
  2918 ;;		_eeprom_read
  2919 ;;		_writeByte
  2920 ;;		_eeprom_write
  2921 ;; This function is called by:
  2922 ;;		_validatePacket
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           psect	text606
  2926                           	file	"Packet.c"
  2927                           	line	171
  2928                           	global	__size_of_checkRWByte
  2929  006A                     	__size_of_checkRWByte	equ	__end_of_checkRWByte-_checkRWByte
  2930                           	
  2931  0446                     _checkRWByte:	
  2932                           	opt	stack 4
  2933                           ; Regs used in _checkRWByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2934                           	line	174
  2935                           	
  2936  0446                     l8432:	
  2937                           ;Packet.c: 174: if(eeprom_read(rwByteAddr) == 0 || eeprom_read(rwByteAddr) == 1){
  2938  0446  3052               	movlw	(_rwByteAddr-__stringbase)
  2939  0447  0084               	movwf	fsr0
  2940  0448  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2941  044D  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2942  0452  3A00               	xorlw	0
  2943  0453  1903               	skipnz
  2944  0454  2C56               	goto	u2801
  2945  0455  2C57               	goto	u2800
  2946  0456                     u2801:
  2947  0456  2C69               	goto	l8436
  2948  0457                     u2800:
  2949                           	
  2950  0457                     l8434:	
  2951  0457  3052               	movlw	(_rwByteAddr-__stringbase)
  2952  0458  0084               	movwf	fsr0
  2953  0459  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2954  045E  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2955  0463  3A01               	xorlw	01h
  2956  0464  1D03               	skipz
  2957  0465  2C67               	goto	u2811
  2958  0466  2C68               	goto	u2810
  2959  0467                     u2811:
  2960  0467  2CA4               	goto	l8444
  2961  0468                     u2810:
  2962  0468  2C69               	goto	l8436
  2963                           	
  2964  0469                     l1595:	
  2965                           	line	176
  2966                           	
  2967  0469                     l8436:	
  2968                           ;Packet.c: 176: writeByte('R');
  2969  0469  3052               	movlw	(052h)
  2970  046A  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  2971                           	line	178
  2972                           	
  2973  046F                     l8438:	
  2974                           ;Packet.c: 178: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(rwBy
                                 teAddr));
  2975  046F  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2976  0470  0084               	movwf	fsr0
  2977  0471  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2978  0476  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2979  047B  1283               	bcf	status, 5	;RP0=0, select bank0
  2980  047C  1303               	bcf	status, 6	;RP1=0, select bank0
  2981  047D  00A2               	movwf	(??_checkRWByte+0)+0
  2982  047E  3052               	movlw	(_rwByteAddr-__stringbase)
  2983  047F  0084               	movwf	fsr0
  2984  0480  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2985  0485  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  2986  048A  1283               	bcf	status, 5	;RP0=0, select bank0
  2987  048B  1303               	bcf	status, 6	;RP1=0, select bank0
  2988  048C  0722               	addwf	0+(??_checkRWByte+0)+0,w
  2989  048D  00A3               	movwf	(??_checkRWByte+1)+0
  2990  048E  0823               	movf	(??_checkRWByte+1)+0,w
  2991  048F  00FA               	movwf	(?_eeprom_write)
  2992  0490  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2993  0491  0084               	movwf	fsr0
  2994  0492  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2995  0497  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  2996                           	line	179
  2997                           	
  2998  049C                     l8440:	
  2999                           ;Packet.c: 179: return 1;
  3000  049C  3001               	movlw	low(01h)
  3001  049D  1283               	bcf	status, 5	;RP0=0, select bank0
  3002  049E  1303               	bcf	status, 6	;RP1=0, select bank0
  3003  049F  00A0               	movwf	(?_checkRWByte)
  3004  04A0  3000               	movlw	high(01h)
  3005  04A1  00A1               	movwf	((?_checkRWByte))+1
  3006  04A2  2CAF               	goto	l1596
  3007                           	
  3008  04A3                     l8442:	
  3009  04A3  2CAF               	goto	l1596
  3010                           	line	180
  3011                           	
  3012  04A4                     l1593:	
  3013                           	line	182
  3014                           	
  3015  04A4                     l8444:	
  3016                           ;Packet.c: 180: }
  3017                           ;Packet.c: 182: writeByte('N');
  3018  04A4  304E               	movlw	(04Eh)
  3019  04A5  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  3020                           	line	183
  3021                           	
  3022  04AA                     l8446:	
  3023                           ;Packet.c: 183: return 0;
  3024  04AA  1283               	bcf	status, 5	;RP0=0, select bank0
  3025  04AB  1303               	bcf	status, 6	;RP1=0, select bank0
  3026  04AC  01A0               	clrf	(?_checkRWByte)
  3027  04AD  01A1               	clrf	(?_checkRWByte+1)
  3028  04AE  2CAF               	goto	l1596
  3029                           	
  3030  04AF                     l8448:	
  3031                           	line	184
  3032                           	
  3033  04AF                     l1596:	
  3034  04AF  0008               	return
  3035                           	opt stack 0
  3036                           GLOBAL	__end_of_checkRWByte
  3037  04B0                     	__end_of_checkRWByte:
  3038 ;; =============== function _checkRWByte ends ============
  3039                           
  3040                           	signat	_checkRWByte,90
  3041                           	global	_checkStartByte
  3042                           psect	text607,local,class=CODE,delta=2
  3043                           global __ptext607
  3044  03E2                     __ptext607:
  3045                           
  3046 ;; *************** function _checkStartByte *****************
  3047 ;; Defined at:
  3048 ;;		line 148 in file "Packet.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  2    0[BANK0 ] int 
  3055 ;; Registers used:
  3056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3062 ;;      Params:         0       2       0       0       0
  3063 ;;      Locals:         0       0       0       0       0
  3064 ;;      Temps:          0       2       0       0       0
  3065 ;;      Totals:         0       4       0       0       0
  3066 ;;Total ram usage:        4 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    1
  3069 ;; This function calls:
  3070 ;;		_eeprom_read
  3071 ;;		_writeByte
  3072 ;;		_eeprom_write
  3073 ;; This function is called by:
  3074 ;;		_validatePacket
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           psect	text607
  3078                           	file	"Packet.c"
  3079                           	line	148
  3080                           	global	__size_of_checkStartByte
  3081  0064                     	__size_of_checkStartByte	equ	__end_of_checkStartByte-_checkStartByte
  3082                           	
  3083  03E2                     _checkStartByte:	
  3084                           	opt	stack 4
  3085                           ; Regs used in _checkStartByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3086                           	line	151
  3087                           	
  3088  03E2                     l8416:	
  3089                           ;Packet.c: 151: if (eeprom_read(startByteAddr) == userStartByte) {
  3090  03E2  305E               	movlw	(_userStartByte-__stringbase)
  3091  03E3  0084               	movwf	fsr0
  3092  03E4  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3093  03E9  1283               	bcf	status, 5	;RP0=0, select bank0
  3094  03EA  1303               	bcf	status, 6	;RP1=0, select bank0
  3095  03EB  00A2               	movwf	(??_checkStartByte+0)+0
  3096  03EC  3053               	movlw	(_startByteAddr-__stringbase)
  3097  03ED  0084               	movwf	fsr0
  3098  03EE  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3099  03F3  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  3100  03F8  1283               	bcf	status, 5	;RP0=0, select bank0
  3101  03F9  1303               	bcf	status, 6	;RP1=0, select bank0
  3102  03FA  0622               	xorwf	(??_checkStartByte+0)+0,w
  3103  03FB  1D03               	skipz
  3104  03FC  2BFE               	goto	u2791
  3105  03FD  2BFF               	goto	u2790
  3106  03FE                     u2791:
  3107  03FE  2C3A               	goto	l8426
  3108  03FF                     u2790:
  3109                           	line	153
  3110                           	
  3111  03FF                     l8418:	
  3112                           ;Packet.c: 153: writeByte('S');
  3113  03FF  3053               	movlw	(053h)
  3114  0400  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  3115                           	line	155
  3116                           	
  3117  0405                     l8420:	
  3118                           ;Packet.c: 155: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(star
                                 tByteAddr));
  3119  0405  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3120  0406  0084               	movwf	fsr0
  3121  0407  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3122  040C  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  3123  0411  1283               	bcf	status, 5	;RP0=0, select bank0
  3124  0412  1303               	bcf	status, 6	;RP1=0, select bank0
  3125  0413  00A2               	movwf	(??_checkStartByte+0)+0
  3126  0414  3053               	movlw	(_startByteAddr-__stringbase)
  3127  0415  0084               	movwf	fsr0
  3128  0416  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3129  041B  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  3130  0420  1283               	bcf	status, 5	;RP0=0, select bank0
  3131  0421  1303               	bcf	status, 6	;RP1=0, select bank0
  3132  0422  0722               	addwf	0+(??_checkStartByte+0)+0,w
  3133  0423  00A3               	movwf	(??_checkStartByte+1)+0
  3134  0424  0823               	movf	(??_checkStartByte+1)+0,w
  3135  0425  00FA               	movwf	(?_eeprom_write)
  3136  0426  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3137  0427  0084               	movwf	fsr0
  3138  0428  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3139  042D  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  3140                           	line	156
  3141                           	
  3142  0432                     l8422:	
  3143                           ;Packet.c: 156: return 1;
  3144  0432  3001               	movlw	low(01h)
  3145  0433  1283               	bcf	status, 5	;RP0=0, select bank0
  3146  0434  1303               	bcf	status, 6	;RP1=0, select bank0
  3147  0435  00A0               	movwf	(?_checkStartByte)
  3148  0436  3000               	movlw	high(01h)
  3149  0437  00A1               	movwf	((?_checkStartByte))+1
  3150  0438  2C45               	goto	l1590
  3151                           	
  3152  0439                     l8424:	
  3153  0439  2C45               	goto	l1590
  3154                           	line	157
  3155                           	
  3156  043A                     l1589:	
  3157                           	line	159
  3158                           	
  3159  043A                     l8426:	
  3160                           ;Packet.c: 157: }
  3161                           ;Packet.c: 159: writeByte('N');
  3162  043A  304E               	movlw	(04Eh)
  3163  043B  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  3164                           	line	160
  3165                           	
  3166  0440                     l8428:	
  3167                           ;Packet.c: 160: return 0;
  3168  0440  1283               	bcf	status, 5	;RP0=0, select bank0
  3169  0441  1303               	bcf	status, 6	;RP1=0, select bank0
  3170  0442  01A0               	clrf	(?_checkStartByte)
  3171  0443  01A1               	clrf	(?_checkStartByte+1)
  3172  0444  2C45               	goto	l1590
  3173                           	
  3174  0445                     l8430:	
  3175                           	line	161
  3176                           	
  3177  0445                     l1590:	
  3178  0445  0008               	return
  3179                           	opt stack 0
  3180                           GLOBAL	__end_of_checkStartByte
  3181  0446                     	__end_of_checkStartByte:
  3182 ;; =============== function _checkStartByte ends ============
  3183                           
  3184                           	signat	_checkStartByte,90
  3185                           	global	_checkDataFrames
  3186                           psect	text608,local,class=CODE,delta=2
  3187                           global __ptext608
  3188  0597                     __ptext608:
  3189                           
  3190 ;; *************** function _checkDataFrames *****************
  3191 ;; Defined at:
  3192 ;;		line 85 in file "Packet.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  2    2[COMMON] int 
  3199 ;; Registers used:
  3200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3206 ;;      Params:         2       0       0       0       0
  3207 ;;      Locals:         0       0       0       0       0
  3208 ;;      Temps:          6       0       0       0       0
  3209 ;;      Totals:         8       0       0       0       0
  3210 ;;Total ram usage:        8 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    1
  3213 ;; This function calls:
  3214 ;;		_eeprom_read
  3215 ;;		_writeByte
  3216 ;; This function is called by:
  3217 ;;		_validatePacket
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           psect	text608
  3221                           	file	"Packet.c"
  3222                           	line	85
  3223                           	global	__size_of_checkDataFrames
  3224  009A                     	__size_of_checkDataFrames	equ	__end_of_checkDataFrames-_checkDataFrames
  3225                           	
  3226  0597                     _checkDataFrames:	
  3227                           	opt	stack 4
  3228                           ; Regs used in _checkDataFrames: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3229                           	line	87
  3230                           	
  3231  0597                     l8390:	
  3232                           ;Packet.c: 87: if(eeprom_read(lenByteAddr) == 0 && (eeprom_read(RXLenAddr)-noDataLen) ==
                                  0){
  3233  0597  304C               	movlw	(_lenByteAddr-__stringbase)
  3234  0598  0084               	movwf	fsr0
  3235  0599  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3236  059E  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  3237  05A3  3800               	iorlw	0
  3238  05A4  1D03               	skipz
  3239  05A5  2DA7               	goto	u2751
  3240  05A6  2DA8               	goto	u2750
  3241  05A7                     u2751:
  3242  05A7  2DDB               	goto	l8402
  3243  05A8                     u2750:
  3244                           	
  3245  05A8                     l8392:	
  3246  05A8  3050               	movlw	(_noDataLen-__stringbase)
  3247  05A9  0084               	movwf	fsr0
  3248  05AA  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3249  05AF  00F4               	movwf	(??_checkDataFrames+0)+0
  3250  05B0  01F5               	clrf	(??_checkDataFrames+0)+0+1
  3251  05B1  09F4               	comf	(??_checkDataFrames+0)+0,f
  3252  05B2  09F5               	comf	(??_checkDataFrames+0)+1,f
  3253  05B3  0AF4               	incf	(??_checkDataFrames+0)+0,f
  3254  05B4  1903               	skipnz
  3255  05B5  0AF5               	incf	(??_checkDataFrames+0)+1,f
  3256  05B6  3040               	movlw	(_RXLenAddr-__stringbase)
  3257  05B7  0084               	movwf	fsr0
  3258  05B8  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3259  05BD  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  3260  05C2  0774               	addwf	0+(??_checkDataFrames+0)+0,w
  3261  05C3  00F6               	movwf	(??_checkDataFrames+2)+0
  3262  05C4  0875               	movf	1+(??_checkDataFrames+0)+0,w
  3263  05C5  1803               	skipnc
  3264  05C6  0A75               	incf	1+(??_checkDataFrames+0)+0,w
  3265  05C7  00F7               	movwf	((??_checkDataFrames+2)+0)+1
  3266  05C8  0877               	movf	1+(??_checkDataFrames+2)+0,w
  3267  05C9  0476               	iorwf	0+(??_checkDataFrames+2)+0,w
  3268  05CA  1D03               	skipz
  3269  05CB  2DCD               	goto	u2761
  3270  05CC  2DCE               	goto	u2760
  3271  05CD                     u2761:
  3272  05CD  2DDB               	goto	l8402
  3273  05CE                     u2760:
  3274                           	line	89
  3275                           	
  3276  05CE                     l8394:	
  3277                           ;Packet.c: 89: writeByte('D');
  3278  05CE  3044               	movlw	(044h)
  3279  05CF  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  3280                           	line	90
  3281                           	
  3282  05D4                     l8396:	
  3283                           ;Packet.c: 90: return 1;
  3284  05D4  3001               	movlw	low(01h)
  3285  05D5  00F2               	movwf	(?_checkDataFrames)
  3286  05D6  3000               	movlw	high(01h)
  3287  05D7  00F3               	movwf	((?_checkDataFrames))+1
  3288  05D8  2E30               	goto	l1577
  3289                           	
  3290  05D9                     l8398:	
  3291  05D9  2E30               	goto	l1577
  3292                           	line	94
  3293                           	
  3294  05DA                     l8400:	
  3295                           ;Packet.c: 94: }else if((eeprom_read(RXLenAddr) - noDataLen) == (eeprom_read(lenByteAddr
                                 )*2)){
  3296  05DA  2E27               	goto	l8410
  3297                           	
  3298  05DB                     l1576:	
  3299                           	
  3300  05DB                     l8402:	
  3301  05DB  304C               	movlw	(_lenByteAddr-__stringbase)
  3302  05DC  0084               	movwf	fsr0
  3303  05DD  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3304  05E2  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  3305  05E7  00F4               	movwf	(??_checkDataFrames+0)+0
  3306  05E8  01F5               	clrf	(??_checkDataFrames+0)+0+1
  3307  05E9  3001               	movlw	01h
  3308  05EA  00FF               	movwf	btemp+1
  3309  05EB                     u2775:
  3310  05EB  1003               	clrc
  3311  05EC  0DF4               	rlf	(??_checkDataFrames+0)+0,f
  3312  05ED  0DF5               	rlf	(??_checkDataFrames+0)+1,f
  3313  05EE  0BFF               	decfsz	btemp+1,f
  3314  05EF  2DEB               	goto	u2775
  3315  05F0  3050               	movlw	(_noDataLen-__stringbase)
  3316  05F1  0084               	movwf	fsr0
  3317  05F2  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3318  05F7  00F6               	movwf	(??_checkDataFrames+2)+0
  3319  05F8  01F7               	clrf	(??_checkDataFrames+2)+0+1
  3320  05F9  09F6               	comf	(??_checkDataFrames+2)+0,f
  3321  05FA  09F7               	comf	(??_checkDataFrames+2)+1,f
  3322  05FB  0AF6               	incf	(??_checkDataFrames+2)+0,f
  3323  05FC  1903               	skipnz
  3324  05FD  0AF7               	incf	(??_checkDataFrames+2)+1,f
  3325  05FE  3040               	movlw	(_RXLenAddr-__stringbase)
  3326  05FF  0084               	movwf	fsr0
  3327  0600  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3328  0605  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  3329  060A  0776               	addwf	0+(??_checkDataFrames+2)+0,w
  3330  060B  00F8               	movwf	(??_checkDataFrames+4)+0
  3331  060C  0877               	movf	1+(??_checkDataFrames+2)+0,w
  3332  060D  1803               	skipnc
  3333  060E  0A77               	incf	1+(??_checkDataFrames+2)+0,w
  3334  060F  00F9               	movwf	((??_checkDataFrames+4)+0)+1
  3335  0610  0875               	movf	1+(??_checkDataFrames+0)+0,w
  3336  0611  0679               	xorwf	1+(??_checkDataFrames+4)+0,w
  3337  0612  1D03               	skipz
  3338  0613  2E16               	goto	u2785
  3339  0614  0874               	movf	0+(??_checkDataFrames+0)+0,w
  3340  0615  0678               	xorwf	0+(??_checkDataFrames+4)+0,w
  3341  0616                     u2785:
  3342                           
  3343  0616  1D03               	skipz
  3344  0617  2E19               	goto	u2781
  3345  0618  2E1A               	goto	u2780
  3346  0619                     u2781:
  3347  0619  2E27               	goto	l8410
  3348  061A                     u2780:
  3349                           	line	96
  3350                           	
  3351  061A                     l8404:	
  3352                           ;Packet.c: 96: writeByte('D');
  3353  061A  3044               	movlw	(044h)
  3354  061B  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  3355                           	line	97
  3356                           	
  3357  0620                     l8406:	
  3358                           ;Packet.c: 97: return 1;
  3359  0620  3001               	movlw	low(01h)
  3360  0621  00F2               	movwf	(?_checkDataFrames)
  3361  0622  3000               	movlw	high(01h)
  3362  0623  00F3               	movwf	((?_checkDataFrames))+1
  3363  0624  2E30               	goto	l1577
  3364                           	
  3365  0625                     l8408:	
  3366  0625  2E30               	goto	l1577
  3367                           	line	98
  3368                           	
  3369  0626                     l1579:	
  3370  0626  2E27               	goto	l8410
  3371                           	line	101
  3372                           	
  3373  0627                     l1578:	
  3374                           	
  3375  0627                     l8410:	
  3376                           ;Packet.c: 98: }
  3377                           ;Packet.c: 101: writeByte('N');
  3378  0627  304E               	movlw	(04Eh)
  3379  0628  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  3380                           	line	102
  3381                           	
  3382  062D                     l8412:	
  3383                           ;Packet.c: 102: return 0;
  3384  062D  01F2               	clrf	(?_checkDataFrames)
  3385  062E  01F3               	clrf	(?_checkDataFrames+1)
  3386  062F  2E30               	goto	l1577
  3387                           	
  3388  0630                     l8414:	
  3389                           	line	103
  3390                           	
  3391  0630                     l1577:	
  3392  0630  0008               	return
  3393                           	opt stack 0
  3394                           GLOBAL	__end_of_checkDataFrames
  3395  0631                     	__end_of_checkDataFrames:
  3396 ;; =============== function _checkDataFrames ends ============
  3397                           
  3398                           	signat	_checkDataFrames,90
  3399                           	global	_checkLength
  3400                           psect	text609,local,class=CODE,delta=2
  3401                           global __ptext609
  3402  019A                     __ptext609:
  3403                           
  3404 ;; *************** function _checkLength *****************
  3405 ;; Defined at:
  3406 ;;		line 64 in file "Packet.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;		None
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;		None
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  2    2[COMMON] int 
  3413 ;; Registers used:
  3414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3420 ;;      Params:         2       0       0       0       0
  3421 ;;      Locals:         0       0       0       0       0
  3422 ;;      Temps:          1       0       0       0       0
  3423 ;;      Totals:         3       0       0       0       0
  3424 ;;Total ram usage:        3 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:    1
  3427 ;; This function calls:
  3428 ;;		_eeprom_read
  3429 ;;		_writeByte
  3430 ;; This function is called by:
  3431 ;;		_parsePacket
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           psect	text609
  3435                           	file	"Packet.c"
  3436                           	line	64
  3437                           	global	__size_of_checkLength
  3438  002F                     	__size_of_checkLength	equ	__end_of_checkLength-_checkLength
  3439                           	
  3440  019A                     _checkLength:	
  3441                           	opt	stack 4
  3442                           ; Regs used in _checkLength: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3443                           	line	67
  3444                           	
  3445  019A                     l8376:	
  3446                           ;Packet.c: 67: if (eeprom_read(RXLenAddr) >= minSizeByte) {
  3447  019A  3040               	movlw	(_RXLenAddr-__stringbase)
  3448  019B  0084               	movwf	fsr0
  3449  019C  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3450  01A1  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  3451  01A6  00F4               	movwf	(??_checkLength+0)+0
  3452  01A7  304E               	movlw	(_minSizeByte-__stringbase)
  3453  01A8  0084               	movwf	fsr0
  3454  01A9  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3455  01AE  0274               	subwf	0+(??_checkLength+0)+0,w
  3456  01AF  1C03               	skipc
  3457  01B0  29B2               	goto	u2741
  3458  01B1  29B3               	goto	u2740
  3459  01B2                     u2741:
  3460  01B2  29BF               	goto	l8384
  3461  01B3                     u2740:
  3462                           	line	69
  3463                           	
  3464  01B3                     l8378:	
  3465                           ;Packet.c: 69: writeByte('L');
  3466  01B3  304C               	movlw	(04Ch)
  3467  01B4  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  3468                           	line	70
  3469                           	
  3470  01B9                     l8380:	
  3471                           ;Packet.c: 70: return 1;
  3472  01B9  3001               	movlw	low(01h)
  3473  01BA  00F2               	movwf	(?_checkLength)
  3474  01BB  3000               	movlw	high(01h)
  3475  01BC  00F3               	movwf	((?_checkLength))+1
  3476  01BD  29C8               	goto	l1573
  3477                           	
  3478  01BE                     l8382:	
  3479  01BE  29C8               	goto	l1573
  3480                           	line	71
  3481                           	
  3482  01BF                     l1572:	
  3483                           	line	73
  3484                           	
  3485  01BF                     l8384:	
  3486                           ;Packet.c: 71: }
  3487                           ;Packet.c: 73: writeByte('N');
  3488  01BF  304E               	movlw	(04Eh)
  3489  01C0  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  3490                           	line	74
  3491                           	
  3492  01C5                     l8386:	
  3493                           ;Packet.c: 74: return 0;
  3494  01C5  01F2               	clrf	(?_checkLength)
  3495  01C6  01F3               	clrf	(?_checkLength+1)
  3496  01C7  29C8               	goto	l1573
  3497                           	
  3498  01C8                     l8388:	
  3499                           	line	75
  3500                           	
  3501  01C8                     l1573:	
  3502  01C8  0008               	return
  3503                           	opt stack 0
  3504                           GLOBAL	__end_of_checkLength
  3505  01C9                     	__end_of_checkLength:
  3506 ;; =============== function _checkLength ends ============
  3507                           
  3508                           	signat	_checkLength,90
  3509                           	global	_checkEven
  3510                           psect	text610,local,class=CODE,delta=2
  3511                           global __ptext610
  3512  011D                     __ptext610:
  3513                           
  3514 ;; *************** function _checkEven *****************
  3515 ;; Defined at:
  3516 ;;		line 42 in file "Packet.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;		None
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;		None
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  2    2[COMMON] int 
  3523 ;; Registers used:
  3524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3530 ;;      Params:         2       0       0       0       0
  3531 ;;      Locals:         0       0       0       0       0
  3532 ;;      Temps:          1       0       0       0       0
  3533 ;;      Totals:         3       0       0       0       0
  3534 ;;Total ram usage:        3 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    1
  3537 ;; This function calls:
  3538 ;;		_eeprom_read
  3539 ;;		_writeByte
  3540 ;; This function is called by:
  3541 ;;		_parsePacket
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           psect	text610
  3545                           	file	"Packet.c"
  3546                           	line	42
  3547                           	global	__size_of_checkEven
  3548  0027                     	__size_of_checkEven	equ	__end_of_checkEven-_checkEven
  3549                           	
  3550  011D                     _checkEven:	
  3551                           	opt	stack 4
  3552                           ; Regs used in _checkEven: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3553                           	line	45
  3554                           	
  3555  011D                     l8362:	
  3556                           ;Packet.c: 45: if (eeprom_read(RXLenAddr) % 2 == 0) {
  3557  011D  3040               	movlw	(_RXLenAddr-__stringbase)
  3558  011E  0084               	movwf	fsr0
  3559  011F  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3560  0124  120A  118A  20B8   	fcall	_eeprom_read
              120A  118A         
  3561  0129  00F4               	movwf	(??_checkEven+0)+0
  3562  012A  1874               	btfsc	0+(??_checkEven+0)+0,(0)&7
  3563  012B  292D               	goto	u2731
  3564  012C  292E               	goto	u2730
  3565  012D                     u2731:
  3566  012D  293A               	goto	l8370
  3567  012E                     u2730:
  3568                           	line	47
  3569                           	
  3570  012E                     l8364:	
  3571                           ;Packet.c: 47: writeByte('E');
  3572  012E  3045               	movlw	(045h)
  3573  012F  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  3574                           	line	48
  3575                           	
  3576  0134                     l8366:	
  3577                           ;Packet.c: 48: return 1;
  3578  0134  3001               	movlw	low(01h)
  3579  0135  00F2               	movwf	(?_checkEven)
  3580  0136  3000               	movlw	high(01h)
  3581  0137  00F3               	movwf	((?_checkEven))+1
  3582  0138  2943               	goto	l1569
  3583                           	
  3584  0139                     l8368:	
  3585  0139  2943               	goto	l1569
  3586                           	line	49
  3587                           	
  3588  013A                     l1568:	
  3589                           	line	51
  3590                           	
  3591  013A                     l8370:	
  3592                           ;Packet.c: 49: }
  3593                           ;Packet.c: 51: writeByte('N');
  3594  013A  304E               	movlw	(04Eh)
  3595  013B  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  3596                           	line	52
  3597                           	
  3598  0140                     l8372:	
  3599                           ;Packet.c: 52: return 0;
  3600  0140  01F2               	clrf	(?_checkEven)
  3601  0141  01F3               	clrf	(?_checkEven+1)
  3602  0142  2943               	goto	l1569
  3603                           	
  3604  0143                     l8374:	
  3605                           	line	53
  3606                           	
  3607  0143                     l1569:	
  3608  0143  0008               	return
  3609                           	opt stack 0
  3610                           GLOBAL	__end_of_checkEven
  3611  0144                     	__end_of_checkEven:
  3612 ;; =============== function _checkEven ends ============
  3613                           
  3614                           	signat	_checkEven,90
  3615                           	global	_makeHexByte
  3616                           psect	text611,local,class=CODE,delta=2
  3617                           global __ptext611
  3618  00F8                     __ptext611:
  3619                           
  3620 ;; *************** function _makeHexByte *****************
  3621 ;; Defined at:
  3622 ;;		line 194 in file "Bluetooth.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  nibOne          1    wreg     unsigned char 
  3625 ;;  nibTwo          1   13[COMMON] unsigned char 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  nibOne          1    2[BANK0 ] unsigned char 
  3628 ;;  input_byte      1    3[BANK0 ] unsigned char 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      unsigned char 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0, pclath, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3638 ;;      Params:         1       0       0       0       0
  3639 ;;      Locals:         0       2       0       0       0
  3640 ;;      Temps:          0       2       0       0       0
  3641 ;;      Totals:         1       4       0       0       0
  3642 ;;Total ram usage:        5 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    1
  3645 ;; This function calls:
  3646 ;;		_makeNibble
  3647 ;; This function is called by:
  3648 ;;		_parsePacket
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           psect	text611
  3652                           	file	"Bluetooth.c"
  3653                           	line	194
  3654                           	global	__size_of_makeHexByte
  3655  0025                     	__size_of_makeHexByte	equ	__end_of_makeHexByte-_makeHexByte
  3656                           	
  3657  00F8                     _makeHexByte:	
  3658                           	opt	stack 4
  3659                           ; Regs used in _makeHexByte: [wreg+status,2+status,0+pclath+cstack]
  3660                           ;makeHexByte@nibOne stored from wreg
  3661                           	line	196
  3662  00F8  1283               	bcf	status, 5	;RP0=0, select bank0
  3663  00F9  1303               	bcf	status, 6	;RP1=0, select bank0
  3664  00FA  00A2               	movwf	(makeHexByte@nibOne)
  3665                           	
  3666  00FB                     l8356:	
  3667                           ;Bluetooth.c: 195: unsigned char input_byte;
  3668                           ;Bluetooth.c: 196: input_byte = (makeNibble(nibOne)<<4);
  3669  00FB  0822               	movf	(makeHexByte@nibOne),w
  3670  00FC  120A  118A  207C   	fcall	_makeNibble
              120A  118A         
  3671  0101  1283               	bcf	status, 5	;RP0=0, select bank0
  3672  0102  1303               	bcf	status, 6	;RP1=0, select bank0
  3673  0103  00A0               	movwf	(??_makeHexByte+0)+0
  3674  0104  3003               	movlw	(04h)-1
  3675  0105                     u2725:
  3676  0105  1003               	clrc
  3677  0106  0DA0               	rlf	(??_makeHexByte+0)+0,f
  3678  0107  3EFF               	addlw	-1
  3679  0108  1D03               	skipz
  3680  0109  2905               	goto	u2725
  3681  010A  1003               	clrc
  3682  010B  0D20               	rlf	(??_makeHexByte+0)+0,w
  3683  010C  00A1               	movwf	(??_makeHexByte+1)+0
  3684  010D  0821               	movf	(??_makeHexByte+1)+0,w
  3685  010E  00A3               	movwf	(makeHexByte@input_byte)
  3686                           	line	197
  3687                           ;Bluetooth.c: 197: input_byte|= makeNibble(nibTwo);
  3688  010F  087D               	movf	(makeHexByte@nibTwo),w
  3689  0110  120A  118A  207C   	fcall	_makeNibble
              120A  118A         
  3690  0115  1283               	bcf	status, 5	;RP0=0, select bank0
  3691  0116  1303               	bcf	status, 6	;RP1=0, select bank0
  3692  0117  00A0               	movwf	(??_makeHexByte+0)+0
  3693  0118  0820               	movf	(??_makeHexByte+0)+0,w
  3694  0119  04A3               	iorwf	(makeHexByte@input_byte),f
  3695                           	line	198
  3696                           	
  3697  011A                     l8358:	
  3698                           ;Bluetooth.c: 198: return input_byte;
  3699  011A  0823               	movf	(makeHexByte@input_byte),w
  3700  011B  291C               	goto	l797
  3701                           	
  3702  011C                     l8360:	
  3703                           	line	199
  3704                           	
  3705  011C                     l797:	
  3706  011C  0008               	return
  3707                           	opt stack 0
  3708                           GLOBAL	__end_of_makeHexByte
  3709  011D                     	__end_of_makeHexByte:
  3710 ;; =============== function _makeHexByte ends ============
  3711                           
  3712                           	signat	_makeHexByte,8313
  3713                           	global	_readString
  3714                           psect	text612,local,class=CODE,delta=2
  3715                           global __ptext612
  3716  0295                     __ptext612:
  3717                           
  3718 ;; *************** function _readString *****************
  3719 ;; Defined at:
  3720 ;;		line 147 in file "Bluetooth.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  readStorage     1    wreg     PTR unsigned char 
  3723 ;;		 -> getPacket@arrStore(50), 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  readStorage     1    2[BANK0 ] PTR unsigned char 
  3726 ;;		 -> getPacket@arrStore(50), 
  3727 ;;  i               2    3[BANK0 ] unsigned int 
  3728 ;;  ch              1    5[BANK0 ] unsigned char 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;		None               void
  3731 ;; Registers used:
  3732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3738 ;;      Params:         0       0       0       0       0
  3739 ;;      Locals:         0       4       0       0       0
  3740 ;;      Temps:          0       2       0       0       0
  3741 ;;      Totals:         0       6       0       0       0
  3742 ;;Total ram usage:        6 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    1
  3745 ;; This function calls:
  3746 ;;		_readByte
  3747 ;;		_eeprom_write
  3748 ;; This function is called by:
  3749 ;;		_getPacket
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           psect	text612
  3753                           	file	"Bluetooth.c"
  3754                           	line	147
  3755                           	global	__size_of_readString
  3756  004B                     	__size_of_readString	equ	__end_of_readString-_readString
  3757                           	
  3758  0295                     _readString:	
  3759                           	opt	stack 5
  3760                           ; Regs used in _readString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3761                           ;readString@readStorage stored from wreg
  3762                           	line	149
  3763  0295  1283               	bcf	status, 5	;RP0=0, select bank0
  3764  0296  1303               	bcf	status, 6	;RP1=0, select bank0
  3765  0297  00A2               	movwf	(readString@readStorage)
  3766                           	
  3767  0298                     l8342:	
  3768                           ;Bluetooth.c: 149: unsigned int i = 0;
  3769  0298  01A3               	clrf	(readString@i)
  3770  0299  01A4               	clrf	(readString@i+1)
  3771                           	line	154
  3772                           	
  3773  029A                     l8344:	
  3774                           ;Bluetooth.c: 151: unsigned char ch;
  3775                           ;Bluetooth.c: 154: ch = readByte();
  3776  029A  120A  158A  27DE   	fcall	_readByte
              120A  118A         
  3777  029F  1283               	bcf	status, 5	;RP0=0, select bank0
  3778  02A0  1303               	bcf	status, 6	;RP1=0, select bank0
  3779  02A1  00A0               	movwf	(??_readString+0)+0
  3780  02A2  0820               	movf	(??_readString+0)+0,w
  3781  02A3  00A5               	movwf	(readString@ch)
  3782                           	line	156
  3783                           ;Bluetooth.c: 156: while(ch != userEndByte)
  3784  02A4  2AC0               	goto	l8352
  3785                           	
  3786  02A5                     l788:	
  3787                           	line	159
  3788                           	
  3789  02A5                     l8346:	
  3790                           ;Bluetooth.c: 157: {
  3791                           ;Bluetooth.c: 159: readStorage[i] = ch;
  3792  02A5  0825               	movf	(readString@ch),w
  3793  02A6  00A0               	movwf	(??_readString+0)+0
  3794  02A7  0823               	movf	(readString@i),w
  3795  02A8  0722               	addwf	(readString@readStorage),w
  3796  02A9  00A1               	movwf	(??_readString+1)+0
  3797  02AA  0821               	movf	0+(??_readString+1)+0,w
  3798  02AB  0084               	movwf	fsr0
  3799  02AC  0820               	movf	(??_readString+0)+0,w
  3800  02AD  1383               	bcf	status, 7	;select IRP bank0
  3801  02AE  0080               	movwf	indf
  3802                           	line	161
  3803                           	
  3804  02AF                     l8348:	
  3805                           ;Bluetooth.c: 161: i++;
  3806  02AF  3001               	movlw	low(01h)
  3807  02B0  07A3               	addwf	(readString@i),f
  3808  02B1  1803               	skipnc
  3809  02B2  0AA4               	incf	(readString@i+1),f
  3810  02B3  3000               	movlw	high(01h)
  3811  02B4  07A4               	addwf	(readString@i+1),f
  3812                           	line	163
  3813                           	
  3814  02B5                     l8350:	
  3815                           ;Bluetooth.c: 163: ch = readByte();
  3816  02B5  120A  158A  27DE   	fcall	_readByte
              120A  118A         
  3817  02BA  1283               	bcf	status, 5	;RP0=0, select bank0
  3818  02BB  1303               	bcf	status, 6	;RP1=0, select bank0
  3819  02BC  00A0               	movwf	(??_readString+0)+0
  3820  02BD  0820               	movf	(??_readString+0)+0,w
  3821  02BE  00A5               	movwf	(readString@ch)
  3822  02BF  2AC0               	goto	l8352
  3823                           	line	164
  3824                           	
  3825  02C0                     l787:	
  3826                           	line	156
  3827                           	
  3828  02C0                     l8352:	
  3829  02C0  305D               	movlw	(_userEndByte-__stringbase)
  3830  02C1  0084               	movwf	fsr0
  3831  02C2  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3832  02C7  00A0               	movwf	(??_readString+0)+0
  3833  02C8  0825               	movf	(readString@ch),w
  3834  02C9  0620               	xorwf	(??_readString+0)+0,w
  3835  02CA  1D03               	skipz
  3836  02CB  2ACD               	goto	u2711
  3837  02CC  2ACE               	goto	u2710
  3838  02CD                     u2711:
  3839  02CD  2AA5               	goto	l8346
  3840  02CE                     u2710:
  3841  02CE  2ACF               	goto	l8354
  3842                           	
  3843  02CF                     l789:	
  3844                           	line	166
  3845                           	
  3846  02CF                     l8354:	
  3847                           ;Bluetooth.c: 164: }
  3848                           ;Bluetooth.c: 166: eeprom_write(RXLenAddr,i);
  3849  02CF  0823               	movf	(readString@i),w
  3850  02D0  00A0               	movwf	(??_readString+0)+0
  3851  02D1  0820               	movf	(??_readString+0)+0,w
  3852  02D2  00FA               	movwf	(?_eeprom_write)
  3853  02D3  3040               	movlw	(_RXLenAddr-__stringbase)
  3854  02D4  0084               	movwf	fsr0
  3855  02D5  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3856  02DA  120A  118A  21FA   	fcall	_eeprom_write
              120A  118A         
  3857                           	line	167
  3858                           	
  3859  02DF                     l790:	
  3860  02DF  0008               	return
  3861                           	opt stack 0
  3862                           GLOBAL	__end_of_readString
  3863  02E0                     	__end_of_readString:
  3864 ;; =============== function _readString ends ============
  3865                           
  3866                           	signat	_readString,4216
  3867                           	global	_writeString
  3868                           psect	text613,local,class=CODE,delta=2
  3869                           global __ptext613
  3870  016B                     __ptext613:
  3871                           
  3872 ;; *************** function _writeString *****************
  3873 ;; Defined at:
  3874 ;;		line 125 in file "Bluetooth.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  userString      1    wreg     PTR unsigned char 
  3877 ;;		 -> main@testString(9), 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  userString      1   11[COMMON] PTR unsigned char 
  3880 ;;		 -> main@testString(9), 
  3881 ;;  i               2   12[COMMON] unsigned int 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;		None               void
  3884 ;; Registers used:
  3885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3891 ;;      Params:         0       0       0       0       0
  3892 ;;      Locals:         3       0       0       0       0
  3893 ;;      Temps:          1       0       0       0       0
  3894 ;;      Totals:         4       0       0       0       0
  3895 ;;Total ram usage:        4 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    1
  3898 ;; This function calls:
  3899 ;;		_writeByte
  3900 ;;		_strlen
  3901 ;; This function is called by:
  3902 ;;		_main
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           psect	text613
  3906                           	file	"Bluetooth.c"
  3907                           	line	125
  3908                           	global	__size_of_writeString
  3909  002F                     	__size_of_writeString	equ	__end_of_writeString-_writeString
  3910                           	
  3911  016B                     _writeString:	
  3912                           	opt	stack 6
  3913                           ; Regs used in _writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3914                           ;writeString@userString stored from wreg
  3915                           	line	129
  3916  016B  00FB               	movwf	(writeString@userString)
  3917                           	
  3918  016C                     l8332:	
  3919                           ;Bluetooth.c: 127: unsigned int i;
  3920                           ;Bluetooth.c: 129: for(i = 0;i<strlen(userString);i++){
  3921  016C  01FC               	clrf	(writeString@i)
  3922  016D  01FD               	clrf	(writeString@i+1)
  3923  016E  2982               	goto	l8338
  3924                           	
  3925  016F                     l782:	
  3926                           	line	130
  3927                           	
  3928  016F                     l8334:	
  3929                           ;Bluetooth.c: 130: writeByte(userString[i]);
  3930  016F  087C               	movf	(writeString@i),w
  3931  0170  077B               	addwf	(writeString@userString),w
  3932  0171  00FA               	movwf	(??_writeString+0)+0
  3933  0172  087A               	movf	0+(??_writeString+0)+0,w
  3934  0173  0084               	movwf	fsr0
  3935  0174  1383               	bcf	status, 7	;select IRP bank0
  3936  0175  0800               	movf	indf,w
  3937  0176  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  3938                           	line	129
  3939                           	
  3940  017B                     l8336:	
  3941  017B  3001               	movlw	low(01h)
  3942  017C  07FC               	addwf	(writeString@i),f
  3943  017D  1803               	skipnc
  3944  017E  0AFD               	incf	(writeString@i+1),f
  3945  017F  3000               	movlw	high(01h)
  3946  0180  07FD               	addwf	(writeString@i+1),f
  3947  0181  2982               	goto	l8338
  3948                           	
  3949  0182                     l781:	
  3950                           	
  3951  0182                     l8338:	
  3952  0182  087B               	movf	(writeString@userString),w
  3953  0183  120A  118A  21C9   	fcall	_strlen
              120A  118A         
  3954  0188  0871               	movf	(1+(?_strlen)),w
  3955  0189  027D               	subwf	(writeString@i+1),w
  3956  018A  1D03               	skipz
  3957  018B  298E               	goto	u2705
  3958  018C  0870               	movf	(0+(?_strlen)),w
  3959  018D  027C               	subwf	(writeString@i),w
  3960  018E                     u2705:
  3961  018E  1C03               	skipc
  3962  018F  2991               	goto	u2701
  3963  0190  2992               	goto	u2700
  3964  0191                     u2701:
  3965  0191  296F               	goto	l8334
  3966  0192                     u2700:
  3967  0192  2993               	goto	l8340
  3968                           	
  3969  0193                     l783:	
  3970                           	line	133
  3971                           	
  3972  0193                     l8340:	
  3973                           ;Bluetooth.c: 131: }
  3974                           ;Bluetooth.c: 133: writeByte((unsigned char)i);
  3975  0193  087C               	movf	(writeString@i),w
  3976  0194  120A  158A  27F4   	fcall	_writeByte
              120A  118A         
  3977                           	line	135
  3978                           	
  3979  0199                     l784:	
  3980  0199  0008               	return
  3981                           	opt stack 0
  3982                           GLOBAL	__end_of_writeString
  3983  019A                     	__end_of_writeString:
  3984 ;; =============== function _writeString ends ============
  3985                           
  3986                           	signat	_writeString,4216
  3987                           	global	_setCommands
  3988                           psect	text614,local,class=CODE,delta=2
  3989                           global __ptext614
  3990  0FCC                     __ptext614:
  3991                           
  3992 ;; *************** function _setCommands *****************
  3993 ;; Defined at:
  3994 ;;		line 18 in file "Command.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;		None               void
  4001 ;; Registers used:
  4002 ;;		None
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4008 ;;      Params:         0       0       0       0       0
  4009 ;;      Locals:         0       0       0       0       0
  4010 ;;      Temps:          0       0       0       0       0
  4011 ;;      Totals:         0       0       0       0       0
  4012 ;;Total ram usage:        0 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_getPacket
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           psect	text614
  4021                           	file	"Command.c"
  4022                           	line	18
  4023                           	global	__size_of_setCommands
  4024  0001                     	__size_of_setCommands	equ	__end_of_setCommands-_setCommands
  4025                           	
  4026  0FCC                     _setCommands:	
  4027                           	opt	stack 6
  4028                           ; Regs used in _setCommands: []
  4029                           	line	20
  4030                           	
  4031  0FCC                     l4748:	
  4032  0FCC  0008               	return
  4033                           	opt stack 0
  4034                           GLOBAL	__end_of_setCommands
  4035  0FCD                     	__end_of_setCommands:
  4036 ;; =============== function _setCommands ends ============
  4037                           
  4038                           	signat	_setCommands,88
  4039                           	global	_selectTemp
  4040                           psect	text615,local,class=CODE,delta=2
  4041                           global __ptext615
  4042  0068                     __ptext615:
  4043                           
  4044 ;; *************** function _selectTemp *****************
  4045 ;; Defined at:
  4046 ;;		line 43 in file "customADC.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;		None
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;		None
  4051 ;; Return value:  Size  Location     Type
  4052 ;;		None               void
  4053 ;; Registers used:
  4054 ;;		wreg
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4060 ;;      Params:         0       0       0       0       0
  4061 ;;      Locals:         0       0       0       0       0
  4062 ;;      Temps:          0       0       0       0       0
  4063 ;;      Totals:         0       0       0       0       0
  4064 ;;Total ram usage:        0 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_getTemp
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           psect	text615
  4073                           	file	"customADC.c"
  4074                           	line	43
  4075                           	global	__size_of_selectTemp
  4076  0005                     	__size_of_selectTemp	equ	__end_of_selectTemp-_selectTemp
  4077                           	
  4078  0068                     _selectTemp:	
  4079                           	opt	stack 6
  4080                           ; Regs used in _selectTemp: [wreg]
  4081                           	line	44
  4082                           	
  4083  0068                     l8330:	
  4084                           ;customADC.c: 44: ADCON0 = 0x80;
  4085  0068  3080               	movlw	(080h)
  4086  0069  1283               	bcf	status, 5	;RP0=0, select bank0
  4087  006A  1303               	bcf	status, 6	;RP1=0, select bank0
  4088  006B  009F               	movwf	(31)	;volatile
  4089                           	line	45
  4090                           	
  4091  006C                     l3161:	
  4092  006C  0008               	return
  4093                           	opt stack 0
  4094                           GLOBAL	__end_of_selectTemp
  4095  006D                     	__end_of_selectTemp:
  4096 ;; =============== function _selectTemp ends ============
  4097                           
  4098                           	signat	_selectTemp,88
  4099                           	global	_initADC
  4100                           psect	text616,local,class=CODE,delta=2
  4101                           global __ptext616
  4102  0FE9                     __ptext616:
  4103                           
  4104 ;; *************** function _initADC *****************
  4105 ;; Defined at:
  4106 ;;		line 7 in file "customADC.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;		None
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;		None               void
  4113 ;; Registers used:
  4114 ;;		wreg
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4120 ;;      Params:         0       0       0       0       0
  4121 ;;      Locals:         0       0       0       0       0
  4122 ;;      Temps:          0       0       0       0       0
  4123 ;;      Totals:         0       0       0       0       0
  4124 ;;Total ram usage:        0 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_main
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           psect	text616
  4133                           	file	"customADC.c"
  4134                           	line	7
  4135                           	global	__size_of_initADC
  4136  000B                     	__size_of_initADC	equ	__end_of_initADC-_initADC
  4137                           	
  4138  0FE9                     _initADC:	
  4139                           	opt	stack 7
  4140                           ; Regs used in _initADC: [wreg]
  4141                           	line	8
  4142                           	
  4143  0FE9                     l8328:	
  4144                           ;customADC.c: 8: TRISA = 0x03;
  4145  0FE9  3003               	movlw	(03h)
  4146  0FEA  1683               	bsf	status, 5	;RP0=1, select bank1
  4147  0FEB  1303               	bcf	status, 6	;RP1=0, select bank1
  4148  0FEC  0085               	movwf	(133)^080h	;volatile
  4149                           	line	22
  4150                           ;customADC.c: 22: ADCON1 = 0x80;
  4151  0FED  3080               	movlw	(080h)
  4152  0FEE  009F               	movwf	(159)^080h	;volatile
  4153                           	line	39
  4154                           ;customADC.c: 39: ADCON0 = 0x80;
  4155  0FEF  3080               	movlw	(080h)
  4156  0FF0  1283               	bcf	status, 5	;RP0=0, select bank0
  4157  0FF1  1303               	bcf	status, 6	;RP1=0, select bank0
  4158  0FF2  009F               	movwf	(31)	;volatile
  4159                           	line	40
  4160                           	
  4161  0FF3                     l3158:	
  4162  0FF3  0008               	return
  4163                           	opt stack 0
  4164                           GLOBAL	__end_of_initADC
  4165  0FF4                     	__end_of_initADC:
  4166 ;; =============== function _initADC ends ============
  4167                           
  4168                           	signat	_initADC,88
  4169                           	global	_eeprom_read
  4170                           psect	text617,local,class=CODE,delta=2
  4171                           global __ptext617
  4172  00B8                     __ptext617:
  4173                           
  4174 ;; *************** function _eeprom_read *****************
  4175 ;; Defined at:
  4176 ;;		line 7 in file "eeread.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  addr            1    wreg     unsigned char 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  addr            1    1[COMMON] unsigned char 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      unsigned char 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2, status,0
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4190 ;;      Params:         0       0       0       0       0
  4191 ;;      Locals:         1       0       0       0       0
  4192 ;;      Temps:          1       0       0       0       0
  4193 ;;      Totals:         2       0       0       0       0
  4194 ;;Total ram usage:        2 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_checkEven
  4200 ;;		_checkLength
  4201 ;;		_checkDataFrames
  4202 ;;		_parsePacket
  4203 ;;		_checkStartByte
  4204 ;;		_checkRWByte
  4205 ;;		_checkCMDByte
  4206 ;;		_checkCS
  4207 ;;		_addDataToCheckSum
  4208 ;;		_getPacket
  4209 ;;		_getCommands
  4210 ;;		_displayPacket
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           psect	text617
  4214                           	file	"C:\Microchip\Hitech\sources\eeread.c"
  4215                           	line	7
  4216                           	global	__size_of_eeprom_read
  4217  001F                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
  4218                           	
  4219  00B8                     _eeprom_read:	
  4220                           	opt	stack 5
  4221                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4222                           ;eeprom_read@addr stored from wreg
  4223                           	line	9
  4224  00B8  00F1               	movwf	(eeprom_read@addr)
  4225                           	line	8
  4226                           	
  4227  00B9                     l5363:	
  4228                           	line	9
  4229                           # 9 "C:\Microchip\Hitech\sources\eeread.c"
  4230  00B9  0064               clrwdt ;#
  4231                           psect	text617
  4232                           	line	10
  4233  00BA  1683               	bsf	status, 5	;RP0=1, select bank3
  4234  00BB  1703               	bsf	status, 6	;RP1=1, select bank3
  4235  00BC  188C               	btfsc	(3169/8)^0180h,(3169)&7
  4236  00BD  28BF               	goto	u2681
  4237  00BE  28C0               	goto	u2680
  4238  00BF                     u2681:
  4239  00BF  28B9               	goto	l5363
  4240  00C0                     u2680:
  4241  00C0  28C1               	goto	l8312
  4242                           	
  4243  00C1                     l5364:	
  4244                           	line	11
  4245                           	
  4246  00C1                     l8312:	
  4247  00C1  0871               	movf	(eeprom_read@addr),w
  4248  00C2  1283               	bcf	status, 5	;RP0=0, select bank2
  4249  00C3  1703               	bsf	status, 6	;RP1=1, select bank2
  4250  00C4  008D               	movwf	(269)^0100h	;volatile
  4251  00C5  303F               	movlw	(03Fh)
  4252  00C6  00F0               	movwf	(??_eeprom_read+0)+0
  4253  00C7  0870               	movf	(??_eeprom_read+0)+0,w
  4254  00C8  1683               	bsf	status, 5	;RP0=1, select bank3
  4255  00C9  1703               	bsf	status, 6	;RP1=1, select bank3
  4256  00CA  058C               	andwf	(396)^0180h,f	;volatile
  4257  00CB  140C               	bsf	(3168/8)^0180h,(3168)&7
  4258  00CC  1003               	clrc
  4259  00CD  180C               	btfsc	(3168/8)^0180h,(3168)&7
  4260  00CE  1403               	setc
  4261  00CF  3000               	movlw	0
  4262  00D0  1803               	skipnc
  4263  00D1  3001               	movlw	1
  4264                           
  4265  00D2  1283               	bcf	status, 5	;RP0=0, select bank2
  4266  00D3  1703               	bsf	status, 6	;RP1=1, select bank2
  4267  00D4  080C               	movf	(268)^0100h,w	;volatile
  4268  00D5  28D6               	goto	l5365
  4269                           	
  4270  00D6                     l8314:	
  4271                           	line	12
  4272                           	
  4273  00D6                     l5365:	
  4274  00D6  0008               	return
  4275                           	opt stack 0
  4276                           GLOBAL	__end_of_eeprom_read
  4277  00D7                     	__end_of_eeprom_read:
  4278 ;; =============== function _eeprom_read ends ============
  4279                           
  4280                           	signat	_eeprom_read,4217
  4281                           	global	_makeNibble
  4282                           psect	text618,local,class=CODE,delta=2
  4283                           global __ptext618
  4284  007C                     __ptext618:
  4285                           
  4286 ;; *************** function _makeNibble *****************
  4287 ;; Defined at:
  4288 ;;		line 178 in file "Bluetooth.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  tempNib         1    wreg     unsigned char 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  tempNib         1    0[COMMON] unsigned char 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      unsigned char 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4302 ;;      Params:         0       0       0       0       0
  4303 ;;      Locals:         1       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0
  4305 ;;      Totals:         1       0       0       0       0
  4306 ;;Total ram usage:        1 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_makeHexByte
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           psect	text618
  4315                           	file	"Bluetooth.c"
  4316                           	line	178
  4317                           	global	__size_of_makeNibble
  4318  000F                     	__size_of_makeNibble	equ	__end_of_makeNibble-_makeNibble
  4319                           	
  4320  007C                     _makeNibble:	
  4321                           	opt	stack 4
  4322                           ; Regs used in _makeNibble: [wreg+status,2+status,0]
  4323                           ;makeNibble@tempNib stored from wreg
  4324  007C  00F0               	movwf	(makeNibble@tempNib)
  4325                           	line	179
  4326                           	
  4327  007D                     l8302:	
  4328                           ;Bluetooth.c: 179: if(tempNib>='A'){
  4329  007D  3041               	movlw	(041h)
  4330  007E  0270               	subwf	(makeNibble@tempNib),w
  4331  007F  1C03               	skipc
  4332  0080  2882               	goto	u2671
  4333  0081  2883               	goto	u2670
  4334  0082                     u2671:
  4335  0082  2887               	goto	l8308
  4336  0083                     u2670:
  4337                           	line	180
  4338                           	
  4339  0083                     l8304:	
  4340                           ;Bluetooth.c: 180: return ((tempNib - (unsigned char)'A')+10);
  4341  0083  0870               	movf	(makeNibble@tempNib),w
  4342  0084  3EC9               	addlw	0C9h
  4343  0085  288A               	goto	l794
  4344                           	
  4345  0086                     l8306:	
  4346  0086  288A               	goto	l794
  4347                           	line	181
  4348                           	
  4349  0087                     l793:	
  4350                           	line	182
  4351                           	
  4352  0087                     l8308:	
  4353                           ;Bluetooth.c: 181: }
  4354                           ;Bluetooth.c: 182: return (tempNib - '0');
  4355  0087  0870               	movf	(makeNibble@tempNib),w
  4356  0088  3ED0               	addlw	0D0h
  4357  0089  288A               	goto	l794
  4358                           	
  4359  008A                     l8310:	
  4360                           	line	183
  4361                           	
  4362  008A                     l794:	
  4363  008A  0008               	return
  4364                           	opt stack 0
  4365                           GLOBAL	__end_of_makeNibble
  4366  008B                     	__end_of_makeNibble:
  4367 ;; =============== function _makeNibble ends ============
  4368                           
  4369                           	signat	_makeNibble,4217
  4370                           	global	_eeprom_write
  4371                           psect	text619,local,class=CODE,delta=2
  4372                           global __ptext619
  4373  01FA                     __ptext619:
  4374                           
  4375 ;; *************** function _eeprom_write *****************
  4376 ;; Defined at:
  4377 ;;		line 7 in file "C:\Microchip\Hitech\sources\eewrite.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;  addr            1    wreg     unsigned char 
  4380 ;;  value           1   10[COMMON] unsigned char 
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;  addr            1   12[COMMON] unsigned char 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      unsigned char 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4392 ;;      Params:         1       0       0       0       0
  4393 ;;      Locals:         1       0       0       0       0
  4394 ;;      Temps:          1       0       0       0       0
  4395 ;;      Totals:         3       0       0       0       0
  4396 ;;Total ram usage:        3 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; This function calls:
  4399 ;;		Nothing
  4400 ;; This function is called by:
  4401 ;;		_readString
  4402 ;;		_parsePacket
  4403 ;;		_checkStartByte
  4404 ;;		_checkRWByte
  4405 ;;		_checkCMDByte
  4406 ;;		_addDataToCheckSum
  4407 ;;		_initTemp
  4408 ;;		_getPacket
  4409 ;;		_getTemp
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           psect	text619
  4413                           	file	"C:\Microchip\Hitech\sources\eewrite.c"
  4414                           	line	7
  4415                           	global	__size_of_eeprom_write
  4416  0031                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
  4417                           	
  4418  01FA                     _eeprom_write:	
  4419                           	opt	stack 4
  4420                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4421                           ;eeprom_write@addr stored from wreg
  4422  01FA  00FC               	movwf	(eeprom_write@addr)
  4423                           	line	8
  4424                           	
  4425  01FB                     l5980:	
  4426  01FB  29FC               	goto	l5981
  4427                           	
  4428  01FC                     l5982:	
  4429                           	
  4430  01FC                     l5981:	
  4431  01FC  1683               	bsf	status, 5	;RP0=1, select bank3
  4432  01FD  1703               	bsf	status, 6	;RP1=1, select bank3
  4433  01FE  188C               	btfsc	(3169/8)^0180h,(3169)&7
  4434  01FF  2A01               	goto	u2641
  4435  0200  2A02               	goto	u2640
  4436  0201                     u2641:
  4437  0201  29FC               	goto	l5981
  4438  0202                     u2640:
  4439  0202  2A03               	goto	l8282
  4440                           	
  4441  0203                     l5983:	
  4442                           	
  4443  0203                     l8282:	
  4444  0203  087C               	movf	(eeprom_write@addr),w
  4445  0204  1283               	bcf	status, 5	;RP0=0, select bank2
  4446  0205  1703               	bsf	status, 6	;RP1=1, select bank2
  4447  0206  008D               	movwf	(269)^0100h	;volatile
  4448  0207  087A               	movf	(eeprom_write@value),w
  4449  0208  008C               	movwf	(268)^0100h	;volatile
  4450                           	
  4451  0209                     l8284:	
  4452  0209  303F               	movlw	(03Fh)
  4453  020A  00FB               	movwf	(??_eeprom_write+0)+0
  4454  020B  087B               	movf	(??_eeprom_write+0)+0,w
  4455  020C  1683               	bsf	status, 5	;RP0=1, select bank3
  4456  020D  1703               	bsf	status, 6	;RP1=1, select bank3
  4457  020E  058C               	andwf	(396)^0180h,f	;volatile
  4458                           	
  4459  020F                     l8286:	
  4460  020F  1283               	bcf	status, 5	;RP0=0, select bank0
  4461  0210  1303               	bcf	status, 6	;RP1=0, select bank0
  4462  0211  1003               	bcf	(24/8),(24)&7
  4463                           	
  4464  0212                     l8288:	
  4465  0212  1F8B               	btfss	(95/8),(95)&7
  4466  0213  2A15               	goto	u2651
  4467  0214  2A16               	goto	u2650
  4468  0215                     u2651:
  4469  0215  2A17               	goto	l5984
  4470  0216                     u2650:
  4471                           	
  4472  0216                     l8290:	
  4473  0216  1403               	bsf	(24/8),(24)&7
  4474                           	
  4475  0217                     l5984:	
  4476  0217  138B               	bcf	(95/8),(95)&7
  4477  0218  1683               	bsf	status, 5	;RP0=1, select bank3
  4478  0219  1703               	bsf	status, 6	;RP1=1, select bank3
  4479  021A  150C               	bsf	(3170/8)^0180h,(3170)&7
  4480                           	
  4481  021B                     l8292:	
  4482  021B  3055               	movlw	(055h)
  4483  021C  008D               	movwf	(397)^0180h	;volatile
  4484  021D  30AA               	movlw	(0AAh)
  4485  021E  008D               	movwf	(397)^0180h	;volatile
  4486                           	
  4487  021F                     l8294:	
  4488  021F  148C               	bsf	(3169/8)^0180h,(3169)&7
  4489                           	
  4490  0220                     l8296:	
  4491  0220  110C               	bcf	(3170/8)^0180h,(3170)&7
  4492                           	
  4493  0221                     l8298:	
  4494  0221  1283               	bcf	status, 5	;RP0=0, select bank0
  4495  0222  1303               	bcf	status, 6	;RP1=0, select bank0
  4496  0223  1C03               	btfss	(24/8),(24)&7
  4497  0224  2A26               	goto	u2661
  4498  0225  2A27               	goto	u2660
  4499  0226                     u2661:
  4500  0226  2A2A               	goto	l5987
  4501  0227                     u2660:
  4502                           	
  4503  0227                     l8300:	
  4504  0227  178B               	bsf	(95/8),(95)&7
  4505  0228  2A2A               	goto	l5987
  4506                           	
  4507  0229                     l5985:	
  4508  0229  2A2A               	goto	l5987
  4509                           	
  4510  022A                     l5986:	
  4511                           	line	10
  4512                           ;	Return value of _eeprom_write is never used
  4513                           	
  4514  022A                     l5987:	
  4515  022A  0008               	return
  4516                           	opt stack 0
  4517                           GLOBAL	__end_of_eeprom_write
  4518  022B                     	__end_of_eeprom_write:
  4519 ;; =============== function _eeprom_write ends ============
  4520                           
  4521                           	signat	_eeprom_write,8313
  4522                           	global	_strlen
  4523                           psect	text620,local,class=CODE,delta=2
  4524                           global __ptext620
  4525  01C9                     __ptext620:
  4526                           
  4527 ;; *************** function _strlen *****************
  4528 ;; Defined at:
  4529 ;;		line 5 in file "C:\Microchip\Hitech\sources\strlen.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  s               1    wreg     PTR const unsigned char 
  4532 ;;		 -> getPacket@arrStore(50), main@testString(9), 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  s               1    8[COMMON] PTR const unsigned char 
  4535 ;;		 -> getPacket@arrStore(50), main@testString(9), 
  4536 ;;  cp              1    9[COMMON] PTR const unsigned char 
  4537 ;;		 -> getPacket@arrStore(50), main@testString(9), 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  2    0[COMMON] unsigned int 
  4540 ;; Registers used:
  4541 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4547 ;;      Params:         2       0       0       0       0
  4548 ;;      Locals:         2       0       0       0       0
  4549 ;;      Temps:          6       0       0       0       0
  4550 ;;      Totals:        10       0       0       0       0
  4551 ;;Total ram usage:       10 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_writeString
  4557 ;;		_parsePacket
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           psect	text620
  4561                           	file	"C:\Microchip\Hitech\sources\strlen.c"
  4562                           	line	5
  4563                           	global	__size_of_strlen
  4564  0031                     	__size_of_strlen	equ	__end_of_strlen-_strlen
  4565                           	
  4566  01C9                     _strlen:	
  4567                           	opt	stack 5
  4568                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  4569                           ;strlen@s stored from wreg
  4570                           	line	8
  4571  01C9  00F8               	movwf	(strlen@s)
  4572                           	
  4573  01CA                     l8274:	
  4574  01CA  0878               	movf	(strlen@s),w
  4575  01CB  00F2               	movwf	(??_strlen+0)+0
  4576  01CC  0872               	movf	(??_strlen+0)+0,w
  4577  01CD  00F9               	movwf	(strlen@cp)
  4578                           	line	9
  4579  01CE  29D0               	goto	l8276
  4580                           	
  4581  01CF                     l6665:	
  4582                           	line	10
  4583  01CF  29D0               	goto	l8276
  4584                           	
  4585  01D0                     l6664:	
  4586                           	line	9
  4587                           	
  4588  01D0                     l8276:	
  4589  01D0  0879               	movf	(strlen@cp),w
  4590  01D1  0084               	movwf	fsr0
  4591  01D2  3001               	movlw	01h
  4592  01D3  07F9               	addwf	(strlen@cp),f
  4593  01D4  1383               	bcf	status, 7	;select IRP bank0
  4594  01D5  0880               	movf	indf,f
  4595  01D6  1D03               	skipz
  4596  01D7  29D9               	goto	u2631
  4597  01D8  29DA               	goto	u2630
  4598  01D9                     u2631:
  4599  01D9  29D0               	goto	l8276
  4600  01DA                     u2630:
  4601  01DA  29DB               	goto	l8278
  4602                           	
  4603  01DB                     l6666:	
  4604                           	line	11
  4605                           	
  4606  01DB                     l8278:	
  4607  01DB  0878               	movf	(strlen@s),w
  4608  01DC  00F2               	movwf	(??_strlen+0)+0
  4609  01DD  3000               	movlw	((0x0/2))
  4610  01DE  00F3               	movwf	(??_strlen+0)+0+1
  4611  01DF  09F2               	comf	(??_strlen+0)+0,f
  4612  01E0  09F3               	comf	(??_strlen+0)+1,f
  4613  01E1  0AF2               	incf	(??_strlen+0)+0,f
  4614  01E2  1903               	skipnz
  4615  01E3  0AF3               	incf	(??_strlen+0)+1,f
  4616  01E4  0879               	movf	(strlen@cp),w
  4617  01E5  00F4               	movwf	(??_strlen+2)+0
  4618  01E6  3000               	movlw	((0x0/2))
  4619  01E7  00F5               	movwf	(??_strlen+2)+0+1
  4620  01E8  0872               	movf	0+(??_strlen+0)+0,w
  4621  01E9  0774               	addwf	0+(??_strlen+2)+0,w
  4622  01EA  00F6               	movwf	(??_strlen+4)+0
  4623  01EB  0873               	movf	1+(??_strlen+0)+0,w
  4624  01EC  1803               	skipnc
  4625  01ED  0A73               	incf	1+(??_strlen+0)+0,w
  4626  01EE  0775               	addwf	1+(??_strlen+2)+0,w
  4627  01EF  00F7               	movwf	1+(??_strlen+4)+0
  4628  01F0  0876               	movf	0+(??_strlen+4)+0,w
  4629  01F1  3EFF               	addlw	low(-1)
  4630  01F2  00F0               	movwf	(?_strlen)
  4631  01F3  0877               	movf	1+(??_strlen+4)+0,w
  4632  01F4  1803               	skipnc
  4633  01F5  3E01               	addlw	1
  4634  01F6  3EFF               	addlw	high(-1)
  4635  01F7  00F1               	movwf	1+(?_strlen)
  4636  01F8  29F9               	goto	l6667
  4637                           	
  4638  01F9                     l8280:	
  4639                           	line	12
  4640                           	
  4641  01F9                     l6667:	
  4642  01F9  0008               	return
  4643                           	opt stack 0
  4644                           GLOBAL	__end_of_strlen
  4645  01FA                     	__end_of_strlen:
  4646 ;; =============== function _strlen ends ============
  4647                           
  4648                           	signat	_strlen,4218
  4649                           	global	_readByte
  4650                           psect	text621,local,class=CODE,delta=2
  4651                           global __ptext621
  4652  0FDE                     __ptext621:
  4653                           
  4654 ;; *************** function _readByte *****************
  4655 ;; Defined at:
  4656 ;;		line 86 in file "Bluetooth.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;		None
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      unsigned char 
  4663 ;; Registers used:
  4664 ;;		wreg
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4670 ;;      Params:         0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0
  4673 ;;      Totals:         0       0       0       0       0
  4674 ;;Total ram usage:        0 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_readString
  4680 ;;		_echoBack
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           psect	text621
  4684                           	file	"Bluetooth.c"
  4685                           	line	86
  4686                           	global	__size_of_readByte
  4687  000B                     	__size_of_readByte	equ	__end_of_readByte-_readByte
  4688                           	
  4689  0FDE                     _readByte:	
  4690                           	opt	stack 5
  4691                           ; Regs used in _readByte: [wreg]
  4692                           	line	90
  4693                           	
  4694  0FDE                     l8262:	
  4695                           ;Bluetooth.c: 90: while(!RCIF);
  4696  0FDE  2FDF               	goto	l772
  4697                           	
  4698  0FDF                     l773:	
  4699                           	
  4700  0FDF                     l772:	
  4701  0FDF  1283               	bcf	status, 5	;RP0=0, select bank0
  4702  0FE0  1303               	bcf	status, 6	;RP1=0, select bank0
  4703  0FE1  1E8C               	btfss	(101/8),(101)&7
  4704  0FE2  2FE4               	goto	u2621
  4705  0FE3  2FE5               	goto	u2620
  4706  0FE4                     u2621:
  4707  0FE4  2FDF               	goto	l772
  4708  0FE5                     u2620:
  4709  0FE5  2FE6               	goto	l8264
  4710                           	
  4711  0FE6                     l774:	
  4712                           	line	93
  4713                           	
  4714  0FE6                     l8264:	
  4715                           ;Bluetooth.c: 93: return RCREG;
  4716  0FE6  081A               	movf	(26),w	;volatile
  4717  0FE7  2FE8               	goto	l775
  4718                           	
  4719  0FE8                     l8266:	
  4720                           	line	94
  4721                           	
  4722  0FE8                     l775:	
  4723  0FE8  0008               	return
  4724                           	opt stack 0
  4725                           GLOBAL	__end_of_readByte
  4726  0FE9                     	__end_of_readByte:
  4727 ;; =============== function _readByte ends ============
  4728                           
  4729                           	signat	_readByte,89
  4730                           	global	_writeByte
  4731                           psect	text622,local,class=CODE,delta=2
  4732                           global __ptext622
  4733  0FF4                     __ptext622:
  4734                           
  4735 ;; *************** function _writeByte *****************
  4736 ;; Defined at:
  4737 ;;		line 68 in file "Bluetooth.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  Byte            1    wreg     unsigned char 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  Byte            1    0[COMMON] unsigned char 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;		None               void
  4744 ;; Registers used:
  4745 ;;		wreg
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4751 ;;      Params:         0       0       0       0       0
  4752 ;;      Locals:         1       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0
  4754 ;;      Totals:         1       0       0       0       0
  4755 ;;Total ram usage:        1 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_writeString
  4761 ;;		_checkEven
  4762 ;;		_checkLength
  4763 ;;		_checkDataFrames
  4764 ;;		_checkStartByte
  4765 ;;		_checkRWByte
  4766 ;;		_checkCMDByte
  4767 ;;		_checkCS
  4768 ;;		_main
  4769 ;;		_getPacket
  4770 ;;		_getCommands
  4771 ;;		_echoBack
  4772 ;;		_displayPacket
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           psect	text622
  4776                           	file	"Bluetooth.c"
  4777                           	line	68
  4778                           	global	__size_of_writeByte
  4779  000C                     	__size_of_writeByte	equ	__end_of_writeByte-_writeByte
  4780                           	
  4781  0FF4                     _writeByte:	
  4782                           	opt	stack 5
  4783                           ; Regs used in _writeByte: [wreg]
  4784                           ;writeByte@Byte stored from wreg
  4785  0FF4  00F0               	movwf	(writeByte@Byte)
  4786                           	line	72
  4787                           	
  4788  0FF5                     l8258:	
  4789                           ;Bluetooth.c: 72: while(!TXIF);
  4790  0FF5  2FF6               	goto	l766
  4791                           	
  4792  0FF6                     l767:	
  4793                           	
  4794  0FF6                     l766:	
  4795  0FF6  1283               	bcf	status, 5	;RP0=0, select bank0
  4796  0FF7  1303               	bcf	status, 6	;RP1=0, select bank0
  4797  0FF8  1E0C               	btfss	(100/8),(100)&7
  4798  0FF9  2FFB               	goto	u2611
  4799  0FFA  2FFC               	goto	u2610
  4800  0FFB                     u2611:
  4801  0FFB  2FF6               	goto	l766
  4802  0FFC                     u2610:
  4803  0FFC  2FFD               	goto	l8260
  4804                           	
  4805  0FFD                     l768:	
  4806                           	line	75
  4807                           	
  4808  0FFD                     l8260:	
  4809                           ;Bluetooth.c: 75: TXREG = Byte;
  4810  0FFD  0870               	movf	(writeByte@Byte),w
  4811  0FFE  0099               	movwf	(25)	;volatile
  4812                           	line	76
  4813                           	
  4814  0FFF                     l769:	
  4815  0FFF  0008               	return
  4816                           	opt stack 0
  4817                           GLOBAL	__end_of_writeByte
  4818  1000                     	__end_of_writeByte:
  4819 ;; =============== function _writeByte ends ============
  4820                           
  4821                           	signat	_writeByte,4216
  4822                           	global	_initUSART
  4823                           psect	text623,local,class=CODE,delta=2
  4824                           global __ptext623
  4825  006D                     __ptext623:
  4826                           
  4827 ;; *************** function _initUSART *****************
  4828 ;; Defined at:
  4829 ;;		line 17 in file "Bluetooth.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;		None
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;		None
  4834 ;; Return value:  Size  Location     Type
  4835 ;;		None               void
  4836 ;; Registers used:
  4837 ;;		wreg
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4843 ;;      Params:         0       0       0       0       0
  4844 ;;      Locals:         0       0       0       0       0
  4845 ;;      Temps:          0       0       0       0       0
  4846 ;;      Totals:         0       0       0       0       0
  4847 ;;Total ram usage:        0 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_main
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           psect	text623
  4856                           	file	"Bluetooth.c"
  4857                           	line	17
  4858                           	global	__size_of_initUSART
  4859  000F                     	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  4860                           	
  4861  006D                     _initUSART:	
  4862                           	opt	stack 7
  4863                           ; Regs used in _initUSART: [wreg]
  4864                           	line	19
  4865                           	
  4866  006D                     l8254:	
  4867                           ;Bluetooth.c: 19: TRISC6 = 0;
  4868  006D  1683               	bsf	status, 5	;RP0=1, select bank1
  4869  006E  1303               	bcf	status, 6	;RP1=0, select bank1
  4870  006F  1307               	bcf	(1086/8)^080h,(1086)&7
  4871                           	line	22
  4872                           ;Bluetooth.c: 22: TRISC7 = 1;
  4873  0070  1787               	bsf	(1087/8)^080h,(1087)&7
  4874                           	line	35
  4875                           	
  4876  0071                     l8256:	
  4877                           ;Bluetooth.c: 35: RCSTA = 0x90;
  4878  0071  3090               	movlw	(090h)
  4879  0072  1283               	bcf	status, 5	;RP0=0, select bank0
  4880  0073  1303               	bcf	status, 6	;RP1=0, select bank0
  4881  0074  0098               	movwf	(24)	;volatile
  4882                           	line	49
  4883                           ;Bluetooth.c: 49: TXSTA = 0x24;
  4884  0075  3024               	movlw	(024h)
  4885  0076  1683               	bsf	status, 5	;RP0=1, select bank1
  4886  0077  1303               	bcf	status, 6	;RP1=0, select bank1
  4887  0078  0098               	movwf	(152)^080h	;volatile
  4888                           	line	57
  4889                           ;Bluetooth.c: 57: SPBRG = 129;
  4890  0079  3081               	movlw	(081h)
  4891  007A  0099               	movwf	(153)^080h	;volatile
  4892                           	line	58
  4893                           	
  4894  007B                     l763:	
  4895  007B  0008               	return
  4896                           	opt stack 0
  4897                           GLOBAL	__end_of_initUSART
  4898  007C                     	__end_of_initUSART:
  4899 ;; =============== function _initUSART ends ============
  4900                           
  4901                           	signat	_initUSART,88
  4902                           psect	text624,local,class=CODE,delta=2
  4903                           global __ptext624
  4904  0000                     __ptext624:
  4905                           	global	btemp
  4906  007E                     	btemp set 07Eh
  4907                           
  4908                           	DABS	1,126,2	;btemp
  4909                           	global	wtemp0
  4910  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Dec 13 14:45:28 2013

                         pc 0002                          _RD 0C60                          _WR 0C61  
                        fsr 0004                 _userEndByte 0065                         l763 007B  
                       l772 0FDF                         l773 0FDF                         l781 0182  
                       l766 0FF6                         l774 0FE6                         l782 016F  
                       l790 02DF                         l767 0FF6                         l775 0FE8  
                       l783 0193                         l768 0FFD                         l784 0199  
                       l769 0FFF                         l793 0087                         l794 008A  
                       l787 02C0                         l788 02A5                         l789 02CF  
                       l797 011C                         _GIE 005F                         fsr0 0004  
                       indf 0000            ?_checkDataFrames 0072                        l1600 051F  
                      l1603 0255                        l1604 025E                        l1612 0584  
                      l1613 054F                        l1614 0596                        l1615 0596  
                      l1607 032B                        l1608 032A                        l3161 006C  
                      l1609 0330                        l1572 01BF                        l1573 01C8  
                      l3158 0FF3                        l1590 0445                        l2390 03E1  
                      l1582 07FF                        l1583 07EA                        l1568 013A  
                      l1576 05DB                        l2384 0154                        l1584 07B4  
                      l1569 0143                        l1577 0630                        l1593 04A4  
                      l2385 0154                        l1585 07FE                        l1578 0627  
                      l2386 0159                        l1586 07FF                        l1579 0626  
                      l1595 0469                        l2387 016A                        l1596 04AF  
                      l1589 043A                        l1599 0514                        l5363 00B9  
                      l5364 00C1                        l5365 00D6                        l4741 00E7  
                      l4742 00D8                        l4743 00F7                        l4744 00DF  
                      l3960 0375                        l4745 00F7                        l3961 0381  
                      l3962 0382                        l3971 06C9                        l3963 0382  
                      l8300 0227                        l4748 0FCC                        l3972 06C2  
                      l3973 06C8                        l8310 008A                        l8302 007D  
                      l3974 06CA                        l3966 0632                        l3975 06CA  
                      l3967 0632                        l3959 035E                        l8304 0083  
                      l8312 00C1                        l8400 05DA                        l3968 0639  
                      l8306 0086                        l8314 00D6                        l8330 0068  
                      l8410 0627                        l8402 05DB                        l3978 0294  
                      l8260 0FFD                        l8308 0087                        l8340 0193  
                      l8332 016C                        l8412 062D                        l8404 061A  
                      l8420 0405                        l8500 0385                        l8254 006D  
                      l8262 0FDE                        l8334 016F                        l8350 02B5  
                      l8342 0298                        l8414 0630                        l8406 0620  
                      l8430 0445                        l8422 0432                        l8510 00E7  
                      l8502 00D7                        l8256 0071                        l8264 0FE6  
                      l8280 01F9                        l6664 01D0                        l8328 0FE9  
                      l8336 017B                        l8352 02C0                        l8344 029A  
                      l8360 011C                        l8408 0625                        l8424 0439  
                      l8416 03E2                        l8440 049C                        l8432 0446  
                      l8504 00D8                        l8520 07B0                        l8512 06CE  
                      l8600 0363                        l6665 01CF                        l8258 0FF5  
                      l8266 0FE8                        l6666 01DB                        l8274 01CA  
                      l8290 0216                        l8282 0203                        l8338 0182  
                      l8354 02CF                        l8346 02A5                        l8370 013A  
                      l8362 011D                        l8418 03FF                        l8426 043A  
                      l8442 04A3                        l8434 0457                        l8450 04B0  
                      l8506 00DF                        l8522 07B4                        l8514 06D0  
                      l8530 02E0                        l8602 0369                        l6667 01F9  
                      l8276 01D0                        l8292 021B                        l8284 0209  
                      l5980 01FB                        l8348 02AF                        l8356 00FB  
                      l8372 0140                        l8364 012E                        l8380 01B9  
                      l8428 0440                        l8444 04A4                        l8436 0469  
                      l8452 04D9                        l8460 0514                        l8508 00E6  
                      l8524 07DD                        l8516 06DB                        l8540 0322  
                      l8532 02ED                        l8604 036F                        l5981 01FC  
                      l8278 01DB                        l8294 021F                        l8286 020F  
                      l5982 01FC                        l8358 011A                        l8374 0143  
                      l8366 0134                        l8382 01BE                        l8390 0597  
                      l8446 04AA                        l8438 046F                        l8462 051A  
                      l8454 0506                        l8470 024F                        l8526 07E5  
                      l8518 06E6                        l8542 0329                        l8534 02FA  
                      l8550 0264                        l8606 0375                        l5983 0203  
                      l8296 0220                        l5984 0217                        l8288 0212  
                      l8368 0139                        l8384 01BF                        l8376 019A  
                      l8392 05A8                        l8448 04AF                        l8464 051F  
                      l8456 050C                        l8472 0254                        l8480 0520  
                      l8528 07EA                        l8536 0307                        l8544 032B  
                      l8552 0271                        l8560 0646                        l5985 0229  
                      l5986 022A                        l8298 0221                        l8386 01C5  
                      l8378 01B3                        l8394 05CE                        l8458 0513  
                      l8474 0255                        l8466 022B                        l8482 054D  
                      l8490 0144                        l8546 0330                        l8538 0312  
                      l8554 0281                        l8570 0675                        l8562 064C  
                      l5987 022A                        l8388 01C8                        l8396 05D4  
                      l8476 025B                        l8468 0249                        l8484 054F  
                      l8492 0147                        l8548 025F                        l8580 06A5  
                      l8572 0686                        l8564 0663                        l8556 0631  
                      _ADON 00F8                        l8398 05D9                        l8478 025E  
                      l8486 057D                        l8494 0150                        l8582 06B6  
                      l8574 068C                        l8566 0669                        l8558 0639  
                      l8590 0348                        l8488 0584                        l8496 0159  
                      l8584 06BC                        l8576 0692                        l8568 066F  
                      l8592 034D                        l8498 016A                        l8586 06C2  
                      l8578 0698                        l8594 0352                        l8596 0357  
                      l8588 0331                        l8598 035E                        u3007 037B  
                      u3017 014B                        u2610 0FFC                        u2611 0FFB  
                      u2620 0FE5                        u2700 0192                        u2621 0FE4  
                      u2701 0191                        u2630 01DA                        u2710 02CE  
                      u2631 01D9                        u2711 02CD                        u2640 0202  
                      u2800 0457                        u2641 0201                        u2705 018E  
                      u2801 0456                        u2650 0216                        u2730 012E  
                      u2810 0468                        u2651 0215                        u2731 012D  
                      u2811 0467                        u2660 0227                        u2740 01B3  
                      u2820 04D9                        u2900 02FA                        u2661 0226  
                      u2725 0105                        u2741 01B2                        u2821 04D8  
                      u2901 02F9                        u2670 0083                        u2750 05A8  
                      u2830 0249                        u2910 0307                        u2671 0082  
                      u2751 05A7                        u2831 0248                        u2911 0306  
                      u2680 00C0                        u2760 05CE                        u2840 0595  
                      u2920 0312                        u2681 00BF                        u2761 05CD  
                      u2841 0594                        u2921 0311                        u2850 0158  
                      u2930 0322                        u2851 0157                        u2931 0321  
                      u2780 061A                        u2860 06DB                        u2940 0638  
                      u2781 0619                        u2861 06DA                        u2941 0637  
                      u2790 03FF                        u2870 06E6                        u2950 0656  
                      u2775 05EB                        u2791 03FE                        u2871 06E5  
                      u2880 07FD                        u2960 06A5                        u2785 0616  
                      u2881 07FC                        u2961 06A4                        u2890 02ED  
                      u2970 06B6                        u2891 02EC                        u2971 06B5  
                      u2980 033B                        _RCIF 0065                        u2990 0369  
                      u2991 0368                        _WREN 0C62                        _TXIF 0064  
            ??_eeprom_write 007B      __end_of_checkStartByte 0446                        _main 0331  
             _startByteAddr 005B                        btemp 007E                        start 0000  
         _addDataToCheckSum 0520          ?_addDataToCheckSum 0070       makeHexByte@input_byte 0023  
                     ?_main 0070         ??_addDataToCheckSum 0020                       _EEADR 010D  
                     _CARRY 0018        __size_of_checkRWByte 006A                       _RCREG 001A  
                     _RCSTA 0018                       _SPBRG 0099             __end_of_checkCS 025F  
      __size_of_checkLength 002F                       _TRISA 0085                       _TXREG 0019  
                     _TXSTA 0098                 _writeString 016B             __end_of_getTemp 0295  
           __end_of_initADC 0FF4                       _tempC 005C                       _tempF 005D  
                     pclath 000A                       status 0003             ?_checkStartByte 0020  
                     wtemp0 007E   __end_of_addDataToCheckSum 0597                ?_parsePacket 0070  
              __end_of_main 0385                ?_setCommands 0070       __size_of_checkCMDByte 0070  
                    ??_main 0062        __size_of_getCommands 0021               _userStartByte 0066  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D                _writeByteVal 0067                      _TRISC6 043E  
                    _TRISC7 043F                _checkCMDByte 04B0        __size_of_eeprom_read 001F  
      __size_of_makeHexByte 0025                      _maxCmd 0055            __end_of_initTemp 03E2  
          __end_of_readByte 0FE9                   ??_checkCS 0074            __end_of_readTemp 016B  
      __end_of_eeprom_write 022B     __size_of_validatePacket 0051                   ??_getTemp 007D  
     readString@readStorage 0022                      clrloop 0FCE                      _strlen 01C9  
                 ??_initADC 0070                 readString@i 0023           makeHexByte@nibOne 0022  
         makeHexByte@nibTwo 007D             eeprom_read@addr 0071  __size_of_addDataToCheckSum 0077  
            __pcstackCOMMON 0070                __pidataBANK1 0FD5          __size_of_checkEven 0027  
        __size_of_getPacket 009A           eeprom_write@value 007A                  _csByteAddr 004B  
                __pbssBANK1 00A0          __size_of_initUSART 000F              _calcCSByteAddr 0049  
                __pmaintext 0331        __size_of_parsePacket 0135                     ?_strlen 0070  
      __size_of_setCommands 0001                ?_writeString 0070                  _makeNibble 007C  
          ??_checkStartByte 0022           __end_of_checkEven 0144                   ?_initTemp 0070  
                 ?_readByte 0070                   ?_readTemp 0070          __size_of_writeByte 000C  
  __size_of_checkDataFrames 009A           __end_of_getPacket 06CB       __size_of_eeprom_write 0031  
                _humValAddr 0053               ??_checkRWByte 0022                     _checkCS 022B  
                _readString 0295               ??_checkLength 0074              _validatePacket 02E0  
                _humStartHi 0051           __end_of_initUSART 007C                  _humStartLo 0052  
                   _getTemp 025F                     _initADC 0FE9             __size_of_strlen 0031  
                   _member1 002A                     _member2 0009                     _member3 001D  
      end_of_initialization 00B4       parsePacket@dataPacket 002B                  ??_initTemp 007D  
                ??_readByte 0070                     init_ram 008F                  _selectTemp 0068  
                ??_readTemp 0072                _eeprom_write 01FA                readString@ch 0025  
            main@testString 0066                  _tempHiAddr 005E                  _rwByteAddr 005A  
                _tempLoAddr 005F               _dataBytesAddr 004C              getPacket@F1173 00A0  
    __end_of_validatePacket 0331               ??_getCommands 0072                     strlen@s 0078  
         __end_of_writeByte 1000         __end_of_checkRWByte 04B0         __end_of_checkLength 01C9  
               ?_makeNibble 0070                writeString@i 007C               ??_eeprom_read 0070  
                 _RXLenAddr 0048               ??_makeHexByte 0020             ?_validatePacket 0024  
         ??_checkDataFrames 0074                 ?_readString 0070         __end_of_getCommands 00F8  
            __end_of_strlen 01FA         start_initialization 009E        __size_of_writeString 002F  
              parsePacket@i 002A                 ?_selectTemp 0070         __end_of_eeprom_read 00D7  
       __size_of_makeNibble 000F                 __pdataBANK1 00D2                 _checkRWByte 0446  
               _cmdByteAddr 004A         __end_of_makeHexByte 011D                 _checkLength 019A  
                  ??_strlen 0072               __pcstackBANK0 0020            eeprom_write@addr 007C  
       __size_of_readString 004B                   _checkEven 011D                 _endByteAddr 004D  
             ??_parsePacket 0024           __size_of_initTemp 005D           __size_of_readByte 000B  
         __size_of_readTemp 0027                   _classTerm 0036                   _getPacket 0631  
                 __ptext600 00D7                   __ptext601 0385                   __ptext610 011D  
                 __ptext602 0144                   __ptext611 00F8                   __ptext603 0520  
                 __ptext620 01C9                   __ptext612 0295                   __ptext604 022B  
                 __ptext621 0FDE                   __ptext613 016B                   __ptext605 04B0  
                 __ptext622 0FF4                   __ptext614 0FCC                   __ptext606 0446  
                 __ptext623 006D                   __ptext615 0068                   __ptext607 03E2  
                 __ptext624 0000                   __ptext616 0FE9                   __ptext608 0597  
                 __ptext617 00B8                   __ptext609 019A                   __ptext618 007C  
                 __ptext619 01FA                   __ptext596 0631                   __ptext597 025F  
                 __ptext598 02E0                   __ptext599 06CB                 _getCommands 00D7  
             ??_setCommands 0070                    ?_checkCS 0072                   _noDataLen 0058  
                 __pstrings 0003                    ?_getTemp 0070                    ?_initADC 0070  
       __size_of_selectTemp 0005                   _humHiAddr 004F                   _initUSART 006D  
                 _humLoAddr 0050                  ?_checkEven 0072                 _eeprom_read 00B8  
             ?_checkCMDByte 0020                 _makeHexByte 00F8                    _GO_nDONE 00FA  
                ?_getPacket 0070                   main@F1170 00D2                 _lenByteAddr 0054  
       __end_of_parsePacket 0800                 __stringbase 0008                  ?_initUSART 0070  
       __end_of_setCommands 0FCD                ??_makeNibble 0070                   _writeByte 0FF4  
           _checkDataFrames 0597              ??_checkCMDByte 0022            ??_validatePacket 007E  
   __size_of_checkStartByte 0064                   init_fetch 008B          __end_of_makeNibble 008B  
               _readByteVal 0059                ??_readString 0020                 _newLineChar 0057  
               _minSizeByte 0056            __size_of_checkCS 0034            __size_of_getTemp 0036  
          __size_of_initADC 000B                    _classNum 0040                  ?_writeByte 0070  
     writeString@userString 007B                _tempValHAddr 0063                _tempValLAddr 0064  
              ??_selectTemp 0070                    _initTemp 0385                    _readByte 0FDE  
                  _readTemp 0144               __size_of_main 0054                 ??_checkEven 0074  
        __end_of_readString 02E0                    _groupNum 004E                 _parsePacket 06CB  
                  clear_ram 0FCD                _tempUnitAddr 0062                 ??_getPacket 002C  
              ?_checkRWByte 0020                 _setCommands 0FCC                ?_checkLength 0072  
    parsePacket@dataCounter 0028               ??_writeString 007A          addDataToCheckSum@i 007D  
        __end_of_selectTemp 006D                 ??_initUSART 0070     __end_of_checkDataFrames 0631  
                 stringcode 0003           makeNibble@tempNib 0070          getTemp@tempReading 0020  
               _tempStartHi 0060                 _tempStartLo 0061                ?_getCommands 0070  
         getPacket@arrStore 0030               writeByte@Byte 0070                    strlen@cp 0079  
      __end_of_checkCMDByte 0520                    stringdir 0003                    stringtab 0003  
               ??_writeByte 0070         __end_of_writeString 019A               ?_eeprom_write 007A  
              ?_eeprom_read 0070              _checkStartByte 03E2                ?_makeHexByte 007D  
