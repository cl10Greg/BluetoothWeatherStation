

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sat Dec 14 15:24:02 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 31 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 31 "main.c"
    45  2007  FF3A               	dw 0xFFFB & 0xFF7F & 0xFFBF & 0xFFFE & 0xFFFF ;#
    46                           	FNCALL	_main,_initUSART
    47                           	FNCALL	_main,_initADC
    48                           	FNCALL	_main,_initTemp
    49                           	FNCALL	_main,_writeString
    50                           	FNCALL	_main,_getTemp
    51                           	FNCALL	_getTemp,_selectTemp
    52                           	FNCALL	_getTemp,_readTemp
    53                           	FNCALL	_getTemp,_eeprom_write
    54                           	FNCALL	_initTemp,_eeprom_write
    55                           	FNCALL	_writeString,_writeByte
    56                           	FNCALL	_writeString,_strlen
    57                           	FNROOT	_main
    58                           	FNCALL	_isr,_getPacket
    59                           	FNCALL	_getPacket,i1_eeprom_write
    60                           	FNCALL	_getPacket,_readString
    61                           	FNCALL	_getPacket,_eeprom_read
    62                           	FNCALL	_getPacket,i1_writeByte
    63                           	FNCALL	_getPacket,_parsePacket
    64                           	FNCALL	_getPacket,_validatePacket
    65                           	FNCALL	_getPacket,_getCommands
    66                           	FNCALL	_getPacket,_setCommands
    67                           	FNCALL	_readString,_readByte
    68                           	FNCALL	_readString,i1_writeByte
    69                           	FNCALL	_readString,i1_eeprom_write
    70                           	FNCALL	_validatePacket,_checkStartByte
    71                           	FNCALL	_validatePacket,_checkRWByte
    72                           	FNCALL	_validatePacket,_checkCMDByte
    73                           	FNCALL	_validatePacket,_checkDataFrames
    74                           	FNCALL	_validatePacket,_addDataToCheckSum
    75                           	FNCALL	_validatePacket,_checkCS
    76                           	FNCALL	_parsePacket,_checkLength
    77                           	FNCALL	_parsePacket,_checkEven
    78                           	FNCALL	_parsePacket,_makeHexByte
    79                           	FNCALL	_parsePacket,i1_eeprom_write
    80                           	FNCALL	_parsePacket,i1_strlen
    81                           	FNCALL	_parsePacket,_eeprom_read
    82                           	FNCALL	_readByte,_clearUARTErr
    83                           	FNCALL	_getCommands,i1_writeByte
    84                           	FNCALL	_getCommands,_eeprom_read
    85                           	FNCALL	_addDataToCheckSum,_eeprom_read
    86                           	FNCALL	_addDataToCheckSum,i1_eeprom_write
    87                           	FNCALL	_checkCS,_eeprom_read
    88                           	FNCALL	_checkCS,i1_writeByte
    89                           	FNCALL	_checkCMDByte,_eeprom_read
    90                           	FNCALL	_checkCMDByte,i1_eeprom_write
    91                           	FNCALL	_checkCMDByte,i1_writeByte
    92                           	FNCALL	_checkRWByte,_eeprom_read
    93                           	FNCALL	_checkRWByte,i1_writeByte
    94                           	FNCALL	_checkRWByte,i1_eeprom_write
    95                           	FNCALL	_checkStartByte,_eeprom_read
    96                           	FNCALL	_checkStartByte,i1_writeByte
    97                           	FNCALL	_checkStartByte,i1_eeprom_write
    98                           	FNCALL	_checkDataFrames,_eeprom_read
    99                           	FNCALL	_checkDataFrames,i1_writeByte
   100                           	FNCALL	_checkLength,_eeprom_read
   101                           	FNCALL	_checkLength,i1_writeByte
   102                           	FNCALL	_checkEven,_eeprom_read
   103                           	FNCALL	_checkEven,i1_writeByte
   104                           	FNCALL	_makeHexByte,_makeNibble
   105                           	FNCALL	intlevel1,_isr
   106                           	global	intlevel1
   107                           	FNROOT	intlevel1
   108                           	global	main@F1174
   109                           psect	idataBANK1,class=CODE,space=0,delta=2
   110                           global __pidataBANK1
   111  07F7                     __pidataBANK1:
   112                           	file	"main.c"
   113                           	line	51
   114                           
   115                           ;initializer for main@F1174
   116  07F7  3457               	retlw	057h
   117  07F8  3465               	retlw	065h
   118  07F9  346C               	retlw	06Ch
   119  07FA  3463               	retlw	063h
   120  07FB  346F               	retlw	06Fh
   121  07FC  346D               	retlw	06Dh
   122  07FD  3465               	retlw	065h
   123  07FE  340A               	retlw	0Ah
   124  07FF  3400               	retlw	0
   125                           	global	_member2
   126                           psect	strings,class=STRING,delta=2
   127                           global __pstrings
   128  040B                     __pstrings:
   129                           ;	global	stringdir,stringtab,__stringbase
   130  040B                     stringtab:
   131                           ;	String table - string pointers are 1 byte each
   132  040B                     stringcode:stringdir:
      + 040B                     stringdir:	
   133  040B  3004               movlw high(stringdir)
   134  040C  008A               movwf pclath
   135  040D  0804               movf fsr,w
   136  040E  0A84               incf fsr
   137  040F  0782               	addwf pc
   138  0410                     __stringbase:
   139  0410  3400               	retlw	0
   140                           psect	strings
   141                           	file	"userMacro.h"
   142                           	line	20
   143  0411                     _member2:
   144  0411  3444               	retlw	044h
   145  0412  3465               	retlw	065h
   146  0413  3465               	retlw	065h
   147  0414  3470               	retlw	070h
   148  0415  3461               	retlw	061h
   149  0416  346B               	retlw	06Bh
   150  0417  3420               	retlw	020h
   151  0418  3443               	retlw	043h
   152  0419  3468               	retlw	068h
   153  041A  3461               	retlw	061h
   154  041B  346E               	retlw	06Eh
   155  041C  3464               	retlw	064h
   156  041D  3472               	retlw	072h
   157  041E  3461               	retlw	061h
   158  041F  3473               	retlw	073h
   159  0420  3465               	retlw	065h
   160  0421  346B               	retlw	06Bh
   161  0422  3461               	retlw	061h
   162  0423  3472               	retlw	072h
   163  0424  3400               	retlw	0
   164                           	global	_member3
   165                           psect	strings
   166                           	file	"userMacro.h"
   167                           	line	21
   168  0425                     _member3:
   169  0425  3441               	retlw	041h
   170  0426  3470               	retlw	070h
   171  0427  3475               	retlw	075h
   172  0428  3472               	retlw	072h
   173  0429  3476               	retlw	076h
   174  042A  3465               	retlw	065h
   175  042B  3420               	retlw	020h
   176  042C  3442               	retlw	042h
   177  042D  3468               	retlw	068h
   178  042E  3469               	retlw	069h
   179  042F  3464               	retlw	064h
   180  0430  3465               	retlw	065h
   181  0431  3400               	retlw	0
   182                           	global	_member1
   183                           psect	strings
   184                           	file	"userMacro.h"
   185                           	line	19
   186  0432                     _member1:
   187  0432  3447               	retlw	047h
   188  0433  3472               	retlw	072h
   189  0434  3465               	retlw	065h
   190  0435  3467               	retlw	067h
   191  0436  3420               	retlw	020h
   192  0437  3447               	retlw	047h
   193  0438  3469               	retlw	069h
   194  0439  3472               	retlw	072h
   195  043A  3461               	retlw	061h
   196  043B  3472               	retlw	072h
   197  043C  3464               	retlw	064h
   198  043D  3400               	retlw	0
   199                           	global	_classTerm
   200                           psect	strings
   201                           	file	"userMacro.h"
   202                           	line	23
   203  043E                     _classTerm:
   204  043E  3446               	retlw	046h
   205  043F  3461               	retlw	061h
   206  0440  346C               	retlw	06Ch
   207  0441  346C               	retlw	06Ch
   208  0442  3420               	retlw	020h
   209  0443  3432               	retlw	032h
   210  0444  3430               	retlw	030h
   211  0445  3431               	retlw	031h
   212  0446  3433               	retlw	033h
   213  0447  3400               	retlw	0
   214                           	global	_classNum
   215                           psect	strings
   216                           	file	"userMacro.h"
   217                           	line	22
   218  0448                     _classNum:
   219  0448  3445               	retlw	045h
   220  0449  3443               	retlw	043h
   221  044A  3445               	retlw	045h
   222  044B  3435               	retlw	035h
   223  044C  3436               	retlw	036h
   224  044D  3432               	retlw	032h
   225  044E  3430               	retlw	030h
   226  044F  3400               	retlw	0
   227                           	global	_RXLenAddr
   228                           psect	strings
   229                           	file	"userMacro.h"
   230                           	line	36
   231  0450                     _RXLenAddr:
   232  0450  3400               	retlw	0
   233                           	global	_calcCSByteAddr
   234                           psect	strings
   235                           	file	"userMacro.h"
   236                           	line	45
   237  0451                     _calcCSByteAddr:
   238  0451  3430               	retlw	030h
   239                           	global	_cmdByteAddr
   240                           psect	strings
   241                           	file	"userMacro.h"
   242                           	line	39
   243  0452                     _cmdByteAddr:
   244  0452  3403               	retlw	03h
   245                           	global	_csByteAddr
   246                           psect	strings
   247                           	file	"userMacro.h"
   248                           	line	41
   249  0453                     _csByteAddr:
   250  0453  3405               	retlw	05h
   251                           	global	_dataBytesAddr
   252                           psect	strings
   253                           	file	"userMacro.h"
   254                           	line	43
   255  0454                     _dataBytesAddr:
   256  0454  3407               	retlw	07h
   257                           	global	_endByteAddr
   258                           psect	strings
   259                           	file	"userMacro.h"
   260                           	line	42
   261  0455                     _endByteAddr:
   262  0455  3406               	retlw	06h
   263                           	global	_groupNum
   264                           psect	strings
   265                           	file	"userMacro.h"
   266                           	line	24
   267  0456                     _groupNum:
   268  0456  3432               	retlw	032h
   269                           	global	_humHiAddr
   270                           psect	strings
   271                           	file	"userMacro.h"
   272                           	line	59
   273  0457                     _humHiAddr:
   274  0457  3482               	retlw	082h
   275                           	global	_humLoAddr
   276                           psect	strings
   277                           	file	"userMacro.h"
   278                           	line	60
   279  0458                     _humLoAddr:
   280  0458  3484               	retlw	084h
   281                           	global	_humStartHi
   282                           psect	strings
   283                           	file	"userMacro.h"
   284                           	line	62
   285  0459                     _humStartHi:
   286  0459  3450               	retlw	050h
   287                           	global	_humStartLo
   288                           psect	strings
   289                           	file	"userMacro.h"
   290                           	line	63
   291  045A                     _humStartLo:
   292  045A  340A               	retlw	0Ah
   293                           	global	_humValAddr
   294                           psect	strings
   295                           	file	"userMacro.h"
   296                           	line	58
   297  045B                     _humValAddr:
   298  045B  3480               	retlw	080h
   299                           	global	_lenByteAddr
   300                           psect	strings
   301                           	file	"userMacro.h"
   302                           	line	40
   303  045C                     _lenByteAddr:
   304  045C  3404               	retlw	04h
   305                           	global	_maxCmd
   306                           psect	strings
   307                           	file	"userMacro.h"
   308                           	line	31
   309  045D                     _maxCmd:
   310  045D  340E               	retlw	0Eh
   311                           	global	_minSizeByte
   312                           psect	strings
   313                           	file	"userMacro.h"
   314                           	line	29
   315  045E                     _minSizeByte:
   316  045E  340A               	retlw	0Ah
   317                           	global	_newLineChar
   318                           psect	strings
   319                           	file	"userMacro.h"
   320                           	line	28
   321  045F                     _newLineChar:
   322  045F  340A               	retlw	0Ah
   323                           	global	_noDataLen
   324                           psect	strings
   325                           	file	"userMacro.h"
   326                           	line	30
   327  0460                     _noDataLen:
   328  0460  340A               	retlw	0Ah
   329                           	global	_readByteVal
   330                           psect	strings
   331                           	file	"userMacro.h"
   332                           	line	32
   333  0461                     _readByteVal:
   334  0461  3400               	retlw	0
   335                           	global	_rwByteAddr
   336                           psect	strings
   337                           	file	"userMacro.h"
   338                           	line	38
   339  0462                     _rwByteAddr:
   340  0462  3402               	retlw	02h
   341                           	global	_startByteAddr
   342                           psect	strings
   343                           	file	"userMacro.h"
   344                           	line	37
   345  0463                     _startByteAddr:
   346  0463  3401               	retlw	01h
   347                           	global	_tempC
   348                           psect	strings
   349                           	file	"userMacro.h"
   350                           	line	55
   351  0464                     _tempC:
   352  0464  3400               	retlw	0
   353                           	global	_tempF
   354                           psect	strings
   355                           	file	"userMacro.h"
   356                           	line	56
   357  0465                     _tempF:
   358  0465  3410               	retlw	010h
   359                           	global	_tempHiAddr
   360                           psect	strings
   361                           	file	"userMacro.h"
   362                           	line	49
   363  0466                     _tempHiAddr:
   364  0466  3462               	retlw	062h
   365                           	global	_tempLoAddr
   366                           psect	strings
   367                           	file	"userMacro.h"
   368                           	line	50
   369  0467                     _tempLoAddr:
   370  0467  3464               	retlw	064h
   371                           	global	_tempStartHi
   372                           psect	strings
   373                           	file	"userMacro.h"
   374                           	line	53
   375  0468                     _tempStartHi:
   376  0468  3464               	retlw	064h
   377                           	global	_tempStartLo
   378                           psect	strings
   379                           	file	"userMacro.h"
   380                           	line	54
   381  0469                     _tempStartLo:
   382  0469  34A0               	retlw	0A0h
   383                           	global	_tempUnitAddr
   384                           psect	strings
   385                           	file	"userMacro.h"
   386                           	line	51
   387  046A                     _tempUnitAddr:
   388  046A  3466               	retlw	066h
   389                           	global	_tempValHAddr
   390                           psect	strings
   391                           	file	"userMacro.h"
   392                           	line	47
   393  046B                     _tempValHAddr:
   394  046B  3460               	retlw	060h
   395                           	global	_tempValLAddr
   396                           psect	strings
   397                           	file	"userMacro.h"
   398                           	line	48
   399  046C                     _tempValLAddr:
   400  046C  3461               	retlw	061h
   401                           	global	_timeoutByte
   402                           psect	strings
   403                           	file	"userMacro.h"
   404                           	line	34
   405  046D                     _timeoutByte:
   406  046D  34FF               	retlw	0FFh
   407                           	global	_userEndByte
   408                           psect	strings
   409                           	file	"userMacro.h"
   410                           	line	27
   411  046E                     _userEndByte:
   412  046E  340A               	retlw	0Ah
   413                           	global	_userStartByte
   414                           psect	strings
   415                           	file	"userMacro.h"
   416                           	line	26
   417  046F                     _userStartByte:
   418  046F  34AA               	retlw	0AAh
   419                           	global	_writeByteVal
   420                           psect	strings
   421                           	file	"userMacro.h"
   422                           	line	33
   423  0470                     _writeByteVal:
   424  0470  3401               	retlw	01h
   425                           	global	_member2
   426                           	global	_member3
   427                           	global	_member1
   428                           	global	_classTerm
   429                           	global	_classNum
   430                           	global	_RXLenAddr
   431                           	global	_calcCSByteAddr
   432                           	global	_cmdByteAddr
   433                           	global	_csByteAddr
   434                           	global	_dataBytesAddr
   435                           	global	_endByteAddr
   436                           	global	_groupNum
   437                           	global	_humHiAddr
   438                           	global	_humLoAddr
   439                           	global	_humStartHi
   440                           	global	_humStartLo
   441                           	global	_humValAddr
   442                           	global	_lenByteAddr
   443                           	global	_maxCmd
   444                           	global	_minSizeByte
   445                           	global	_newLineChar
   446                           	global	_noDataLen
   447                           	global	_readByteVal
   448                           	global	_rwByteAddr
   449                           	global	_startByteAddr
   450                           	global	_tempC
   451                           	global	_tempF
   452                           	global	_tempHiAddr
   453                           	global	_tempLoAddr
   454                           	global	_tempStartHi
   455                           	global	_tempStartLo
   456                           	global	_tempUnitAddr
   457                           	global	_tempValHAddr
   458                           	global	_tempValLAddr
   459                           	global	_timeoutByte
   460                           	global	_userEndByte
   461                           	global	_userStartByte
   462                           	global	_writeByteVal
   463                           	global	getPacket@F1177
   464                           	global	_ADCON0
   465  001F                     _ADCON0	set	31
   466                           	global	_ADRESH
   467  001E                     _ADRESH	set	30
   468                           	global	_RCREG
   469  001A                     _RCREG	set	26
   470                           	global	_RCSTA
   471  0018                     _RCSTA	set	24
   472                           	global	_TXREG
   473  0019                     _TXREG	set	25
   474                           	global	_ADON
   475  00F8                     _ADON	set	248
   476                           	global	_CARRY
   477  0018                     _CARRY	set	24
   478                           	global	_GIE
   479  005F                     _GIE	set	95
   480                           	global	_GO_nDONE
   481  00FA                     _GO_nDONE	set	250
   482                           	global	_OERR
   483  00C1                     _OERR	set	193
   484                           	global	_PEIE
   485  005E                     _PEIE	set	94
   486                           	global	_RCIF
   487  0065                     _RCIF	set	101
   488                           	global	_TXIF
   489  0064                     _TXIF	set	100
   490                           	global	_ADCON1
   491  009F                     _ADCON1	set	159
   492                           	global	_ADRESL
   493  009E                     _ADRESL	set	158
   494                           	global	_SPBRG
   495  0099                     _SPBRG	set	153
   496                           	global	_TRISA
   497  0085                     _TRISA	set	133
   498                           	global	_TXSTA
   499  0098                     _TXSTA	set	152
   500                           	global	_RCIE
   501  0465                     _RCIE	set	1125
   502                           	global	_TRISC6
   503  043E                     _TRISC6	set	1086
   504                           	global	_TRISC7
   505  043F                     _TRISC7	set	1087
   506                           	global	_EEADR
   507  010D                     _EEADR	set	269
   508                           	global	_EEDATA
   509  010C                     _EEDATA	set	268
   510                           	global	_EECON1
   511  018C                     _EECON1	set	396
   512                           	global	_EECON2
   513  018D                     _EECON2	set	397
   514                           	global	_RD
   515  0C60                     _RD	set	3168
   516                           	global	_WR
   517  0C61                     _WR	set	3169
   518                           	global	_WREN
   519  0C62                     _WREN	set	3170
   520                           	file	"C:\Users\GREGLA~1\AppData\Local\Temp\s8og."
   521                           	line	#
   522                           psect cinit,class=CODE,delta=2
   523                           global start_initialization
   524  0FA9                     start_initialization:
   525                           
   526                           psect	dataBANK1,class=BANK1,space=1
   527                           global __pdataBANK1
   528  00BB                     __pdataBANK1:
   529                           	file	"main.c"
   530                           	line	51
   531  00BB                     main@F1174:
   532  00BB                            ds      9
   533                           
   534                           psect	bssBANK3,class=BANK3,space=1
   535                           global __pbssBANK3
   536  0190                     __pbssBANK3:
   537  0190                     getPacket@F1177:
   538  0190                            ds      50
   539                           
   540                           psect clrtext,class=CODE,delta=2
   541                           global clear_ram
   542                           ;	Called with FSR containing the base address, and
   543                           ;	W with the last address+1
   544  0F13                     clear_ram:
   545  0F13  0064               	clrwdt			;clear the watchdog before getting into this loop
   546  0F14                     clrloop:
   547  0F14  0180               	clrf	indf		;clear RAM location pointed to by FSR
   548  0F15  0A84               	incf	fsr,f		;increment pointer
   549  0F16  0604               	xorwf	fsr,w		;XOR with final address
   550  0F17  1903               	btfsc	status,2	;have we reached the end yet?
   551  0F18  3400               	retlw	0		;all done for this memory range, return
   552  0F19  0604               	xorwf	fsr,w		;XOR again to restore value
   553  0F1A  2F14               	goto	clrloop		;do the next byte
   554                           
   555                           ; Clear objects allocated to BANK3
   556                           psect cinit,class=CODE,delta=2
   557  0FA9  1783               	bsf	status, 7	;select IRP bank2
   558  0FAA  3090               	movlw	low(__pbssBANK3)
   559  0FAB  0084               	movwf	fsr
   560  0FAC  30C2               	movlw	low((__pbssBANK3)+032h)
   561  0FAD  120A  158A  2713   	fcall	clear_ram
              120A  158A         
   562                           global btemp
   563                           psect inittext,class=CODE,delta=2
   564                           global init_fetch,btemp
   565                           ;	Called with low address in FSR and high address in W
   566  0F64                     init_fetch:
   567  0F64  087E               	movf btemp,w
   568  0F65  008A               	movwf pclath
   569  0F66  087F               	movf btemp+1,w
   570  0F67  0082               	movwf pc
   571                           global init_ram
   572                           ;Called with:
   573                           ;	high address of idata address in btemp 
   574                           ;	low address of idata address in btemp+1 
   575                           ;	low address of data in FSR
   576                           ;	high address + 1 of data in btemp-1
   577  0F68                     init_ram:
   578  0F68  120A  158A  2764   	fcall init_fetch
              120A  158A         
   579  0F6D  0080               	movwf indf,f
   580  0F6E  0A84               	incf fsr,f
   581  0F6F  0804               	movf fsr,w
   582  0F70  067D               	xorwf btemp-1,w
   583  0F71  1903               	btfsc status,2
   584  0F72  3400               	retlw 0
   585  0F73  0AFF               	incf btemp+1,f
   586  0F74  1903               	btfsc status,2
   587  0F75  0AFE               	incf btemp,f
   588  0F76  2F68               	goto init_ram
   589                           ; Initialize objects allocated to BANK1
   590                           psect cinit,class=CODE,delta=2
   591                           global init_ram, __pidataBANK1
   592  0FB2  1383               	bcf	status, 7	;select IRP bank0
   593  0FB3  30C4               	movlw low(__pdataBANK1+9)
   594  0FB4  00FD               	movwf btemp-1,f
   595  0FB5  3007               	movlw high(__pidataBANK1)
   596  0FB6  00FE               	movwf btemp,f
   597  0FB7  30F7               	movlw low(__pidataBANK1)
   598  0FB8  00FF               	movwf btemp+1,f
   599  0FB9  30BB               	movlw low(__pdataBANK1)
   600  0FBA  0084               	movwf fsr,f
   601  0FBB  120A  158A  2768   	fcall init_ram
              120A  158A         
   602                           psect cinit,class=CODE,delta=2
   603                           global end_of_initialization
   604                           
   605                           ;End of C runtime variable initialization code
   606                           
   607  0FC0                     end_of_initialization:
   608  0FC0  0183               clrf status
   609  0FC1  120A  118A  2D81   ljmp _main	;jump to C main() function
   610                           psect	cstackBANK1,class=BANK1,space=1
   611                           global __pcstackBANK1
   612  00A0                     __pcstackBANK1:
   613                           	global	??_selectTemp
   614  00A0                     ??_selectTemp:	; 0 bytes @ 0x0
   615                           	global	??_initUSART
   616  00A0                     ??_initUSART:	; 0 bytes @ 0x0
   617                           	global	??_writeByte
   618  00A0                     ??_writeByte:	; 0 bytes @ 0x0
   619                           	global	??_initADC
   620  00A0                     ??_initADC:	; 0 bytes @ 0x0
   621                           	global	?_eeprom_write
   622  00A0                     ?_eeprom_write:	; 1 bytes @ 0x0
   623                           	global	?_strlen
   624  00A0                     ?_strlen:	; 2 bytes @ 0x0
   625                           	global	?_readTemp
   626  00A0                     ?_readTemp:	; 2 bytes @ 0x0
   627                           	global	writeByte@Byte
   628  00A0                     writeByte@Byte:	; 1 bytes @ 0x0
   629                           	global	eeprom_write@value
   630  00A0                     eeprom_write@value:	; 1 bytes @ 0x0
   631  00A0                     	ds	1
   632                           	global	??_eeprom_write
   633  00A1                     ??_eeprom_write:	; 0 bytes @ 0x1
   634  00A1                     	ds	1
   635                           	global	??_strlen
   636  00A2                     ??_strlen:	; 0 bytes @ 0x2
   637                           	global	??_readTemp
   638  00A2                     ??_readTemp:	; 0 bytes @ 0x2
   639                           	global	eeprom_write@addr
   640  00A2                     eeprom_write@addr:	; 1 bytes @ 0x2
   641  00A2                     	ds	1
   642                           	global	??_initTemp
   643  00A3                     ??_initTemp:	; 0 bytes @ 0x3
   644  00A3                     	ds	1
   645                           	global	??_getTemp
   646  00A4                     ??_getTemp:	; 0 bytes @ 0x4
   647  00A4                     	ds	1
   648                           	global	getTemp@tempReading
   649  00A5                     getTemp@tempReading:	; 2 bytes @ 0x5
   650  00A5                     	ds	3
   651                           	global	strlen@s
   652  00A8                     strlen@s:	; 1 bytes @ 0x8
   653  00A8                     	ds	1
   654                           	global	strlen@cp
   655  00A9                     strlen@cp:	; 1 bytes @ 0x9
   656  00A9                     	ds	1
   657                           	global	??_writeString
   658  00AA                     ??_writeString:	; 0 bytes @ 0xA
   659  00AA                     	ds	1
   660                           	global	writeString@userString
   661  00AB                     writeString@userString:	; 1 bytes @ 0xB
   662  00AB                     	ds	1
   663                           	global	writeString@i
   664  00AC                     writeString@i:	; 2 bytes @ 0xC
   665  00AC                     	ds	2
   666                           	global	??_main
   667  00AE                     ??_main:	; 0 bytes @ 0xE
   668  00AE                     	ds	4
   669                           	global	main@testString
   670  00B2                     main@testString:	; 9 bytes @ 0x12
   671  00B2                     	ds	9
   672                           psect	cstackCOMMON,class=COMMON,space=1
   673                           global __pcstackCOMMON
   674  0070                     __pcstackCOMMON:
   675                           	global	?_clearUARTErr
   676  0070                     ?_clearUARTErr:	; 0 bytes @ 0x0
   677                           	global	??_clearUARTErr
   678  0070                     ??_clearUARTErr:	; 0 bytes @ 0x0
   679                           	global	??_eeprom_read
   680  0070                     ??_eeprom_read:	; 0 bytes @ 0x0
   681                           	global	?_addDataToCheckSum
   682  0070                     ?_addDataToCheckSum:	; 0 bytes @ 0x0
   683                           	global	?_selectTemp
   684  0070                     ?_selectTemp:	; 0 bytes @ 0x0
   685                           	global	?_getPacket
   686  0070                     ?_getPacket:	; 0 bytes @ 0x0
   687                           	global	?_getCommands
   688  0070                     ?_getCommands:	; 0 bytes @ 0x0
   689                           	global	?_setCommands
   690  0070                     ?_setCommands:	; 0 bytes @ 0x0
   691                           	global	??_setCommands
   692  0070                     ??_setCommands:	; 0 bytes @ 0x0
   693                           	global	?_initUSART
   694  0070                     ?_initUSART:	; 0 bytes @ 0x0
   695                           	global	?_writeByte
   696  0070                     ?_writeByte:	; 0 bytes @ 0x0
   697                           	global	?_writeString
   698  0070                     ?_writeString:	; 0 bytes @ 0x0
   699                           	global	?_readString
   700  0070                     ?_readString:	; 0 bytes @ 0x0
   701                           	global	??_makeNibble
   702  0070                     ??_makeNibble:	; 0 bytes @ 0x0
   703                           	global	?_parsePacket
   704  0070                     ?_parsePacket:	; 0 bytes @ 0x0
   705                           	global	?_initTemp
   706  0070                     ?_initTemp:	; 0 bytes @ 0x0
   707                           	global	?_getTemp
   708  0070                     ?_getTemp:	; 0 bytes @ 0x0
   709                           	global	?_initADC
   710  0070                     ?_initADC:	; 0 bytes @ 0x0
   711                           	global	?_isr
   712  0070                     ?_isr:	; 0 bytes @ 0x0
   713                           	global	?i1_writeByte
   714  0070                     ?i1_writeByte:	; 0 bytes @ 0x0
   715                           	global	??i1_writeByte
   716  0070                     ??i1_writeByte:	; 0 bytes @ 0x0
   717                           	global	?_eeprom_read
   718  0070                     ?_eeprom_read:	; 1 bytes @ 0x0
   719                           	global	?_readByte
   720  0070                     ?_readByte:	; 1 bytes @ 0x0
   721                           	global	?_makeNibble
   722  0070                     ?_makeNibble:	; 1 bytes @ 0x0
   723                           	global	?_main
   724  0070                     ?_main:	; 2 bytes @ 0x0
   725                           	global	?i1_strlen
   726  0070                     ?i1_strlen:	; 2 bytes @ 0x0
   727                           	global	makeNibble@tempNib
   728  0070                     makeNibble@tempNib:	; 1 bytes @ 0x0
   729                           	global	i1writeByte@Byte
   730  0070                     i1writeByte@Byte:	; 1 bytes @ 0x0
   731  0070                     	ds	1
   732                           	global	eeprom_read@addr
   733  0071                     eeprom_read@addr:	; 1 bytes @ 0x1
   734  0071                     	ds	1
   735                           	global	??_getCommands
   736  0072                     ??_getCommands:	; 0 bytes @ 0x2
   737                           	global	??_readByte
   738  0072                     ??_readByte:	; 0 bytes @ 0x2
   739                           	global	??i1_strlen
   740  0072                     ??i1_strlen:	; 0 bytes @ 0x2
   741                           	global	?_checkEven
   742  0072                     ?_checkEven:	; 2 bytes @ 0x2
   743                           	global	?_checkLength
   744  0072                     ?_checkLength:	; 2 bytes @ 0x2
   745                           	global	?_checkDataFrames
   746  0072                     ?_checkDataFrames:	; 2 bytes @ 0x2
   747                           	global	?_checkCS
   748  0072                     ?_checkCS:	; 2 bytes @ 0x2
   749  0072                     	ds	2
   750                           	global	??_checkEven
   751  0074                     ??_checkEven:	; 0 bytes @ 0x4
   752                           	global	??_checkLength
   753  0074                     ??_checkLength:	; 0 bytes @ 0x4
   754                           	global	??_checkDataFrames
   755  0074                     ??_checkDataFrames:	; 0 bytes @ 0x4
   756                           	global	??_checkCS
   757  0074                     ??_checkCS:	; 0 bytes @ 0x4
   758  0074                     	ds	4
   759                           	global	i1strlen@s
   760  0078                     i1strlen@s:	; 1 bytes @ 0x8
   761  0078                     	ds	1
   762                           	global	i1strlen@cp
   763  0079                     i1strlen@cp:	; 1 bytes @ 0x9
   764  0079                     	ds	1
   765                           	global	?i1_eeprom_write
   766  007A                     ?i1_eeprom_write:	; 1 bytes @ 0xA
   767                           	global	i1eeprom_write@value
   768  007A                     i1eeprom_write@value:	; 1 bytes @ 0xA
   769  007A                     	ds	1
   770                           	global	??i1_eeprom_write
   771  007B                     ??i1_eeprom_write:	; 0 bytes @ 0xB
   772  007B                     	ds	1
   773                           	global	i1eeprom_write@addr
   774  007C                     i1eeprom_write@addr:	; 1 bytes @ 0xC
   775  007C                     	ds	1
   776                           	global	?_makeHexByte
   777  007D                     ?_makeHexByte:	; 1 bytes @ 0xD
   778                           	global	makeHexByte@nibTwo
   779  007D                     makeHexByte@nibTwo:	; 1 bytes @ 0xD
   780                           	global	addDataToCheckSum@i
   781  007D                     addDataToCheckSum@i:	; 1 bytes @ 0xD
   782  007D                     	ds	1
   783                           	global	??_validatePacket
   784  007E                     ??_validatePacket:	; 0 bytes @ 0xE
   785                           psect	cstackBANK0,class=BANK0,space=1
   786                           global __pcstackBANK0
   787  0020                     __pcstackBANK0:
   788                           	global	??_addDataToCheckSum
   789  0020                     ??_addDataToCheckSum:	; 0 bytes @ 0x0
   790                           	global	??_readString
   791  0020                     ??_readString:	; 0 bytes @ 0x0
   792                           	global	??_makeHexByte
   793  0020                     ??_makeHexByte:	; 0 bytes @ 0x0
   794                           	global	?_checkStartByte
   795  0020                     ?_checkStartByte:	; 2 bytes @ 0x0
   796                           	global	?_checkRWByte
   797  0020                     ?_checkRWByte:	; 2 bytes @ 0x0
   798                           	global	?_checkCMDByte
   799  0020                     ?_checkCMDByte:	; 2 bytes @ 0x0
   800  0020                     	ds	2
   801                           	global	??_checkStartByte
   802  0022                     ??_checkStartByte:	; 0 bytes @ 0x2
   803                           	global	??_checkRWByte
   804  0022                     ??_checkRWByte:	; 0 bytes @ 0x2
   805                           	global	??_checkCMDByte
   806  0022                     ??_checkCMDByte:	; 0 bytes @ 0x2
   807                           	global	readString@readStorage
   808  0022                     readString@readStorage:	; 1 bytes @ 0x2
   809                           	global	makeHexByte@nibOne
   810  0022                     makeHexByte@nibOne:	; 1 bytes @ 0x2
   811  0022                     	ds	1
   812                           	global	makeHexByte@input_byte
   813  0023                     makeHexByte@input_byte:	; 1 bytes @ 0x3
   814                           	global	readString@i
   815  0023                     readString@i:	; 2 bytes @ 0x3
   816  0023                     	ds	1
   817                           	global	??_parsePacket
   818  0024                     ??_parsePacket:	; 0 bytes @ 0x4
   819                           	global	?_validatePacket
   820  0024                     ?_validatePacket:	; 2 bytes @ 0x4
   821  0024                     	ds	1
   822                           	global	readString@ch
   823  0025                     readString@ch:	; 1 bytes @ 0x5
   824  0025                     	ds	3
   825                           	global	parsePacket@dataCounter
   826  0028                     parsePacket@dataCounter:	; 2 bytes @ 0x8
   827  0028                     	ds	2
   828                           	global	parsePacket@i
   829  002A                     parsePacket@i:	; 1 bytes @ 0xA
   830  002A                     	ds	1
   831                           	global	parsePacket@dataPacket
   832  002B                     parsePacket@dataPacket:	; 1 bytes @ 0xB
   833  002B                     	ds	1
   834                           	global	??_getPacket
   835  002C                     ??_getPacket:	; 0 bytes @ 0xC
   836  002C                     	ds	4
   837                           	global	getPacket@arrStore
   838  0030                     getPacket@arrStore:	; 50 bytes @ 0x10
   839  0030                     	ds	50
   840                           	global	??_isr
   841  0062                     ??_isr:	; 0 bytes @ 0x42
   842  0062                     	ds	4
   843 ;;Data sizes: Strings 0, constant 96, data 9, bss 50, persistent 0 stack 0
   844 ;;Auto spaces:   Size  Autos    Used
   845 ;; COMMON          14     14      14
   846 ;; BANK0           80     70      70
   847 ;; BANK1           80     27      36
   848 ;; BANK3           96      0      50
   849 ;; BANK2           96      0       0
   850                           
   851 ;;
   852 ;; Pointer list with targets:
   853                           
   854 ;; ?i1_strlen	unsigned int  size(1) Largest target is 50
   855 ;;		 -> getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   856 ;;
   857 ;; i1strlen@s	PTR const unsigned char  size(1) Largest target is 50
   858 ;;		 -> getPacket@arrStore(BANK0[50]), 
   859 ;;
   860 ;; ?_readTemp	unsigned int  size(1) Largest target is 0
   861 ;;
   862 ;; ?_strlen	unsigned int  size(1) Largest target is 50
   863 ;;		 -> getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   864 ;;
   865 ;; strlen@s	PTR const unsigned char  size(1) Largest target is 50
   866 ;;		 -> getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   867 ;;
   868 ;; strlen@cp	PTR const unsigned char  size(1) Largest target is 50
   869 ;;		 -> getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   870 ;;
   871 ;; parsePacket@dataPacket	PTR unsigned char  size(1) Largest target is 50
   872 ;;		 -> getPacket@arrStore(BANK0[50]), 
   873 ;;
   874 ;; readString@readStorage	PTR unsigned char  size(1) Largest target is 50
   875 ;;		 -> getPacket@arrStore(BANK0[50]), 
   876 ;;
   877 ;; writeString@userString	PTR unsigned char  size(1) Largest target is 9
   878 ;;		 -> main@testString(BANK1[9]), 
   879 ;;
   880                           
   881                           
   882 ;;
   883 ;; Critical Paths under _main in COMMON
   884 ;;
   885 ;;   None.
   886 ;;
   887 ;; Critical Paths under _isr in COMMON
   888 ;;
   889 ;;   _readString->i1_eeprom_write
   890 ;;   _validatePacket->_addDataToCheckSum
   891 ;;   _parsePacket->_makeHexByte
   892 ;;   _readByte->_clearUARTErr
   893 ;;   _getCommands->_eeprom_read
   894 ;;   _addDataToCheckSum->i1_eeprom_write
   895 ;;   _checkCS->_eeprom_read
   896 ;;   _checkCMDByte->i1_eeprom_write
   897 ;;   _checkRWByte->i1_eeprom_write
   898 ;;   _checkStartByte->i1_eeprom_write
   899 ;;   _checkDataFrames->_eeprom_read
   900 ;;   _checkLength->_eeprom_read
   901 ;;   _checkEven->_eeprom_read
   902 ;;   _makeHexByte->i1_eeprom_write
   903 ;;   i1_eeprom_write->i1_strlen
   904 ;;
   905 ;; Critical Paths under _main in BANK0
   906 ;;
   907 ;;   None.
   908 ;;
   909 ;; Critical Paths under _isr in BANK0
   910 ;;
   911 ;;   _isr->_getPacket
   912 ;;   _getPacket->_parsePacket
   913 ;;   _validatePacket->_checkStartByte
   914 ;;   _validatePacket->_checkRWByte
   915 ;;   _validatePacket->_checkCMDByte
   916 ;;   _parsePacket->_makeHexByte
   917 ;;
   918 ;; Critical Paths under _main in BANK1
   919 ;;
   920 ;;   _main->_writeString
   921 ;;   _getTemp->_readTemp
   922 ;;   _initTemp->_eeprom_write
   923 ;;   _writeString->_strlen
   924 ;;
   925 ;; Critical Paths under _isr in BANK1
   926 ;;
   927 ;;   None.
   928 ;;
   929 ;; Critical Paths under _main in BANK3
   930 ;;
   931 ;;   None.
   932 ;;
   933 ;; Critical Paths under _isr in BANK3
   934 ;;
   935 ;;   None.
   936 ;;
   937 ;; Critical Paths under _main in BANK2
   938 ;;
   939 ;;   None.
   940 ;;
   941 ;; Critical Paths under _isr in BANK2
   942 ;;
   943 ;;   None.
   944                           
   945 ;;
   946 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   947 ;;
   948                           
   949 ;;
   950 ;;Call Graph Tables:
   951 ;;
   952 ;; ---------------------------------------------------------------------------------
   953 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   954 ;; ---------------------------------------------------------------------------------
   955 ;; (0) _main                                                13    13      0     395
   956 ;;                                             14 BANK1     13    13      0
   957 ;;                          _initUSART
   958 ;;                            _initADC
   959 ;;                           _initTemp
   960 ;;                        _writeString
   961 ;;                            _getTemp
   962 ;; ---------------------------------------------------------------------------------
   963 ;; (1) _getTemp                                              3     3      0      95
   964 ;;                                              4 BANK1      3     3      0
   965 ;;                         _selectTemp
   966 ;;                           _readTemp
   967 ;;                       _eeprom_write
   968 ;; ---------------------------------------------------------------------------------
   969 ;; (1) _initTemp                                             1     1      0      50
   970 ;;                                              3 BANK1      1     1      0
   971 ;;                       _eeprom_write
   972 ;; ---------------------------------------------------------------------------------
   973 ;; (2) _readTemp                                             4     2      2       0
   974 ;;                                              0 BANK1      4     2      2
   975 ;; ---------------------------------------------------------------------------------
   976 ;; (1) _writeString                                          4     4      0     223
   977 ;;                                             10 BANK1      4     4      0
   978 ;;                          _writeByte
   979 ;;                             _strlen
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (1) _initADC                                              0     0      0       0
   982 ;; ---------------------------------------------------------------------------------
   983 ;; (2) _selectTemp                                           0     0      0       0
   984 ;; ---------------------------------------------------------------------------------
   985 ;; (2) _eeprom_write                                         3     2      1      50
   986 ;;                                              0 BANK1      3     2      1
   987 ;; ---------------------------------------------------------------------------------
   988 ;; (2) _strlen                                              10     8      2      89
   989 ;;                                              0 BANK1     10     8      2
   990 ;; ---------------------------------------------------------------------------------
   991 ;; (2) _writeByte                                            1     1      0      22
   992 ;;                                              0 BANK1      1     1      0
   993 ;; ---------------------------------------------------------------------------------
   994 ;; (1) _initUSART                                            0     0      0       0
   995 ;; ---------------------------------------------------------------------------------
   996 ;; Estimated maximum stack depth 2
   997 ;; ---------------------------------------------------------------------------------
   998 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   999 ;; ---------------------------------------------------------------------------------
  1000 ;; (3) _isr                                                  4     4      0    3242
  1001 ;;                                             66 BANK0      4     4      0
  1002 ;;                          _getPacket
  1003 ;; ---------------------------------------------------------------------------------
  1004 ;; (4) _getPacket                                           54    54      0    3242
  1005 ;;                                             12 BANK0     54    54      0
  1006 ;;                     i1_eeprom_write
  1007 ;;                         _readString
  1008 ;;                        _eeprom_read
  1009 ;;                        i1_writeByte
  1010 ;;                        _parsePacket
  1011 ;;                     _validatePacket
  1012 ;;                        _getCommands
  1013 ;;                        _setCommands
  1014 ;; ---------------------------------------------------------------------------------
  1015 ;; (5) _readString                                           6     6      0     399
  1016 ;;                                              0 BANK0      6     6      0
  1017 ;;                           _readByte
  1018 ;;                        i1_writeByte
  1019 ;;                     i1_eeprom_write
  1020 ;; ---------------------------------------------------------------------------------
  1021 ;; (5) _validatePacket                                       2     0      2    1215
  1022 ;;                                              4 BANK0      2     0      2
  1023 ;;                     _checkStartByte
  1024 ;;                        _checkRWByte
  1025 ;;                       _checkCMDByte
  1026 ;;                    _checkDataFrames
  1027 ;;                  _addDataToCheckSum
  1028 ;;                            _checkCS
  1029 ;; ---------------------------------------------------------------------------------
  1030 ;; (5) _parsePacket                                          8     8      0    1208
  1031 ;;                                              4 BANK0      8     8      0
  1032 ;;                        _checkLength
  1033 ;;                          _checkEven
  1034 ;;                        _makeHexByte
  1035 ;;                     i1_eeprom_write
  1036 ;;                           i1_strlen
  1037 ;;                        _eeprom_read
  1038 ;; ---------------------------------------------------------------------------------
  1039 ;; (6) _readByte                                             0     0      0       0
  1040 ;;                       _clearUARTErr
  1041 ;; ---------------------------------------------------------------------------------
  1042 ;; (5) _getCommands                                          0     0      0      95
  1043 ;;                        i1_writeByte
  1044 ;;                        _eeprom_read
  1045 ;; ---------------------------------------------------------------------------------
  1046 ;; (6) _addDataToCheckSum                                    3     3      0     236
  1047 ;;                                             13 COMMON     1     1      0
  1048 ;;                                              0 BANK0      2     2      0
  1049 ;;                        _eeprom_read
  1050 ;;                     i1_eeprom_write
  1051 ;; ---------------------------------------------------------------------------------
  1052 ;; (6) _checkCS                                              3     1      2      95
  1053 ;;                                              2 COMMON     3     1      2
  1054 ;;                        _eeprom_read
  1055 ;;                        i1_writeByte
  1056 ;; ---------------------------------------------------------------------------------
  1057 ;; (6) _checkCMDByte                                         4     2      2     263
  1058 ;;                                              0 BANK0      4     2      2
  1059 ;;                        _eeprom_read
  1060 ;;                     i1_eeprom_write
  1061 ;;                        i1_writeByte
  1062 ;; ---------------------------------------------------------------------------------
  1063 ;; (6) _checkRWByte                                          4     2      2     263
  1064 ;;                                              0 BANK0      4     2      2
  1065 ;;                        _eeprom_read
  1066 ;;                        i1_writeByte
  1067 ;;                     i1_eeprom_write
  1068 ;; ---------------------------------------------------------------------------------
  1069 ;; (6) _checkStartByte                                       4     2      2     263
  1070 ;;                                              0 BANK0      4     2      2
  1071 ;;                        _eeprom_read
  1072 ;;                        i1_writeByte
  1073 ;;                     i1_eeprom_write
  1074 ;; ---------------------------------------------------------------------------------
  1075 ;; (6) _checkDataFrames                                      8     6      2      95
  1076 ;;                                              2 COMMON     8     6      2
  1077 ;;                        _eeprom_read
  1078 ;;                        i1_writeByte
  1079 ;; ---------------------------------------------------------------------------------
  1080 ;; (6) _checkLength                                          3     1      2      95
  1081 ;;                                              2 COMMON     3     1      2
  1082 ;;                        _eeprom_read
  1083 ;;                        i1_writeByte
  1084 ;; ---------------------------------------------------------------------------------
  1085 ;; (6) _checkEven                                            3     1      2      95
  1086 ;;                                              2 COMMON     3     1      2
  1087 ;;                        _eeprom_read
  1088 ;;                        i1_writeByte
  1089 ;; ---------------------------------------------------------------------------------
  1090 ;; (6) _makeHexByte                                          5     4      1     134
  1091 ;;                                             13 COMMON     1     0      1
  1092 ;;                                              0 BANK0      4     4      0
  1093 ;;                         _makeNibble
  1094 ;;                     i1_eeprom_write (ARG)
  1095 ;;                           i1_strlen (ARG)
  1096 ;; ---------------------------------------------------------------------------------
  1097 ;; (7) _clearUARTErr                                         2     2      0       0
  1098 ;;                                              0 COMMON     2     2      0
  1099 ;; ---------------------------------------------------------------------------------
  1100 ;; (6) i1_strlen                                            10     8      2     294
  1101 ;;                                              0 COMMON    10     8      2
  1102 ;; ---------------------------------------------------------------------------------
  1103 ;; (7) i1_eeprom_write                                       3     2      1     168
  1104 ;;                                             10 COMMON     3     2      1
  1105 ;;                         _makeNibble (ARG)
  1106 ;;                           i1_strlen (ARG)
  1107 ;;                        _eeprom_read (ARG)
  1108 ;; ---------------------------------------------------------------------------------
  1109 ;; (6) i1_writeByte                                          1     1      0      73
  1110 ;;                                              0 COMMON     1     1      0
  1111 ;; ---------------------------------------------------------------------------------
  1112 ;; (5) _setCommands                                          0     0      0       0
  1113 ;; ---------------------------------------------------------------------------------
  1114 ;; (6) _eeprom_read                                          2     2      0      22
  1115 ;;                                              0 COMMON     2     2      0
  1116 ;; ---------------------------------------------------------------------------------
  1117 ;; (7) _makeNibble                                           1     1      0      66
  1118 ;;                                              0 COMMON     1     1      0
  1119 ;; ---------------------------------------------------------------------------------
  1120 ;; Estimated maximum stack depth 7
  1121 ;; ---------------------------------------------------------------------------------
  1122                           
  1123 ;; Call Graph Graphs:
  1124                           
  1125 ;; _main (ROOT)
  1126 ;;   _initUSART
  1127 ;;   _initADC
  1128 ;;   _initTemp
  1129 ;;     _eeprom_write
  1130 ;;   _writeString
  1131 ;;     _writeByte
  1132 ;;     _strlen
  1133 ;;   _getTemp
  1134 ;;     _selectTemp
  1135 ;;     _readTemp
  1136 ;;     _eeprom_write
  1137 ;;
  1138 ;; _isr (ROOT)
  1139 ;;   _getPacket
  1140 ;;     i1_eeprom_write
  1141 ;;       _makeNibble (ARG)
  1142 ;;       i1_strlen (ARG)
  1143 ;;       _eeprom_read (ARG)
  1144 ;;     _readString
  1145 ;;       _readByte
  1146 ;;         _clearUARTErr
  1147 ;;       i1_writeByte
  1148 ;;       i1_eeprom_write
  1149 ;;         _makeNibble (ARG)
  1150 ;;         i1_strlen (ARG)
  1151 ;;         _eeprom_read (ARG)
  1152 ;;     _eeprom_read
  1153 ;;     i1_writeByte
  1154 ;;     _parsePacket
  1155 ;;       _checkLength
  1156 ;;         _eeprom_read
  1157 ;;         i1_writeByte
  1158 ;;       _checkEven
  1159 ;;         _eeprom_read
  1160 ;;         i1_writeByte
  1161 ;;       _makeHexByte
  1162 ;;         _makeNibble
  1163 ;;         i1_eeprom_write (ARG)
  1164 ;;           _makeNibble (ARG)
  1165 ;;           i1_strlen (ARG)
  1166 ;;           _eeprom_read (ARG)
  1167 ;;         i1_strlen (ARG)
  1168 ;;       i1_eeprom_write
  1169 ;;         _makeNibble (ARG)
  1170 ;;         i1_strlen (ARG)
  1171 ;;         _eeprom_read (ARG)
  1172 ;;       i1_strlen
  1173 ;;       _eeprom_read
  1174 ;;     _validatePacket
  1175 ;;       _checkStartByte
  1176 ;;         _eeprom_read
  1177 ;;         i1_writeByte
  1178 ;;         i1_eeprom_write
  1179 ;;           _makeNibble (ARG)
  1180 ;;           i1_strlen (ARG)
  1181 ;;           _eeprom_read (ARG)
  1182 ;;       _checkRWByte
  1183 ;;         _eeprom_read
  1184 ;;         i1_writeByte
  1185 ;;         i1_eeprom_write
  1186 ;;           _makeNibble (ARG)
  1187 ;;           i1_strlen (ARG)
  1188 ;;           _eeprom_read (ARG)
  1189 ;;       _checkCMDByte
  1190 ;;         _eeprom_read
  1191 ;;         i1_eeprom_write
  1192 ;;           _makeNibble (ARG)
  1193 ;;           i1_strlen (ARG)
  1194 ;;           _eeprom_read (ARG)
  1195 ;;         i1_writeByte
  1196 ;;       _checkDataFrames
  1197 ;;         _eeprom_read
  1198 ;;         i1_writeByte
  1199 ;;       _addDataToCheckSum
  1200 ;;         _eeprom_read
  1201 ;;         i1_eeprom_write
  1202 ;;           _makeNibble (ARG)
  1203 ;;           i1_strlen (ARG)
  1204 ;;           _eeprom_read (ARG)
  1205 ;;       _checkCS
  1206 ;;         _eeprom_read
  1207 ;;         i1_writeByte
  1208 ;;     _getCommands
  1209 ;;       i1_writeByte
  1210 ;;       _eeprom_read
  1211 ;;     _setCommands
  1212 ;;
  1213                           
  1214 ;; Address spaces:
  1215                           
  1216 ;;Name               Size   Autos  Total    Cost      Usage
  1217 ;;BANK3               60      0      32       9       52.1%
  1218 ;;BITBANK3            60      0       0       8        0.0%
  1219 ;;SFR3                 0      0       0       4        0.0%
  1220 ;;BITSFR3              0      0       0       4        0.0%
  1221 ;;BANK2               60      0       0      11        0.0%
  1222 ;;BITBANK2            60      0       0      10        0.0%
  1223 ;;SFR2                 0      0       0       5        0.0%
  1224 ;;BITSFR2              0      0       0       5        0.0%
  1225 ;;SFR1                 0      0       0       2        0.0%
  1226 ;;BITSFR1              0      0       0       2        0.0%
  1227 ;;BANK1               50     1B      24       7       45.0%
  1228 ;;BITBANK1            50      0       0       6        0.0%
  1229 ;;CODE                 0      0       0       0        0.0%
  1230 ;;DATA                 0      0      B6      12        0.0%
  1231 ;;ABS                  0      0      AA       3        0.0%
  1232 ;;NULL                 0      0       0       0        0.0%
  1233 ;;STACK                0      0       C       2        0.0%
  1234 ;;BANK0               50     46      46       5       87.5%
  1235 ;;BITBANK0            50      0       0       4        0.0%
  1236 ;;SFR0                 0      0       0       1        0.0%
  1237 ;;BITSFR0              0      0       0       1        0.0%
  1238 ;;COMMON               E      E       E       1      100.0%
  1239 ;;BITCOMMON            E      0       0       0        0.0%
  1240 ;;EEDATA             100      0       0       0        0.0%
  1241                           
  1242                           	global	_main
  1243                           psect	maintext,global,class=CODE,delta=2
  1244                           global __pmaintext
  1245  0581                     __pmaintext:
  1246                           
  1247 ;; *************** function _main *****************
  1248 ;; Defined at:
  1249 ;;		line 50 in file "main.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  testString      9   18[BANK1 ] unsigned char [9]
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  2  3979[COMMON] int 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 17F/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1263 ;;      Params:         0       0       0       0       0
  1264 ;;      Locals:         0       0       9       0       0
  1265 ;;      Temps:          0       0       4       0       0
  1266 ;;      Totals:         0       0      13       0       0
  1267 ;;Total ram usage:       13 bytes
  1268 ;; Hardware stack levels required when called:    7
  1269 ;; This function calls:
  1270 ;;		_initUSART
  1271 ;;		_initADC
  1272 ;;		_initTemp
  1273 ;;		_writeString
  1274 ;;		_getTemp
  1275 ;; This function is called by:
  1276 ;;		Startup code after reset
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           psect	maintext
  1280                           	file	"main.c"
  1281                           	line	50
  1282                           	global	__size_of_main
  1283  0042                     	__size_of_main	equ	__end_of_main-_main
  1284                           	
  1285  0581                     _main:	
  1286                           	opt	stack 1
  1287                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1288                           	line	51
  1289                           	
  1290  0581                     l8706:	
  1291                           ;main.c: 51: char testString[] = "Welcome\n";
  1292  0581  30B2               	movlw	(main@testString)&0ffh
  1293  0582  0084               	movwf	fsr0
  1294  0583  30BB               	movlw	low(main@F1174)
  1295  0584  1683               	bsf	status, 5	;RP0=1, select bank1
  1296  0585  1303               	bcf	status, 6	;RP1=0, select bank1
  1297  0586  00AE               	movwf	(??_main+0)^080h+0
  1298  0587  0804               	movf	fsr0,w
  1299  0588  00AF               	movwf	((??_main+0)^080h+0+1)
  1300  0589  3009               	movlw	9
  1301  058A  00B0               	movwf	((??_main+0)^080h+0+2)
  1302  058B                     u3160:
  1303  058B  082E               	movf	(??_main+0)^080h+0,w
  1304  058C  0084               	movwf	fsr0
  1305  058D  1383               	bcf	status, 7	;select IRP bank1
  1306                           	
  1307  058E  0800               	movf	indf,w
  1308  058F  00B1               	movwf	((??_main+0)^080h+0+3)
  1309  0590  0AAE               	incf	(??_main+0)^080h+0,f
  1310  0591  082F               	movf	((??_main+0)^080h+0+1),w
  1311  0592  0084               	movwf	fsr0
  1312                           	
  1313  0593  0831               	movf	((??_main+0)^080h+0+3),w
  1314  0594  0080               	movwf	indf
  1315  0595  0AAF               	incf	((??_main+0)^080h+0+1),f
  1316  0596  0BB0               	decfsz	((??_main+0)^080h+0+2),f
  1317  0597  2D8B               	goto	u3160
  1318                           	line	55
  1319                           	
  1320  0598                     l8708:	
  1321                           ;main.c: 55: initUSART();
  1322  0598  120A  158A  2752   	fcall	_initUSART
              120A  118A         
  1323                           	line	57
  1324                           	
  1325  059D                     l8710:	
  1326                           ;main.c: 57: initADC();
  1327  059D  120A  158A  271B   	fcall	_initADC
              120A  118A         
  1328                           	line	60
  1329                           	
  1330  05A2                     l8712:	
  1331                           ;main.c: 60: initTemp();
  1332  05A2  120A  118A  23A4   	fcall	_initTemp
              120A  118A         
  1333                           	line	63
  1334                           	
  1335  05A7                     l8714:	
  1336                           ;main.c: 63: writeString(testString);
  1337  05A7  30B2               	movlw	(main@testString)&0ffh
  1338  05A8  120A  118A  2634   	fcall	_writeString
              120A  118A         
  1339  05AD  2DAE               	goto	l8716
  1340                           	line	67
  1341                           ;main.c: 67: while(1){
  1342                           	
  1343  05AE                     l3982:	
  1344                           	line	68
  1345                           	
  1346  05AE                     l8716:	
  1347                           ;main.c: 68: getTemp();
  1348  05AE  120A  118A  25FE   	fcall	_getTemp
              120A  118A         
  1349                           	line	69
  1350                           	
  1351  05B3                     l8718:	
  1352                           ;main.c: 69: _delay((unsigned long)((10)*(20000000/4000.0)));
  1353                           	opt asmopt_off
  1354  05B3  3041               movlw	65
  1355  05B4  1683               	bsf	status, 5	;RP0=1, select bank1
  1356  05B5  1303               	bcf	status, 6	;RP1=0, select bank1
  1357  05B6  00AF               movwf	((??_main+0)^080h+0+1),f
  1358  05B7  30EE               	movlw	238
  1359  05B8  00AE               movwf	((??_main+0)^080h+0),f
  1360  05B9                     u3177:
  1361  05B9  0BAE               	decfsz	((??_main+0)^080h+0),f
  1362  05BA  2DB9               	goto	u3177
  1363  05BB  0BAF               	decfsz	((??_main+0)^080h+0+1),f
  1364  05BC  2DB9               	goto	u3177
  1365  05BD  0064               	clrwdt
  1366                           opt asmopt_on
  1367                           
  1368  05BE  2DAE               	goto	l8716
  1369                           	line	70
  1370                           	
  1371  05BF                     l3983:	
  1372                           	line	67
  1373  05BF  2DAE               	goto	l8716
  1374                           	
  1375  05C0                     l3984:	
  1376                           	line	75
  1377                           ;main.c: 70: }
  1378                           ;main.c: 74: return 0;
  1379                           ;	Return value of _main is never used
  1380                           	
  1381  05C0                     l3985:	
  1382                           	global	start
  1383  05C0  120A  118A  2812   	ljmp	start
  1384                           	opt stack 0
  1385                           GLOBAL	__end_of_main
  1386  05C3                     	__end_of_main:
  1387 ;; =============== function _main ends ============
  1388                           
  1389                           	signat	_main,90
  1390                           	global	_getTemp
  1391                           psect	text728,local,class=CODE,delta=2
  1392                           global __ptext728
  1393  05FE                     __ptext728:
  1394                           
  1395 ;; *************** function _getTemp *****************
  1396 ;; Defined at:
  1397 ;;		line 45 in file "Temperature.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  tempReading     2    5[BANK1 ] unsigned int 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;		None               void
  1404 ;; Registers used:
  1405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1411 ;;      Params:         0       0       0       0       0
  1412 ;;      Locals:         0       0       2       0       0
  1413 ;;      Temps:          0       0       1       0       0
  1414 ;;      Totals:         0       0       3       0       0
  1415 ;;Total ram usage:        3 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    6
  1418 ;; This function calls:
  1419 ;;		_selectTemp
  1420 ;;		_readTemp
  1421 ;;		_eeprom_write
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           psect	text728
  1427                           	file	"Temperature.c"
  1428                           	line	45
  1429                           	global	__size_of_getTemp
  1430  0036                     	__size_of_getTemp	equ	__end_of_getTemp-_getTemp
  1431                           	
  1432  05FE                     _getTemp:	
  1433                           	opt	stack 1
  1434                           ; Regs used in _getTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1435                           	line	48
  1436                           	
  1437  05FE                     l8698:	
  1438                           ;Temperature.c: 46: unsigned int tempReading;
  1439                           ;Temperature.c: 48: selectTemp();
  1440  05FE  120A  158A  270E   	fcall	_selectTemp
              120A  118A         
  1441                           	line	50
  1442                           	
  1443  0603                     l8700:	
  1444                           ;Temperature.c: 50: tempReading = readTemp();
  1445  0603  120A  118A  2761   	fcall	_readTemp
              120A  118A         
  1446  0608  1683               	bsf	status, 5	;RP0=1, select bank1
  1447  0609  1303               	bcf	status, 6	;RP1=0, select bank1
  1448  060A  0821               	movf	(1+(?_readTemp))^080h,w
  1449  060B  01A6               	clrf	(getTemp@tempReading+1)^080h
  1450  060C  07A6               	addwf	(getTemp@tempReading+1)^080h
  1451  060D  0820               	movf	(0+(?_readTemp))^080h,w
  1452  060E  01A5               	clrf	(getTemp@tempReading)^080h
  1453  060F  07A5               	addwf	(getTemp@tempReading)^080h
  1454                           
  1455                           	line	52
  1456                           	
  1457  0610                     l8702:	
  1458                           ;Temperature.c: 52: eeprom_write(tempValLAddr,tempReading);
  1459  0610  0825               	movf	(getTemp@tempReading)^080h,w
  1460  0611  00A4               	movwf	(??_getTemp+0)^080h+0
  1461  0612  0824               	movf	(??_getTemp+0)^080h+0,w
  1462  0613  00A0               	movwf	(?_eeprom_write)^080h
  1463  0614  305C               	movlw	(_tempValLAddr-__stringbase)
  1464  0615  0084               	movwf	fsr0
  1465  0616  120A  118A  240B   	fcall	stringdir
              120A  118A         
  1466  061B  120A  118A  25C3   	fcall	_eeprom_write
              120A  118A         
  1467                           	line	54
  1468                           	
  1469  0620                     l8704:	
  1470                           ;Temperature.c: 54: eeprom_write(tempValHAddr+1,tempReading>>8);
  1471  0620  1683               	bsf	status, 5	;RP0=1, select bank1
  1472  0621  1303               	bcf	status, 6	;RP1=0, select bank1
  1473  0622  0826               	movf	(getTemp@tempReading+1)^080h,w
  1474  0623  00A4               	movwf	(??_getTemp+0)^080h+0
  1475  0624  0824               	movf	(??_getTemp+0)^080h+0,w
  1476  0625  00A0               	movwf	(?_eeprom_write)^080h
  1477  0626  305B               	movlw	(_tempValHAddr-__stringbase)
  1478  0627  0084               	movwf	fsr0
  1479  0628  120A  118A  240B   	fcall	stringdir
              120A  118A         
  1480  062D  3E01               	addlw	01h
  1481  062E  120A  118A  25C3   	fcall	_eeprom_write
              120A  118A         
  1482                           	line	55
  1483                           	
  1484  0633                     l2418:	
  1485  0633  0008               	return
  1486                           	opt stack 0
  1487                           GLOBAL	__end_of_getTemp
  1488  0634                     	__end_of_getTemp:
  1489 ;; =============== function _getTemp ends ============
  1490                           
  1491                           	signat	_getTemp,88
  1492                           	global	_initTemp
  1493                           psect	text729,local,class=CODE,delta=2
  1494                           global __ptext729
  1495  03A4                     __ptext729:
  1496                           
  1497 ;; *************** function _initTemp *****************
  1498 ;; Defined at:
  1499 ;;		line 24 in file "Temperature.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;		None               void
  1506 ;; Registers used:
  1507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         0       0       0       0       0
  1514 ;;      Locals:         0       0       0       0       0
  1515 ;;      Temps:          0       0       1       0       0
  1516 ;;      Totals:         0       0       1       0       0
  1517 ;;Total ram usage:        1 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    6
  1520 ;; This function calls:
  1521 ;;		_eeprom_write
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           psect	text729
  1527                           	file	"Temperature.c"
  1528                           	line	24
  1529                           	global	__size_of_initTemp
  1530  0067                     	__size_of_initTemp	equ	__end_of_initTemp-_initTemp
  1531                           	
  1532  03A4                     _initTemp:	
  1533                           	opt	stack 1
  1534                           ; Regs used in _initTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1535                           	line	26
  1536                           	
  1537  03A4                     l8696:	
  1538                           ;Temperature.c: 26: eeprom_write(tempValHAddr,0x00);
  1539  03A4  1683               	bsf	status, 5	;RP0=1, select bank1
  1540  03A5  1303               	bcf	status, 6	;RP1=0, select bank1
  1541  03A6  01A0               	clrf	(?_eeprom_write)^080h
  1542  03A7  305B               	movlw	(_tempValHAddr-__stringbase)
  1543  03A8  0084               	movwf	fsr0
  1544  03A9  120A  118A  240B   	fcall	stringdir
              120A  118A         
  1545  03AE  120A  118A  25C3   	fcall	_eeprom_write
              120A  118A         
  1546                           	line	27
  1547                           ;Temperature.c: 27: eeprom_write(tempValLAddr, 0x00);
  1548  03B3  1683               	bsf	status, 5	;RP0=1, select bank1
  1549  03B4  1303               	bcf	status, 6	;RP1=0, select bank1
  1550  03B5  01A0               	clrf	(?_eeprom_write)^080h
  1551  03B6  305C               	movlw	(_tempValLAddr-__stringbase)
  1552  03B7  0084               	movwf	fsr0
  1553  03B8  120A  118A  240B   	fcall	stringdir
              120A  118A         
  1554  03BD  120A  118A  25C3   	fcall	_eeprom_write
              120A  118A         
  1555                           	line	28
  1556                           ;Temperature.c: 28: eeprom_write(tempHiAddr, tempStartHi);
  1557  03C2  3058               	movlw	(_tempStartHi-__stringbase)
  1558  03C3  0084               	movwf	fsr0
  1559  03C4  120A  118A  240B   	fcall	stringdir
              120A  118A         
  1560  03C9  1683               	bsf	status, 5	;RP0=1, select bank1
  1561  03CA  1303               	bcf	status, 6	;RP1=0, select bank1
  1562  03CB  00A3               	movwf	(??_initTemp+0)^080h+0
  1563  03CC  0823               	movf	(??_initTemp+0)^080h+0,w
  1564  03CD  00A0               	movwf	(?_eeprom_write)^080h
  1565  03CE  3056               	movlw	(_tempHiAddr-__stringbase)
  1566  03CF  0084               	movwf	fsr0
  1567  03D0  120A  118A  240B   	fcall	stringdir
              120A  118A         
  1568  03D5  120A  118A  25C3   	fcall	_eeprom_write
              120A  118A         
  1569                           	line	29
  1570                           ;Temperature.c: 29: eeprom_write(tempLoAddr, tempStartLo);
  1571  03DA  3059               	movlw	(_tempStartLo-__stringbase)
  1572  03DB  0084               	movwf	fsr0
  1573  03DC  120A  118A  240B   	fcall	stringdir
              120A  118A         
  1574  03E1  1683               	bsf	status, 5	;RP0=1, select bank1
  1575  03E2  1303               	bcf	status, 6	;RP1=0, select bank1
  1576  03E3  00A3               	movwf	(??_initTemp+0)^080h+0
  1577  03E4  0823               	movf	(??_initTemp+0)^080h+0,w
  1578  03E5  00A0               	movwf	(?_eeprom_write)^080h
  1579  03E6  3057               	movlw	(_tempLoAddr-__stringbase)
  1580  03E7  0084               	movwf	fsr0
  1581  03E8  120A  118A  240B   	fcall	stringdir
              120A  118A         
  1582  03ED  120A  118A  25C3   	fcall	_eeprom_write
              120A  118A         
  1583                           	line	30
  1584                           ;Temperature.c: 30: eeprom_write(tempUnitAddr, tempC);
  1585  03F2  3054               	movlw	(_tempC-__stringbase)
  1586  03F3  0084               	movwf	fsr0
  1587  03F4  120A  118A  240B   	fcall	stringdir
              120A  118A         
  1588  03F9  1683               	bsf	status, 5	;RP0=1, select bank1
  1589  03FA  1303               	bcf	status, 6	;RP1=0, select bank1
  1590  03FB  00A3               	movwf	(??_initTemp+0)^080h+0
  1591  03FC  0823               	movf	(??_initTemp+0)^080h+0,w
  1592  03FD  00A0               	movwf	(?_eeprom_write)^080h
  1593  03FE  305A               	movlw	(_tempUnitAddr-__stringbase)
  1594  03FF  0084               	movwf	fsr0
  1595  0400  120A  118A  240B   	fcall	stringdir
              120A  118A         
  1596  0405  120A  118A  25C3   	fcall	_eeprom_write
              120A  118A         
  1597                           	line	31
  1598                           	
  1599  040A                     l2406:	
  1600  040A  0008               	return
  1601                           	opt stack 0
  1602                           GLOBAL	__end_of_initTemp
  1603  040B                     	__end_of_initTemp:
  1604 ;; =============== function _initTemp ends ============
  1605                           
  1606                           	signat	_initTemp,88
  1607                           	global	_readTemp
  1608                           psect	text730,local,class=CODE,delta=2
  1609                           global __ptext730
  1610  0761                     __ptext730:
  1611                           
  1612 ;; *************** function _readTemp *****************
  1613 ;; Defined at:
  1614 ;;		line 7 in file "Temperature.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  2    0[BANK1 ] unsigned int 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0, btemp+1
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         0       0       2       0       0
  1629 ;;      Locals:         0       0       0       0       0
  1630 ;;      Temps:          0       0       2       0       0
  1631 ;;      Totals:         0       0       4       0       0
  1632 ;;Total ram usage:        4 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    5
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_getTemp
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           psect	text730
  1642                           	file	"Temperature.c"
  1643                           	line	7
  1644                           	global	__size_of_readTemp
  1645  0029                     	__size_of_readTemp	equ	__end_of_readTemp-_readTemp
  1646                           	
  1647  0761                     _readTemp:	
  1648                           	opt	stack 1
  1649                           ; Regs used in _readTemp: [wreg+status,2+status,0+btemp+1]
  1650                           	line	9
  1651                           	
  1652  0761                     l8686:	
  1653                           ;Temperature.c: 9: ADON = 1;
  1654  0761  1283               	bcf	status, 5	;RP0=0, select bank0
  1655  0762  1303               	bcf	status, 6	;RP1=0, select bank0
  1656  0763  141F               	bsf	(248/8),(248)&7
  1657                           	line	13
  1658                           	
  1659  0764                     l8688:	
  1660                           ;Temperature.c: 13: _delay((unsigned long)((10)*(20000000/4000.0)));
  1661                           	opt asmopt_off
  1662  0764  3041               movlw	65
  1663  0765  1683               	bsf	status, 5	;RP0=1, select bank1
  1664  0766  1303               	bcf	status, 6	;RP1=0, select bank1
  1665  0767  00A3               movwf	((??_readTemp+0)^080h+0+1),f
  1666  0768  30EE               	movlw	238
  1667  0769  00A2               movwf	((??_readTemp+0)^080h+0),f
  1668  076A                     u3187:
  1669  076A  0BA2               	decfsz	((??_readTemp+0)^080h+0),f
  1670  076B  2F6A               	goto	u3187
  1671  076C  0BA3               	decfsz	((??_readTemp+0)^080h+0+1),f
  1672  076D  2F6A               	goto	u3187
  1673  076E  0064               	clrwdt
  1674                           opt asmopt_on
  1675                           
  1676                           	line	15
  1677                           	
  1678  076F                     l8690:	
  1679                           ;Temperature.c: 15: GO_nDONE = 1;
  1680  076F  1283               	bcf	status, 5	;RP0=0, select bank0
  1681  0770  1303               	bcf	status, 6	;RP1=0, select bank0
  1682  0771  151F               	bsf	(250/8),(250)&7
  1683                           	line	18
  1684                           ;Temperature.c: 18: while(GO_nDONE);
  1685  0772  2F73               	goto	l2400
  1686                           	
  1687  0773                     l2401:	
  1688                           	
  1689  0773                     l2400:	
  1690  0773  191F               	btfsc	(250/8),(250)&7
  1691  0774  2F76               	goto	u3151
  1692  0775  2F77               	goto	u3150
  1693  0776                     u3151:
  1694  0776  2F73               	goto	l2400
  1695  0777                     u3150:
  1696  0777  2F78               	goto	l8692
  1697                           	
  1698  0778                     l2402:	
  1699                           	line	21
  1700                           	
  1701  0778                     l8692:	
  1702                           ;Temperature.c: 21: return ((ADRESH<<8)+ADRESL);
  1703  0778  081E               	movf	(30),w	;volatile
  1704  0779  1683               	bsf	status, 5	;RP0=1, select bank1
  1705  077A  1303               	bcf	status, 6	;RP1=0, select bank1
  1706  077B  00A2               	movwf	(??_readTemp+0)^080h+0
  1707  077C  01A3               	clrf	(??_readTemp+0)^080h+0+1
  1708  077D  0822               	movf	(??_readTemp+0)^080h+0,w
  1709  077E  00A3               	movwf	(??_readTemp+0)^080h+1
  1710  077F  01A2               	clrf	(??_readTemp+0)^080h+0
  1711  0780  081E               	movf	(158)^080h,w	;volatile
  1712  0781  0722               	addwf	0+(??_readTemp+0)^080h+0,w
  1713  0782  00A0               	movwf	(?_readTemp)^080h
  1714  0783  3000               	movlw	0
  1715  0784  1803               	skipnc
  1716  0785  3001               	movlw	1
  1717  0786  0723               	addwf	1+(??_readTemp+0)^080h+0,w
  1718  0787  00A1               	movwf	1+(?_readTemp)^080h
  1719  0788  2F89               	goto	l2403
  1720                           	
  1721  0789                     l8694:	
  1722                           	line	22
  1723                           	
  1724  0789                     l2403:	
  1725  0789  0008               	return
  1726                           	opt stack 0
  1727                           GLOBAL	__end_of_readTemp
  1728  078A                     	__end_of_readTemp:
  1729 ;; =============== function _readTemp ends ============
  1730                           
  1731                           	signat	_readTemp,90
  1732                           	global	_writeString
  1733                           psect	text731,local,class=CODE,delta=2
  1734                           global __ptext731
  1735  0634                     __ptext731:
  1736                           
  1737 ;; *************** function _writeString *****************
  1738 ;; Defined at:
  1739 ;;		line 140 in file "Bluetooth.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  userString      1    wreg     PTR unsigned char 
  1742 ;;		 -> main@testString(9), 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  userString      1   11[BANK1 ] PTR unsigned char 
  1745 ;;		 -> main@testString(9), 
  1746 ;;  i               2   12[BANK1 ] unsigned int 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;		None               void
  1749 ;; Registers used:
  1750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756 ;;      Params:         0       0       0       0       0
  1757 ;;      Locals:         0       0       3       0       0
  1758 ;;      Temps:          0       0       1       0       0
  1759 ;;      Totals:         0       0       4       0       0
  1760 ;;Total ram usage:        4 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    6
  1763 ;; This function calls:
  1764 ;;		_writeByte
  1765 ;;		_strlen
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           psect	text731
  1771                           	file	"Bluetooth.c"
  1772                           	line	140
  1773                           	global	__size_of_writeString
  1774  0035                     	__size_of_writeString	equ	__end_of_writeString-_writeString
  1775                           	
  1776  0634                     _writeString:	
  1777                           	opt	stack 1
  1778                           ; Regs used in _writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1779                           ;writeString@userString stored from wreg
  1780                           	line	144
  1781  0634  1683               	bsf	status, 5	;RP0=1, select bank1
  1782  0635  1303               	bcf	status, 6	;RP1=0, select bank1
  1783  0636  00AB               	movwf	(writeString@userString)^080h
  1784                           	
  1785  0637                     l8676:	
  1786                           ;Bluetooth.c: 142: unsigned int i;
  1787                           ;Bluetooth.c: 144: for(i = 0;i<strlen(userString);i++){
  1788  0637  01AC               	clrf	(writeString@i)^080h
  1789  0638  01AD               	clrf	(writeString@i+1)^080h
  1790  0639  2E4F               	goto	l8682
  1791                           	
  1792  063A                     l789:	
  1793                           	line	145
  1794                           	
  1795  063A                     l8678:	
  1796                           ;Bluetooth.c: 145: writeByte(userString[i]);
  1797  063A  082C               	movf	(writeString@i)^080h,w
  1798  063B  072B               	addwf	(writeString@userString)^080h,w
  1799  063C  00AA               	movwf	(??_writeString+0)^080h+0
  1800  063D  082A               	movf	0+(??_writeString+0)^080h+0,w
  1801  063E  0084               	movwf	fsr0
  1802  063F  1383               	bcf	status, 7	;select IRP bank0
  1803  0640  0800               	movf	indf,w
  1804  0641  120A  158A  2741   	fcall	_writeByte
              120A  118A         
  1805                           	line	144
  1806                           	
  1807  0646                     l8680:	
  1808  0646  3001               	movlw	low(01h)
  1809  0647  1683               	bsf	status, 5	;RP0=1, select bank1
  1810  0648  1303               	bcf	status, 6	;RP1=0, select bank1
  1811  0649  07AC               	addwf	(writeString@i)^080h,f
  1812  064A  1803               	skipnc
  1813  064B  0AAD               	incf	(writeString@i+1)^080h,f
  1814  064C  3000               	movlw	high(01h)
  1815  064D  07AD               	addwf	(writeString@i+1)^080h,f
  1816  064E  2E4F               	goto	l8682
  1817                           	
  1818  064F                     l788:	
  1819                           	
  1820  064F                     l8682:	
  1821  064F  082B               	movf	(writeString@userString)^080h,w
  1822  0650  120A  118A  269D   	fcall	_strlen
              120A  118A         
  1823  0655  1683               	bsf	status, 5	;RP0=1, select bank1
  1824  0656  1303               	bcf	status, 6	;RP1=0, select bank1
  1825  0657  0821               	movf	(1+(?_strlen))^080h,w
  1826  0658  022D               	subwf	(writeString@i+1)^080h,w
  1827  0659  1D03               	skipz
  1828  065A  2E5D               	goto	u3145
  1829  065B  0820               	movf	(0+(?_strlen))^080h,w
  1830  065C  022C               	subwf	(writeString@i)^080h,w
  1831  065D                     u3145:
  1832  065D  1C03               	skipc
  1833  065E  2E60               	goto	u3141
  1834  065F  2E61               	goto	u3140
  1835  0660                     u3141:
  1836  0660  2E3A               	goto	l8678
  1837  0661                     u3140:
  1838  0661  2E62               	goto	l8684
  1839                           	
  1840  0662                     l790:	
  1841                           	line	148
  1842                           	
  1843  0662                     l8684:	
  1844                           ;Bluetooth.c: 146: }
  1845                           ;Bluetooth.c: 148: writeByte((unsigned char)i);
  1846  0662  082C               	movf	(writeString@i)^080h,w
  1847  0663  120A  158A  2741   	fcall	_writeByte
              120A  118A         
  1848                           	line	150
  1849                           	
  1850  0668                     l791:	
  1851  0668  0008               	return
  1852                           	opt stack 0
  1853                           GLOBAL	__end_of_writeString
  1854  0669                     	__end_of_writeString:
  1855 ;; =============== function _writeString ends ============
  1856                           
  1857                           	signat	_writeString,4216
  1858                           	global	_initADC
  1859                           psect	text732,local,class=CODE,delta=2
  1860                           global __ptext732
  1861  0F1B                     __ptext732:
  1862                           
  1863 ;; *************** function _initADC *****************
  1864 ;; Defined at:
  1865 ;;		line 7 in file "customADC.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;		None               void
  1872 ;; Registers used:
  1873 ;;		wreg
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1879 ;;      Params:         0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0
  1882 ;;      Totals:         0       0       0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    5
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           psect	text732
  1893                           	file	"customADC.c"
  1894                           	line	7
  1895                           	global	__size_of_initADC
  1896  000B                     	__size_of_initADC	equ	__end_of_initADC-_initADC
  1897                           	
  1898  0F1B                     _initADC:	
  1899                           	opt	stack 2
  1900                           ; Regs used in _initADC: [wreg]
  1901                           	line	8
  1902                           	
  1903  0F1B                     l8608:	
  1904                           ;customADC.c: 8: TRISA = 0x03;
  1905  0F1B  3003               	movlw	(03h)
  1906  0F1C  1683               	bsf	status, 5	;RP0=1, select bank1
  1907  0F1D  1303               	bcf	status, 6	;RP1=0, select bank1
  1908  0F1E  0085               	movwf	(133)^080h	;volatile
  1909                           	line	22
  1910                           ;customADC.c: 22: ADCON1 = 0x80;
  1911  0F1F  3080               	movlw	(080h)
  1912  0F20  009F               	movwf	(159)^080h	;volatile
  1913                           	line	39
  1914                           ;customADC.c: 39: ADCON0 = 0x80;
  1915  0F21  3080               	movlw	(080h)
  1916  0F22  1283               	bcf	status, 5	;RP0=0, select bank0
  1917  0F23  1303               	bcf	status, 6	;RP1=0, select bank0
  1918  0F24  009F               	movwf	(31)	;volatile
  1919                           	line	40
  1920                           	
  1921  0F25                     l3179:	
  1922  0F25  0008               	return
  1923                           	opt stack 0
  1924                           GLOBAL	__end_of_initADC
  1925  0F26                     	__end_of_initADC:
  1926 ;; =============== function _initADC ends ============
  1927                           
  1928                           	signat	_initADC,88
  1929                           	global	_selectTemp
  1930                           psect	text733,local,class=CODE,delta=2
  1931                           global __ptext733
  1932  0F0E                     __ptext733:
  1933                           
  1934 ;; *************** function _selectTemp *****************
  1935 ;; Defined at:
  1936 ;;		line 43 in file "customADC.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;		None               void
  1943 ;; Registers used:
  1944 ;;		wreg
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1950 ;;      Params:         0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0
  1953 ;;      Totals:         0       0       0       0       0
  1954 ;;Total ram usage:        0 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    5
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_getTemp
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           psect	text733
  1964                           	file	"customADC.c"
  1965                           	line	43
  1966                           	global	__size_of_selectTemp
  1967  0005                     	__size_of_selectTemp	equ	__end_of_selectTemp-_selectTemp
  1968                           	
  1969  0F0E                     _selectTemp:	
  1970                           	opt	stack 1
  1971                           ; Regs used in _selectTemp: [wreg]
  1972                           	line	44
  1973                           	
  1974  0F0E                     l8606:	
  1975                           ;customADC.c: 44: ADCON0 = 0x80;
  1976  0F0E  3080               	movlw	(080h)
  1977  0F0F  1283               	bcf	status, 5	;RP0=0, select bank0
  1978  0F10  1303               	bcf	status, 6	;RP1=0, select bank0
  1979  0F11  009F               	movwf	(31)	;volatile
  1980                           	line	45
  1981                           	
  1982  0F12                     l3182:	
  1983  0F12  0008               	return
  1984                           	opt stack 0
  1985                           GLOBAL	__end_of_selectTemp
  1986  0F13                     	__end_of_selectTemp:
  1987 ;; =============== function _selectTemp ends ============
  1988                           
  1989                           	signat	_selectTemp,88
  1990                           	global	_eeprom_write
  1991                           psect	text734,local,class=CODE,delta=2
  1992                           global __ptext734
  1993  05C3                     __ptext734:
  1994                           
  1995 ;; *************** function _eeprom_write *****************
  1996 ;; Defined at:
  1997 ;;		line 7 in file "C:\Microchip\HiTech\sources\eewrite.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  addr            1    wreg     unsigned char 
  2000 ;;  value           1    0[BANK1 ] unsigned char 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  addr            1    2[BANK1 ] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      unsigned char 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2012 ;;      Params:         0       0       1       0       0
  2013 ;;      Locals:         0       0       1       0       0
  2014 ;;      Temps:          0       0       1       0       0
  2015 ;;      Totals:         0       0       3       0       0
  2016 ;;Total ram usage:        3 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    5
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_initTemp
  2023 ;;		_getTemp
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           psect	text734
  2027                           	file	"C:\Microchip\HiTech\sources\eewrite.c"
  2028                           	line	7
  2029                           	global	__size_of_eeprom_write
  2030  003B                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
  2031                           	
  2032  05C3                     _eeprom_write:	
  2033                           	opt	stack 1
  2034                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2035                           ;eeprom_write@addr stored from wreg
  2036  05C3  1683               	bsf	status, 5	;RP0=1, select bank1
  2037  05C4  1303               	bcf	status, 6	;RP1=0, select bank1
  2038  05C5  00A2               	movwf	(eeprom_write@addr)^080h
  2039                           	line	8
  2040                           	
  2041  05C6                     l5998:	
  2042  05C6  2DC7               	goto	l5999
  2043                           	
  2044  05C7                     l6000:	
  2045                           	
  2046  05C7                     l5999:	
  2047  05C7  1683               	bsf	status, 5	;RP0=1, select bank3
  2048  05C8  1703               	bsf	status, 6	;RP1=1, select bank3
  2049  05C9  188C               	btfsc	(3169/8)^0180h,(3169)&7
  2050  05CA  2DCC               	goto	u2771
  2051  05CB  2DCD               	goto	u2770
  2052  05CC                     u2771:
  2053  05CC  2DC7               	goto	l5999
  2054  05CD                     u2770:
  2055  05CD  2DCE               	goto	l8390
  2056                           	
  2057  05CE                     l6001:	
  2058                           	
  2059  05CE                     l8390:	
  2060  05CE  1683               	bsf	status, 5	;RP0=1, select bank1
  2061  05CF  1303               	bcf	status, 6	;RP1=0, select bank1
  2062  05D0  0822               	movf	(eeprom_write@addr)^080h,w
  2063  05D1  1283               	bcf	status, 5	;RP0=0, select bank2
  2064  05D2  1703               	bsf	status, 6	;RP1=1, select bank2
  2065  05D3  008D               	movwf	(269)^0100h	;volatile
  2066  05D4  1683               	bsf	status, 5	;RP0=1, select bank1
  2067  05D5  1303               	bcf	status, 6	;RP1=0, select bank1
  2068  05D6  0820               	movf	(eeprom_write@value)^080h,w
  2069  05D7  1283               	bcf	status, 5	;RP0=0, select bank2
  2070  05D8  1703               	bsf	status, 6	;RP1=1, select bank2
  2071  05D9  008C               	movwf	(268)^0100h	;volatile
  2072                           	
  2073  05DA                     l8392:	
  2074  05DA  303F               	movlw	(03Fh)
  2075  05DB  1683               	bsf	status, 5	;RP0=1, select bank1
  2076  05DC  1303               	bcf	status, 6	;RP1=0, select bank1
  2077  05DD  00A1               	movwf	(??_eeprom_write+0)^080h+0
  2078  05DE  0821               	movf	(??_eeprom_write+0)^080h+0,w
  2079  05DF  1683               	bsf	status, 5	;RP0=1, select bank3
  2080  05E0  1703               	bsf	status, 6	;RP1=1, select bank3
  2081  05E1  058C               	andwf	(396)^0180h,f	;volatile
  2082                           	
  2083  05E2                     l8394:	
  2084  05E2  1283               	bcf	status, 5	;RP0=0, select bank0
  2085  05E3  1303               	bcf	status, 6	;RP1=0, select bank0
  2086  05E4  1003               	bcf	(24/8),(24)&7
  2087                           	
  2088  05E5                     l8396:	
  2089  05E5  1F8B               	btfss	(95/8),(95)&7
  2090  05E6  2DE8               	goto	u2781
  2091  05E7  2DE9               	goto	u2780
  2092  05E8                     u2781:
  2093  05E8  2DEA               	goto	l6002
  2094  05E9                     u2780:
  2095                           	
  2096  05E9                     l8398:	
  2097  05E9  1403               	bsf	(24/8),(24)&7
  2098                           	
  2099  05EA                     l6002:	
  2100  05EA  138B               	bcf	(95/8),(95)&7
  2101  05EB  1683               	bsf	status, 5	;RP0=1, select bank3
  2102  05EC  1703               	bsf	status, 6	;RP1=1, select bank3
  2103  05ED  150C               	bsf	(3170/8)^0180h,(3170)&7
  2104                           	
  2105  05EE                     l8400:	
  2106  05EE  3055               	movlw	(055h)
  2107  05EF  008D               	movwf	(397)^0180h	;volatile
  2108  05F0  30AA               	movlw	(0AAh)
  2109  05F1  008D               	movwf	(397)^0180h	;volatile
  2110                           	
  2111  05F2                     l8402:	
  2112  05F2  148C               	bsf	(3169/8)^0180h,(3169)&7
  2113                           	
  2114  05F3                     l8404:	
  2115  05F3  110C               	bcf	(3170/8)^0180h,(3170)&7
  2116                           	
  2117  05F4                     l8406:	
  2118  05F4  1283               	bcf	status, 5	;RP0=0, select bank0
  2119  05F5  1303               	bcf	status, 6	;RP1=0, select bank0
  2120  05F6  1C03               	btfss	(24/8),(24)&7
  2121  05F7  2DF9               	goto	u2791
  2122  05F8  2DFA               	goto	u2790
  2123  05F9                     u2791:
  2124  05F9  2DFD               	goto	l6005
  2125  05FA                     u2790:
  2126                           	
  2127  05FA                     l8408:	
  2128  05FA  178B               	bsf	(95/8),(95)&7
  2129  05FB  2DFD               	goto	l6005
  2130                           	
  2131  05FC                     l6003:	
  2132  05FC  2DFD               	goto	l6005
  2133                           	
  2134  05FD                     l6004:	
  2135                           	line	10
  2136                           ;	Return value of _eeprom_write is never used
  2137                           	
  2138  05FD                     l6005:	
  2139  05FD  0008               	return
  2140                           	opt stack 0
  2141                           GLOBAL	__end_of_eeprom_write
  2142  05FE                     	__end_of_eeprom_write:
  2143 ;; =============== function _eeprom_write ends ============
  2144                           
  2145                           	signat	_eeprom_write,8313
  2146                           	global	_strlen
  2147                           psect	text735,local,class=CODE,delta=2
  2148                           global __ptext735
  2149  069D                     __ptext735:
  2150                           
  2151 ;; *************** function _strlen *****************
  2152 ;; Defined at:
  2153 ;;		line 5 in file "C:\Microchip\HiTech\sources\strlen.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  s               1    wreg     PTR const unsigned char 
  2156 ;;		 -> getPacket@arrStore(50), main@testString(9), 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  s               1    8[BANK1 ] PTR const unsigned char 
  2159 ;;		 -> getPacket@arrStore(50), main@testString(9), 
  2160 ;;  cp              1    9[BANK1 ] PTR const unsigned char 
  2161 ;;		 -> getPacket@arrStore(50), main@testString(9), 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  2    0[BANK1 ] unsigned int 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         0       0       2       0       0
  2172 ;;      Locals:         0       0       2       0       0
  2173 ;;      Temps:          0       0       6       0       0
  2174 ;;      Totals:         0       0      10       0       0
  2175 ;;Total ram usage:       10 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    5
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_writeString
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           psect	text735
  2185                           	file	"C:\Microchip\HiTech\sources\strlen.c"
  2186                           	line	5
  2187                           	global	__size_of_strlen
  2188  0033                     	__size_of_strlen	equ	__end_of_strlen-_strlen
  2189                           	
  2190  069D                     _strlen:	
  2191                           	opt	stack 1
  2192                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  2193                           ;strlen@s stored from wreg
  2194                           	line	8
  2195  069D  1683               	bsf	status, 5	;RP0=1, select bank1
  2196  069E  1303               	bcf	status, 6	;RP1=0, select bank1
  2197  069F  00A8               	movwf	(strlen@s)^080h
  2198                           	
  2199  06A0                     l8364:	
  2200  06A0  0828               	movf	(strlen@s)^080h,w
  2201  06A1  00A2               	movwf	(??_strlen+0)^080h+0
  2202  06A2  0822               	movf	(??_strlen+0)^080h+0,w
  2203  06A3  00A9               	movwf	(strlen@cp)^080h
  2204                           	line	9
  2205  06A4  2EA6               	goto	l8366
  2206                           	
  2207  06A5                     l6683:	
  2208                           	line	10
  2209  06A5  2EA6               	goto	l8366
  2210                           	
  2211  06A6                     l6682:	
  2212                           	line	9
  2213                           	
  2214  06A6                     l8366:	
  2215  06A6  0829               	movf	(strlen@cp)^080h,w
  2216  06A7  0084               	movwf	fsr0
  2217  06A8  3001               	movlw	01h
  2218  06A9  07A9               	addwf	(strlen@cp)^080h,f
  2219  06AA  1383               	bcf	status, 7	;select IRP bank0
  2220  06AB  0880               	movf	indf,f
  2221  06AC  1D03               	skipz
  2222  06AD  2EAF               	goto	u2751
  2223  06AE  2EB0               	goto	u2750
  2224  06AF                     u2751:
  2225  06AF  2EA6               	goto	l8366
  2226  06B0                     u2750:
  2227  06B0  2EB1               	goto	l8368
  2228                           	
  2229  06B1                     l6684:	
  2230                           	line	11
  2231                           	
  2232  06B1                     l8368:	
  2233  06B1  0828               	movf	(strlen@s)^080h,w
  2234  06B2  00A2               	movwf	(??_strlen+0)^080h+0
  2235  06B3  3000               	movlw	((0x0/2))
  2236  06B4  00A3               	movwf	(??_strlen+0)^080h+0+1
  2237  06B5  09A2               	comf	(??_strlen+0)^080h+0,f
  2238  06B6  09A3               	comf	(??_strlen+0)^080h+1,f
  2239  06B7  0AA2               	incf	(??_strlen+0)^080h+0,f
  2240  06B8  1903               	skipnz
  2241  06B9  0AA3               	incf	(??_strlen+0)^080h+1,f
  2242  06BA  0829               	movf	(strlen@cp)^080h,w
  2243  06BB  00A4               	movwf	(??_strlen+2)^080h+0
  2244  06BC  3000               	movlw	((0x0/2))
  2245  06BD  00A5               	movwf	(??_strlen+2)^080h+0+1
  2246  06BE  0822               	movf	0+(??_strlen+0)^080h+0,w
  2247  06BF  0724               	addwf	0+(??_strlen+2)^080h+0,w
  2248  06C0  00A6               	movwf	(??_strlen+4)^080h+0
  2249  06C1  0823               	movf	1+(??_strlen+0)^080h+0,w
  2250  06C2  1803               	skipnc
  2251  06C3  0A23               	incf	1+(??_strlen+0)^080h+0,w
  2252  06C4  0725               	addwf	1+(??_strlen+2)^080h+0,w
  2253  06C5  00A7               	movwf	1+(??_strlen+4)^080h+0
  2254  06C6  0826               	movf	0+(??_strlen+4)^080h+0,w
  2255  06C7  3EFF               	addlw	low(-1)
  2256  06C8  00A0               	movwf	(?_strlen)^080h
  2257  06C9  0827               	movf	1+(??_strlen+4)^080h+0,w
  2258  06CA  1803               	skipnc
  2259  06CB  3E01               	addlw	1
  2260  06CC  3EFF               	addlw	high(-1)
  2261  06CD  00A1               	movwf	1+(?_strlen)^080h
  2262  06CE  2ECF               	goto	l6685
  2263                           	
  2264  06CF                     l8370:	
  2265                           	line	12
  2266                           	
  2267  06CF                     l6685:	
  2268  06CF  0008               	return
  2269                           	opt stack 0
  2270                           GLOBAL	__end_of_strlen
  2271  06D0                     	__end_of_strlen:
  2272 ;; =============== function _strlen ends ============
  2273                           
  2274                           	signat	_strlen,4218
  2275                           	global	_writeByte
  2276                           psect	text736,local,class=CODE,delta=2
  2277                           global __ptext736
  2278  0F41                     __ptext736:
  2279                           
  2280 ;; *************** function _writeByte *****************
  2281 ;; Defined at:
  2282 ;;		line 71 in file "Bluetooth.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  Byte            1    wreg     unsigned char 
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  Byte            1    0[BANK1 ] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;		None               void
  2289 ;; Registers used:
  2290 ;;		wreg
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2296 ;;      Params:         0       0       0       0       0
  2297 ;;      Locals:         0       0       1       0       0
  2298 ;;      Temps:          0       0       0       0       0
  2299 ;;      Totals:         0       0       1       0       0
  2300 ;;Total ram usage:        1 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    5
  2303 ;; This function calls:
  2304 ;;		Nothing
  2305 ;; This function is called by:
  2306 ;;		_writeString
  2307 ;;		_echoBack
  2308 ;;		_displayPacket
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           psect	text736
  2312                           	file	"Bluetooth.c"
  2313                           	line	71
  2314                           	global	__size_of_writeByte
  2315  0011                     	__size_of_writeByte	equ	__end_of_writeByte-_writeByte
  2316                           	
  2317  0F41                     _writeByte:	
  2318                           	opt	stack 1
  2319                           ; Regs used in _writeByte: [wreg]
  2320                           ;writeByte@Byte stored from wreg
  2321  0F41  1683               	bsf	status, 5	;RP0=1, select bank1
  2322  0F42  1303               	bcf	status, 6	;RP1=0, select bank1
  2323  0F43  00A0               	movwf	(writeByte@Byte)^080h
  2324                           	line	75
  2325                           	
  2326  0F44                     l8348:	
  2327                           ;Bluetooth.c: 75: while(!TXIF);
  2328  0F44  2F45               	goto	l772
  2329                           	
  2330  0F45                     l773:	
  2331                           	
  2332  0F45                     l772:	
  2333  0F45  1283               	bcf	status, 5	;RP0=0, select bank0
  2334  0F46  1E0C               	btfss	(100/8),(100)&7
  2335  0F47  2F49               	goto	u2721
  2336  0F48  2F4A               	goto	u2720
  2337  0F49                     u2721:
  2338  0F49  2F45               	goto	l772
  2339  0F4A                     u2720:
  2340  0F4A  2F4B               	goto	l8350
  2341                           	
  2342  0F4B                     l774:	
  2343                           	line	78
  2344                           	
  2345  0F4B                     l8350:	
  2346                           ;Bluetooth.c: 78: TXREG = Byte;
  2347  0F4B  1683               	bsf	status, 5	;RP0=1, select bank1
  2348  0F4C  1303               	bcf	status, 6	;RP1=0, select bank1
  2349  0F4D  0820               	movf	(writeByte@Byte)^080h,w
  2350  0F4E  1283               	bcf	status, 5	;RP0=0, select bank0
  2351  0F4F  1303               	bcf	status, 6	;RP1=0, select bank0
  2352  0F50  0099               	movwf	(25)	;volatile
  2353                           	line	79
  2354                           	
  2355  0F51                     l775:	
  2356  0F51  0008               	return
  2357                           	opt stack 0
  2358                           GLOBAL	__end_of_writeByte
  2359  0F52                     	__end_of_writeByte:
  2360 ;; =============== function _writeByte ends ============
  2361                           
  2362                           	signat	_writeByte,4216
  2363                           	global	_initUSART
  2364                           psect	text737,local,class=CODE,delta=2
  2365                           global __ptext737
  2366  0F52                     __ptext737:
  2367                           
  2368 ;; *************** function _initUSART *****************
  2369 ;; Defined at:
  2370 ;;		line 16 in file "Bluetooth.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;		None               void
  2377 ;; Registers used:
  2378 ;;		wreg
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0
  2387 ;;      Totals:         0       0       0       0       0
  2388 ;;Total ram usage:        0 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    5
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           psect	text737
  2398                           	file	"Bluetooth.c"
  2399                           	line	16
  2400                           	global	__size_of_initUSART
  2401  0012                     	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  2402                           	
  2403  0F52                     _initUSART:	
  2404                           	opt	stack 2
  2405                           ; Regs used in _initUSART: [wreg]
  2406                           	line	18
  2407                           	
  2408  0F52                     l8338:	
  2409                           ;Bluetooth.c: 18: TRISC6 = 0;
  2410  0F52  1683               	bsf	status, 5	;RP0=1, select bank1
  2411  0F53  1303               	bcf	status, 6	;RP1=0, select bank1
  2412  0F54  1307               	bcf	(1086/8)^080h,(1086)&7
  2413                           	line	21
  2414                           ;Bluetooth.c: 21: TRISC7 = 1;
  2415  0F55  1787               	bsf	(1087/8)^080h,(1087)&7
  2416                           	line	34
  2417                           	
  2418  0F56                     l8340:	
  2419                           ;Bluetooth.c: 34: RCSTA = 0x90;
  2420  0F56  3090               	movlw	(090h)
  2421  0F57  1283               	bcf	status, 5	;RP0=0, select bank0
  2422  0F58  1303               	bcf	status, 6	;RP1=0, select bank0
  2423  0F59  0098               	movwf	(24)	;volatile
  2424                           	line	48
  2425                           ;Bluetooth.c: 48: TXSTA = 0x24;
  2426  0F5A  3024               	movlw	(024h)
  2427  0F5B  1683               	bsf	status, 5	;RP0=1, select bank1
  2428  0F5C  1303               	bcf	status, 6	;RP1=0, select bank1
  2429  0F5D  0098               	movwf	(152)^080h	;volatile
  2430                           	line	56
  2431                           ;Bluetooth.c: 56: SPBRG = 129;
  2432  0F5E  3081               	movlw	(081h)
  2433  0F5F  0099               	movwf	(153)^080h	;volatile
  2434                           	line	57
  2435                           	
  2436  0F60                     l8342:	
  2437                           ;Bluetooth.c: 57: GIE = 1;
  2438  0F60  178B               	bsf	(95/8),(95)&7
  2439                           	line	58
  2440                           	
  2441  0F61                     l8344:	
  2442                           ;Bluetooth.c: 58: PEIE = 1;
  2443  0F61  170B               	bsf	(94/8),(94)&7
  2444                           	line	59
  2445                           	
  2446  0F62                     l8346:	
  2447                           ;Bluetooth.c: 59: RCIE = 1;
  2448  0F62  168C               	bsf	(1125/8)^080h,(1125)&7
  2449                           	line	61
  2450                           	
  2451  0F63                     l769:	
  2452  0F63  0008               	return
  2453                           	opt stack 0
  2454                           GLOBAL	__end_of_initUSART
  2455  0F64                     	__end_of_initUSART:
  2456 ;; =============== function _initUSART ends ============
  2457                           
  2458                           	signat	_initUSART,88
  2459                           	global	_isr
  2460                           psect	text738,local,class=CODE,delta=2
  2461                           global __ptext738
  2462  0FC4                     __ptext738:
  2463                           
  2464 ;; *************** function _isr *****************
  2465 ;; Defined at:
  2466 ;;		line 35 in file "main.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;		None               void
  2473 ;; Registers used:
  2474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         0       0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0
  2482 ;;      Temps:          0       4       0       0       0
  2483 ;;      Totals:         0       4       0       0       0
  2484 ;;Total ram usage:        4 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    4
  2487 ;; This function calls:
  2488 ;;		_getPacket
  2489 ;; This function is called by:
  2490 ;;		Interrupt level 1
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           psect	text738
  2494                           	file	"main.c"
  2495                           	line	35
  2496                           	global	__size_of_isr
  2497  001D                     	__size_of_isr	equ	__end_of_isr-_isr
  2498                           	
  2499  0FC4                     _isr:	
  2500                           	opt	stack 1
  2501                           ; Regs used in _isr: [allreg]
  2502                           psect	intentry,class=CODE,delta=2
  2503                           global __pintentry
  2504  0004                     __pintentry:
  2505                           global interrupt_function
  2506  0004                     interrupt_function:
  2507                           	global saved_w
  2508  007E                     	saved_w	set	btemp+0
  2509  0004  00FE               	movwf	saved_w
  2510  0005  0E03               	swapf	status,w
  2511  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  2512  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  2513  0008  00E2               	movwf	(??_isr+0)
  2514  0009  0804               	movf	fsr0,w
  2515  000A  00E3               	movwf	(??_isr+1)
  2516  000B  080A               	movf	pclath,w
  2517  000C  00E4               	movwf	(??_isr+2)
  2518  000D  087F               	movf	btemp+1,w
  2519  000E  00E5               	movwf	(??_isr+3)
  2520  000F  120A  158A  2FC4   	ljmp	_isr
  2521                           psect	text738
  2522                           	line	36
  2523                           	
  2524  0FC4                     i1l8610:	
  2525                           ;main.c: 36: if(RCIF && RCIE){
  2526  0FC4  1E8C               	btfss	(101/8),(101)&7
  2527  0FC5  2FC7               	goto	u304_21
  2528  0FC6  2FC8               	goto	u304_20
  2529  0FC7                     u304_21:
  2530  0FC7  2FD4               	goto	i1l3977
  2531  0FC8                     u304_20:
  2532                           	
  2533  0FC8                     i1l8612:	
  2534  0FC8  1683               	bsf	status, 5	;RP0=1, select bank1
  2535  0FC9  1303               	bcf	status, 6	;RP1=0, select bank1
  2536  0FCA  1E8C               	btfss	(1125/8)^080h,(1125)&7
  2537  0FCB  2FCD               	goto	u305_21
  2538  0FCC  2FCE               	goto	u305_20
  2539  0FCD                     u305_21:
  2540  0FCD  2FD4               	goto	i1l3977
  2541  0FCE                     u305_20:
  2542                           	line	37
  2543                           	
  2544  0FCE                     i1l8614:	
  2545                           ;main.c: 37: getPacket();
  2546  0FCE  120A  118A  22CB   	fcall	_getPacket
              120A  158A         
  2547  0FD3  2FD4               	goto	i1l3977
  2548                           	line	38
  2549                           	
  2550  0FD4                     i1l3976:	
  2551                           	line	39
  2552                           	
  2553  0FD4                     i1l3977:	
  2554  0FD4  1283               	bcf	status, 5	;RP0=0, select bank0
  2555  0FD5  1303               	bcf	status, 6	;RP1=0, select bank0
  2556  0FD6  0865               	movf	(??_isr+3),w
  2557  0FD7  00FF               	movwf	btemp+1
  2558  0FD8  0864               	movf	(??_isr+2),w
  2559  0FD9  008A               	movwf	pclath
  2560  0FDA  0863               	movf	(??_isr+1),w
  2561  0FDB  0084               	movwf	fsr0
  2562  0FDC  0E62               	swapf	(??_isr+0)^00h,w
  2563  0FDD  0083               	movwf	status
  2564  0FDE  0EFE               	swapf	saved_w,f
  2565  0FDF  0E7E               	swapf	saved_w,w
  2566  0FE0  0009               	retfie
  2567                           	opt stack 0
  2568                           GLOBAL	__end_of_isr
  2569  0FE1                     	__end_of_isr:
  2570 ;; =============== function _isr ends ============
  2571                           
  2572                           	signat	_isr,88
  2573                           	global	_getPacket
  2574                           psect	text739,local,class=CODE,delta=2
  2575                           global __ptext739
  2576  02CB                     __ptext739:
  2577                           
  2578 ;; *************** function _getPacket *****************
  2579 ;; Defined at:
  2580 ;;		line 77 in file "main.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;		None
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  arrStore       50   16[BANK0 ] unsigned char [50]
  2585 ;; Return value:  Size  Location     Type
  2586 ;;		None               void
  2587 ;; Registers used:
  2588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2594 ;;      Params:         0       0       0       0       0
  2595 ;;      Locals:         0      50       0       0       0
  2596 ;;      Temps:          0       4       0       0       0
  2597 ;;      Totals:         0      54       0       0       0
  2598 ;;Total ram usage:       54 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    3
  2601 ;; This function calls:
  2602 ;;		i1_eeprom_write
  2603 ;;		_readString
  2604 ;;		_eeprom_read
  2605 ;;		i1_writeByte
  2606 ;;		_parsePacket
  2607 ;;		_validatePacket
  2608 ;;		_getCommands
  2609 ;;		_setCommands
  2610 ;; This function is called by:
  2611 ;;		_isr
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           psect	text739
  2615                           	file	"main.c"
  2616                           	line	77
  2617                           	global	__size_of_getPacket
  2618  006F                     	__size_of_getPacket	equ	__end_of_getPacket-_getPacket
  2619                           	
  2620  02CB                     _getPacket:	
  2621                           	opt	stack 1
  2622                           ; Regs used in _getPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2623                           	line	79
  2624                           	
  2625  02CB                     i1l8616:	
  2626                           ;main.c: 79: eeprom_write(calcCSByteAddr,0x00);
  2627  02CB  01FA               	clrf	(?i1_eeprom_write)
  2628  02CC  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2629  02CD  0084               	movwf	fsr0
  2630  02CE  120A  118A  240B   	fcall	stringdir
              120A  118A         
  2631  02D3  120A  118A  2701   	fcall	i1_eeprom_write
              120A  118A         
  2632                           	line	81
  2633                           	
  2634  02D8                     i1l8618:	
  2635                           ;main.c: 81: char arrStore[50] = {0};
  2636  02D8  3030               	movlw	(getPacket@arrStore)&0ffh
  2637  02D9  0084               	movwf	fsr0
  2638  02DA  3090               	movlw	low(getPacket@F1177)
  2639  02DB  1283               	bcf	status, 5	;RP0=0, select bank0
  2640  02DC  1303               	bcf	status, 6	;RP1=0, select bank0
  2641  02DD  00AC               	movwf	(??_getPacket+0)+0
  2642  02DE  0804               	movf	fsr0,w
  2643  02DF  00AD               	movwf	((??_getPacket+0)+0+1)
  2644  02E0  3032               	movlw	50
  2645  02E1  00AE               	movwf	((??_getPacket+0)+0+2)
  2646  02E2                     u306_20:
  2647  02E2  082C               	movf	(??_getPacket+0)+0,w
  2648  02E3  0084               	movwf	fsr0
  2649  02E4  1783               	bsf	status, 7	;select IRP bank3
  2650                           	
  2651  02E5  0800               	movf	indf,w
  2652  02E6  00AF               	movwf	((??_getPacket+0)+0+3)
  2653  02E7  0AAC               	incf	(??_getPacket+0)+0,f
  2654  02E8  082D               	movf	((??_getPacket+0)+0+1),w
  2655  02E9  0084               	movwf	fsr0
  2656  02EA  1383               	bcf	status, 7	;select IRP bank0
  2657                           	
  2658  02EB  082F               	movf	((??_getPacket+0)+0+3),w
  2659  02EC  0080               	movwf	indf
  2660  02ED  0AAD               	incf	((??_getPacket+0)+0+1),f
  2661  02EE  0BAE               	decfsz	((??_getPacket+0)+0+2),f
  2662  02EF  2AE2               	goto	u306_20
  2663                           	line	83
  2664                           	
  2665  02F0                     i1l8620:	
  2666                           ;main.c: 83: readString(arrStore);
  2667  02F0  3030               	movlw	(getPacket@arrStore)&0ffh
  2668  02F1  120A  118A  24D5   	fcall	_readString
              120A  118A         
  2669                           	line	93
  2670                           	
  2671  02F6                     i1l8622:	
  2672                           ;main.c: 93: writeByte(eeprom_read(RXLenAddr));
  2673  02F6  3040               	movlw	(_RXLenAddr-__stringbase)
  2674  02F7  0084               	movwf	fsr0
  2675  02F8  120A  118A  240B   	fcall	stringdir
              120A  118A         
  2676  02FD  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  2677  0302  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  2678                           	line	95
  2679                           	
  2680  0307                     i1l8624:	
  2681                           ;main.c: 95: parsePacket(arrStore);
  2682  0307  3030               	movlw	(getPacket@arrStore)&0ffh
  2683  0308  120A  118A  2015   	fcall	_parsePacket
              120A  118A         
  2684                           	line	98
  2685                           	
  2686  030D                     i1l8626:	
  2687                           ;main.c: 98: if(validatePacket()){
  2688  030D  120A  118A  2530   	fcall	_validatePacket
              120A  118A         
  2689  0312  1283               	bcf	status, 5	;RP0=0, select bank0
  2690  0313  1303               	bcf	status, 6	;RP1=0, select bank0
  2691  0314  0825               	movf	(1+(?_validatePacket)),w
  2692  0315  0424               	iorwf	(0+(?_validatePacket)),w
  2693  0316  1903               	skipnz
  2694  0317  2B19               	goto	u307_21
  2695  0318  2B1A               	goto	u307_20
  2696  0319                     u307_21:
  2697  0319  2B39               	goto	i1l3994
  2698  031A                     u307_20:
  2699                           	line	101
  2700                           	
  2701  031A                     i1l8628:	
  2702                           ;main.c: 101: if(eeprom_read(rwByteAddr) == 0){
  2703  031A  3052               	movlw	(_rwByteAddr-__stringbase)
  2704  031B  0084               	movwf	fsr0
  2705  031C  120A  118A  240B   	fcall	stringdir
              120A  118A         
  2706  0321  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  2707  0326  3800               	iorlw	0
  2708  0327  1D03               	skipz
  2709  0328  2B2A               	goto	u308_21
  2710  0329  2B2B               	goto	u308_20
  2711  032A                     u308_21:
  2712  032A  2B31               	goto	i1l8632
  2713  032B                     u308_20:
  2714                           	line	102
  2715                           	
  2716  032B                     i1l8630:	
  2717                           ;main.c: 102: getCommands();
  2718  032B  120A  118A  27D6   	fcall	_getCommands
              120A  118A         
  2719                           	line	103
  2720                           ;main.c: 103: }else{
  2721  0330  2B39               	goto	i1l3994
  2722                           	
  2723  0331                     i1l3991:	
  2724                           	line	104
  2725                           	
  2726  0331                     i1l8632:	
  2727                           ;main.c: 104: setCommands();
  2728  0331  120A  118A  2003   	fcall	_setCommands
              120A  118A         
  2729  0336  2B39               	goto	i1l3994
  2730                           	line	105
  2731                           	
  2732  0337                     i1l3992:	
  2733                           	line	107
  2734                           ;main.c: 105: }
  2735                           ;main.c: 107: }else{
  2736  0337  2B39               	goto	i1l3994
  2737                           	
  2738  0338                     i1l3990:	
  2739  0338  2B39               	goto	i1l3994
  2740                           	line	110
  2741                           	
  2742  0339                     i1l3993:	
  2743                           	line	111
  2744                           	
  2745  0339                     i1l3994:	
  2746  0339  0008               	return
  2747                           	opt stack 0
  2748                           GLOBAL	__end_of_getPacket
  2749  033A                     	__end_of_getPacket:
  2750 ;; =============== function _getPacket ends ============
  2751                           
  2752                           	signat	_getPacket,88
  2753                           	global	_readString
  2754                           psect	text740,local,class=CODE,delta=2
  2755                           global __ptext740
  2756  04D5                     __ptext740:
  2757                           
  2758 ;; *************** function _readString *****************
  2759 ;; Defined at:
  2760 ;;		line 162 in file "Bluetooth.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  readStorage     1    wreg     PTR unsigned char 
  2763 ;;		 -> getPacket@arrStore(50), 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  readStorage     1    2[BANK0 ] PTR unsigned char 
  2766 ;;		 -> getPacket@arrStore(50), 
  2767 ;;  i               2    3[BANK0 ] unsigned int 
  2768 ;;  ch              1    5[BANK0 ] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;		None               void
  2771 ;; Registers used:
  2772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2778 ;;      Params:         0       0       0       0       0
  2779 ;;      Locals:         0       4       0       0       0
  2780 ;;      Temps:          0       2       0       0       0
  2781 ;;      Totals:         0       6       0       0       0
  2782 ;;Total ram usage:        6 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    2
  2785 ;; This function calls:
  2786 ;;		_readByte
  2787 ;;		i1_writeByte
  2788 ;;		i1_eeprom_write
  2789 ;; This function is called by:
  2790 ;;		_getPacket
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           psect	text740
  2794                           	file	"Bluetooth.c"
  2795                           	line	162
  2796                           	global	__size_of_readString
  2797  005B                     	__size_of_readString	equ	__end_of_readString-_readString
  2798                           	
  2799  04D5                     _readString:	
  2800                           	opt	stack 1
  2801                           ; Regs used in _readString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2802                           ;readString@readStorage stored from wreg
  2803                           	line	164
  2804  04D5  1283               	bcf	status, 5	;RP0=0, select bank0
  2805  04D6  1303               	bcf	status, 6	;RP1=0, select bank0
  2806  04D7  00A2               	movwf	(readString@readStorage)
  2807                           	
  2808  04D8                     i1l8372:	
  2809                           ;Bluetooth.c: 164: unsigned int i = 0;
  2810  04D8  01A3               	clrf	(readString@i)
  2811  04D9  01A4               	clrf	(readString@i+1)
  2812                           	line	168
  2813                           	
  2814  04DA                     i1l8374:	
  2815                           ;Bluetooth.c: 166: unsigned char ch;
  2816                           ;Bluetooth.c: 168: ch = readByte();
  2817  04DA  120A  158A  2777   	fcall	_readByte
              120A  118A         
  2818  04DF  1283               	bcf	status, 5	;RP0=0, select bank0
  2819  04E0  1303               	bcf	status, 6	;RP1=0, select bank0
  2820  04E1  00A0               	movwf	(??_readString+0)+0
  2821  04E2  0820               	movf	(??_readString+0)+0,w
  2822  04E3  00A5               	movwf	(readString@ch)
  2823                           	line	169
  2824                           	
  2825  04E4                     i1l8376:	
  2826                           ;Bluetooth.c: 169: writeByte(ch);
  2827  04E4  0825               	movf	(readString@ch),w
  2828  04E5  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  2829                           	line	171
  2830                           ;Bluetooth.c: 171: while(ch != userEndByte)
  2831  04EA  2D0E               	goto	i1l8386
  2832                           	
  2833  04EB                     i1l795:	
  2834                           	line	174
  2835                           	
  2836  04EB                     i1l8378:	
  2837                           ;Bluetooth.c: 172: {
  2838                           ;Bluetooth.c: 174: readStorage[i] = ch;
  2839  04EB  1283               	bcf	status, 5	;RP0=0, select bank0
  2840  04EC  1303               	bcf	status, 6	;RP1=0, select bank0
  2841  04ED  0825               	movf	(readString@ch),w
  2842  04EE  00A0               	movwf	(??_readString+0)+0
  2843  04EF  0823               	movf	(readString@i),w
  2844  04F0  0722               	addwf	(readString@readStorage),w
  2845  04F1  00A1               	movwf	(??_readString+1)+0
  2846  04F2  0821               	movf	0+(??_readString+1)+0,w
  2847  04F3  0084               	movwf	fsr0
  2848  04F4  0820               	movf	(??_readString+0)+0,w
  2849  04F5  1383               	bcf	status, 7	;select IRP bank0
  2850  04F6  0080               	movwf	indf
  2851                           	line	176
  2852                           	
  2853  04F7                     i1l8380:	
  2854                           ;Bluetooth.c: 176: i++;
  2855  04F7  3001               	movlw	low(01h)
  2856  04F8  07A3               	addwf	(readString@i),f
  2857  04F9  1803               	skipnc
  2858  04FA  0AA4               	incf	(readString@i+1),f
  2859  04FB  3000               	movlw	high(01h)
  2860  04FC  07A4               	addwf	(readString@i+1),f
  2861                           	line	178
  2862                           	
  2863  04FD                     i1l8382:	
  2864                           ;Bluetooth.c: 178: ch = readByte();
  2865  04FD  120A  158A  2777   	fcall	_readByte
              120A  118A         
  2866  0502  1283               	bcf	status, 5	;RP0=0, select bank0
  2867  0503  1303               	bcf	status, 6	;RP1=0, select bank0
  2868  0504  00A0               	movwf	(??_readString+0)+0
  2869  0505  0820               	movf	(??_readString+0)+0,w
  2870  0506  00A5               	movwf	(readString@ch)
  2871                           	line	179
  2872                           	
  2873  0507                     i1l8384:	
  2874                           ;Bluetooth.c: 179: writeByte(ch);
  2875  0507  0825               	movf	(readString@ch),w
  2876  0508  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  2877  050D  2D0E               	goto	i1l8386
  2878                           	line	180
  2879                           	
  2880  050E                     i1l794:	
  2881                           	line	171
  2882                           	
  2883  050E                     i1l8386:	
  2884  050E  305E               	movlw	(_userEndByte-__stringbase)
  2885  050F  0084               	movwf	fsr0
  2886  0510  120A  118A  240B   	fcall	stringdir
              120A  118A         
  2887  0515  1283               	bcf	status, 5	;RP0=0, select bank0
  2888  0516  1303               	bcf	status, 6	;RP1=0, select bank0
  2889  0517  00A0               	movwf	(??_readString+0)+0
  2890  0518  0825               	movf	(readString@ch),w
  2891  0519  0620               	xorwf	(??_readString+0)+0,w
  2892  051A  1D03               	skipz
  2893  051B  2D1D               	goto	u276_21
  2894  051C  2D1E               	goto	u276_20
  2895  051D                     u276_21:
  2896  051D  2CEB               	goto	i1l8378
  2897  051E                     u276_20:
  2898  051E  2D1F               	goto	i1l8388
  2899                           	
  2900  051F                     i1l796:	
  2901                           	line	185
  2902                           	
  2903  051F                     i1l8388:	
  2904                           ;Bluetooth.c: 180: }
  2905                           ;Bluetooth.c: 185: eeprom_write(RXLenAddr,i);
  2906  051F  0823               	movf	(readString@i),w
  2907  0520  00A0               	movwf	(??_readString+0)+0
  2908  0521  0820               	movf	(??_readString+0)+0,w
  2909  0522  00FA               	movwf	(?i1_eeprom_write)
  2910  0523  3040               	movlw	(_RXLenAddr-__stringbase)
  2911  0524  0084               	movwf	fsr0
  2912  0525  120A  118A  240B   	fcall	stringdir
              120A  118A         
  2913  052A  120A  118A  2701   	fcall	i1_eeprom_write
              120A  118A         
  2914                           	line	188
  2915                           	
  2916  052F                     i1l797:	
  2917  052F  0008               	return
  2918                           	opt stack 0
  2919                           GLOBAL	__end_of_readString
  2920  0530                     	__end_of_readString:
  2921 ;; =============== function _readString ends ============
  2922                           
  2923                           	signat	_readString,4216
  2924                           	global	_validatePacket
  2925                           psect	text741,local,class=CODE,delta=2
  2926                           global __ptext741
  2927  0530                     __ptext741:
  2928                           
  2929 ;; *************** function _validatePacket *****************
  2930 ;; Defined at:
  2931 ;;		line 236 in file "Packet.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;		None
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;		None
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  2    4[BANK0 ] int 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         0       2       0       0       0
  2946 ;;      Locals:         0       0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0
  2948 ;;      Totals:         0       2       0       0       0
  2949 ;;Total ram usage:        2 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    2
  2952 ;; This function calls:
  2953 ;;		_checkStartByte
  2954 ;;		_checkRWByte
  2955 ;;		_checkCMDByte
  2956 ;;		_checkDataFrames
  2957 ;;		_addDataToCheckSum
  2958 ;;		_checkCS
  2959 ;; This function is called by:
  2960 ;;		_getPacket
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           psect	text741
  2964                           	file	"Packet.c"
  2965                           	line	236
  2966                           	global	__size_of_validatePacket
  2967  0051                     	__size_of_validatePacket	equ	__end_of_validatePacket-_validatePacket
  2968                           	
  2969  0530                     _validatePacket:	
  2970                           	opt	stack 1
  2971                           ; Regs used in _validatePacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2972                           	line	238
  2973                           	
  2974  0530                     i1l8566:	
  2975                           ;Packet.c: 238: if(checkStartByte() && checkRWByte() && checkCMDByte() && checkDataFrame
                                 s()){
  2976  0530  120A  118A  2471   	fcall	_checkStartByte
              120A  118A         
  2977  0535  1283               	bcf	status, 5	;RP0=0, select bank0
  2978  0536  1303               	bcf	status, 6	;RP1=0, select bank0
  2979  0537  0821               	movf	(1+(?_checkStartByte)),w
  2980  0538  0420               	iorwf	(0+(?_checkStartByte)),w
  2981  0539  1903               	skipnz
  2982  053A  2D3C               	goto	u297_21
  2983  053B  2D3D               	goto	u297_20
  2984  053C                     u297_21:
  2985  053C  2D7B               	goto	i1l8580
  2986  053D                     u297_20:
  2987                           	
  2988  053D                     i1l8568:	
  2989  053D  120A  118A  233A   	fcall	_checkRWByte
              120A  118A         
  2990  0542  1283               	bcf	status, 5	;RP0=0, select bank0
  2991  0543  1303               	bcf	status, 6	;RP1=0, select bank0
  2992  0544  0821               	movf	(1+(?_checkRWByte)),w
  2993  0545  0420               	iorwf	(0+(?_checkRWByte)),w
  2994  0546  1903               	skipnz
  2995  0547  2D49               	goto	u298_21
  2996  0548  2D4A               	goto	u298_20
  2997  0549                     u298_21:
  2998  0549  2D7B               	goto	i1l8580
  2999  054A                     u298_20:
  3000                           	
  3001  054A                     i1l8570:	
  3002  054A  120A  118A  225B   	fcall	_checkCMDByte
              120A  118A         
  3003  054F  1283               	bcf	status, 5	;RP0=0, select bank0
  3004  0550  1303               	bcf	status, 6	;RP1=0, select bank0
  3005  0551  0821               	movf	(1+(?_checkCMDByte)),w
  3006  0552  0420               	iorwf	(0+(?_checkCMDByte)),w
  3007  0553  1903               	skipnz
  3008  0554  2D56               	goto	u299_21
  3009  0555  2D57               	goto	u299_20
  3010  0556                     u299_21:
  3011  0556  2D7B               	goto	i1l8580
  3012  0557                     u299_20:
  3013                           	
  3014  0557                     i1l8572:	
  3015  0557  120A  118A  214A   	fcall	_checkDataFrames
              120A  118A         
  3016  055C  0873               	movf	(1+(?_checkDataFrames)),w
  3017  055D  0472               	iorwf	(0+(?_checkDataFrames)),w
  3018  055E  1903               	skipnz
  3019  055F  2D61               	goto	u300_21
  3020  0560  2D62               	goto	u300_20
  3021  0561                     u300_21:
  3022  0561  2D7B               	goto	i1l8580
  3023  0562                     u300_20:
  3024                           	line	240
  3025                           	
  3026  0562                     i1l8574:	
  3027                           ;Packet.c: 240: addDataToCheckSum();
  3028  0562  120A  118A  21E4   	fcall	_addDataToCheckSum
              120A  118A         
  3029                           	line	242
  3030                           ;Packet.c: 242: if(checkCS())
  3031  0567  120A  118A  2669   	fcall	_checkCS
              120A  118A         
  3032  056C  0873               	movf	(1+(?_checkCS)),w
  3033  056D  0472               	iorwf	(0+(?_checkCS)),w
  3034  056E  1903               	skipnz
  3035  056F  2D71               	goto	u301_21
  3036  0570  2D72               	goto	u301_20
  3037  0571                     u301_21:
  3038  0571  2D7B               	goto	i1l8580
  3039  0572                     u301_20:
  3040                           	line	244
  3041                           	
  3042  0572                     i1l8576:	
  3043                           ;Packet.c: 244: return 1;
  3044  0572  3001               	movlw	low(01h)
  3045  0573  1283               	bcf	status, 5	;RP0=0, select bank0
  3046  0574  1303               	bcf	status, 6	;RP1=0, select bank0
  3047  0575  00A4               	movwf	(?_validatePacket)
  3048  0576  3000               	movlw	high(01h)
  3049  0577  00A5               	movwf	((?_validatePacket))+1
  3050  0578  2D80               	goto	i1l1621
  3051                           	
  3052  0579                     i1l8578:	
  3053  0579  2D80               	goto	i1l1621
  3054                           	
  3055  057A                     i1l1620:	
  3056  057A  2D7B               	goto	i1l8580
  3057                           	line	245
  3058                           	
  3059  057B                     i1l1619:	
  3060                           	line	247
  3061                           	
  3062  057B                     i1l8580:	
  3063                           ;Packet.c: 245: }
  3064                           ;Packet.c: 247: return 0;
  3065  057B  1283               	bcf	status, 5	;RP0=0, select bank0
  3066  057C  1303               	bcf	status, 6	;RP1=0, select bank0
  3067  057D  01A4               	clrf	(?_validatePacket)
  3068  057E  01A5               	clrf	(?_validatePacket+1)
  3069  057F  2D80               	goto	i1l1621
  3070                           	
  3071  0580                     i1l8582:	
  3072                           	line	249
  3073                           	
  3074  0580                     i1l1621:	
  3075  0580  0008               	return
  3076                           	opt stack 0
  3077                           GLOBAL	__end_of_validatePacket
  3078  0581                     	__end_of_validatePacket:
  3079 ;; =============== function _validatePacket ends ============
  3080                           
  3081                           	signat	_validatePacket,90
  3082                           	global	_parsePacket
  3083                           psect	text742,local,class=CODE,delta=2
  3084                           global __ptext742
  3085  0015                     __ptext742:
  3086                           
  3087 ;; *************** function _parsePacket *****************
  3088 ;; Defined at:
  3089 ;;		line 114 in file "Packet.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  dataPacket      1    wreg     PTR unsigned char 
  3092 ;;		 -> getPacket@arrStore(50), 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  dataPacket      1   11[BANK0 ] PTR unsigned char 
  3095 ;;		 -> getPacket@arrStore(50), 
  3096 ;;  i               1   10[BANK0 ] unsigned char 
  3097 ;;  dataCounter     2    8[BANK0 ] int 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;		None               void
  3100 ;; Registers used:
  3101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3107 ;;      Params:         0       0       0       0       0
  3108 ;;      Locals:         0       4       0       0       0
  3109 ;;      Temps:          0       4       0       0       0
  3110 ;;      Totals:         0       8       0       0       0
  3111 ;;Total ram usage:        8 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    2
  3114 ;; This function calls:
  3115 ;;		_checkLength
  3116 ;;		_checkEven
  3117 ;;		_makeHexByte
  3118 ;;		i1_eeprom_write
  3119 ;;		i1_strlen
  3120 ;;		_eeprom_read
  3121 ;; This function is called by:
  3122 ;;		_getPacket
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           psect	text742
  3126                           	file	"Packet.c"
  3127                           	line	114
  3128                           	global	__size_of_parsePacket
  3129  0135                     	__size_of_parsePacket	equ	__end_of_parsePacket-_parsePacket
  3130                           	
  3131  0015                     _parsePacket:	
  3132                           	opt	stack 1
  3133                           ; Regs used in _parsePacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3134                           ;parsePacket@dataPacket stored from wreg
  3135                           	line	116
  3136  0015  1283               	bcf	status, 5	;RP0=0, select bank0
  3137  0016  1303               	bcf	status, 6	;RP1=0, select bank0
  3138  0017  00AB               	movwf	(parsePacket@dataPacket)
  3139                           	
  3140  0018                     i1l8484:	
  3141                           ;Packet.c: 116: int dataCounter = 0;
  3142  0018  01A8               	clrf	(parsePacket@dataCounter)
  3143  0019  01A9               	clrf	(parsePacket@dataCounter+1)
  3144                           	line	119
  3145                           	
  3146  001A                     i1l8486:	
  3147                           ;Packet.c: 119: if (checkLength() && checkEven()) {
  3148  001A  120A  118A  2732   	fcall	_checkLength
              120A  118A         
  3149  001F  0873               	movf	(1+(?_checkLength)),w
  3150  0020  0472               	iorwf	(0+(?_checkLength)),w
  3151  0021  1903               	skipnz
  3152  0022  2824               	goto	u289_21
  3153  0023  2825               	goto	u289_20
  3154  0024                     u289_21:
  3155  0024  2949               	goto	i1l1598
  3156  0025                     u289_20:
  3157                           	
  3158  0025                     i1l8488:	
  3159  0025  120A  118A  278A   	fcall	_checkEven
              120A  118A         
  3160  002A  0873               	movf	(1+(?_checkEven)),w
  3161  002B  0472               	iorwf	(0+(?_checkEven)),w
  3162  002C  1903               	skipnz
  3163  002D  282F               	goto	u290_21
  3164  002E  2830               	goto	u290_20
  3165  002F                     u290_21:
  3166  002F  2949               	goto	i1l1598
  3167  0030                     u290_20:
  3168                           	line	122
  3169                           	
  3170  0030                     i1l8490:	
  3171                           ;Packet.c: 122: eeprom_write(startByteAddr, makeHexByte(dataPacket[0], dataPacket[1]));
  3172  0030  1283               	bcf	status, 5	;RP0=0, select bank0
  3173  0031  1303               	bcf	status, 6	;RP1=0, select bank0
  3174  0032  082B               	movf	(parsePacket@dataPacket),w
  3175  0033  3E01               	addlw	01h
  3176  0034  0084               	movwf	fsr0
  3177  0035  1383               	bcf	status, 7	;select IRP bank0
  3178  0036  0800               	movf	indf,w
  3179  0037  00A4               	movwf	(??_parsePacket+0)+0
  3180  0038  0824               	movf	(??_parsePacket+0)+0,w
  3181  0039  00FD               	movwf	(?_makeHexByte)
  3182  003A  082B               	movf	(parsePacket@dataPacket),w
  3183  003B  0084               	movwf	fsr0
  3184  003C  0800               	movf	indf,w
  3185  003D  120A  118A  27B1   	fcall	_makeHexByte
              120A  118A         
  3186  0042  1283               	bcf	status, 5	;RP0=0, select bank0
  3187  0043  1303               	bcf	status, 6	;RP1=0, select bank0
  3188  0044  00A5               	movwf	(??_parsePacket+1)+0
  3189  0045  0825               	movf	(??_parsePacket+1)+0,w
  3190  0046  00FA               	movwf	(?i1_eeprom_write)
  3191  0047  3053               	movlw	(_startByteAddr-__stringbase)
  3192  0048  0084               	movwf	fsr0
  3193  0049  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3194  004E  120A  118A  2701   	fcall	i1_eeprom_write
              120A  118A         
  3195                           	line	124
  3196                           ;Packet.c: 124: eeprom_write(rwByteAddr, makeHexByte(dataPacket[2], dataPacket[3]));
  3197  0053  1283               	bcf	status, 5	;RP0=0, select bank0
  3198  0054  1303               	bcf	status, 6	;RP1=0, select bank0
  3199  0055  082B               	movf	(parsePacket@dataPacket),w
  3200  0056  3E03               	addlw	03h
  3201  0057  0084               	movwf	fsr0
  3202  0058  1383               	bcf	status, 7	;select IRP bank0
  3203  0059  0800               	movf	indf,w
  3204  005A  00A4               	movwf	(??_parsePacket+0)+0
  3205  005B  0824               	movf	(??_parsePacket+0)+0,w
  3206  005C  00FD               	movwf	(?_makeHexByte)
  3207  005D  082B               	movf	(parsePacket@dataPacket),w
  3208  005E  3E02               	addlw	02h
  3209  005F  0084               	movwf	fsr0
  3210  0060  0800               	movf	indf,w
  3211  0061  120A  118A  27B1   	fcall	_makeHexByte
              120A  118A         
  3212  0066  1283               	bcf	status, 5	;RP0=0, select bank0
  3213  0067  1303               	bcf	status, 6	;RP1=0, select bank0
  3214  0068  00A5               	movwf	(??_parsePacket+1)+0
  3215  0069  0825               	movf	(??_parsePacket+1)+0,w
  3216  006A  00FA               	movwf	(?i1_eeprom_write)
  3217  006B  3052               	movlw	(_rwByteAddr-__stringbase)
  3218  006C  0084               	movwf	fsr0
  3219  006D  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3220  0072  120A  118A  2701   	fcall	i1_eeprom_write
              120A  118A         
  3221                           	line	126
  3222                           ;Packet.c: 126: eeprom_write(cmdByteAddr, makeHexByte(dataPacket[4], dataPacket[5]));
  3223  0077  1283               	bcf	status, 5	;RP0=0, select bank0
  3224  0078  1303               	bcf	status, 6	;RP1=0, select bank0
  3225  0079  082B               	movf	(parsePacket@dataPacket),w
  3226  007A  3E05               	addlw	05h
  3227  007B  0084               	movwf	fsr0
  3228  007C  1383               	bcf	status, 7	;select IRP bank0
  3229  007D  0800               	movf	indf,w
  3230  007E  00A4               	movwf	(??_parsePacket+0)+0
  3231  007F  0824               	movf	(??_parsePacket+0)+0,w
  3232  0080  00FD               	movwf	(?_makeHexByte)
  3233  0081  082B               	movf	(parsePacket@dataPacket),w
  3234  0082  3E04               	addlw	04h
  3235  0083  0084               	movwf	fsr0
  3236  0084  0800               	movf	indf,w
  3237  0085  120A  118A  27B1   	fcall	_makeHexByte
              120A  118A         
  3238  008A  1283               	bcf	status, 5	;RP0=0, select bank0
  3239  008B  1303               	bcf	status, 6	;RP1=0, select bank0
  3240  008C  00A5               	movwf	(??_parsePacket+1)+0
  3241  008D  0825               	movf	(??_parsePacket+1)+0,w
  3242  008E  00FA               	movwf	(?i1_eeprom_write)
  3243  008F  3042               	movlw	(_cmdByteAddr-__stringbase)
  3244  0090  0084               	movwf	fsr0
  3245  0091  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3246  0096  120A  118A  2701   	fcall	i1_eeprom_write
              120A  118A         
  3247                           	line	128
  3248                           ;Packet.c: 128: eeprom_write(lenByteAddr, makeHexByte(dataPacket[6], dataPacket[7]));
  3249  009B  1283               	bcf	status, 5	;RP0=0, select bank0
  3250  009C  1303               	bcf	status, 6	;RP1=0, select bank0
  3251  009D  082B               	movf	(parsePacket@dataPacket),w
  3252  009E  3E07               	addlw	07h
  3253  009F  0084               	movwf	fsr0
  3254  00A0  1383               	bcf	status, 7	;select IRP bank0
  3255  00A1  0800               	movf	indf,w
  3256  00A2  00A4               	movwf	(??_parsePacket+0)+0
  3257  00A3  0824               	movf	(??_parsePacket+0)+0,w
  3258  00A4  00FD               	movwf	(?_makeHexByte)
  3259  00A5  082B               	movf	(parsePacket@dataPacket),w
  3260  00A6  3E06               	addlw	06h
  3261  00A7  0084               	movwf	fsr0
  3262  00A8  0800               	movf	indf,w
  3263  00A9  120A  118A  27B1   	fcall	_makeHexByte
              120A  118A         
  3264  00AE  1283               	bcf	status, 5	;RP0=0, select bank0
  3265  00AF  1303               	bcf	status, 6	;RP1=0, select bank0
  3266  00B0  00A5               	movwf	(??_parsePacket+1)+0
  3267  00B1  0825               	movf	(??_parsePacket+1)+0,w
  3268  00B2  00FA               	movwf	(?i1_eeprom_write)
  3269  00B3  304C               	movlw	(_lenByteAddr-__stringbase)
  3270  00B4  0084               	movwf	fsr0
  3271  00B5  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3272  00BA  120A  118A  2701   	fcall	i1_eeprom_write
              120A  118A         
  3273                           	line	130
  3274                           ;Packet.c: 130: eeprom_write(csByteAddr, makeHexByte(dataPacket[strlen(dataPacket) - 2],
                                  dataPacket[strlen(dataPacket) - 1]));
  3275  00BF  1283               	bcf	status, 5	;RP0=0, select bank0
  3276  00C0  1303               	bcf	status, 6	;RP1=0, select bank0
  3277  00C1  082B               	movf	(parsePacket@dataPacket),w
  3278  00C2  120A  118A  26D0   	fcall	i1_strlen
              120A  118A         
  3279  00C7  0870               	movf	(0+(?i1_strlen)),w
  3280  00C8  3EFF               	addlw	0FFh
  3281  00C9  1283               	bcf	status, 5	;RP0=0, select bank0
  3282  00CA  1303               	bcf	status, 6	;RP1=0, select bank0
  3283  00CB  072B               	addwf	(parsePacket@dataPacket),w
  3284  00CC  00A4               	movwf	(??_parsePacket+0)+0
  3285  00CD  0824               	movf	0+(??_parsePacket+0)+0,w
  3286  00CE  0084               	movwf	fsr0
  3287  00CF  1383               	bcf	status, 7	;select IRP bank0
  3288  00D0  0800               	movf	indf,w
  3289  00D1  00A5               	movwf	(??_parsePacket+1)+0
  3290  00D2  0825               	movf	(??_parsePacket+1)+0,w
  3291  00D3  00FD               	movwf	(?_makeHexByte)
  3292  00D4  082B               	movf	(parsePacket@dataPacket),w
  3293  00D5  120A  118A  26D0   	fcall	i1_strlen
              120A  118A         
  3294  00DA  0870               	movf	(0+(?i1_strlen)),w
  3295  00DB  3EFE               	addlw	0FEh
  3296  00DC  1283               	bcf	status, 5	;RP0=0, select bank0
  3297  00DD  1303               	bcf	status, 6	;RP1=0, select bank0
  3298  00DE  072B               	addwf	(parsePacket@dataPacket),w
  3299  00DF  00A6               	movwf	(??_parsePacket+2)+0
  3300  00E0  0826               	movf	0+(??_parsePacket+2)+0,w
  3301  00E1  0084               	movwf	fsr0
  3302  00E2  1383               	bcf	status, 7	;select IRP bank0
  3303  00E3  0800               	movf	indf,w
  3304  00E4  120A  118A  27B1   	fcall	_makeHexByte
              120A  118A         
  3305  00E9  1283               	bcf	status, 5	;RP0=0, select bank0
  3306  00EA  1303               	bcf	status, 6	;RP1=0, select bank0
  3307  00EB  00A7               	movwf	(??_parsePacket+3)+0
  3308  00EC  0827               	movf	(??_parsePacket+3)+0,w
  3309  00ED  00FA               	movwf	(?i1_eeprom_write)
  3310  00EE  3043               	movlw	(_csByteAddr-__stringbase)
  3311  00EF  0084               	movwf	fsr0
  3312  00F0  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3313  00F5  120A  118A  2701   	fcall	i1_eeprom_write
              120A  118A         
  3314                           	line	133
  3315                           	
  3316  00FA                     i1l8492:	
  3317                           ;Packet.c: 133: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  3318  00FA  1283               	bcf	status, 5	;RP0=0, select bank0
  3319  00FB  1303               	bcf	status, 6	;RP1=0, select bank0
  3320  00FC  01AA               	clrf	(parsePacket@i)
  3321  00FD  2934               	goto	i1l8500
  3322                           	
  3323  00FE                     i1l1596:	
  3324                           	line	134
  3325                           	
  3326  00FE                     i1l8494:	
  3327                           ;Packet.c: 134: eeprom_write(dataBytesAddr+i, makeHexByte(dataPacket[8 + dataCounter], d
                                 ataPacket[9 + dataCounter]));
  3328  00FE  0828               	movf	(parsePacket@dataCounter),w
  3329  00FF  3E09               	addlw	09h
  3330  0100  072B               	addwf	(parsePacket@dataPacket),w
  3331  0101  00A4               	movwf	(??_parsePacket+0)+0
  3332  0102  0824               	movf	0+(??_parsePacket+0)+0,w
  3333  0103  0084               	movwf	fsr0
  3334  0104  1383               	bcf	status, 7	;select IRP bank0
  3335  0105  0800               	movf	indf,w
  3336  0106  00A5               	movwf	(??_parsePacket+1)+0
  3337  0107  0825               	movf	(??_parsePacket+1)+0,w
  3338  0108  00FD               	movwf	(?_makeHexByte)
  3339  0109  0828               	movf	(parsePacket@dataCounter),w
  3340  010A  3E08               	addlw	08h
  3341  010B  072B               	addwf	(parsePacket@dataPacket),w
  3342  010C  00A6               	movwf	(??_parsePacket+2)+0
  3343  010D  0826               	movf	0+(??_parsePacket+2)+0,w
  3344  010E  0084               	movwf	fsr0
  3345  010F  0800               	movf	indf,w
  3346  0110  120A  118A  27B1   	fcall	_makeHexByte
              120A  118A         
  3347  0115  1283               	bcf	status, 5	;RP0=0, select bank0
  3348  0116  1303               	bcf	status, 6	;RP1=0, select bank0
  3349  0117  00A7               	movwf	(??_parsePacket+3)+0
  3350  0118  0827               	movf	(??_parsePacket+3)+0,w
  3351  0119  00FA               	movwf	(?i1_eeprom_write)
  3352  011A  3044               	movlw	(_dataBytesAddr-__stringbase)
  3353  011B  0084               	movwf	fsr0
  3354  011C  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3355  0121  072A               	addwf	(parsePacket@i),w
  3356  0122  120A  118A  2701   	fcall	i1_eeprom_write
              120A  118A         
  3357                           	line	135
  3358                           	
  3359  0127                     i1l8496:	
  3360                           ;Packet.c: 135: dataCounter += 2;
  3361  0127  3002               	movlw	low(02h)
  3362  0128  1283               	bcf	status, 5	;RP0=0, select bank0
  3363  0129  1303               	bcf	status, 6	;RP1=0, select bank0
  3364  012A  07A8               	addwf	(parsePacket@dataCounter),f
  3365  012B  1803               	skipnc
  3366  012C  0AA9               	incf	(parsePacket@dataCounter+1),f
  3367  012D  3000               	movlw	high(02h)
  3368  012E  07A9               	addwf	(parsePacket@dataCounter+1),f
  3369                           	line	133
  3370                           	
  3371  012F                     i1l8498:	
  3372  012F  3001               	movlw	(01h)
  3373  0130  00A4               	movwf	(??_parsePacket+0)+0
  3374  0131  0824               	movf	(??_parsePacket+0)+0,w
  3375  0132  07AA               	addwf	(parsePacket@i),f
  3376  0133  2934               	goto	i1l8500
  3377                           	
  3378  0134                     i1l1595:	
  3379                           	
  3380  0134                     i1l8500:	
  3381  0134  304C               	movlw	(_lenByteAddr-__stringbase)
  3382  0135  0084               	movwf	fsr0
  3383  0136  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3384  013B  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  3385  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  3386  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  3387  0142  022A               	subwf	(parsePacket@i),w
  3388  0143  1C03               	skipc
  3389  0144  2946               	goto	u291_21
  3390  0145  2947               	goto	u291_20
  3391  0146                     u291_21:
  3392  0146  28FE               	goto	i1l8494
  3393  0147                     u291_20:
  3394  0147  2949               	goto	i1l1598
  3395                           	
  3396  0148                     i1l1597:	
  3397  0148  2949               	goto	i1l1598
  3398                           	line	137
  3399                           	
  3400  0149                     i1l1594:	
  3401                           	line	138
  3402                           	
  3403  0149                     i1l1598:	
  3404  0149  0008               	return
  3405                           	opt stack 0
  3406                           GLOBAL	__end_of_parsePacket
  3407  014A                     	__end_of_parsePacket:
  3408 ;; =============== function _parsePacket ends ============
  3409                           
  3410                           	signat	_parsePacket,4216
  3411                           	global	_readByte
  3412                           psect	text743,local,class=CODE,delta=2
  3413                           global __ptext743
  3414  0F77                     __ptext743:
  3415                           
  3416 ;; *************** function _readByte *****************
  3417 ;; Defined at:
  3418 ;;		line 89 in file "Bluetooth.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      unsigned char 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, pclath, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3432 ;;      Params:         0       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0
  3435 ;;      Totals:         0       0       0       0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    1
  3439 ;; This function calls:
  3440 ;;		_clearUARTErr
  3441 ;; This function is called by:
  3442 ;;		_readString
  3443 ;;		_echoBack
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           psect	text743
  3447                           	file	"Bluetooth.c"
  3448                           	line	89
  3449                           	global	__size_of_readByte
  3450  0017                     	__size_of_readByte	equ	__end_of_readByte-_readByte
  3451                           	
  3452  0F77                     _readByte:	
  3453                           	opt	stack 1
  3454                           ; Regs used in _readByte: [wreg+status,2+status,0+pclath+cstack]
  3455                           	line	94
  3456                           	
  3457  0F77                     i1l8352:	
  3458                           ;Bluetooth.c: 94: if(OERR){
  3459  0F77  1283               	bcf	status, 5	;RP0=0, select bank0
  3460  0F78  1303               	bcf	status, 6	;RP1=0, select bank0
  3461  0F79  1C98               	btfss	(193/8),(193)&7
  3462  0F7A  2F7C               	goto	u273_21
  3463  0F7B  2F7D               	goto	u273_20
  3464  0F7C                     u273_21:
  3465  0F7C  2F84               	goto	i1l779
  3466  0F7D                     u273_20:
  3467                           	line	95
  3468                           	
  3469  0F7D                     i1l8354:	
  3470                           ;Bluetooth.c: 95: clearUARTErr();
  3471  0F7D  120A  158A  278E   	fcall	_clearUARTErr
              120A  158A         
  3472  0F82  2F84               	goto	i1l779
  3473                           	line	96
  3474                           	
  3475  0F83                     i1l778:	
  3476                           	line	97
  3477                           ;Bluetooth.c: 96: }
  3478                           ;Bluetooth.c: 97: while(!RCIF);
  3479  0F83  2F84               	goto	i1l779
  3480                           	
  3481  0F84                     i1l780:	
  3482                           	
  3483  0F84                     i1l779:	
  3484  0F84  1283               	bcf	status, 5	;RP0=0, select bank0
  3485  0F85  1303               	bcf	status, 6	;RP1=0, select bank0
  3486  0F86  1E8C               	btfss	(101/8),(101)&7
  3487  0F87  2F89               	goto	u274_21
  3488  0F88  2F8A               	goto	u274_20
  3489  0F89                     u274_21:
  3490  0F89  2F84               	goto	i1l779
  3491  0F8A                     u274_20:
  3492  0F8A  2F8B               	goto	i1l8356
  3493                           	
  3494  0F8B                     i1l781:	
  3495                           	line	106
  3496                           	
  3497  0F8B                     i1l8356:	
  3498                           ;Bluetooth.c: 106: return RCREG;
  3499  0F8B  081A               	movf	(26),w	;volatile
  3500  0F8C  2F8D               	goto	i1l782
  3501                           	
  3502  0F8D                     i1l8358:	
  3503                           	line	109
  3504                           	
  3505  0F8D                     i1l782:	
  3506  0F8D  0008               	return
  3507                           	opt stack 0
  3508                           GLOBAL	__end_of_readByte
  3509  0F8E                     	__end_of_readByte:
  3510 ;; =============== function _readByte ends ============
  3511                           
  3512                           	signat	_readByte,89
  3513                           	global	_getCommands
  3514                           psect	text744,local,class=CODE,delta=2
  3515                           global __ptext744
  3516  07D6                     __ptext744:
  3517                           
  3518 ;; *************** function _getCommands *****************
  3519 ;; Defined at:
  3520 ;;		line 6 in file "Command.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;		None               void
  3527 ;; Registers used:
  3528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3534 ;;      Params:         0       0       0       0       0
  3535 ;;      Locals:         0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0
  3537 ;;      Totals:         0       0       0       0       0
  3538 ;;Total ram usage:        0 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    1
  3541 ;; This function calls:
  3542 ;;		i1_writeByte
  3543 ;;		_eeprom_read
  3544 ;; This function is called by:
  3545 ;;		_getPacket
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           psect	text744
  3549                           	file	"Command.c"
  3550                           	line	6
  3551                           	global	__size_of_getCommands
  3552  0021                     	__size_of_getCommands	equ	__end_of_getCommands-_getCommands
  3553                           	
  3554  07D6                     _getCommands:	
  3555                           	opt	stack 2
  3556                           ; Regs used in _getCommands: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3557                           	line	8
  3558                           	
  3559  07D6                     i1l8634:	
  3560                           ;Command.c: 8: switch(eeprom_read(rwByteAddr)){
  3561  07D6  2FE6               	goto	i1l8642
  3562                           	line	9
  3563                           ;Command.c: 9: case 0:
  3564                           	
  3565  07D7                     i1l4760:	
  3566                           	line	10
  3567                           	
  3568  07D7                     i1l8636:	
  3569                           ;Command.c: 10: writeByte('T');
  3570  07D7  3054               	movlw	(054h)
  3571  07D8  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  3572                           	line	11
  3573                           ;Command.c: 11: break;
  3574  07DD  2FF6               	goto	i1l4763
  3575                           	line	12
  3576                           ;Command.c: 12: default:
  3577                           	
  3578  07DE                     i1l4762:	
  3579                           	line	13
  3580                           	
  3581  07DE                     i1l8638:	
  3582                           ;Command.c: 13: writeByte('N');
  3583  07DE  304E               	movlw	(04Eh)
  3584  07DF  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  3585                           	line	14
  3586                           ;Command.c: 14: break;
  3587  07E4  2FF6               	goto	i1l4763
  3588                           	line	15
  3589                           	
  3590  07E5                     i1l8640:	
  3591                           ;Command.c: 15: }
  3592  07E5  2FF6               	goto	i1l4763
  3593                           	line	8
  3594                           	
  3595  07E6                     i1l4759:	
  3596                           	
  3597  07E6                     i1l8642:	
  3598  07E6  3052               	movlw	(_rwByteAddr-__stringbase)
  3599  07E7  0084               	movwf	fsr0
  3600  07E8  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3601  07ED  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  3602                           	; Switch size 1, requested type "space"
  3603                           ; Number of cases is 1, Range of values is 0 to 0
  3604                           ; switch strategies available:
  3605                           ; Name         Instructions Cycles
  3606                           ; simple_byte            4     3 (average)
  3607                           ; direct_byte           11     8 (fixed)
  3608                           ; jumptable            260     6 (fixed)
  3609                           ; rangetable             5     6 (fixed)
  3610                           ; spacedrange            8     9 (fixed)
  3611                           ; locatedrange           1     3 (fixed)
  3612                           ;	Chosen strategy is simple_byte
  3613                           
  3614                           	opt asmopt_off
  3615  07F2  3A00               	xorlw	0^0	; case 0
  3616  07F3  1903               	skipnz
  3617  07F4  2FD7               	goto	i1l8636
  3618  07F5  2FDE               	goto	i1l8638
  3619                           	opt asmopt_on
  3620                           
  3621                           	line	15
  3622                           	
  3623  07F6                     i1l4761:	
  3624                           	line	16
  3625                           	
  3626  07F6                     i1l4763:	
  3627  07F6  0008               	return
  3628                           	opt stack 0
  3629                           GLOBAL	__end_of_getCommands
  3630  07F7                     	__end_of_getCommands:
  3631 ;; =============== function _getCommands ends ============
  3632                           
  3633                           	signat	_getCommands,88
  3634                           	global	_addDataToCheckSum
  3635                           psect	text745,local,class=CODE,delta=2
  3636                           global __ptext745
  3637  01E4                     __ptext745:
  3638                           
  3639 ;; *************** function _addDataToCheckSum *****************
  3640 ;; Defined at:
  3641 ;;		line 258 in file "Packet.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;		None
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  i               1   13[COMMON] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;		None               void
  3648 ;; Registers used:
  3649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3655 ;;      Params:         0       0       0       0       0
  3656 ;;      Locals:         1       0       0       0       0
  3657 ;;      Temps:          0       2       0       0       0
  3658 ;;      Totals:         1       2       0       0       0
  3659 ;;Total ram usage:        3 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    1
  3662 ;; This function calls:
  3663 ;;		_eeprom_read
  3664 ;;		i1_eeprom_write
  3665 ;; This function is called by:
  3666 ;;		_validatePacket
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           psect	text745
  3670                           	file	"Packet.c"
  3671                           	line	258
  3672                           	global	__size_of_addDataToCheckSum
  3673  0077                     	__size_of_addDataToCheckSum	equ	__end_of_addDataToCheckSum-_addDataToCheckSum
  3674                           	
  3675  01E4                     _addDataToCheckSum:	
  3676                           	opt	stack 1
  3677                           ; Regs used in _addDataToCheckSum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3678                           	line	260
  3679                           	
  3680  01E4                     i1l8584:	
  3681                           ;Packet.c: 260: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(lenB
                                 yteAddr));
  3682  01E4  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3683  01E5  0084               	movwf	fsr0
  3684  01E6  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3685  01EB  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  3686  01F0  1283               	bcf	status, 5	;RP0=0, select bank0
  3687  01F1  1303               	bcf	status, 6	;RP1=0, select bank0
  3688  01F2  00A0               	movwf	(??_addDataToCheckSum+0)+0
  3689  01F3  304C               	movlw	(_lenByteAddr-__stringbase)
  3690  01F4  0084               	movwf	fsr0
  3691  01F5  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3692  01FA  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  3693  01FF  1283               	bcf	status, 5	;RP0=0, select bank0
  3694  0200  1303               	bcf	status, 6	;RP1=0, select bank0
  3695  0201  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  3696  0202  00A1               	movwf	(??_addDataToCheckSum+1)+0
  3697  0203  0821               	movf	(??_addDataToCheckSum+1)+0,w
  3698  0204  00FA               	movwf	(?i1_eeprom_write)
  3699  0205  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3700  0206  0084               	movwf	fsr0
  3701  0207  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3702  020C  120A  118A  2701   	fcall	i1_eeprom_write
              120A  118A         
  3703                           	line	263
  3704                           	
  3705  0211                     i1l8586:	
  3706                           ;Packet.c: 263: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  3707  0211  01FD               	clrf	(addDataToCheckSum@i)
  3708  0212  2A48               	goto	i1l8592
  3709                           	
  3710  0213                     i1l1625:	
  3711                           	line	265
  3712                           	
  3713  0213                     i1l8588:	
  3714                           ;Packet.c: 265: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(data
                                 BytesAddr+i));
  3715  0213  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3716  0214  0084               	movwf	fsr0
  3717  0215  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3718  021A  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  3719  021F  1283               	bcf	status, 5	;RP0=0, select bank0
  3720  0220  1303               	bcf	status, 6	;RP1=0, select bank0
  3721  0221  00A0               	movwf	(??_addDataToCheckSum+0)+0
  3722  0222  3044               	movlw	(_dataBytesAddr-__stringbase)
  3723  0223  0084               	movwf	fsr0
  3724  0224  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3725  0229  077D               	addwf	(addDataToCheckSum@i),w
  3726  022A  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  3727  022F  1283               	bcf	status, 5	;RP0=0, select bank0
  3728  0230  1303               	bcf	status, 6	;RP1=0, select bank0
  3729  0231  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  3730  0232  00A1               	movwf	(??_addDataToCheckSum+1)+0
  3731  0233  0821               	movf	(??_addDataToCheckSum+1)+0,w
  3732  0234  00FA               	movwf	(?i1_eeprom_write)
  3733  0235  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3734  0236  0084               	movwf	fsr0
  3735  0237  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3736  023C  120A  118A  2701   	fcall	i1_eeprom_write
              120A  118A         
  3737                           	line	263
  3738                           	
  3739  0241                     i1l8590:	
  3740  0241  3001               	movlw	(01h)
  3741  0242  1283               	bcf	status, 5	;RP0=0, select bank0
  3742  0243  1303               	bcf	status, 6	;RP1=0, select bank0
  3743  0244  00A0               	movwf	(??_addDataToCheckSum+0)+0
  3744  0245  0820               	movf	(??_addDataToCheckSum+0)+0,w
  3745  0246  07FD               	addwf	(addDataToCheckSum@i),f
  3746  0247  2A48               	goto	i1l8592
  3747                           	
  3748  0248                     i1l1624:	
  3749                           	
  3750  0248                     i1l8592:	
  3751  0248  304C               	movlw	(_lenByteAddr-__stringbase)
  3752  0249  0084               	movwf	fsr0
  3753  024A  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3754  024F  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  3755  0254  027D               	subwf	(addDataToCheckSum@i),w
  3756  0255  1C03               	skipc
  3757  0256  2A58               	goto	u302_21
  3758  0257  2A59               	goto	u302_20
  3759  0258                     u302_21:
  3760  0258  2A13               	goto	i1l8588
  3761  0259                     u302_20:
  3762  0259  2A5A               	goto	i1l1627
  3763                           	
  3764  025A                     i1l1626:	
  3765                           	line	267
  3766                           	
  3767  025A                     i1l1627:	
  3768  025A  0008               	return
  3769                           	opt stack 0
  3770                           GLOBAL	__end_of_addDataToCheckSum
  3771  025B                     	__end_of_addDataToCheckSum:
  3772 ;; =============== function _addDataToCheckSum ends ============
  3773                           
  3774                           	signat	_addDataToCheckSum,88
  3775                           	global	_checkCS
  3776                           psect	text746,local,class=CODE,delta=2
  3777                           global __ptext746
  3778  0669                     __ptext746:
  3779                           
  3780 ;; *************** function _checkCS *****************
  3781 ;; Defined at:
  3782 ;;		line 216 in file "Packet.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  2    2[COMMON] int 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3796 ;;      Params:         2       0       0       0       0
  3797 ;;      Locals:         0       0       0       0       0
  3798 ;;      Temps:          1       0       0       0       0
  3799 ;;      Totals:         3       0       0       0       0
  3800 ;;Total ram usage:        3 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    1
  3803 ;; This function calls:
  3804 ;;		_eeprom_read
  3805 ;;		i1_writeByte
  3806 ;; This function is called by:
  3807 ;;		_validatePacket
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           psect	text746
  3811                           	file	"Packet.c"
  3812                           	line	216
  3813                           	global	__size_of_checkCS
  3814  0034                     	__size_of_checkCS	equ	__end_of_checkCS-_checkCS
  3815                           	
  3816  0669                     _checkCS:	
  3817                           	opt	stack 1
  3818                           ; Regs used in _checkCS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3819                           	line	218
  3820                           	
  3821  0669                     i1l8552:	
  3822                           ;Packet.c: 218: if(eeprom_read(csByteAddr) == eeprom_read(calcCSByteAddr)){
  3823  0669  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3824  066A  0084               	movwf	fsr0
  3825  066B  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3826  0670  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  3827  0675  00F4               	movwf	(??_checkCS+0)+0
  3828  0676  3043               	movlw	(_csByteAddr-__stringbase)
  3829  0677  0084               	movwf	fsr0
  3830  0678  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3831  067D  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  3832  0682  0674               	xorwf	0+(??_checkCS+0)+0,w
  3833  0683  1D03               	skipz
  3834  0684  2E86               	goto	u296_21
  3835  0685  2E87               	goto	u296_20
  3836  0686                     u296_21:
  3837  0686  2E93               	goto	i1l8560
  3838  0687                     u296_20:
  3839                           	line	220
  3840                           	
  3841  0687                     i1l8554:	
  3842                           ;Packet.c: 220: writeByte('Y');
  3843  0687  3059               	movlw	(059h)
  3844  0688  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  3845                           	line	221
  3846                           	
  3847  068D                     i1l8556:	
  3848                           ;Packet.c: 221: return 1;
  3849  068D  3001               	movlw	low(01h)
  3850  068E  00F2               	movwf	(?_checkCS)
  3851  068F  3000               	movlw	high(01h)
  3852  0690  00F3               	movwf	((?_checkCS))+1
  3853  0691  2E9C               	goto	i1l1616
  3854                           	
  3855  0692                     i1l8558:	
  3856  0692  2E9C               	goto	i1l1616
  3857                           	line	222
  3858                           	
  3859  0693                     i1l1615:	
  3860                           	line	224
  3861                           	
  3862  0693                     i1l8560:	
  3863                           ;Packet.c: 222: }
  3864                           ;Packet.c: 224: writeByte('N');
  3865  0693  304E               	movlw	(04Eh)
  3866  0694  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  3867                           	line	225
  3868                           	
  3869  0699                     i1l8562:	
  3870                           ;Packet.c: 225: return 0;
  3871  0699  01F2               	clrf	(?_checkCS)
  3872  069A  01F3               	clrf	(?_checkCS+1)
  3873  069B  2E9C               	goto	i1l1616
  3874                           	
  3875  069C                     i1l8564:	
  3876                           	line	226
  3877                           	
  3878  069C                     i1l1616:	
  3879  069C  0008               	return
  3880                           	opt stack 0
  3881                           GLOBAL	__end_of_checkCS
  3882  069D                     	__end_of_checkCS:
  3883 ;; =============== function _checkCS ends ============
  3884                           
  3885                           	signat	_checkCS,90
  3886                           	global	_checkCMDByte
  3887                           psect	text747,local,class=CODE,delta=2
  3888                           global __ptext747
  3889  025B                     __ptext747:
  3890                           
  3891 ;; *************** function _checkCMDByte *****************
  3892 ;; Defined at:
  3893 ;;		line 193 in file "Packet.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  2    0[BANK0 ] int 
  3900 ;; Registers used:
  3901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3907 ;;      Params:         0       2       0       0       0
  3908 ;;      Locals:         0       0       0       0       0
  3909 ;;      Temps:          0       2       0       0       0
  3910 ;;      Totals:         0       4       0       0       0
  3911 ;;Total ram usage:        4 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    1
  3914 ;; This function calls:
  3915 ;;		_eeprom_read
  3916 ;;		i1_eeprom_write
  3917 ;;		i1_writeByte
  3918 ;; This function is called by:
  3919 ;;		_validatePacket
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           psect	text747
  3923                           	file	"Packet.c"
  3924                           	line	193
  3925                           	global	__size_of_checkCMDByte
  3926  0070                     	__size_of_checkCMDByte	equ	__end_of_checkCMDByte-_checkCMDByte
  3927                           	
  3928  025B                     _checkCMDByte:	
  3929                           	opt	stack 1
  3930                           ; Regs used in _checkCMDByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3931                           	line	195
  3932                           	
  3933  025B                     i1l8536:	
  3934                           ;Packet.c: 195: if(eeprom_read(cmdByteAddr) >= 0 && eeprom_read(cmdByteAddr) <= maxCmd){
  3935  025B  3042               	movlw	(_cmdByteAddr-__stringbase)
  3936  025C  0084               	movwf	fsr0
  3937  025D  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3938  0262  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  3939  0267  3042               	movlw	(_cmdByteAddr-__stringbase)
  3940  0268  0084               	movwf	fsr0
  3941  0269  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3942  026E  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  3943  0273  1283               	bcf	status, 5	;RP0=0, select bank0
  3944  0274  1303               	bcf	status, 6	;RP1=0, select bank0
  3945  0275  00A2               	movwf	(??_checkCMDByte+0)+0
  3946  0276  304D               	movlw	(_maxCmd-__stringbase)
  3947  0277  0084               	movwf	fsr0
  3948  0278  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3949  027D  00A3               	movwf	(??_checkCMDByte+1)+0
  3950  027E  0822               	movf	0+(??_checkCMDByte+0)+0,w
  3951  027F  0223               	subwf	(??_checkCMDByte+1)+0,w
  3952  0280  1C03               	skipc
  3953  0281  2A83               	goto	u295_21
  3954  0282  2A84               	goto	u295_20
  3955  0283                     u295_21:
  3956  0283  2ABF               	goto	i1l8546
  3957  0284                     u295_20:
  3958                           	line	197
  3959                           	
  3960  0284                     i1l8538:	
  3961                           ;Packet.c: 197: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(cmdB
                                 yteAddr));
  3962  0284  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3963  0285  0084               	movwf	fsr0
  3964  0286  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3965  028B  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  3966  0290  1283               	bcf	status, 5	;RP0=0, select bank0
  3967  0291  1303               	bcf	status, 6	;RP1=0, select bank0
  3968  0292  00A2               	movwf	(??_checkCMDByte+0)+0
  3969  0293  3042               	movlw	(_cmdByteAddr-__stringbase)
  3970  0294  0084               	movwf	fsr0
  3971  0295  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3972  029A  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  3973  029F  1283               	bcf	status, 5	;RP0=0, select bank0
  3974  02A0  1303               	bcf	status, 6	;RP1=0, select bank0
  3975  02A1  0722               	addwf	0+(??_checkCMDByte+0)+0,w
  3976  02A2  00A3               	movwf	(??_checkCMDByte+1)+0
  3977  02A3  0823               	movf	(??_checkCMDByte+1)+0,w
  3978  02A4  00FA               	movwf	(?i1_eeprom_write)
  3979  02A5  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3980  02A6  0084               	movwf	fsr0
  3981  02A7  120A  118A  240B   	fcall	stringdir
              120A  118A         
  3982  02AC  120A  118A  2701   	fcall	i1_eeprom_write
              120A  118A         
  3983                           	line	199
  3984                           	
  3985  02B1                     i1l8540:	
  3986                           ;Packet.c: 199: writeByte('C');
  3987  02B1  3043               	movlw	(043h)
  3988  02B2  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  3989                           	line	200
  3990                           	
  3991  02B7                     i1l8542:	
  3992                           ;Packet.c: 200: return 1;
  3993  02B7  3001               	movlw	low(01h)
  3994  02B8  1283               	bcf	status, 5	;RP0=0, select bank0
  3995  02B9  1303               	bcf	status, 6	;RP1=0, select bank0
  3996  02BA  00A0               	movwf	(?_checkCMDByte)
  3997  02BB  3000               	movlw	high(01h)
  3998  02BC  00A1               	movwf	((?_checkCMDByte))+1
  3999  02BD  2ACA               	goto	i1l1612
  4000                           	
  4001  02BE                     i1l8544:	
  4002  02BE  2ACA               	goto	i1l1612
  4003                           	line	201
  4004                           	
  4005  02BF                     i1l1611:	
  4006                           	line	203
  4007                           	
  4008  02BF                     i1l8546:	
  4009                           ;Packet.c: 201: }
  4010                           ;Packet.c: 203: writeByte('N');
  4011  02BF  304E               	movlw	(04Eh)
  4012  02C0  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  4013                           	line	204
  4014                           	
  4015  02C5                     i1l8548:	
  4016                           ;Packet.c: 204: return 0;
  4017  02C5  1283               	bcf	status, 5	;RP0=0, select bank0
  4018  02C6  1303               	bcf	status, 6	;RP1=0, select bank0
  4019  02C7  01A0               	clrf	(?_checkCMDByte)
  4020  02C8  01A1               	clrf	(?_checkCMDByte+1)
  4021  02C9  2ACA               	goto	i1l1612
  4022                           	
  4023  02CA                     i1l8550:	
  4024                           	line	205
  4025                           	
  4026  02CA                     i1l1612:	
  4027  02CA  0008               	return
  4028                           	opt stack 0
  4029                           GLOBAL	__end_of_checkCMDByte
  4030  02CB                     	__end_of_checkCMDByte:
  4031 ;; =============== function _checkCMDByte ends ============
  4032                           
  4033                           	signat	_checkCMDByte,90
  4034                           	global	_checkRWByte
  4035                           psect	text748,local,class=CODE,delta=2
  4036                           global __ptext748
  4037  033A                     __ptext748:
  4038                           
  4039 ;; *************** function _checkRWByte *****************
  4040 ;; Defined at:
  4041 ;;		line 171 in file "Packet.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  2    0[BANK0 ] int 
  4048 ;; Registers used:
  4049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4055 ;;      Params:         0       2       0       0       0
  4056 ;;      Locals:         0       0       0       0       0
  4057 ;;      Temps:          0       2       0       0       0
  4058 ;;      Totals:         0       4       0       0       0
  4059 ;;Total ram usage:        4 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    1
  4062 ;; This function calls:
  4063 ;;		_eeprom_read
  4064 ;;		i1_writeByte
  4065 ;;		i1_eeprom_write
  4066 ;; This function is called by:
  4067 ;;		_validatePacket
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           psect	text748
  4071                           	file	"Packet.c"
  4072                           	line	171
  4073                           	global	__size_of_checkRWByte
  4074  006A                     	__size_of_checkRWByte	equ	__end_of_checkRWByte-_checkRWByte
  4075                           	
  4076  033A                     _checkRWByte:	
  4077                           	opt	stack 1
  4078                           ; Regs used in _checkRWByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4079                           	line	174
  4080                           	
  4081  033A                     i1l8518:	
  4082                           ;Packet.c: 174: if(eeprom_read(rwByteAddr) == 0 || eeprom_read(rwByteAddr) == 1){
  4083  033A  3052               	movlw	(_rwByteAddr-__stringbase)
  4084  033B  0084               	movwf	fsr0
  4085  033C  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4086  0341  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  4087  0346  3A00               	xorlw	0
  4088  0347  1903               	skipnz
  4089  0348  2B4A               	goto	u293_21
  4090  0349  2B4B               	goto	u293_20
  4091  034A                     u293_21:
  4092  034A  2B5D               	goto	i1l8522
  4093  034B                     u293_20:
  4094                           	
  4095  034B                     i1l8520:	
  4096  034B  3052               	movlw	(_rwByteAddr-__stringbase)
  4097  034C  0084               	movwf	fsr0
  4098  034D  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4099  0352  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  4100  0357  3A01               	xorlw	01h
  4101  0358  1D03               	skipz
  4102  0359  2B5B               	goto	u294_21
  4103  035A  2B5C               	goto	u294_20
  4104  035B                     u294_21:
  4105  035B  2B98               	goto	i1l8530
  4106  035C                     u294_20:
  4107  035C  2B5D               	goto	i1l8522
  4108                           	
  4109  035D                     i1l1607:	
  4110                           	line	176
  4111                           	
  4112  035D                     i1l8522:	
  4113                           ;Packet.c: 176: writeByte('R');
  4114  035D  3052               	movlw	(052h)
  4115  035E  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  4116                           	line	178
  4117                           	
  4118  0363                     i1l8524:	
  4119                           ;Packet.c: 178: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(rwBy
                                 teAddr));
  4120  0363  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4121  0364  0084               	movwf	fsr0
  4122  0365  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4123  036A  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  4124  036F  1283               	bcf	status, 5	;RP0=0, select bank0
  4125  0370  1303               	bcf	status, 6	;RP1=0, select bank0
  4126  0371  00A2               	movwf	(??_checkRWByte+0)+0
  4127  0372  3052               	movlw	(_rwByteAddr-__stringbase)
  4128  0373  0084               	movwf	fsr0
  4129  0374  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4130  0379  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  4131  037E  1283               	bcf	status, 5	;RP0=0, select bank0
  4132  037F  1303               	bcf	status, 6	;RP1=0, select bank0
  4133  0380  0722               	addwf	0+(??_checkRWByte+0)+0,w
  4134  0381  00A3               	movwf	(??_checkRWByte+1)+0
  4135  0382  0823               	movf	(??_checkRWByte+1)+0,w
  4136  0383  00FA               	movwf	(?i1_eeprom_write)
  4137  0384  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4138  0385  0084               	movwf	fsr0
  4139  0386  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4140  038B  120A  118A  2701   	fcall	i1_eeprom_write
              120A  118A         
  4141                           	line	179
  4142                           	
  4143  0390                     i1l8526:	
  4144                           ;Packet.c: 179: return 1;
  4145  0390  3001               	movlw	low(01h)
  4146  0391  1283               	bcf	status, 5	;RP0=0, select bank0
  4147  0392  1303               	bcf	status, 6	;RP1=0, select bank0
  4148  0393  00A0               	movwf	(?_checkRWByte)
  4149  0394  3000               	movlw	high(01h)
  4150  0395  00A1               	movwf	((?_checkRWByte))+1
  4151  0396  2BA3               	goto	i1l1608
  4152                           	
  4153  0397                     i1l8528:	
  4154  0397  2BA3               	goto	i1l1608
  4155                           	line	180
  4156                           	
  4157  0398                     i1l1605:	
  4158                           	line	182
  4159                           	
  4160  0398                     i1l8530:	
  4161                           ;Packet.c: 180: }
  4162                           ;Packet.c: 182: writeByte('N');
  4163  0398  304E               	movlw	(04Eh)
  4164  0399  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  4165                           	line	183
  4166                           	
  4167  039E                     i1l8532:	
  4168                           ;Packet.c: 183: return 0;
  4169  039E  1283               	bcf	status, 5	;RP0=0, select bank0
  4170  039F  1303               	bcf	status, 6	;RP1=0, select bank0
  4171  03A0  01A0               	clrf	(?_checkRWByte)
  4172  03A1  01A1               	clrf	(?_checkRWByte+1)
  4173  03A2  2BA3               	goto	i1l1608
  4174                           	
  4175  03A3                     i1l8534:	
  4176                           	line	184
  4177                           	
  4178  03A3                     i1l1608:	
  4179  03A3  0008               	return
  4180                           	opt stack 0
  4181                           GLOBAL	__end_of_checkRWByte
  4182  03A4                     	__end_of_checkRWByte:
  4183 ;; =============== function _checkRWByte ends ============
  4184                           
  4185                           	signat	_checkRWByte,90
  4186                           	global	_checkStartByte
  4187                           psect	text749,local,class=CODE,delta=2
  4188                           global __ptext749
  4189  0471                     __ptext749:
  4190                           
  4191 ;; *************** function _checkStartByte *****************
  4192 ;; Defined at:
  4193 ;;		line 148 in file "Packet.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  2    0[BANK0 ] int 
  4200 ;; Registers used:
  4201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4207 ;;      Params:         0       2       0       0       0
  4208 ;;      Locals:         0       0       0       0       0
  4209 ;;      Temps:          0       2       0       0       0
  4210 ;;      Totals:         0       4       0       0       0
  4211 ;;Total ram usage:        4 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    1
  4214 ;; This function calls:
  4215 ;;		_eeprom_read
  4216 ;;		i1_writeByte
  4217 ;;		i1_eeprom_write
  4218 ;; This function is called by:
  4219 ;;		_validatePacket
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           psect	text749
  4223                           	file	"Packet.c"
  4224                           	line	148
  4225                           	global	__size_of_checkStartByte
  4226  0064                     	__size_of_checkStartByte	equ	__end_of_checkStartByte-_checkStartByte
  4227                           	
  4228  0471                     _checkStartByte:	
  4229                           	opt	stack 1
  4230                           ; Regs used in _checkStartByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4231                           	line	151
  4232                           	
  4233  0471                     i1l8502:	
  4234                           ;Packet.c: 151: if (eeprom_read(startByteAddr) == userStartByte) {
  4235  0471  305F               	movlw	(_userStartByte-__stringbase)
  4236  0472  0084               	movwf	fsr0
  4237  0473  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4238  0478  1283               	bcf	status, 5	;RP0=0, select bank0
  4239  0479  1303               	bcf	status, 6	;RP1=0, select bank0
  4240  047A  00A2               	movwf	(??_checkStartByte+0)+0
  4241  047B  3053               	movlw	(_startByteAddr-__stringbase)
  4242  047C  0084               	movwf	fsr0
  4243  047D  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4244  0482  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  4245  0487  1283               	bcf	status, 5	;RP0=0, select bank0
  4246  0488  1303               	bcf	status, 6	;RP1=0, select bank0
  4247  0489  0622               	xorwf	(??_checkStartByte+0)+0,w
  4248  048A  1D03               	skipz
  4249  048B  2C8D               	goto	u292_21
  4250  048C  2C8E               	goto	u292_20
  4251  048D                     u292_21:
  4252  048D  2CC9               	goto	i1l8512
  4253  048E                     u292_20:
  4254                           	line	153
  4255                           	
  4256  048E                     i1l8504:	
  4257                           ;Packet.c: 153: writeByte('S');
  4258  048E  3053               	movlw	(053h)
  4259  048F  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  4260                           	line	155
  4261                           	
  4262  0494                     i1l8506:	
  4263                           ;Packet.c: 155: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(star
                                 tByteAddr));
  4264  0494  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4265  0495  0084               	movwf	fsr0
  4266  0496  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4267  049B  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  4268  04A0  1283               	bcf	status, 5	;RP0=0, select bank0
  4269  04A1  1303               	bcf	status, 6	;RP1=0, select bank0
  4270  04A2  00A2               	movwf	(??_checkStartByte+0)+0
  4271  04A3  3053               	movlw	(_startByteAddr-__stringbase)
  4272  04A4  0084               	movwf	fsr0
  4273  04A5  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4274  04AA  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  4275  04AF  1283               	bcf	status, 5	;RP0=0, select bank0
  4276  04B0  1303               	bcf	status, 6	;RP1=0, select bank0
  4277  04B1  0722               	addwf	0+(??_checkStartByte+0)+0,w
  4278  04B2  00A3               	movwf	(??_checkStartByte+1)+0
  4279  04B3  0823               	movf	(??_checkStartByte+1)+0,w
  4280  04B4  00FA               	movwf	(?i1_eeprom_write)
  4281  04B5  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4282  04B6  0084               	movwf	fsr0
  4283  04B7  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4284  04BC  120A  118A  2701   	fcall	i1_eeprom_write
              120A  118A         
  4285                           	line	156
  4286                           	
  4287  04C1                     i1l8508:	
  4288                           ;Packet.c: 156: return 1;
  4289  04C1  3001               	movlw	low(01h)
  4290  04C2  1283               	bcf	status, 5	;RP0=0, select bank0
  4291  04C3  1303               	bcf	status, 6	;RP1=0, select bank0
  4292  04C4  00A0               	movwf	(?_checkStartByte)
  4293  04C5  3000               	movlw	high(01h)
  4294  04C6  00A1               	movwf	((?_checkStartByte))+1
  4295  04C7  2CD4               	goto	i1l1602
  4296                           	
  4297  04C8                     i1l8510:	
  4298  04C8  2CD4               	goto	i1l1602
  4299                           	line	157
  4300                           	
  4301  04C9                     i1l1601:	
  4302                           	line	159
  4303                           	
  4304  04C9                     i1l8512:	
  4305                           ;Packet.c: 157: }
  4306                           ;Packet.c: 159: writeByte('N');
  4307  04C9  304E               	movlw	(04Eh)
  4308  04CA  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  4309                           	line	160
  4310                           	
  4311  04CF                     i1l8514:	
  4312                           ;Packet.c: 160: return 0;
  4313  04CF  1283               	bcf	status, 5	;RP0=0, select bank0
  4314  04D0  1303               	bcf	status, 6	;RP1=0, select bank0
  4315  04D1  01A0               	clrf	(?_checkStartByte)
  4316  04D2  01A1               	clrf	(?_checkStartByte+1)
  4317  04D3  2CD4               	goto	i1l1602
  4318                           	
  4319  04D4                     i1l8516:	
  4320                           	line	161
  4321                           	
  4322  04D4                     i1l1602:	
  4323  04D4  0008               	return
  4324                           	opt stack 0
  4325                           GLOBAL	__end_of_checkStartByte
  4326  04D5                     	__end_of_checkStartByte:
  4327 ;; =============== function _checkStartByte ends ============
  4328                           
  4329                           	signat	_checkStartByte,90
  4330                           	global	_checkDataFrames
  4331                           psect	text750,local,class=CODE,delta=2
  4332                           global __ptext750
  4333  014A                     __ptext750:
  4334                           
  4335 ;; *************** function _checkDataFrames *****************
  4336 ;; Defined at:
  4337 ;;		line 85 in file "Packet.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;		None
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;		None
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  2    2[COMMON] int 
  4344 ;; Registers used:
  4345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4351 ;;      Params:         2       0       0       0       0
  4352 ;;      Locals:         0       0       0       0       0
  4353 ;;      Temps:          6       0       0       0       0
  4354 ;;      Totals:         8       0       0       0       0
  4355 ;;Total ram usage:        8 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    1
  4358 ;; This function calls:
  4359 ;;		_eeprom_read
  4360 ;;		i1_writeByte
  4361 ;; This function is called by:
  4362 ;;		_validatePacket
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           psect	text750
  4366                           	file	"Packet.c"
  4367                           	line	85
  4368                           	global	__size_of_checkDataFrames
  4369  009A                     	__size_of_checkDataFrames	equ	__end_of_checkDataFrames-_checkDataFrames
  4370                           	
  4371  014A                     _checkDataFrames:	
  4372                           	opt	stack 1
  4373                           ; Regs used in _checkDataFrames: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4374                           	line	87
  4375                           	
  4376  014A                     i1l8458:	
  4377                           ;Packet.c: 87: if(eeprom_read(lenByteAddr) == 0 && (eeprom_read(RXLenAddr)-noDataLen) ==
                                  0){
  4378  014A  304C               	movlw	(_lenByteAddr-__stringbase)
  4379  014B  0084               	movwf	fsr0
  4380  014C  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4381  0151  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  4382  0156  3800               	iorlw	0
  4383  0157  1D03               	skipz
  4384  0158  295A               	goto	u285_21
  4385  0159  295B               	goto	u285_20
  4386  015A                     u285_21:
  4387  015A  298E               	goto	i1l8470
  4388  015B                     u285_20:
  4389                           	
  4390  015B                     i1l8460:	
  4391  015B  3050               	movlw	(_noDataLen-__stringbase)
  4392  015C  0084               	movwf	fsr0
  4393  015D  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4394  0162  00F4               	movwf	(??_checkDataFrames+0)+0
  4395  0163  01F5               	clrf	(??_checkDataFrames+0)+0+1
  4396  0164  09F4               	comf	(??_checkDataFrames+0)+0,f
  4397  0165  09F5               	comf	(??_checkDataFrames+0)+1,f
  4398  0166  0AF4               	incf	(??_checkDataFrames+0)+0,f
  4399  0167  1903               	skipnz
  4400  0168  0AF5               	incf	(??_checkDataFrames+0)+1,f
  4401  0169  3040               	movlw	(_RXLenAddr-__stringbase)
  4402  016A  0084               	movwf	fsr0
  4403  016B  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4404  0170  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  4405  0175  0774               	addwf	0+(??_checkDataFrames+0)+0,w
  4406  0176  00F6               	movwf	(??_checkDataFrames+2)+0
  4407  0177  0875               	movf	1+(??_checkDataFrames+0)+0,w
  4408  0178  1803               	skipnc
  4409  0179  0A75               	incf	1+(??_checkDataFrames+0)+0,w
  4410  017A  00F7               	movwf	((??_checkDataFrames+2)+0)+1
  4411  017B  0877               	movf	1+(??_checkDataFrames+2)+0,w
  4412  017C  0476               	iorwf	0+(??_checkDataFrames+2)+0,w
  4413  017D  1D03               	skipz
  4414  017E  2980               	goto	u286_21
  4415  017F  2981               	goto	u286_20
  4416  0180                     u286_21:
  4417  0180  298E               	goto	i1l8470
  4418  0181                     u286_20:
  4419                           	line	89
  4420                           	
  4421  0181                     i1l8462:	
  4422                           ;Packet.c: 89: writeByte('D');
  4423  0181  3044               	movlw	(044h)
  4424  0182  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  4425                           	line	90
  4426                           	
  4427  0187                     i1l8464:	
  4428                           ;Packet.c: 90: return 1;
  4429  0187  3001               	movlw	low(01h)
  4430  0188  00F2               	movwf	(?_checkDataFrames)
  4431  0189  3000               	movlw	high(01h)
  4432  018A  00F3               	movwf	((?_checkDataFrames))+1
  4433  018B  29E3               	goto	i1l1589
  4434                           	
  4435  018C                     i1l8466:	
  4436  018C  29E3               	goto	i1l1589
  4437                           	line	94
  4438                           	
  4439  018D                     i1l8468:	
  4440                           ;Packet.c: 94: }else if((eeprom_read(RXLenAddr) - noDataLen) == (eeprom_read(lenByteAddr
                                 )*2)){
  4441  018D  29DA               	goto	i1l8478
  4442                           	
  4443  018E                     i1l1588:	
  4444                           	
  4445  018E                     i1l8470:	
  4446  018E  304C               	movlw	(_lenByteAddr-__stringbase)
  4447  018F  0084               	movwf	fsr0
  4448  0190  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4449  0195  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  4450  019A  00F4               	movwf	(??_checkDataFrames+0)+0
  4451  019B  01F5               	clrf	(??_checkDataFrames+0)+0+1
  4452  019C  3001               	movlw	01h
  4453  019D  00FF               	movwf	btemp+1
  4454  019E                     u287_25:
  4455  019E  1003               	clrc
  4456  019F  0DF4               	rlf	(??_checkDataFrames+0)+0,f
  4457  01A0  0DF5               	rlf	(??_checkDataFrames+0)+1,f
  4458  01A1  0BFF               	decfsz	btemp+1,f
  4459  01A2  299E               	goto	u287_25
  4460  01A3  3050               	movlw	(_noDataLen-__stringbase)
  4461  01A4  0084               	movwf	fsr0
  4462  01A5  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4463  01AA  00F6               	movwf	(??_checkDataFrames+2)+0
  4464  01AB  01F7               	clrf	(??_checkDataFrames+2)+0+1
  4465  01AC  09F6               	comf	(??_checkDataFrames+2)+0,f
  4466  01AD  09F7               	comf	(??_checkDataFrames+2)+1,f
  4467  01AE  0AF6               	incf	(??_checkDataFrames+2)+0,f
  4468  01AF  1903               	skipnz
  4469  01B0  0AF7               	incf	(??_checkDataFrames+2)+1,f
  4470  01B1  3040               	movlw	(_RXLenAddr-__stringbase)
  4471  01B2  0084               	movwf	fsr0
  4472  01B3  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4473  01B8  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  4474  01BD  0776               	addwf	0+(??_checkDataFrames+2)+0,w
  4475  01BE  00F8               	movwf	(??_checkDataFrames+4)+0
  4476  01BF  0877               	movf	1+(??_checkDataFrames+2)+0,w
  4477  01C0  1803               	skipnc
  4478  01C1  0A77               	incf	1+(??_checkDataFrames+2)+0,w
  4479  01C2  00F9               	movwf	((??_checkDataFrames+4)+0)+1
  4480  01C3  0875               	movf	1+(??_checkDataFrames+0)+0,w
  4481  01C4  0679               	xorwf	1+(??_checkDataFrames+4)+0,w
  4482  01C5  1D03               	skipz
  4483  01C6  29C9               	goto	u288_25
  4484  01C7  0874               	movf	0+(??_checkDataFrames+0)+0,w
  4485  01C8  0678               	xorwf	0+(??_checkDataFrames+4)+0,w
  4486  01C9                     u288_25:
  4487                           
  4488  01C9  1D03               	skipz
  4489  01CA  29CC               	goto	u288_21
  4490  01CB  29CD               	goto	u288_20
  4491  01CC                     u288_21:
  4492  01CC  29DA               	goto	i1l8478
  4493  01CD                     u288_20:
  4494                           	line	96
  4495                           	
  4496  01CD                     i1l8472:	
  4497                           ;Packet.c: 96: writeByte('D');
  4498  01CD  3044               	movlw	(044h)
  4499  01CE  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  4500                           	line	97
  4501                           	
  4502  01D3                     i1l8474:	
  4503                           ;Packet.c: 97: return 1;
  4504  01D3  3001               	movlw	low(01h)
  4505  01D4  00F2               	movwf	(?_checkDataFrames)
  4506  01D5  3000               	movlw	high(01h)
  4507  01D6  00F3               	movwf	((?_checkDataFrames))+1
  4508  01D7  29E3               	goto	i1l1589
  4509                           	
  4510  01D8                     i1l8476:	
  4511  01D8  29E3               	goto	i1l1589
  4512                           	line	98
  4513                           	
  4514  01D9                     i1l1591:	
  4515  01D9  29DA               	goto	i1l8478
  4516                           	line	101
  4517                           	
  4518  01DA                     i1l1590:	
  4519                           	
  4520  01DA                     i1l8478:	
  4521                           ;Packet.c: 98: }
  4522                           ;Packet.c: 101: writeByte('N');
  4523  01DA  304E               	movlw	(04Eh)
  4524  01DB  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  4525                           	line	102
  4526                           	
  4527  01E0                     i1l8480:	
  4528                           ;Packet.c: 102: return 0;
  4529  01E0  01F2               	clrf	(?_checkDataFrames)
  4530  01E1  01F3               	clrf	(?_checkDataFrames+1)
  4531  01E2  29E3               	goto	i1l1589
  4532                           	
  4533  01E3                     i1l8482:	
  4534                           	line	103
  4535                           	
  4536  01E3                     i1l1589:	
  4537  01E3  0008               	return
  4538                           	opt stack 0
  4539                           GLOBAL	__end_of_checkDataFrames
  4540  01E4                     	__end_of_checkDataFrames:
  4541 ;; =============== function _checkDataFrames ends ============
  4542                           
  4543                           	signat	_checkDataFrames,90
  4544                           	global	_checkLength
  4545                           psect	text751,local,class=CODE,delta=2
  4546                           global __ptext751
  4547  0732                     __ptext751:
  4548                           
  4549 ;; *************** function _checkLength *****************
  4550 ;; Defined at:
  4551 ;;		line 64 in file "Packet.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2    2[COMMON] int 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4565 ;;      Params:         2       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0
  4567 ;;      Temps:          1       0       0       0       0
  4568 ;;      Totals:         3       0       0       0       0
  4569 ;;Total ram usage:        3 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    1
  4572 ;; This function calls:
  4573 ;;		_eeprom_read
  4574 ;;		i1_writeByte
  4575 ;; This function is called by:
  4576 ;;		_parsePacket
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           psect	text751
  4580                           	file	"Packet.c"
  4581                           	line	64
  4582                           	global	__size_of_checkLength
  4583  002F                     	__size_of_checkLength	equ	__end_of_checkLength-_checkLength
  4584                           	
  4585  0732                     _checkLength:	
  4586                           	opt	stack 1
  4587                           ; Regs used in _checkLength: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4588                           	line	67
  4589                           	
  4590  0732                     i1l8444:	
  4591                           ;Packet.c: 67: if (eeprom_read(RXLenAddr) >= minSizeByte) {
  4592  0732  3040               	movlw	(_RXLenAddr-__stringbase)
  4593  0733  0084               	movwf	fsr0
  4594  0734  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4595  0739  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  4596  073E  00F4               	movwf	(??_checkLength+0)+0
  4597  073F  304E               	movlw	(_minSizeByte-__stringbase)
  4598  0740  0084               	movwf	fsr0
  4599  0741  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4600  0746  0274               	subwf	0+(??_checkLength+0)+0,w
  4601  0747  1C03               	skipc
  4602  0748  2F4A               	goto	u284_21
  4603  0749  2F4B               	goto	u284_20
  4604  074A                     u284_21:
  4605  074A  2F57               	goto	i1l8452
  4606  074B                     u284_20:
  4607                           	line	69
  4608                           	
  4609  074B                     i1l8446:	
  4610                           ;Packet.c: 69: writeByte('L');
  4611  074B  304C               	movlw	(04Ch)
  4612  074C  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  4613                           	line	70
  4614                           	
  4615  0751                     i1l8448:	
  4616                           ;Packet.c: 70: return 1;
  4617  0751  3001               	movlw	low(01h)
  4618  0752  00F2               	movwf	(?_checkLength)
  4619  0753  3000               	movlw	high(01h)
  4620  0754  00F3               	movwf	((?_checkLength))+1
  4621  0755  2F60               	goto	i1l1585
  4622                           	
  4623  0756                     i1l8450:	
  4624  0756  2F60               	goto	i1l1585
  4625                           	line	71
  4626                           	
  4627  0757                     i1l1584:	
  4628                           	line	73
  4629                           	
  4630  0757                     i1l8452:	
  4631                           ;Packet.c: 71: }
  4632                           ;Packet.c: 73: writeByte('N');
  4633  0757  304E               	movlw	(04Eh)
  4634  0758  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  4635                           	line	74
  4636                           	
  4637  075D                     i1l8454:	
  4638                           ;Packet.c: 74: return 0;
  4639  075D  01F2               	clrf	(?_checkLength)
  4640  075E  01F3               	clrf	(?_checkLength+1)
  4641  075F  2F60               	goto	i1l1585
  4642                           	
  4643  0760                     i1l8456:	
  4644                           	line	75
  4645                           	
  4646  0760                     i1l1585:	
  4647  0760  0008               	return
  4648                           	opt stack 0
  4649                           GLOBAL	__end_of_checkLength
  4650  0761                     	__end_of_checkLength:
  4651 ;; =============== function _checkLength ends ============
  4652                           
  4653                           	signat	_checkLength,90
  4654                           	global	_checkEven
  4655                           psect	text752,local,class=CODE,delta=2
  4656                           global __ptext752
  4657  078A                     __ptext752:
  4658                           
  4659 ;; *************** function _checkEven *****************
  4660 ;; Defined at:
  4661 ;;		line 42 in file "Packet.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;		None
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;		None
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  2    2[COMMON] int 
  4668 ;; Registers used:
  4669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4675 ;;      Params:         2       0       0       0       0
  4676 ;;      Locals:         0       0       0       0       0
  4677 ;;      Temps:          1       0       0       0       0
  4678 ;;      Totals:         3       0       0       0       0
  4679 ;;Total ram usage:        3 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    1
  4682 ;; This function calls:
  4683 ;;		_eeprom_read
  4684 ;;		i1_writeByte
  4685 ;; This function is called by:
  4686 ;;		_parsePacket
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           psect	text752
  4690                           	file	"Packet.c"
  4691                           	line	42
  4692                           	global	__size_of_checkEven
  4693  0027                     	__size_of_checkEven	equ	__end_of_checkEven-_checkEven
  4694                           	
  4695  078A                     _checkEven:	
  4696                           	opt	stack 1
  4697                           ; Regs used in _checkEven: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4698                           	line	45
  4699                           	
  4700  078A                     i1l8426:	
  4701                           ;Packet.c: 45: if (eeprom_read(RXLenAddr) % 2 == 0) {
  4702  078A  3040               	movlw	(_RXLenAddr-__stringbase)
  4703  078B  0084               	movwf	fsr0
  4704  078C  120A  118A  240B   	fcall	stringdir
              120A  118A         
  4705  0791  120A  158A  27E1   	fcall	_eeprom_read
              120A  118A         
  4706  0796  00F4               	movwf	(??_checkEven+0)+0
  4707  0797  1874               	btfsc	0+(??_checkEven+0)+0,(0)&7
  4708  0798  2F9A               	goto	u282_21
  4709  0799  2F9B               	goto	u282_20
  4710  079A                     u282_21:
  4711  079A  2FA7               	goto	i1l8434
  4712  079B                     u282_20:
  4713                           	line	47
  4714                           	
  4715  079B                     i1l8428:	
  4716                           ;Packet.c: 47: writeByte('E');
  4717  079B  3045               	movlw	(045h)
  4718  079C  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  4719                           	line	48
  4720                           	
  4721  07A1                     i1l8430:	
  4722                           ;Packet.c: 48: return 1;
  4723  07A1  3001               	movlw	low(01h)
  4724  07A2  00F2               	movwf	(?_checkEven)
  4725  07A3  3000               	movlw	high(01h)
  4726  07A4  00F3               	movwf	((?_checkEven))+1
  4727  07A5  2FB0               	goto	i1l1581
  4728                           	
  4729  07A6                     i1l8432:	
  4730  07A6  2FB0               	goto	i1l1581
  4731                           	line	49
  4732                           	
  4733  07A7                     i1l1580:	
  4734                           	line	51
  4735                           	
  4736  07A7                     i1l8434:	
  4737                           ;Packet.c: 49: }
  4738                           ;Packet.c: 51: writeByte('N');
  4739  07A7  304E               	movlw	(04Eh)
  4740  07A8  120A  158A  2726   	fcall	i1_writeByte
              120A  118A         
  4741                           	line	52
  4742                           	
  4743  07AD                     i1l8436:	
  4744                           ;Packet.c: 52: return 0;
  4745  07AD  01F2               	clrf	(?_checkEven)
  4746  07AE  01F3               	clrf	(?_checkEven+1)
  4747  07AF  2FB0               	goto	i1l1581
  4748                           	
  4749  07B0                     i1l8438:	
  4750                           	line	53
  4751                           	
  4752  07B0                     i1l1581:	
  4753  07B0  0008               	return
  4754                           	opt stack 0
  4755                           GLOBAL	__end_of_checkEven
  4756  07B1                     	__end_of_checkEven:
  4757 ;; =============== function _checkEven ends ============
  4758                           
  4759                           	signat	_checkEven,90
  4760                           	global	_makeHexByte
  4761                           psect	text753,local,class=CODE,delta=2
  4762                           global __ptext753
  4763  07B1                     __ptext753:
  4764                           
  4765 ;; *************** function _makeHexByte *****************
  4766 ;; Defined at:
  4767 ;;		line 215 in file "Bluetooth.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  nibOne          1    wreg     unsigned char 
  4770 ;;  nibTwo          1   13[COMMON] unsigned char 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  nibOne          1    2[BANK0 ] unsigned char 
  4773 ;;  input_byte      1    3[BANK0 ] unsigned char 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      unsigned char 
  4776 ;; Registers used:
  4777 ;;		wreg, status,2, status,0, pclath, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4783 ;;      Params:         1       0       0       0       0
  4784 ;;      Locals:         0       2       0       0       0
  4785 ;;      Temps:          0       2       0       0       0
  4786 ;;      Totals:         1       4       0       0       0
  4787 ;;Total ram usage:        5 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    1
  4790 ;; This function calls:
  4791 ;;		_makeNibble
  4792 ;; This function is called by:
  4793 ;;		_parsePacket
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           psect	text753
  4797                           	file	"Bluetooth.c"
  4798                           	line	215
  4799                           	global	__size_of_makeHexByte
  4800  0025                     	__size_of_makeHexByte	equ	__end_of_makeHexByte-_makeHexByte
  4801                           	
  4802  07B1                     _makeHexByte:	
  4803                           	opt	stack 1
  4804                           ; Regs used in _makeHexByte: [wreg+status,2+status,0+pclath+cstack]
  4805                           ;makeHexByte@nibOne stored from wreg
  4806                           	line	217
  4807  07B1  1283               	bcf	status, 5	;RP0=0, select bank0
  4808  07B2  1303               	bcf	status, 6	;RP1=0, select bank0
  4809  07B3  00A2               	movwf	(makeHexByte@nibOne)
  4810                           	
  4811  07B4                     i1l8420:	
  4812                           ;Bluetooth.c: 216: unsigned char input_byte;
  4813                           ;Bluetooth.c: 217: input_byte = (makeNibble(nibOne)<<4);
  4814  07B4  0822               	movf	(makeHexByte@nibOne),w
  4815  07B5  120A  158A  2732   	fcall	_makeNibble
              120A  118A         
  4816  07BA  1283               	bcf	status, 5	;RP0=0, select bank0
  4817  07BB  1303               	bcf	status, 6	;RP1=0, select bank0
  4818  07BC  00A0               	movwf	(??_makeHexByte+0)+0
  4819  07BD  3003               	movlw	(04h)-1
  4820  07BE                     u281_25:
  4821  07BE  1003               	clrc
  4822  07BF  0DA0               	rlf	(??_makeHexByte+0)+0,f
  4823  07C0  3EFF               	addlw	-1
  4824  07C1  1D03               	skipz
  4825  07C2  2FBE               	goto	u281_25
  4826  07C3  1003               	clrc
  4827  07C4  0D20               	rlf	(??_makeHexByte+0)+0,w
  4828  07C5  00A1               	movwf	(??_makeHexByte+1)+0
  4829  07C6  0821               	movf	(??_makeHexByte+1)+0,w
  4830  07C7  00A3               	movwf	(makeHexByte@input_byte)
  4831                           	line	218
  4832                           ;Bluetooth.c: 218: input_byte|= makeNibble(nibTwo);
  4833  07C8  087D               	movf	(makeHexByte@nibTwo),w
  4834  07C9  120A  158A  2732   	fcall	_makeNibble
              120A  118A         
  4835  07CE  1283               	bcf	status, 5	;RP0=0, select bank0
  4836  07CF  1303               	bcf	status, 6	;RP1=0, select bank0
  4837  07D0  00A0               	movwf	(??_makeHexByte+0)+0
  4838  07D1  0820               	movf	(??_makeHexByte+0)+0,w
  4839  07D2  04A3               	iorwf	(makeHexByte@input_byte),f
  4840                           	line	219
  4841                           	
  4842  07D3                     i1l8422:	
  4843                           ;Bluetooth.c: 219: return input_byte;
  4844  07D3  0823               	movf	(makeHexByte@input_byte),w
  4845  07D4  2FD5               	goto	i1l804
  4846                           	
  4847  07D5                     i1l8424:	
  4848                           	line	220
  4849                           	
  4850  07D5                     i1l804:	
  4851  07D5  0008               	return
  4852                           	opt stack 0
  4853                           GLOBAL	__end_of_makeHexByte
  4854  07D6                     	__end_of_makeHexByte:
  4855 ;; =============== function _makeHexByte ends ============
  4856                           
  4857                           	signat	_makeHexByte,8313
  4858                           	global	_clearUARTErr
  4859                           psect	text754,local,class=CODE,delta=2
  4860                           global __ptext754
  4861  0F8E                     __ptext754:
  4862                           
  4863 ;; *************** function _clearUARTErr *****************
  4864 ;; Defined at:
  4865 ;;		line 222 in file "Bluetooth.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;		None               void
  4872 ;; Registers used:
  4873 ;;		wreg
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4879 ;;      Params:         0       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0
  4881 ;;      Temps:          2       0       0       0       0
  4882 ;;      Totals:         2       0       0       0       0
  4883 ;;Total ram usage:        2 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_readByte
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           psect	text754
  4892                           	file	"Bluetooth.c"
  4893                           	line	222
  4894                           	global	__size_of_clearUARTErr
  4895  001B                     	__size_of_clearUARTErr	equ	__end_of_clearUARTErr-_clearUARTErr
  4896                           	
  4897  0F8E                     _clearUARTErr:	
  4898                           	opt	stack 1
  4899                           ; Regs used in _clearUARTErr: [wreg]
  4900                           	line	223
  4901                           	
  4902  0F8E                     i1l8360:	
  4903                           ;Bluetooth.c: 223: RCSTA = 0x80;
  4904  0F8E  3080               	movlw	(080h)
  4905  0F8F  1283               	bcf	status, 5	;RP0=0, select bank0
  4906  0F90  1303               	bcf	status, 6	;RP1=0, select bank0
  4907  0F91  0098               	movwf	(24)	;volatile
  4908                           	line	224
  4909                           ;Bluetooth.c: 224: _delay((unsigned long)((10)*(20000000/4000.0)));
  4910                           	opt asmopt_off
  4911  0F92  3041               movlw	65
  4912  0F93  00F1               movwf	((??_clearUARTErr+0)+0+1),f
  4913  0F94  30EE               	movlw	238
  4914  0F95  00F0               movwf	((??_clearUARTErr+0)+0),f
  4915  0F96                     u319_27:
  4916  0F96  0BF0               	decfsz	((??_clearUARTErr+0)+0),f
  4917  0F97  2F96               	goto	u319_27
  4918  0F98  0BF1               	decfsz	((??_clearUARTErr+0)+0+1),f
  4919  0F99  2F96               	goto	u319_27
  4920  0F9A  0064               	clrwdt
  4921                           opt asmopt_on
  4922                           
  4923                           	line	225
  4924                           ;Bluetooth.c: 225: RCSTA = 0x90;
  4925  0F9B  3090               	movlw	(090h)
  4926  0F9C  1283               	bcf	status, 5	;RP0=0, select bank0
  4927  0F9D  1303               	bcf	status, 6	;RP1=0, select bank0
  4928  0F9E  0098               	movwf	(24)	;volatile
  4929                           	line	226
  4930                           ;Bluetooth.c: 226: _delay((unsigned long)((10)*(20000000/4000.0)));
  4931                           	opt asmopt_off
  4932  0F9F  3041               movlw	65
  4933  0FA0  00F1               movwf	((??_clearUARTErr+0)+0+1),f
  4934  0FA1  30EE               	movlw	238
  4935  0FA2  00F0               movwf	((??_clearUARTErr+0)+0),f
  4936  0FA3                     u320_27:
  4937  0FA3  0BF0               	decfsz	((??_clearUARTErr+0)+0),f
  4938  0FA4  2FA3               	goto	u320_27
  4939  0FA5  0BF1               	decfsz	((??_clearUARTErr+0)+0+1),f
  4940  0FA6  2FA3               	goto	u320_27
  4941  0FA7  0064               	clrwdt
  4942                           opt asmopt_on
  4943                           
  4944                           	line	227
  4945                           	
  4946  0FA8                     i1l807:	
  4947  0FA8  0008               	return
  4948                           	opt stack 0
  4949                           GLOBAL	__end_of_clearUARTErr
  4950  0FA9                     	__end_of_clearUARTErr:
  4951 ;; =============== function _clearUARTErr ends ============
  4952                           
  4953                           	signat	_clearUARTErr,88
  4954                           	global	i1_strlen
  4955                           psect	text755,local,class=CODE,delta=2
  4956                           global __ptext755
  4957  06D0                     __ptext755:
  4958                           
  4959 ;; *************** function i1_strlen *****************
  4960 ;; Defined at:
  4961 ;;		line 5 in file "C:\Microchip\HiTech\sources\strlen.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  strlen          1    wreg     PTR const unsigned char 
  4964 ;;		 -> getPacket@arrStore(50), 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  strlen          1    8[COMMON] PTR const unsigned char 
  4967 ;;		 -> getPacket@arrStore(50), 
  4968 ;;  strlen          1    9[COMMON] PTR const unsigned char 
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  2    0[COMMON] unsigned int 
  4971 ;; Registers used:
  4972 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4978 ;;      Params:         2       0       0       0       0
  4979 ;;      Locals:         2       0       0       0       0
  4980 ;;      Temps:          6       0       0       0       0
  4981 ;;      Totals:        10       0       0       0       0
  4982 ;;Total ram usage:       10 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; This function calls:
  4985 ;;		Nothing
  4986 ;; This function is called by:
  4987 ;;		_parsePacket
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           psect	text755
  4991                           	file	"C:\Microchip\HiTech\sources\strlen.c"
  4992                           	line	5
  4993                           	global	__size_ofi1_strlen
  4994  0031                     	__size_ofi1_strlen	equ	__end_ofi1_strlen-i1_strlen
  4995                           	
  4996  06D0                     i1_strlen:	
  4997                           	opt	stack 2
  4998                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  4999                           ;i1strlen@s stored from wreg
  5000                           	line	8
  5001  06D0  00F8               	movwf	(i1strlen@s)
  5002                           	
  5003  06D1                     i1l8668:	
  5004  06D1  0878               	movf	(i1strlen@s),w
  5005  06D2  00F2               	movwf	(??i1_strlen+0)+0
  5006  06D3  0872               	movf	(??i1_strlen+0)+0,w
  5007  06D4  00F9               	movwf	(i1strlen@cp)
  5008                           	line	9
  5009  06D5  2ED7               	goto	i1l8670
  5010                           	
  5011  06D6                     i1l6683:	
  5012                           	line	10
  5013  06D6  2ED7               	goto	i1l8670
  5014                           	
  5015  06D7                     i1l6682:	
  5016                           	line	9
  5017                           	
  5018  06D7                     i1l8670:	
  5019  06D7  0879               	movf	(i1strlen@cp),w
  5020  06D8  0084               	movwf	fsr0
  5021  06D9  3001               	movlw	01h
  5022  06DA  07F9               	addwf	(i1strlen@cp),f
  5023  06DB  1383               	bcf	status, 7	;select IRP bank0
  5024  06DC  0880               	movf	indf,f
  5025  06DD  1D03               	skipz
  5026  06DE  2EE0               	goto	u313_21
  5027  06DF  2EE1               	goto	u313_20
  5028  06E0                     u313_21:
  5029  06E0  2ED7               	goto	i1l8670
  5030  06E1                     u313_20:
  5031  06E1  2EE2               	goto	i1l8672
  5032                           	
  5033  06E2                     i1l6684:	
  5034                           	line	11
  5035                           	
  5036  06E2                     i1l8672:	
  5037  06E2  0878               	movf	(i1strlen@s),w
  5038  06E3  00F2               	movwf	(??i1_strlen+0)+0
  5039  06E4  3000               	movlw	((0x0/2))
  5040  06E5  00F3               	movwf	(??i1_strlen+0)+0+1
  5041  06E6  09F2               	comf	(??i1_strlen+0)+0,f
  5042  06E7  09F3               	comf	(??i1_strlen+0)+1,f
  5043  06E8  0AF2               	incf	(??i1_strlen+0)+0,f
  5044  06E9  1903               	skipnz
  5045  06EA  0AF3               	incf	(??i1_strlen+0)+1,f
  5046  06EB  0879               	movf	(i1strlen@cp),w
  5047  06EC  00F4               	movwf	(??i1_strlen+2)+0
  5048  06ED  3000               	movlw	((0x0/2))
  5049  06EE  00F5               	movwf	(??i1_strlen+2)+0+1
  5050  06EF  0872               	movf	0+(??i1_strlen+0)+0,w
  5051  06F0  0774               	addwf	0+(??i1_strlen+2)+0,w
  5052  06F1  00F6               	movwf	(??i1_strlen+4)+0
  5053  06F2  0873               	movf	1+(??i1_strlen+0)+0,w
  5054  06F3  1803               	skipnc
  5055  06F4  0A73               	incf	1+(??i1_strlen+0)+0,w
  5056  06F5  0775               	addwf	1+(??i1_strlen+2)+0,w
  5057  06F6  00F7               	movwf	1+(??i1_strlen+4)+0
  5058  06F7  0876               	movf	0+(??i1_strlen+4)+0,w
  5059  06F8  3EFF               	addlw	low(-1)
  5060  06F9  00F0               	movwf	(?i1_strlen)
  5061  06FA  0877               	movf	1+(??i1_strlen+4)+0,w
  5062  06FB  1803               	skipnc
  5063  06FC  3E01               	addlw	1
  5064  06FD  3EFF               	addlw	high(-1)
  5065  06FE  00F1               	movwf	1+(?i1_strlen)
  5066  06FF  2F00               	goto	i1l6685
  5067                           	
  5068  0700                     i1l8674:	
  5069                           	line	12
  5070                           	
  5071  0700                     i1l6685:	
  5072  0700  0008               	return
  5073                           	opt stack 0
  5074                           GLOBAL	__end_ofi1_strlen
  5075  0701                     	__end_ofi1_strlen:
  5076 ;; =============== function i1_strlen ends ============
  5077                           
  5078                           	signat	i1_strlen,90
  5079                           	global	i1_eeprom_write
  5080                           psect	text756,local,class=CODE,delta=2
  5081                           global __ptext756
  5082  0701                     __ptext756:
  5083                           
  5084 ;; *************** function i1_eeprom_write *****************
  5085 ;; Defined at:
  5086 ;;		line 7 in file "C:\Microchip\HiTech\sources\eewrite.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  eeprom_write    1    wreg     unsigned char 
  5089 ;;  eeprom_write    1   10[COMMON] unsigned char 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  eeprom_write    1   12[COMMON] unsigned char 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      unsigned char 
  5094 ;; Registers used:
  5095 ;;		wreg, status,2, status,0
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5101 ;;      Params:         1       0       0       0       0
  5102 ;;      Locals:         1       0       0       0       0
  5103 ;;      Temps:          1       0       0       0       0
  5104 ;;      Totals:         3       0       0       0       0
  5105 ;;Total ram usage:        3 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_readString
  5111 ;;		_parsePacket
  5112 ;;		_checkStartByte
  5113 ;;		_checkRWByte
  5114 ;;		_checkCMDByte
  5115 ;;		_addDataToCheckSum
  5116 ;;		_getPacket
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           psect	text756
  5120                           	file	"C:\Microchip\HiTech\sources\eewrite.c"
  5121                           	line	7
  5122                           	global	__size_ofi1_eeprom_write
  5123  0031                     	__size_ofi1_eeprom_write	equ	__end_ofi1_eeprom_write-i1_eeprom_write
  5124                           	
  5125  0701                     i1_eeprom_write:	
  5126                           	opt	stack 1
  5127                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0]
  5128                           ;i1eeprom_write@addr stored from wreg
  5129  0701  00FC               	movwf	(i1eeprom_write@addr)
  5130                           	line	8
  5131                           	
  5132  0702                     i1l5998:	
  5133  0702  2F03               	goto	i1l5999
  5134                           	
  5135  0703                     i1l6000:	
  5136                           	
  5137  0703                     i1l5999:	
  5138  0703  1683               	bsf	status, 5	;RP0=1, select bank3
  5139  0704  1703               	bsf	status, 6	;RP1=1, select bank3
  5140  0705  188C               	btfsc	(3169/8)^0180h,(3169)&7
  5141  0706  2F08               	goto	u310_21
  5142  0707  2F09               	goto	u310_20
  5143  0708                     u310_21:
  5144  0708  2F03               	goto	i1l5999
  5145  0709                     u310_20:
  5146  0709  2F0A               	goto	i1l8648
  5147                           	
  5148  070A                     i1l6001:	
  5149                           	
  5150  070A                     i1l8648:	
  5151  070A  087C               	movf	(i1eeprom_write@addr),w
  5152  070B  1283               	bcf	status, 5	;RP0=0, select bank2
  5153  070C  1703               	bsf	status, 6	;RP1=1, select bank2
  5154  070D  008D               	movwf	(269)^0100h	;volatile
  5155  070E  087A               	movf	(i1eeprom_write@value),w
  5156  070F  008C               	movwf	(268)^0100h	;volatile
  5157                           	
  5158  0710                     i1l8650:	
  5159  0710  303F               	movlw	(03Fh)
  5160  0711  00FB               	movwf	(??i1_eeprom_write+0)+0
  5161  0712  087B               	movf	(??i1_eeprom_write+0)+0,w
  5162  0713  1683               	bsf	status, 5	;RP0=1, select bank3
  5163  0714  1703               	bsf	status, 6	;RP1=1, select bank3
  5164  0715  058C               	andwf	(396)^0180h,f	;volatile
  5165                           	
  5166  0716                     i1l8652:	
  5167  0716  1283               	bcf	status, 5	;RP0=0, select bank0
  5168  0717  1303               	bcf	status, 6	;RP1=0, select bank0
  5169  0718  1003               	bcf	(24/8),(24)&7
  5170                           	
  5171  0719                     i1l8654:	
  5172  0719  1F8B               	btfss	(95/8),(95)&7
  5173  071A  2F1C               	goto	u311_21
  5174  071B  2F1D               	goto	u311_20
  5175  071C                     u311_21:
  5176  071C  2F1E               	goto	i1l6002
  5177  071D                     u311_20:
  5178                           	
  5179  071D                     i1l8656:	
  5180  071D  1403               	bsf	(24/8),(24)&7
  5181                           	
  5182  071E                     i1l6002:	
  5183  071E  138B               	bcf	(95/8),(95)&7
  5184  071F  1683               	bsf	status, 5	;RP0=1, select bank3
  5185  0720  1703               	bsf	status, 6	;RP1=1, select bank3
  5186  0721  150C               	bsf	(3170/8)^0180h,(3170)&7
  5187                           	
  5188  0722                     i1l8658:	
  5189  0722  3055               	movlw	(055h)
  5190  0723  008D               	movwf	(397)^0180h	;volatile
  5191  0724  30AA               	movlw	(0AAh)
  5192  0725  008D               	movwf	(397)^0180h	;volatile
  5193                           	
  5194  0726                     i1l8660:	
  5195  0726  148C               	bsf	(3169/8)^0180h,(3169)&7
  5196                           	
  5197  0727                     i1l8662:	
  5198  0727  110C               	bcf	(3170/8)^0180h,(3170)&7
  5199                           	
  5200  0728                     i1l8664:	
  5201  0728  1283               	bcf	status, 5	;RP0=0, select bank0
  5202  0729  1303               	bcf	status, 6	;RP1=0, select bank0
  5203  072A  1C03               	btfss	(24/8),(24)&7
  5204  072B  2F2D               	goto	u312_21
  5205  072C  2F2E               	goto	u312_20
  5206  072D                     u312_21:
  5207  072D  2F31               	goto	i1l6005
  5208  072E                     u312_20:
  5209                           	
  5210  072E                     i1l8666:	
  5211  072E  178B               	bsf	(95/8),(95)&7
  5212  072F  2F31               	goto	i1l6005
  5213                           	
  5214  0730                     i1l6003:	
  5215  0730  2F31               	goto	i1l6005
  5216                           	
  5217  0731                     i1l6004:	
  5218                           	line	10
  5219                           ;	Return value of i1_eeprom_write is never used
  5220                           	
  5221  0731                     i1l6005:	
  5222  0731  0008               	return
  5223                           	opt stack 0
  5224                           GLOBAL	__end_ofi1_eeprom_write
  5225  0732                     	__end_ofi1_eeprom_write:
  5226 ;; =============== function i1_eeprom_write ends ============
  5227                           
  5228                           	signat	i1_eeprom_write,89
  5229                           	global	i1_writeByte
  5230                           psect	text757,local,class=CODE,delta=2
  5231                           global __ptext757
  5232  0F26                     __ptext757:
  5233                           
  5234 ;; *************** function i1_writeByte *****************
  5235 ;; Defined at:
  5236 ;;		line 71 in file "Bluetooth.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  writeByte       1    wreg     unsigned char 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  writeByte       1    0[COMMON] unsigned char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;		None               void
  5243 ;; Registers used:
  5244 ;;		wreg
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5250 ;;      Params:         0       0       0       0       0
  5251 ;;      Locals:         1       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0
  5253 ;;      Totals:         1       0       0       0       0
  5254 ;;Total ram usage:        1 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; This function calls:
  5257 ;;		Nothing
  5258 ;; This function is called by:
  5259 ;;		_readString
  5260 ;;		_checkEven
  5261 ;;		_checkLength
  5262 ;;		_checkDataFrames
  5263 ;;		_checkStartByte
  5264 ;;		_checkRWByte
  5265 ;;		_checkCMDByte
  5266 ;;		_checkCS
  5267 ;;		_getPacket
  5268 ;;		_getCommands
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           psect	text757
  5272                           	file	"Bluetooth.c"
  5273                           	line	71
  5274                           	global	__size_ofi1_writeByte
  5275  000C                     	__size_ofi1_writeByte	equ	__end_ofi1_writeByte-i1_writeByte
  5276                           	
  5277  0F26                     i1_writeByte:	
  5278                           	opt	stack 2
  5279                           ; Regs used in i1_writeByte: [wreg]
  5280                           ;i1writeByte@Byte stored from wreg
  5281  0F26  00F0               	movwf	(i1writeByte@Byte)
  5282                           	line	75
  5283                           	
  5284  0F27                     i1l8644:	
  5285                           ;Bluetooth.c: 75: while(!TXIF);
  5286  0F27  2F28               	goto	i1l772
  5287                           	
  5288  0F28                     i1l773:	
  5289                           	
  5290  0F28                     i1l772:	
  5291  0F28  1283               	bcf	status, 5	;RP0=0, select bank0
  5292  0F29  1303               	bcf	status, 6	;RP1=0, select bank0
  5293  0F2A  1E0C               	btfss	(100/8),(100)&7
  5294  0F2B  2F2D               	goto	u309_21
  5295  0F2C  2F2E               	goto	u309_20
  5296  0F2D                     u309_21:
  5297  0F2D  2F28               	goto	i1l772
  5298  0F2E                     u309_20:
  5299  0F2E  2F2F               	goto	i1l8646
  5300                           	
  5301  0F2F                     i1l774:	
  5302                           	line	78
  5303                           	
  5304  0F2F                     i1l8646:	
  5305                           ;Bluetooth.c: 78: TXREG = Byte;
  5306  0F2F  0870               	movf	(i1writeByte@Byte),w
  5307  0F30  0099               	movwf	(25)	;volatile
  5308                           	line	79
  5309                           	
  5310  0F31                     i1l775:	
  5311  0F31  0008               	return
  5312                           	opt stack 0
  5313                           GLOBAL	__end_ofi1_writeByte
  5314  0F32                     	__end_ofi1_writeByte:
  5315 ;; =============== function i1_writeByte ends ============
  5316                           
  5317                           	signat	i1_writeByte,88
  5318                           	global	_setCommands
  5319                           psect	text758,local,class=CODE,delta=2
  5320                           global __ptext758
  5321  0003                     __ptext758:
  5322                           
  5323 ;; *************** function _setCommands *****************
  5324 ;; Defined at:
  5325 ;;		line 18 in file "Command.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;		None
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;		None
  5330 ;; Return value:  Size  Location     Type
  5331 ;;		None               void
  5332 ;; Registers used:
  5333 ;;		None
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5339 ;;      Params:         0       0       0       0       0
  5340 ;;      Locals:         0       0       0       0       0
  5341 ;;      Temps:          0       0       0       0       0
  5342 ;;      Totals:         0       0       0       0       0
  5343 ;;Total ram usage:        0 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_getPacket
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           psect	text758
  5352                           	file	"Command.c"
  5353                           	line	18
  5354                           	global	__size_of_setCommands
  5355  0001                     	__size_of_setCommands	equ	__end_of_setCommands-_setCommands
  5356                           	
  5357  0003                     _setCommands:	
  5358                           	opt	stack 3
  5359                           ; Regs used in _setCommands: []
  5360                           	line	20
  5361                           	
  5362  0003                     i1l4766:	
  5363  0003  0008               	return
  5364                           	opt stack 0
  5365                           GLOBAL	__end_of_setCommands
  5366  0004                     	__end_of_setCommands:
  5367 ;; =============== function _setCommands ends ============
  5368                           
  5369                           	signat	_setCommands,88
  5370                           	global	_eeprom_read
  5371                           psect	text759,local,class=CODE,delta=2
  5372                           global __ptext759
  5373  0FE1                     __ptext759:
  5374                           
  5375 ;; *************** function _eeprom_read *****************
  5376 ;; Defined at:
  5377 ;;		line 7 in file "eeread.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;  addr            1    wreg     unsigned char 
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;  addr            1    1[COMMON] unsigned char 
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      unsigned char 
  5384 ;; Registers used:
  5385 ;;		wreg, status,2, status,0
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5391 ;;      Params:         0       0       0       0       0
  5392 ;;      Locals:         1       0       0       0       0
  5393 ;;      Temps:          1       0       0       0       0
  5394 ;;      Totals:         2       0       0       0       0
  5395 ;;Total ram usage:        2 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_checkEven
  5401 ;;		_checkLength
  5402 ;;		_checkDataFrames
  5403 ;;		_parsePacket
  5404 ;;		_checkStartByte
  5405 ;;		_checkRWByte
  5406 ;;		_checkCMDByte
  5407 ;;		_checkCS
  5408 ;;		_addDataToCheckSum
  5409 ;;		_getPacket
  5410 ;;		_getCommands
  5411 ;;		_displayPacket
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           psect	text759
  5415                           	file	"C:\Microchip\HiTech\sources\eeread.c"
  5416                           	line	7
  5417                           	global	__size_of_eeprom_read
  5418  001F                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
  5419                           	
  5420  0FE1                     _eeprom_read:	
  5421                           	opt	stack 2
  5422                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5423                           ;eeprom_read@addr stored from wreg
  5424                           	line	9
  5425  0FE1  00F1               	movwf	(eeprom_read@addr)
  5426                           	line	8
  5427                           	
  5428  0FE2                     i1l5381:	
  5429                           	line	9
  5430                           # 9 "C:\Microchip\HiTech\sources\eeread.c"
  5431  0FE2  0064               clrwdt ;#
  5432                           psect	text759
  5433                           	line	10
  5434  0FE3  1683               	bsf	status, 5	;RP0=1, select bank3
  5435  0FE4  1703               	bsf	status, 6	;RP1=1, select bank3
  5436  0FE5  188C               	btfsc	(3169/8)^0180h,(3169)&7
  5437  0FE6  2FE8               	goto	u283_21
  5438  0FE7  2FE9               	goto	u283_20
  5439  0FE8                     u283_21:
  5440  0FE8  2FE2               	goto	i1l5381
  5441  0FE9                     u283_20:
  5442  0FE9  2FEA               	goto	i1l8440
  5443                           	
  5444  0FEA                     i1l5382:	
  5445                           	line	11
  5446                           	
  5447  0FEA                     i1l8440:	
  5448  0FEA  0871               	movf	(eeprom_read@addr),w
  5449  0FEB  1283               	bcf	status, 5	;RP0=0, select bank2
  5450  0FEC  1703               	bsf	status, 6	;RP1=1, select bank2
  5451  0FED  008D               	movwf	(269)^0100h	;volatile
  5452  0FEE  303F               	movlw	(03Fh)
  5453  0FEF  00F0               	movwf	(??_eeprom_read+0)+0
  5454  0FF0  0870               	movf	(??_eeprom_read+0)+0,w
  5455  0FF1  1683               	bsf	status, 5	;RP0=1, select bank3
  5456  0FF2  1703               	bsf	status, 6	;RP1=1, select bank3
  5457  0FF3  058C               	andwf	(396)^0180h,f	;volatile
  5458  0FF4  140C               	bsf	(3168/8)^0180h,(3168)&7
  5459  0FF5  1003               	clrc
  5460  0FF6  180C               	btfsc	(3168/8)^0180h,(3168)&7
  5461  0FF7  1403               	setc
  5462  0FF8  3000               	movlw	0
  5463  0FF9  1803               	skipnc
  5464  0FFA  3001               	movlw	1
  5465                           
  5466  0FFB  1283               	bcf	status, 5	;RP0=0, select bank2
  5467  0FFC  1703               	bsf	status, 6	;RP1=1, select bank2
  5468  0FFD  080C               	movf	(268)^0100h,w	;volatile
  5469  0FFE  2FFF               	goto	i1l5383
  5470                           	
  5471  0FFF                     i1l8442:	
  5472                           	line	12
  5473                           	
  5474  0FFF                     i1l5383:	
  5475  0FFF  0008               	return
  5476                           	opt stack 0
  5477                           GLOBAL	__end_of_eeprom_read
  5478  1000                     	__end_of_eeprom_read:
  5479 ;; =============== function _eeprom_read ends ============
  5480                           
  5481                           	signat	_eeprom_read,4217
  5482                           	global	_makeNibble
  5483                           psect	text760,local,class=CODE,delta=2
  5484                           global __ptext760
  5485  0F32                     __ptext760:
  5486                           
  5487 ;; *************** function _makeNibble *****************
  5488 ;; Defined at:
  5489 ;;		line 199 in file "Bluetooth.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  tempNib         1    wreg     unsigned char 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  tempNib         1    0[COMMON] unsigned char 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      unsigned char 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5503 ;;      Params:         0       0       0       0       0
  5504 ;;      Locals:         1       0       0       0       0
  5505 ;;      Temps:          0       0       0       0       0
  5506 ;;      Totals:         1       0       0       0       0
  5507 ;;Total ram usage:        1 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; This function calls:
  5510 ;;		Nothing
  5511 ;; This function is called by:
  5512 ;;		_makeHexByte
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           psect	text760
  5516                           	file	"Bluetooth.c"
  5517                           	line	199
  5518                           	global	__size_of_makeNibble
  5519  000F                     	__size_of_makeNibble	equ	__end_of_makeNibble-_makeNibble
  5520                           	
  5521  0F32                     _makeNibble:	
  5522                           	opt	stack 1
  5523                           ; Regs used in _makeNibble: [wreg+status,2+status,0]
  5524                           ;makeNibble@tempNib stored from wreg
  5525  0F32  00F0               	movwf	(makeNibble@tempNib)
  5526                           	line	200
  5527                           	
  5528  0F33                     i1l8410:	
  5529                           ;Bluetooth.c: 200: if(tempNib>='A'){
  5530  0F33  3041               	movlw	(041h)
  5531  0F34  0270               	subwf	(makeNibble@tempNib),w
  5532  0F35  1C03               	skipc
  5533  0F36  2F38               	goto	u280_21
  5534  0F37  2F39               	goto	u280_20
  5535  0F38                     u280_21:
  5536  0F38  2F3D               	goto	i1l8416
  5537  0F39                     u280_20:
  5538                           	line	201
  5539                           	
  5540  0F39                     i1l8412:	
  5541                           ;Bluetooth.c: 201: return ((tempNib - (unsigned char)'A')+10);
  5542  0F39  0870               	movf	(makeNibble@tempNib),w
  5543  0F3A  3EC9               	addlw	0C9h
  5544  0F3B  2F40               	goto	i1l801
  5545                           	
  5546  0F3C                     i1l8414:	
  5547  0F3C  2F40               	goto	i1l801
  5548                           	line	202
  5549                           	
  5550  0F3D                     i1l800:	
  5551                           	line	203
  5552                           	
  5553  0F3D                     i1l8416:	
  5554                           ;Bluetooth.c: 202: }
  5555                           ;Bluetooth.c: 203: return (tempNib - '0');
  5556  0F3D  0870               	movf	(makeNibble@tempNib),w
  5557  0F3E  3ED0               	addlw	0D0h
  5558  0F3F  2F40               	goto	i1l801
  5559                           	
  5560  0F40                     i1l8418:	
  5561                           	line	204
  5562                           	
  5563  0F40                     i1l801:	
  5564  0F40  0008               	return
  5565                           	opt stack 0
  5566                           GLOBAL	__end_of_makeNibble
  5567  0F41                     	__end_of_makeNibble:
  5568 ;; =============== function _makeNibble ends ============
  5569                           
  5570                           	signat	_makeNibble,4217
  5571                           psect	text761,local,class=CODE,delta=2
  5572                           global __ptext761
  5573  0000                     __ptext761:
  5574                           	global	btemp
  5575  007E                     	btemp set 07Eh
  5576                           
  5577                           	DABS	1,126,2	;btemp
  5578                           	global	wtemp0
  5579  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Dec 14 15:24:02 2013

                         pc 0002                          _RD 0C60                          _WR 0C61  
                        fsr 0004                 _userEndByte 046E                         l772 0F45  
                       l773 0F45                         l774 0F4B                         l790 0662  
                       l775 0F51                         l791 0668                         l769 0F63  
                       l788 064F                         l789 063A                         _GIE 005F  
                       _isr 0FC4                         fsr0 0004                         indf 0000  
       __end_ofi1_writeByte 0F32            ?_checkDataFrames 0072                        l2400 0773  
                      l2401 0773                        l2402 0778                        l2403 0789  
                      l2406 040A                        l2418 0633                        l3182 0F12  
                      l6000 05C7                        l6001 05CE                        l6002 05EA  
                      l6003 05FC                        l3179 0F25                        l6004 05FD  
                      l6005 05FD                        l3982 05AE                        l3983 05BF  
                      l8400 05EE                        l3984 05C0                        l3985 05C0  
                      l8402 05F2                        l8340 0F56                        l8404 05F3  
                      ?_isr 0070                        l8342 0F60                        l8350 0F4B  
                      l8406 05F4                        l8344 0F61                        l8408 05FA  
                      l8346 0F62                        l8338 0F52                        l8370 06CF  
                      l6682 06A6                        l6683 06A5                        l8348 0F44  
                      l6684 06B1                        l8364 06A0                        l8700 0603  
                      l6685 06CF                        l8366 06A6                        l8390 05CE  
                      l8606 0F0E                        l8702 0610                        l8710 059D  
                      l8368 06B1                        l8392 05DA                        l8608 0F1B  
                      l8704 0620                        l8712 05A2                        l8394 05E2  
                      l8714 05A7                        l8706 0581                        l8396 05E5  
                      l8716 05AE                        l8708 0598                        _ADON 00F8  
                      l8398 05E9                        l5998 05C6                        l8718 05B3  
                      l5999 05C7                        l8680 0646                        l8682 064F  
                      l8690 076F                        l8684 0662                        l8676 0637  
                      l8692 0778                        l8678 063A                        l8694 0789  
                      l8686 0761                        l8688 0764                        l8696 03A4  
                      l8698 05FE                        u3140 0661                        u3141 0660  
                      u3150 0777                        u3151 0776                        u3160 058B  
                      u3145 065D                        u2720 0F4A                        u2721 0F49  
                      u3177 05B9                        u3187 076A                        u2750 06B0  
                      u2751 06AF                        u2770 05CD                        u2771 05CC  
                      _PEIE 005E                        u2780 05E9                        u2781 05E8  
                      u2790 05FA                        u2791 05F9                        _RCIE 0465  
                      _RCIF 0065                        _OERR 00C1                        _WREN 0C62  
                      _TXIF 0064              ??_eeprom_write 00A1      __end_of_checkStartByte 04D5  
      __end_of_clearUARTErr 0FA9                        _main 0581               _startByteAddr 0463  
                      btemp 007E                        start 0012           _addDataToCheckSum 01E4  
        ?_addDataToCheckSum 0070       makeHexByte@input_byte 0023                       ??_isr 0062  
                     ?_main 0070         ??_addDataToCheckSum 0020                       _EEADR 010D  
                     _CARRY 0018        __size_of_checkRWByte 006A                       i1l800 0F3D  
                     i1l801 0F40                       i1l804 07D5                       i1l807 0FA8  
                     i1l772 0F28                       i1l780 0F84                       i1l773 0F28  
                     i1l781 0F8B                       i1l774 0F2F                       i1l782 0F8D  
                     i1l775 0F31                       i1l778 0F83                       i1l794 050E  
                     i1l779 0F84                       i1l795 04EB                       i1l796 051F  
                     i1l797 052F                       _RCREG 001A                       _RCSTA 0018  
                     _SPBRG 0099             __end_of_checkCS 069D        __size_of_checkLength 002F  
                     _TRISA 0085                       _TXREG 0019                       _TXSTA 0098  
               _writeString 0634             __end_of_getTemp 0634             __end_of_initADC 0F26  
           i1writeByte@Byte 0070                       _tempC 0464                       _tempF 0465  
                     pclath 000A                       status 0003             ?_checkStartByte 0020  
                     wtemp0 007E   __end_of_addDataToCheckSum 025B                ?_parsePacket 0070  
          __end_ofi1_strlen 0701                __end_of_main 05C3                ?_setCommands 0070  
     __size_of_checkCMDByte 0070                      ??_main 00AE        __size_of_getCommands 0021  
                i1strlen@cp 0079                 i1_writeByte 0F26               _userStartByte 046F  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D                _writeByteVal 0470                      i1l1601 04C9  
                    i1l1602 04D4                      i1l1611 02BF                      i1l1612 02CA  
                    i1l1620 057A                      i1l1605 0398                      i1l1621 0580  
                    i1l1607 035D                      i1l1615 0693                      i1l1608 03A3  
                    i1l1616 069C                      i1l1624 0248                      i1l1625 0213  
                    i1l1626 025A                      i1l1627 025A                      i1l1619 057B  
                    i1l1580 07A7                      i1l1581 07B0                      i1l1590 01DA  
                    i1l1591 01D9                      i1l6000 0703                      i1l1584 0757  
                    i1l6001 070A                      i1l1585 0760                      i1l6002 071E  
                    i1l1594 0149                      i1l6003 0730                      i1l1595 0134  
                    i1l6004 0731                      i1l1588 018E                      i1l1596 00FE  
                    i1l6005 0731                      i1l1589 01E3                      i1l1597 0148  
                    i1l1598 0149                      u300_20 0562                      u300_21 0561  
                    i1l5381 0FE2                      i1l5382 0FEA                      i1l5383 0FFF  
                    i1l4760 07D7                      u301_20 0572                      i1l4761 07F6  
                    u301_21 0571                      i1l4762 07DE                      i1l4763 07F6  
                    i1l4766 0003                      i1l3990 0338                      i1l4759 07E6  
                    i1l3991 0331                      u310_20 0709                      u302_20 0259  
                    i1l3992 0337                      i1l3976 0FD4                      u310_21 0708  
                    u302_21 0258                      i1l3993 0339                      i1l3977 0FD4  
                    i1l8410 0F33                      i1l3994 0339                      i1l8412 0F39  
                    i1l8420 07B4                      i1l8500 0134                      i1l8414 0F3C  
                    i1l8422 07D3                      i1l8430 07A1                      i1l8510 04C8  
                    i1l8502 0471                      i1l8416 0F3D                      i1l8440 0FEA  
                    u311_20 071D                      i1l8360 0F8E                      i1l8424 07D5  
                    i1l8432 07A6                      i1l8504 048E                      i1l8512 04C9  
                    i1l8520 034B                      i1l8352 0F77                      u311_21 071C  
                    i1l8418 0F40                      i1l8442 0FFF                      i1l6682 06D7  
                    i1l8434 07A7                      i1l8426 078A                      i1l8450 0756  
                    i1l8514 04CF                      i1l8506 0494                      i1l8530 0398  
                    i1l8522 035D                      i1l8354 0F7D                      i1l8610 0FC4  
                    i1l6683 06D6                      i1l6684 06E2                      i1l8436 07AD  
                    i1l8428 079B                      i1l8452 0757                      i1l8444 0732  
                    i1l8460 015B                      i1l8516 04D4                      i1l8508 04C1  
                    i1l8532 039E                      i1l8524 0363                      i1l8540 02B1  
                    i1l8356 0F8B                      i1l8380 04F7                      i1l8372 04D8  
                    i1l8620 02F0                      i1l8612 0FC8                      i1l6685 0700  
                    i1l8438 07B0                      i1l8454 075D                      i1l8446 074B  
                    i1l8462 0181                      i1l8470 018E                      i1l8534 03A3  
                    i1l8526 0390                      i1l8518 033A                      i1l8550 02CA  
                    i1l8542 02B7                      i1l8358 0F8D                      i1l8382 04FD  
                    i1l8374 04DA                      i1l8630 032B                      i1l8622 02F6  
                    i1l8614 0FCE                      u312_20 072E                      i1l8456 0760  
                    i1l8448 0751                      i1l8480 01E0                      i1l8472 01CD  
                    i1l8464 0187                      i1l8528 0397                      i1l8544 02BE  
                    i1l8536 025B                      i1l8560 0693                      i1l8552 0669  
                    i1l8640 07E5                      i1l8384 0507                      i1l8376 04E4  
                    i1l8632 0331                      i1l8624 0307                      i1l8616 02CB  
                    u304_20 0FC8                      u312_21 072D                      u304_21 0FC7  
                    i1l8650 0710                      i1l8482 01E3                      i1l8474 01D3  
                    i1l8466 018C                      i1l8458 014A                      i1l8538 0284  
                    i1l8546 02BF                      i1l8562 0699                      i1l8554 0687  
                    i1l8642 07E6                      i1l8634 07D6                      i1l8490 0030  
                    i1l8570 054A                      i1l8378 04EB                      i1l8386 050E  
                    i1l8626 030D                      i1l8618 02D8                      i1l8644 0F27  
                    i1l8660 0726                      i1l8652 0716                      i1l8476 01D8  
                    i1l8468 018D                      i1l8548 02C5                      i1l8564 069C  
                    i1l8556 068D                      i1l8636 07D7                      i1l8492 00FA  
                    i1l8484 0018                      i1l8572 0557                      i1l8580 057B  
                    i1l8388 051F                      i1l8628 031A                      i1l8646 0F2F  
                    i1l8662 0727                      i1l8654 0719                      i1l5998 0702  
                    i1l8670 06D7                      i1l8478 01DA                      i1l8558 0692  
                    i1l8590 0241                      i1l8638 07DE                      i1l8494 00FE  
                    i1l8486 001A                      i1l8582 0580                      i1l8574 0562  
                    i1l8566 0530                      i1l5999 0703                      u320_27 0FA3  
                    i1l8664 0728                      i1l8656 071D                      i1l8648 070A  
                    i1l8672 06E2                      u313_20 06E1                      i1l8592 0248  
                    i1l8584 01E4                      i1l8496 0127                      i1l8488 0025  
                    i1l8576 0572                      i1l8568 053D                      u305_20 0FCE  
                    u313_21 06E0                      u305_21 0FCD                      i1l8666 072E  
                    i1l8658 0722                      i1l8674 0700                      i1l8586 0211  
                    i1l8498 012F                      i1l8578 0579                      i1l8668 06D1  
                    i1l8588 0213                      u306_20 02E2                      u307_20 031A  
                    u307_21 0319                      u308_20 032B                      u308_21 032A  
                    u309_20 0F2E                      u309_21 0F2D                      u319_27 0F96  
                    u280_20 0F39                      u280_21 0F38                      u273_20 0F7D  
                    u273_21 0F7C                      u281_25 07BE                      u282_20 079B  
                    u274_20 0F8A                      u290_20 0030                      u282_21 079A  
                    u274_21 0F89                      u290_21 002F                      u283_20 0FE9  
                    u291_20 0147                      u283_21 0FE8                      u291_21 0146  
                    u284_20 074B                      u292_20 048E                      u276_20 051E  
                    u284_21 074A                      u292_21 048D                      u276_21 051D  
                    u285_20 015B                      u293_20 034B                      u285_21 015A  
                    u293_21 034A                      u286_20 0181                      u294_20 035C  
                    u286_21 0180                      u294_21 035B                      u295_20 0284  
                    u295_21 0283                      u287_25 019E                      u288_20 01CD  
                    u296_20 0687                      u288_21 01CC                      u296_21 0686  
                    u288_25 01C9                      u289_20 0025                      u297_20 053D  
                    u289_21 0024                      u297_21 053C                      u298_20 054A  
                    u298_21 0549                      u299_20 0557                      u299_21 0556  
                    _TRISC6 043E                      _TRISC7 043F                _checkCMDByte 025B  
      __size_of_eeprom_read 001F        __size_of_makeHexByte 0025                      _maxCmd 045D  
          __end_of_initTemp 040B            __end_of_readByte 0F8E                   ??_checkCS 0074  
          __end_of_readTemp 078A        __end_of_eeprom_write 05FE     __size_of_validatePacket 0051  
                 ??_getTemp 00A4       readString@readStorage 0022                      clrloop 0F14  
                    _strlen 069D                   ??_initADC 00A0                 readString@i 0023  
                    saved_w 007E       __size_of_clearUARTErr 001B           makeHexByte@nibOne 0022  
         makeHexByte@nibTwo 007D             eeprom_read@addr 0071  __size_of_addDataToCheckSum 0077  
            __pcstackCOMMON 0070                __pidataBANK1 07F7          __size_of_checkEven 0027  
              _clearUARTErr 0F8E          __size_of_getPacket 006F           eeprom_write@value 00A0  
                 ?i1_strlen 0070                  _csByteAddr 0453                  __pbssBANK3 0190  
        __size_of_initUSART 0012     __size_ofi1_eeprom_write 0031              _calcCSByteAddr 0451  
                __pmaintext 0581        __size_of_parsePacket 0135                  __pintentry 0004  
                   ?_strlen 00A0        __size_of_setCommands 0001                ?_writeString 0070  
                ??i1_strlen 0072                  _makeNibble 0F32            ??_checkStartByte 0022  
         __end_of_checkEven 07B1                   ?_initTemp 0070                   ?_readByte 0070  
                 ?_readTemp 00A0          __size_of_writeByte 0011    __size_of_checkDataFrames 009A  
         __end_of_getPacket 033A       __size_of_eeprom_write 003B                  _humValAddr 045B  
             ??_checkRWByte 0022                     _checkCS 0669                  _readString 04D5  
             ??_checkLength 0074              _validatePacket 0530                  _humStartHi 0459  
         __end_of_initUSART 0F64                  _humStartLo 045A                     _getTemp 05FE  
              ?i1_writeByte 0070                     _initADC 0F1B             __size_of_strlen 0033  
                   _member1 0432                     _member2 0411                     _member3 0425  
              __size_of_isr 001D        end_of_initialization 0FC0       parsePacket@dataPacket 002B  
                ??_initTemp 00A3                  ??_readByte 0072                     init_ram 0F68  
                _selectTemp 0F0E                  ??_readTemp 00A2                _eeprom_write 05C3  
              readString@ch 0025              main@testString 00B2                  _tempHiAddr 0466  
                _rwByteAddr 0462                  _tempLoAddr 0467               _dataBytesAddr 0454  
            getPacket@F1177 0190      __end_of_validatePacket 0581               ??_getCommands 0072  
                   strlen@s 00A8           __end_of_writeByte 0F52         __end_of_checkRWByte 03A4  
       __end_of_checkLength 0761                 ?_makeNibble 0070                writeString@i 00AC  
             ??_eeprom_read 0070                   _RXLenAddr 0450              i1_eeprom_write 0701  
             ??_makeHexByte 0020             ?_validatePacket 0024           ??_checkDataFrames 0074  
               ?_readString 0070         __end_of_getCommands 07F7              __end_of_strlen 06D0  
       start_initialization 0FA9                 __end_of_isr 0FE1        __size_of_writeString 0035  
              parsePacket@i 002A                   i1strlen@s 0078           __size_ofi1_strlen 0031  
               ?_selectTemp 0070      __end_ofi1_eeprom_write 0732         __end_of_eeprom_read 1000  
       __size_of_makeNibble 000F                 __pdataBANK1 00BB                 _checkRWByte 033A  
               _cmdByteAddr 0452         __end_of_makeHexByte 07D6                 _checkLength 0732  
                  ??_strlen 00A2        __size_ofi1_writeByte 000C               __pcstackBANK0 0020  
             __pcstackBANK1 00A0            eeprom_write@addr 00A2         __size_of_readString 005B  
           ?i1_eeprom_write 007A                   _checkEven 078A                 _endByteAddr 0455  
             ??_parsePacket 0024           __size_of_initTemp 0067           __size_of_readByte 0017  
         __size_of_readTemp 0029         i1eeprom_write@value 007A                   _classTerm 043E  
                 _getPacket 02CB                   __ptext730 0761                   __ptext731 0634  
                 __ptext740 04D5                   __ptext732 0F1B                   __ptext741 0530  
                 __ptext733 0F0E                   __ptext750 014A                   __ptext742 0015  
                 __ptext734 05C3                   __ptext751 0732                   __ptext743 0F77  
                 __ptext735 069D                   __ptext760 0F32                   __ptext752 078A  
                 __ptext744 07D6                   __ptext736 0F41                   __ptext728 05FE  
                 __ptext761 0000                   __ptext753 07B1                   __ptext745 01E4  
                 __ptext737 0F52                   __ptext729 03A4                   __ptext754 0F8E  
                 __ptext746 0669                   __ptext738 0FC4                   __ptext755 06D0  
                 __ptext747 025B                   __ptext739 02CB                   __ptext756 0701  
                 __ptext748 033A                   __ptext757 0F26                   __ptext749 0471  
                 __ptext758 0003                   __ptext759 0FE1                 _getCommands 07D6  
             ??_setCommands 0070                    ?_checkCS 0072                   _noDataLen 0460  
                 __pstrings 040B                    ?_getTemp 0070                    ?_initADC 0070  
       __size_of_selectTemp 0005                   _humHiAddr 0457                   _initUSART 0F52  
                 _humLoAddr 0458           interrupt_function 0004                  ?_checkEven 0072  
               _eeprom_read 0FE1               ?_checkCMDByte 0020                 _makeHexByte 07B1  
                  _GO_nDONE 00FA                  ?_getPacket 0070                   main@F1174 00BB  
               _lenByteAddr 045C         __end_of_parsePacket 014A                 __stringbase 0410  
                ?_initUSART 0070         __end_of_setCommands 0004                ??_makeNibble 0070  
                  i1_strlen 06D0                   _writeByte 0F41             _checkDataFrames 014A  
            ??_checkCMDByte 0022            ??_validatePacket 007E     __size_of_checkStartByte 0064  
                 init_fetch 0F64          __end_of_makeNibble 0F41                 _readByteVal 0461  
              ??_readString 0020                 _newLineChar 045F                 _minSizeByte 045E  
          __size_of_checkCS 0034               ?_clearUARTErr 0070            __size_of_getTemp 0036  
          __size_of_initADC 000B          i1eeprom_write@addr 007C                    _classNum 0448  
                ?_writeByte 0070       writeString@userString 00AB                _tempValHAddr 046B  
              _tempValLAddr 046C                ??_selectTemp 00A0                    _initTemp 03A4  
                  _readByte 0F77                    _readTemp 0761               __size_of_main 0042  
               ??_checkEven 0074          __end_of_readString 0530                    _groupNum 0456  
               _parsePacket 0015                    clear_ram 0F13                _tempUnitAddr 046A  
               ??_getPacket 002C                ?_checkRWByte 0020                 _setCommands 0003  
            ??_clearUARTErr 0070                ?_checkLength 0072      parsePacket@dataCounter 0028  
             ??_writeString 00AA          addDataToCheckSum@i 007D          __end_of_selectTemp 0F13  
               ??_initUSART 00A0     __end_of_checkDataFrames 01E4            ??i1_eeprom_write 007B  
                  intlevel1 0000                   stringcode 040B           makeNibble@tempNib 0070  
        getTemp@tempReading 00A5                 _tempStartHi 0468                 _tempStartLo 0469  
              ?_getCommands 0070               ??i1_writeByte 0070           getPacket@arrStore 0030  
             writeByte@Byte 00A0                    strlen@cp 00A9        __end_of_checkCMDByte 02CB  
                  stringdir 040B                    stringtab 040B                 ??_writeByte 00A0  
               _timeoutByte 046D         __end_of_writeString 0669               ?_eeprom_write 00A0  
              ?_eeprom_read 0070              _checkStartByte 0471                ?_makeHexByte 007D  
