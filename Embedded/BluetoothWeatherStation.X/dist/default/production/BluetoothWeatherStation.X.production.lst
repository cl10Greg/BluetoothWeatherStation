

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Thu Dec 12 12:56:17 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 30 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 30 "main.c"
    45  2007  FF3A               	dw 0xFFFB & 0xFF7F & 0xFFBF & 0xFFFE & 0xFFFF ;#
    46                           	FNCALL	_main,_initUSART
    47                           	FNCALL	_main,_initADC
    48                           	FNCALL	_main,_writeString
    49                           	FNCALL	_main,_eeprom_write
    50                           	FNCALL	_main,_readString
    51                           	FNCALL	_main,_eeprom_read
    52                           	FNCALL	_main,_writeByte
    53                           	FNCALL	_main,_parsePacket
    54                           	FNCALL	_main,_validatePacket
    55                           	FNCALL	_validatePacket,_checkStartByte
    56                           	FNCALL	_validatePacket,_checkRWByte
    57                           	FNCALL	_validatePacket,_checkCMDByte
    58                           	FNCALL	_validatePacket,_checkDataFrames
    59                           	FNCALL	_validatePacket,_addDataToCheckSum
    60                           	FNCALL	_validatePacket,_checkCS
    61                           	FNCALL	_parsePacket,_checkLength
    62                           	FNCALL	_parsePacket,_checkEven
    63                           	FNCALL	_parsePacket,_makeHexByte
    64                           	FNCALL	_parsePacket,_eeprom_write
    65                           	FNCALL	_parsePacket,_strlen
    66                           	FNCALL	_parsePacket,_eeprom_read
    67                           	FNCALL	_addDataToCheckSum,_eeprom_read
    68                           	FNCALL	_addDataToCheckSum,_eeprom_write
    69                           	FNCALL	_checkCS,_eeprom_read
    70                           	FNCALL	_checkCS,_writeByte
    71                           	FNCALL	_checkCMDByte,_eeprom_read
    72                           	FNCALL	_checkCMDByte,_eeprom_write
    73                           	FNCALL	_checkCMDByte,_writeByte
    74                           	FNCALL	_checkRWByte,_eeprom_read
    75                           	FNCALL	_checkRWByte,_writeByte
    76                           	FNCALL	_checkRWByte,_eeprom_write
    77                           	FNCALL	_checkStartByte,_eeprom_read
    78                           	FNCALL	_checkStartByte,_writeByte
    79                           	FNCALL	_checkStartByte,_eeprom_write
    80                           	FNCALL	_checkDataFrames,_eeprom_read
    81                           	FNCALL	_checkDataFrames,_writeByte
    82                           	FNCALL	_checkLength,_eeprom_read
    83                           	FNCALL	_checkLength,_writeByte
    84                           	FNCALL	_checkEven,_eeprom_read
    85                           	FNCALL	_checkEven,_writeByte
    86                           	FNCALL	_makeHexByte,_makeNibble
    87                           	FNCALL	_readString,_readByte
    88                           	FNCALL	_readString,_eeprom_write
    89                           	FNCALL	_writeString,_writeByte
    90                           	FNCALL	_writeString,_strlen
    91                           	FNROOT	_main
    92                           	global	main@F1146
    93                           	global	main@F1144
    94                           psect	idataBANK0,class=CODE,space=0,delta=2
    95                           global __pidataBANK0
    96  014C                     __pidataBANK0:
    97                           	file	"main.c"
    98                           	line	44
    99                           
   100                           ;initializer for main@F1146
   101  014C  344C               	retlw	04Ch
   102  014D  3465               	retlw	065h
   103  014E  346E               	retlw	06Eh
   104  014F  3467               	retlw	067h
   105  0150  3474               	retlw	074h
   106  0151  3468               	retlw	068h
   107  0152  343A               	retlw	03Ah
   108  0153  3420               	retlw	020h
   109  0154  3400               	retlw	0
   110                           psect	idataBANK1,class=CODE,space=0,delta=2
   111                           global __pidataBANK1
   112  0143                     __pidataBANK1:
   113                           	line	43
   114                           
   115                           ;initializer for main@F1144
   116  0143  3457               	retlw	057h
   117  0144  3465               	retlw	065h
   118  0145  346C               	retlw	06Ch
   119  0146  3463               	retlw	063h
   120  0147  346F               	retlw	06Fh
   121  0148  346D               	retlw	06Dh
   122  0149  3465               	retlw	065h
   123  014A  340A               	retlw	0Ah
   124  014B  3400               	retlw	0
   125                           	global	_member2
   126                           psect	strings,class=STRING,delta=2
   127                           global __pstrings
   128  0003                     __pstrings:
   129                           ;	global	stringdir,stringtab,__stringbase
   130  0003                     stringtab:
   131                           ;	String table - string pointers are 1 byte each
   132  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   133  0003  3000               movlw high(stringdir)
   134  0004  008A               movwf pclath
   135  0005  0804               movf fsr,w
   136  0006  0A84               incf fsr
   137  0007  0782               	addwf pc
   138  0008                     __stringbase:
   139  0008  3400               	retlw	0
   140                           psect	strings
   141                           	file	"userMacro.h"
   142                           	line	20
   143  0009                     _member2:
   144  0009  3444               	retlw	044h
   145  000A  3465               	retlw	065h
   146  000B  3465               	retlw	065h
   147  000C  3470               	retlw	070h
   148  000D  3461               	retlw	061h
   149  000E  346B               	retlw	06Bh
   150  000F  3420               	retlw	020h
   151  0010  3443               	retlw	043h
   152  0011  3468               	retlw	068h
   153  0012  3461               	retlw	061h
   154  0013  346E               	retlw	06Eh
   155  0014  3464               	retlw	064h
   156  0015  3472               	retlw	072h
   157  0016  3461               	retlw	061h
   158  0017  3473               	retlw	073h
   159  0018  3465               	retlw	065h
   160  0019  346B               	retlw	06Bh
   161  001A  3461               	retlw	061h
   162  001B  3472               	retlw	072h
   163  001C  3400               	retlw	0
   164                           	global	_member3
   165                           psect	strings
   166                           	file	"userMacro.h"
   167                           	line	21
   168  001D                     _member3:
   169  001D  3441               	retlw	041h
   170  001E  3470               	retlw	070h
   171  001F  3475               	retlw	075h
   172  0020  3472               	retlw	072h
   173  0021  3476               	retlw	076h
   174  0022  3465               	retlw	065h
   175  0023  3420               	retlw	020h
   176  0024  3442               	retlw	042h
   177  0025  3468               	retlw	068h
   178  0026  3469               	retlw	069h
   179  0027  3464               	retlw	064h
   180  0028  3465               	retlw	065h
   181  0029  3400               	retlw	0
   182                           	global	_member1
   183                           psect	strings
   184                           	file	"userMacro.h"
   185                           	line	19
   186  002A                     _member1:
   187  002A  3447               	retlw	047h
   188  002B  3472               	retlw	072h
   189  002C  3465               	retlw	065h
   190  002D  3467               	retlw	067h
   191  002E  3420               	retlw	020h
   192  002F  3447               	retlw	047h
   193  0030  3469               	retlw	069h
   194  0031  3472               	retlw	072h
   195  0032  3461               	retlw	061h
   196  0033  3472               	retlw	072h
   197  0034  3464               	retlw	064h
   198  0035  3400               	retlw	0
   199                           	global	_classTerm
   200                           psect	strings
   201                           	file	"userMacro.h"
   202                           	line	23
   203  0036                     _classTerm:
   204  0036  3446               	retlw	046h
   205  0037  3461               	retlw	061h
   206  0038  346C               	retlw	06Ch
   207  0039  346C               	retlw	06Ch
   208  003A  3420               	retlw	020h
   209  003B  3432               	retlw	032h
   210  003C  3430               	retlw	030h
   211  003D  3431               	retlw	031h
   212  003E  3433               	retlw	033h
   213  003F  3400               	retlw	0
   214                           	global	_classNum
   215                           psect	strings
   216                           	file	"userMacro.h"
   217                           	line	22
   218  0040                     _classNum:
   219  0040  3445               	retlw	045h
   220  0041  3443               	retlw	043h
   221  0042  3445               	retlw	045h
   222  0043  3435               	retlw	035h
   223  0044  3436               	retlw	036h
   224  0045  3432               	retlw	032h
   225  0046  3430               	retlw	030h
   226  0047  3400               	retlw	0
   227                           	global	_RXLenAddr
   228                           psect	strings
   229                           	file	"userMacro.h"
   230                           	line	33
   231  0048                     _RXLenAddr:
   232  0048  3400               	retlw	0
   233                           	global	_calcCSByteAddr
   234                           psect	strings
   235                           	file	"userMacro.h"
   236                           	line	41
   237  0049                     _calcCSByteAddr:
   238  0049  3430               	retlw	030h
   239                           	global	_cmdByteAddr
   240                           psect	strings
   241                           	file	"userMacro.h"
   242                           	line	36
   243  004A                     _cmdByteAddr:
   244  004A  3403               	retlw	03h
   245                           	global	_csByteAddr
   246                           psect	strings
   247                           	file	"userMacro.h"
   248                           	line	38
   249  004B                     _csByteAddr:
   250  004B  3405               	retlw	05h
   251                           	global	_dataBytesAddr
   252                           psect	strings
   253                           	file	"userMacro.h"
   254                           	line	40
   255  004C                     _dataBytesAddr:
   256  004C  3407               	retlw	07h
   257                           	global	_endByteAddr
   258                           psect	strings
   259                           	file	"userMacro.h"
   260                           	line	39
   261  004D                     _endByteAddr:
   262  004D  3406               	retlw	06h
   263                           	global	_groupNum
   264                           psect	strings
   265                           	file	"userMacro.h"
   266                           	line	24
   267  004E                     _groupNum:
   268  004E  3432               	retlw	032h
   269                           	global	_lenByteAddr
   270                           psect	strings
   271                           	file	"userMacro.h"
   272                           	line	37
   273  004F                     _lenByteAddr:
   274  004F  3404               	retlw	04h
   275                           	global	_maxCmd
   276                           psect	strings
   277                           	file	"userMacro.h"
   278                           	line	31
   279  0050                     _maxCmd:
   280  0050  340E               	retlw	0Eh
   281                           	global	_minSizeByte
   282                           psect	strings
   283                           	file	"userMacro.h"
   284                           	line	29
   285  0051                     _minSizeByte:
   286  0051  340A               	retlw	0Ah
   287                           	global	_newLineChar
   288                           psect	strings
   289                           	file	"userMacro.h"
   290                           	line	28
   291  0052                     _newLineChar:
   292  0052  340A               	retlw	0Ah
   293                           	global	_noDataLen
   294                           psect	strings
   295                           	file	"userMacro.h"
   296                           	line	30
   297  0053                     _noDataLen:
   298  0053  340A               	retlw	0Ah
   299                           	global	_rwByteAddr
   300                           psect	strings
   301                           	file	"userMacro.h"
   302                           	line	35
   303  0054                     _rwByteAddr:
   304  0054  3402               	retlw	02h
   305                           	global	_startByteAddr
   306                           psect	strings
   307                           	file	"userMacro.h"
   308                           	line	34
   309  0055                     _startByteAddr:
   310  0055  3401               	retlw	01h
   311                           	global	_userEndByte
   312                           psect	strings
   313                           	file	"userMacro.h"
   314                           	line	27
   315  0056                     _userEndByte:
   316  0056  340A               	retlw	0Ah
   317                           	global	_userStartByte
   318                           psect	strings
   319                           	file	"userMacro.h"
   320                           	line	26
   321  0057                     _userStartByte:
   322  0057  34AA               	retlw	0AAh
   323                           	global	_member2
   324                           	global	_member3
   325                           	global	_member1
   326                           	global	_classTerm
   327                           	global	_classNum
   328                           	global	_RXLenAddr
   329                           	global	_calcCSByteAddr
   330                           	global	_cmdByteAddr
   331                           	global	_csByteAddr
   332                           	global	_dataBytesAddr
   333                           	global	_endByteAddr
   334                           	global	_groupNum
   335                           	global	_lenByteAddr
   336                           	global	_maxCmd
   337                           	global	_minSizeByte
   338                           	global	_newLineChar
   339                           	global	_noDataLen
   340                           	global	_rwByteAddr
   341                           	global	_startByteAddr
   342                           	global	_userEndByte
   343                           	global	_userStartByte
   344                           	global	main@F1148
   345                           	global	_ADCON0
   346  001F                     _ADCON0	set	31
   347                           	global	_ADRESH
   348  001E                     _ADRESH	set	30
   349                           	global	_RCREG
   350  001A                     _RCREG	set	26
   351                           	global	_RCSTA
   352  0018                     _RCSTA	set	24
   353                           	global	_TXREG
   354  0019                     _TXREG	set	25
   355                           	global	_ADON
   356  00F8                     _ADON	set	248
   357                           	global	_CARRY
   358  0018                     _CARRY	set	24
   359                           	global	_GIE
   360  005F                     _GIE	set	95
   361                           	global	_GO_nDONE
   362  00FA                     _GO_nDONE	set	250
   363                           	global	_RCIF
   364  0065                     _RCIF	set	101
   365                           	global	_TXIF
   366  0064                     _TXIF	set	100
   367                           	global	_ADCON1
   368  009F                     _ADCON1	set	159
   369                           	global	_ADRESL
   370  009E                     _ADRESL	set	158
   371                           	global	_SPBRG
   372  0099                     _SPBRG	set	153
   373                           	global	_TRISA
   374  0085                     _TRISA	set	133
   375                           	global	_TXSTA
   376  0098                     _TXSTA	set	152
   377                           	global	_TRISC6
   378  043E                     _TRISC6	set	1086
   379                           	global	_TRISC7
   380  043F                     _TRISC7	set	1087
   381                           	global	_EEADR
   382  010D                     _EEADR	set	269
   383                           	global	_EEDATA
   384  010C                     _EEDATA	set	268
   385                           	global	_EECON1
   386  018C                     _EECON1	set	396
   387                           	global	_EECON2
   388  018D                     _EECON2	set	397
   389                           	global	_RD
   390  0C60                     _RD	set	3168
   391                           	global	_WR
   392  0C61                     _WR	set	3169
   393                           	global	_WREN
   394  0C62                     _WREN	set	3170
   395                           	file	"C:\Users\ggirard\AppData\Local\Temp\s6p8."
   396                           	line	#
   397                           psect cinit,class=CODE,delta=2
   398                           global start_initialization
   399  0213                     start_initialization:
   400                           
   401                           psect	bssBANK0,class=BANK0,space=1
   402                           global __pbssBANK0
   403  0020                     __pbssBANK0:
   404  0020                     main@F1148:
   405  0020                            ds      50
   406                           
   407                           psect	dataBANK0,class=BANK0,space=1
   408                           global __pdataBANK0
   409  0062                     __pdataBANK0:
   410                           	file	"main.c"
   411                           	line	44
   412  0062                     main@F1146:
   413  0062                            ds      9
   414                           
   415                           psect	dataBANK1,class=BANK1,space=1
   416                           global __pdataBANK1
   417  00E4                     __pdataBANK1:
   418                           	file	"main.c"
   419                           	line	43
   420  00E4                     main@F1144:
   421  00E4                            ds      9
   422                           
   423                           psect clrtext,class=CODE,delta=2
   424                           global clear_ram
   425                           ;	Called with FSR containing the base address, and
   426                           ;	W with the last address+1
   427  013B                     clear_ram:
   428  013B  0064               	clrwdt			;clear the watchdog before getting into this loop
   429  013C                     clrloop:
   430  013C  0180               	clrf	indf		;clear RAM location pointed to by FSR
   431  013D  0A84               	incf	fsr,f		;increment pointer
   432  013E  0604               	xorwf	fsr,w		;XOR with final address
   433  013F  1903               	btfsc	status,2	;have we reached the end yet?
   434  0140  3400               	retlw	0		;all done for this memory range, return
   435  0141  0604               	xorwf	fsr,w		;XOR again to restore value
   436  0142  293C               	goto	clrloop		;do the next byte
   437                           
   438                           ; Clear objects allocated to BANK0
   439                           psect cinit,class=CODE,delta=2
   440  0213  1383               	bcf	status, 7	;select IRP bank0
   441  0214  3020               	movlw	low(__pbssBANK0)
   442  0215  0084               	movwf	fsr
   443  0216  3052               	movlw	low((__pbssBANK0)+032h)
   444  0217  120A  118A  213B   	fcall	clear_ram
              120A  118A         
   445                           global btemp
   446                           psect inittext,class=CODE,delta=2
   447                           global init_fetch,btemp
   448                           ;	Called with low address in FSR and high address in W
   449  0195                     init_fetch:
   450  0195  087E               	movf btemp,w
   451  0196  008A               	movwf pclath
   452  0197  087F               	movf btemp+1,w
   453  0198  0082               	movwf pc
   454                           global init_ram
   455                           ;Called with:
   456                           ;	high address of idata address in btemp 
   457                           ;	low address of idata address in btemp+1 
   458                           ;	low address of data in FSR
   459                           ;	high address + 1 of data in btemp-1
   460  0199                     init_ram:
   461  0199  120A  118A  2195   	fcall init_fetch
              120A  118A         
   462  019E  0080               	movwf indf,f
   463  019F  0A84               	incf fsr,f
   464  01A0  0804               	movf fsr,w
   465  01A1  067D               	xorwf btemp-1,w
   466  01A2  1903               	btfsc status,2
   467  01A3  3400               	retlw 0
   468  01A4  0AFF               	incf btemp+1,f
   469  01A5  1903               	btfsc status,2
   470  01A6  0AFE               	incf btemp,f
   471  01A7  2999               	goto init_ram
   472                           ; Initialize objects allocated to BANK1
   473                           psect cinit,class=CODE,delta=2
   474                           global init_ram, __pidataBANK1
   475  021C  30ED               	movlw low(__pdataBANK1+9)
   476  021D  00FD               	movwf btemp-1,f
   477  021E  3001               	movlw high(__pidataBANK1)
   478  021F  00FE               	movwf btemp,f
   479  0220  3043               	movlw low(__pidataBANK1)
   480  0221  00FF               	movwf btemp+1,f
   481  0222  30E4               	movlw low(__pdataBANK1)
   482  0223  0084               	movwf fsr,f
   483  0224  120A  118A  2199   	fcall init_ram
              120A  118A         
   484                           ; Initialize objects allocated to BANK0
   485                           psect cinit,class=CODE,delta=2
   486                           global init_ram, __pidataBANK0
   487  0229  306B               	movlw low(__pdataBANK0+9)
   488  022A  00FD               	movwf btemp-1,f
   489  022B  3001               	movlw high(__pidataBANK0)
   490  022C  00FE               	movwf btemp,f
   491  022D  304C               	movlw low(__pidataBANK0)
   492  022E  00FF               	movwf btemp+1,f
   493  022F  3062               	movlw low(__pdataBANK0)
   494  0230  0084               	movwf fsr,f
   495  0231  120A  118A  2199   	fcall init_ram
              120A  118A         
   496                           psect cinit,class=CODE,delta=2
   497                           global end_of_initialization
   498                           
   499                           ;End of C runtime variable initialization code
   500                           
   501  0236                     end_of_initialization:
   502  0236  0183               clrf status
   503  0237  120A  118A  2E19   ljmp _main	;jump to C main() function
   504                           psect	cstackBANK1,class=BANK1,space=1
   505                           global __pcstackBANK1
   506  00A0                     __pcstackBANK1:
   507                           	global	main@arrStore
   508  00A0                     main@arrStore:	; 50 bytes @ 0x0
   509  00A0                     	ds	50
   510                           	global	main@testString
   511  00D2                     main@testString:	; 9 bytes @ 0x32
   512  00D2                     	ds	9
   513                           	global	main@counterText
   514  00DB                     main@counterText:	; 9 bytes @ 0x3B
   515  00DB                     	ds	9
   516                           psect	cstackCOMMON,class=COMMON,space=1
   517                           global __pcstackCOMMON
   518  0070                     __pcstackCOMMON:
   519                           	global	??_eeprom_read
   520  0070                     ??_eeprom_read:	; 0 bytes @ 0x0
   521                           	global	?_addDataToCheckSum
   522  0070                     ?_addDataToCheckSum:	; 0 bytes @ 0x0
   523                           	global	?_initUSART
   524  0070                     ?_initUSART:	; 0 bytes @ 0x0
   525                           	global	??_initUSART
   526  0070                     ??_initUSART:	; 0 bytes @ 0x0
   527                           	global	?_writeByte
   528  0070                     ?_writeByte:	; 0 bytes @ 0x0
   529                           	global	??_writeByte
   530  0070                     ??_writeByte:	; 0 bytes @ 0x0
   531                           	global	??_readByte
   532  0070                     ??_readByte:	; 0 bytes @ 0x0
   533                           	global	?_writeString
   534  0070                     ?_writeString:	; 0 bytes @ 0x0
   535                           	global	?_readString
   536  0070                     ?_readString:	; 0 bytes @ 0x0
   537                           	global	??_makeNibble
   538  0070                     ??_makeNibble:	; 0 bytes @ 0x0
   539                           	global	?_parsePacket
   540  0070                     ?_parsePacket:	; 0 bytes @ 0x0
   541                           	global	?_initADC
   542  0070                     ?_initADC:	; 0 bytes @ 0x0
   543                           	global	??_initADC
   544  0070                     ??_initADC:	; 0 bytes @ 0x0
   545                           	global	?_eeprom_read
   546  0070                     ?_eeprom_read:	; 1 bytes @ 0x0
   547                           	global	?_readByte
   548  0070                     ?_readByte:	; 1 bytes @ 0x0
   549                           	global	?_makeNibble
   550  0070                     ?_makeNibble:	; 1 bytes @ 0x0
   551                           	global	?_strlen
   552  0070                     ?_strlen:	; 2 bytes @ 0x0
   553                           	global	?_main
   554  0070                     ?_main:	; 2 bytes @ 0x0
   555                           	global	writeByte@Byte
   556  0070                     writeByte@Byte:	; 1 bytes @ 0x0
   557                           	global	makeNibble@tempNib
   558  0070                     makeNibble@tempNib:	; 1 bytes @ 0x0
   559  0070                     	ds	1
   560                           	global	eeprom_read@addr
   561  0071                     eeprom_read@addr:	; 1 bytes @ 0x1
   562  0071                     	ds	1
   563                           	global	??_strlen
   564  0072                     ??_strlen:	; 0 bytes @ 0x2
   565                           	global	?_checkEven
   566  0072                     ?_checkEven:	; 2 bytes @ 0x2
   567                           	global	?_checkLength
   568  0072                     ?_checkLength:	; 2 bytes @ 0x2
   569                           	global	?_checkDataFrames
   570  0072                     ?_checkDataFrames:	; 2 bytes @ 0x2
   571                           	global	?_checkCS
   572  0072                     ?_checkCS:	; 2 bytes @ 0x2
   573  0072                     	ds	2
   574                           	global	??_checkEven
   575  0074                     ??_checkEven:	; 0 bytes @ 0x4
   576                           	global	??_checkLength
   577  0074                     ??_checkLength:	; 0 bytes @ 0x4
   578                           	global	??_checkDataFrames
   579  0074                     ??_checkDataFrames:	; 0 bytes @ 0x4
   580                           	global	??_checkCS
   581  0074                     ??_checkCS:	; 0 bytes @ 0x4
   582  0074                     	ds	4
   583                           	global	strlen@s
   584  0078                     strlen@s:	; 1 bytes @ 0x8
   585  0078                     	ds	1
   586                           	global	strlen@cp
   587  0079                     strlen@cp:	; 1 bytes @ 0x9
   588  0079                     	ds	1
   589                           	global	??_writeString
   590  007A                     ??_writeString:	; 0 bytes @ 0xA
   591                           	global	?_eeprom_write
   592  007A                     ?_eeprom_write:	; 1 bytes @ 0xA
   593                           	global	eeprom_write@value
   594  007A                     eeprom_write@value:	; 1 bytes @ 0xA
   595  007A                     	ds	1
   596                           	global	??_eeprom_write
   597  007B                     ??_eeprom_write:	; 0 bytes @ 0xB
   598                           	global	writeString@userString
   599  007B                     writeString@userString:	; 1 bytes @ 0xB
   600  007B                     	ds	1
   601                           	global	eeprom_write@addr
   602  007C                     eeprom_write@addr:	; 1 bytes @ 0xC
   603                           	global	writeString@i
   604  007C                     writeString@i:	; 2 bytes @ 0xC
   605  007C                     	ds	1
   606                           	global	?_makeHexByte
   607  007D                     ?_makeHexByte:	; 1 bytes @ 0xD
   608                           	global	makeHexByte@nibTwo
   609  007D                     makeHexByte@nibTwo:	; 1 bytes @ 0xD
   610                           	global	addDataToCheckSum@i
   611  007D                     addDataToCheckSum@i:	; 1 bytes @ 0xD
   612  007D                     	ds	1
   613                           	global	??_validatePacket
   614  007E                     ??_validatePacket:	; 0 bytes @ 0xE
   615                           psect	cstackBANK0,class=BANK0,space=1
   616                           global __pcstackBANK0
   617  0052                     __pcstackBANK0:
   618                           	global	??_addDataToCheckSum
   619  0052                     ??_addDataToCheckSum:	; 0 bytes @ 0x0
   620                           	global	??_readString
   621  0052                     ??_readString:	; 0 bytes @ 0x0
   622                           	global	??_makeHexByte
   623  0052                     ??_makeHexByte:	; 0 bytes @ 0x0
   624                           	global	?_checkStartByte
   625  0052                     ?_checkStartByte:	; 2 bytes @ 0x0
   626                           	global	?_checkRWByte
   627  0052                     ?_checkRWByte:	; 2 bytes @ 0x0
   628                           	global	?_checkCMDByte
   629  0052                     ?_checkCMDByte:	; 2 bytes @ 0x0
   630  0052                     	ds	2
   631                           	global	??_checkStartByte
   632  0054                     ??_checkStartByte:	; 0 bytes @ 0x2
   633                           	global	??_checkRWByte
   634  0054                     ??_checkRWByte:	; 0 bytes @ 0x2
   635                           	global	??_checkCMDByte
   636  0054                     ??_checkCMDByte:	; 0 bytes @ 0x2
   637                           	global	readString@readStorage
   638  0054                     readString@readStorage:	; 1 bytes @ 0x2
   639                           	global	makeHexByte@nibOne
   640  0054                     makeHexByte@nibOne:	; 1 bytes @ 0x2
   641  0054                     	ds	1
   642                           	global	makeHexByte@input_byte
   643  0055                     makeHexByte@input_byte:	; 1 bytes @ 0x3
   644                           	global	readString@i
   645  0055                     readString@i:	; 2 bytes @ 0x3
   646  0055                     	ds	1
   647                           	global	??_parsePacket
   648  0056                     ??_parsePacket:	; 0 bytes @ 0x4
   649                           	global	?_validatePacket
   650  0056                     ?_validatePacket:	; 2 bytes @ 0x4
   651  0056                     	ds	1
   652                           	global	readString@ch
   653  0057                     readString@ch:	; 1 bytes @ 0x5
   654  0057                     	ds	3
   655                           	global	parsePacket@dataCounter
   656  005A                     parsePacket@dataCounter:	; 2 bytes @ 0x8
   657  005A                     	ds	2
   658                           	global	parsePacket@i
   659  005C                     parsePacket@i:	; 1 bytes @ 0xA
   660  005C                     	ds	1
   661                           	global	parsePacket@dataPacket
   662  005D                     parsePacket@dataPacket:	; 1 bytes @ 0xB
   663  005D                     	ds	1
   664                           	global	??_main
   665  005E                     ??_main:	; 0 bytes @ 0xC
   666  005E                     	ds	4
   667 ;;Data sizes: Strings 0, constant 79, data 18, bss 50, persistent 0 stack 0
   668 ;;Auto spaces:   Size  Autos    Used
   669 ;; COMMON          14     14      14
   670 ;; BANK0           80     16      75
   671 ;; BANK1           80     68      77
   672 ;; BANK3           96      0       0
   673 ;; BANK2           96      0       0
   674                           
   675 ;;
   676 ;; Pointer list with targets:
   677                           
   678 ;; ?_strlen	unsigned int  size(1) Largest target is 50
   679 ;;		 -> main@arrStore(BANK1[50]), main@counterText(BANK1[9]), main@testString(BANK1[9]), 
   680 ;;
   681 ;; strlen@s	PTR const unsigned char  size(1) Largest target is 50
   682 ;;		 -> main@arrStore(BANK1[50]), main@counterText(BANK1[9]), main@testString(BANK1[9]), 
   683 ;;
   684 ;; strlen@cp	PTR const unsigned char  size(1) Largest target is 50
   685 ;;		 -> main@arrStore(BANK1[50]), main@counterText(BANK1[9]), main@testString(BANK1[9]), 
   686 ;;
   687 ;; parsePacket@dataPacket	PTR unsigned char  size(1) Largest target is 50
   688 ;;		 -> main@arrStore(BANK1[50]), 
   689 ;;
   690 ;; readString@readStorage	PTR unsigned char  size(1) Largest target is 50
   691 ;;		 -> main@arrStore(BANK1[50]), 
   692 ;;
   693 ;; writeString@userString	PTR unsigned char  size(1) Largest target is 50
   694 ;;		 -> main@arrStore(BANK1[50]), main@counterText(BANK1[9]), main@testString(BANK1[9]), 
   695 ;;
   696                           
   697                           
   698 ;;
   699 ;; Critical Paths under _main in COMMON
   700 ;;
   701 ;;   _main->_writeString
   702 ;;   _validatePacket->_addDataToCheckSum
   703 ;;   _parsePacket->_makeHexByte
   704 ;;   _addDataToCheckSum->_eeprom_write
   705 ;;   _checkCS->_eeprom_read
   706 ;;   _checkCMDByte->_eeprom_write
   707 ;;   _checkRWByte->_eeprom_write
   708 ;;   _checkStartByte->_eeprom_write
   709 ;;   _checkDataFrames->_eeprom_read
   710 ;;   _checkLength->_eeprom_read
   711 ;;   _checkEven->_eeprom_read
   712 ;;   _makeHexByte->_eeprom_write
   713 ;;   _readString->_eeprom_write
   714 ;;   _writeString->_strlen
   715 ;;   _eeprom_write->_strlen
   716 ;;
   717 ;; Critical Paths under _main in BANK0
   718 ;;
   719 ;;   _main->_parsePacket
   720 ;;   _validatePacket->_checkStartByte
   721 ;;   _validatePacket->_checkRWByte
   722 ;;   _validatePacket->_checkCMDByte
   723 ;;   _parsePacket->_makeHexByte
   724 ;;
   725 ;; Critical Paths under _main in BANK1
   726 ;;
   727 ;;   None.
   728 ;;
   729 ;; Critical Paths under _main in BANK3
   730 ;;
   731 ;;   None.
   732 ;;
   733 ;; Critical Paths under _main in BANK2
   734 ;;
   735 ;;   None.
   736                           
   737 ;;
   738 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   739 ;;
   740                           
   741 ;;
   742 ;;Call Graph Tables:
   743 ;;
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (0) _main                                                72    72      0    1885
   748 ;;                                             12 BANK0      4     4      0
   749 ;;                                              0 BANK1     68    68      0
   750 ;;                          _initUSART
   751 ;;                            _initADC
   752 ;;                        _writeString
   753 ;;                       _eeprom_write
   754 ;;                         _readString
   755 ;;                        _eeprom_read
   756 ;;                          _writeByte
   757 ;;                        _parsePacket
   758 ;;                     _validatePacket
   759 ;; ---------------------------------------------------------------------------------
   760 ;; (1) _validatePacket                                       2     0      2     488
   761 ;;                                              4 BANK0      2     0      2
   762 ;;                     _checkStartByte
   763 ;;                        _checkRWByte
   764 ;;                       _checkCMDByte
   765 ;;                    _checkDataFrames
   766 ;;                  _addDataToCheckSum
   767 ;;                            _checkCS
   768 ;; ---------------------------------------------------------------------------------
   769 ;; (1) _parsePacket                                          8     8      0     783
   770 ;;                                              4 BANK0      8     8      0
   771 ;;                        _checkLength
   772 ;;                          _checkEven
   773 ;;                        _makeHexByte
   774 ;;                       _eeprom_write
   775 ;;                             _strlen
   776 ;;                        _eeprom_read
   777 ;; ---------------------------------------------------------------------------------
   778 ;; (2) _addDataToCheckSum                                    3     3      0     118
   779 ;;                                             13 COMMON     1     1      0
   780 ;;                                              0 BANK0      2     2      0
   781 ;;                        _eeprom_read
   782 ;;                       _eeprom_write
   783 ;; ---------------------------------------------------------------------------------
   784 ;; (2) _checkCS                                              3     1      2      44
   785 ;;                                              2 COMMON     3     1      2
   786 ;;                        _eeprom_read
   787 ;;                          _writeByte
   788 ;; ---------------------------------------------------------------------------------
   789 ;; (2) _checkCMDByte                                         4     2      2      94
   790 ;;                                              0 BANK0      4     2      2
   791 ;;                        _eeprom_read
   792 ;;                       _eeprom_write
   793 ;;                          _writeByte
   794 ;; ---------------------------------------------------------------------------------
   795 ;; (2) _checkRWByte                                          4     2      2      94
   796 ;;                                              0 BANK0      4     2      2
   797 ;;                        _eeprom_read
   798 ;;                          _writeByte
   799 ;;                       _eeprom_write
   800 ;; ---------------------------------------------------------------------------------
   801 ;; (2) _checkStartByte                                       4     2      2      94
   802 ;;                                              0 BANK0      4     2      2
   803 ;;                        _eeprom_read
   804 ;;                          _writeByte
   805 ;;                       _eeprom_write
   806 ;; ---------------------------------------------------------------------------------
   807 ;; (2) _checkDataFrames                                      8     6      2      44
   808 ;;                                              2 COMMON     8     6      2
   809 ;;                        _eeprom_read
   810 ;;                          _writeByte
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (2) _checkLength                                          3     1      2      44
   813 ;;                                              2 COMMON     3     1      2
   814 ;;                        _eeprom_read
   815 ;;                          _writeByte
   816 ;; ---------------------------------------------------------------------------------
   817 ;; (2) _checkEven                                            3     1      2      44
   818 ;;                                              2 COMMON     3     1      2
   819 ;;                        _eeprom_read
   820 ;;                          _writeByte
   821 ;; ---------------------------------------------------------------------------------
   822 ;; (2) _makeHexByte                                          5     4      1     134
   823 ;;                                             13 COMMON     1     0      1
   824 ;;                                              0 BANK0      4     4      0
   825 ;;                         _makeNibble
   826 ;;                       _eeprom_write (ARG)
   827 ;;                             _strlen (ARG)
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (1) _readString                                           6     6      0     164
   830 ;;                                              0 BANK0      6     6      0
   831 ;;                           _readByte
   832 ;;                       _eeprom_write
   833 ;; ---------------------------------------------------------------------------------
   834 ;; (1) _writeString                                          4     4      0     223
   835 ;;                                             10 COMMON     4     4      0
   836 ;;                          _writeByte
   837 ;;                             _strlen
   838 ;; ---------------------------------------------------------------------------------
   839 ;; (1) _initADC                                              0     0      0       0
   840 ;; ---------------------------------------------------------------------------------
   841 ;; (3) _eeprom_read                                          2     2      0      22
   842 ;;                                              0 COMMON     2     2      0
   843 ;; ---------------------------------------------------------------------------------
   844 ;; (3) _makeNibble                                           1     1      0      66
   845 ;;                                              0 COMMON     1     1      0
   846 ;; ---------------------------------------------------------------------------------
   847 ;; (3) _eeprom_write                                         3     2      1      50
   848 ;;                                             10 COMMON     3     2      1
   849 ;;                         _makeNibble (ARG)
   850 ;;                             _strlen (ARG)
   851 ;;                        _eeprom_read (ARG)
   852 ;; ---------------------------------------------------------------------------------
   853 ;; (2) _strlen                                              10     8      2      89
   854 ;;                                              0 COMMON    10     8      2
   855 ;; ---------------------------------------------------------------------------------
   856 ;; (2) _readByte                                             0     0      0       0
   857 ;; ---------------------------------------------------------------------------------
   858 ;; (3) _writeByte                                            1     1      0      22
   859 ;;                                              0 COMMON     1     1      0
   860 ;; ---------------------------------------------------------------------------------
   861 ;; (1) _initUSART                                            0     0      0       0
   862 ;; ---------------------------------------------------------------------------------
   863 ;; Estimated maximum stack depth 3
   864 ;; ---------------------------------------------------------------------------------
   865                           
   866 ;; Call Graph Graphs:
   867                           
   868 ;; _main (ROOT)
   869 ;;   _initUSART
   870 ;;   _initADC
   871 ;;   _writeString
   872 ;;     _writeByte
   873 ;;     _strlen
   874 ;;   _eeprom_write
   875 ;;     _makeNibble (ARG)
   876 ;;     _strlen (ARG)
   877 ;;     _eeprom_read (ARG)
   878 ;;   _readString
   879 ;;     _readByte
   880 ;;     _eeprom_write
   881 ;;       _makeNibble (ARG)
   882 ;;       _strlen (ARG)
   883 ;;       _eeprom_read (ARG)
   884 ;;   _eeprom_read
   885 ;;   _writeByte
   886 ;;   _parsePacket
   887 ;;     _checkLength
   888 ;;       _eeprom_read
   889 ;;       _writeByte
   890 ;;     _checkEven
   891 ;;       _eeprom_read
   892 ;;       _writeByte
   893 ;;     _makeHexByte
   894 ;;       _makeNibble
   895 ;;       _eeprom_write (ARG)
   896 ;;         _makeNibble (ARG)
   897 ;;         _strlen (ARG)
   898 ;;         _eeprom_read (ARG)
   899 ;;       _strlen (ARG)
   900 ;;     _eeprom_write
   901 ;;       _makeNibble (ARG)
   902 ;;       _strlen (ARG)
   903 ;;       _eeprom_read (ARG)
   904 ;;     _strlen
   905 ;;     _eeprom_read
   906 ;;   _validatePacket
   907 ;;     _checkStartByte
   908 ;;       _eeprom_read
   909 ;;       _writeByte
   910 ;;       _eeprom_write
   911 ;;         _makeNibble (ARG)
   912 ;;         _strlen (ARG)
   913 ;;         _eeprom_read (ARG)
   914 ;;     _checkRWByte
   915 ;;       _eeprom_read
   916 ;;       _writeByte
   917 ;;       _eeprom_write
   918 ;;         _makeNibble (ARG)
   919 ;;         _strlen (ARG)
   920 ;;         _eeprom_read (ARG)
   921 ;;     _checkCMDByte
   922 ;;       _eeprom_read
   923 ;;       _eeprom_write
   924 ;;         _makeNibble (ARG)
   925 ;;         _strlen (ARG)
   926 ;;         _eeprom_read (ARG)
   927 ;;       _writeByte
   928 ;;     _checkDataFrames
   929 ;;       _eeprom_read
   930 ;;       _writeByte
   931 ;;     _addDataToCheckSum
   932 ;;       _eeprom_read
   933 ;;       _eeprom_write
   934 ;;         _makeNibble (ARG)
   935 ;;         _strlen (ARG)
   936 ;;         _eeprom_read (ARG)
   937 ;;     _checkCS
   938 ;;       _eeprom_read
   939 ;;       _writeByte
   940 ;;
   941                           
   942 ;; Address spaces:
   943                           
   944 ;;Name               Size   Autos  Total    Cost      Usage
   945 ;;BANK3               60      0       0       9        0.0%
   946 ;;BITBANK3            60      0       0       8        0.0%
   947 ;;SFR3                 0      0       0       4        0.0%
   948 ;;BITSFR3              0      0       0       4        0.0%
   949 ;;BANK2               60      0       0      11        0.0%
   950 ;;BITBANK2            60      0       0      10        0.0%
   951 ;;SFR2                 0      0       0       5        0.0%
   952 ;;BITSFR2              0      0       0       5        0.0%
   953 ;;SFR1                 0      0       0       2        0.0%
   954 ;;BITSFR1              0      0       0       2        0.0%
   955 ;;BANK1               50     44      4D       7       96.3%
   956 ;;BITBANK1            50      0       0       6        0.0%
   957 ;;CODE                 0      0       0       0        0.0%
   958 ;;DATA                 0      0      A9      12        0.0%
   959 ;;ABS                  0      0      A6       3        0.0%
   960 ;;NULL                 0      0       0       0        0.0%
   961 ;;STACK                0      0       3       2        0.0%
   962 ;;BANK0               50     10      4B       5       93.8%
   963 ;;BITBANK0            50      0       0       4        0.0%
   964 ;;SFR0                 0      0       0       1        0.0%
   965 ;;BITSFR0              0      0       0       1        0.0%
   966 ;;COMMON               E      E       E       1      100.0%
   967 ;;BITCOMMON            E      0       0       0        0.0%
   968 ;;EEDATA             100      0       0       0        0.0%
   969                           
   970                           	global	_main
   971                           psect	maintext,global,class=CODE,delta=2
   972                           global __pmaintext
   973  0619                     __pmaintext:
   974                           
   975 ;; *************** function _main *****************
   976 ;; Defined at:
   977 ;;		line 42 in file "main.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  arrStore       50    0[BANK1 ] unsigned char [50]
   982 ;;  counterText     9   59[BANK1 ] unsigned char [9]
   983 ;;  testString      9   50[BANK1 ] unsigned char [9]
   984 ;; Return value:  Size  Location     Type
   985 ;;                  2  3766[COMMON] int 
   986 ;; Registers used:
   987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 17F/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         0       0       0       0       0
   994 ;;      Locals:         0       0      68       0       0
   995 ;;      Temps:          0       4       0       0       0
   996 ;;      Totals:         0       4      68       0       0
   997 ;;Total ram usage:       72 bytes
   998 ;; Hardware stack levels required when called:    3
   999 ;; This function calls:
  1000 ;;		_initUSART
  1001 ;;		_initADC
  1002 ;;		_writeString
  1003 ;;		_eeprom_write
  1004 ;;		_readString
  1005 ;;		_eeprom_read
  1006 ;;		_writeByte
  1007 ;;		_parsePacket
  1008 ;;		_validatePacket
  1009 ;; This function is called by:
  1010 ;;		Startup code after reset
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           psect	maintext
  1014                           	file	"main.c"
  1015                           	line	42
  1016                           	global	__size_of_main
  1017  00B2                     	__size_of_main	equ	__end_of_main-_main
  1018                           	
  1019  0619                     _main:	
  1020                           	opt	stack 5
  1021                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1022                           	line	43
  1023                           	
  1024  0619                     l7513:	
  1025                           ;main.c: 43: char testString[] = "Welcome\n";
  1026  0619  30D2               	movlw	(main@testString)&0ffh
  1027  061A  0084               	movwf	fsr0
  1028  061B  30E4               	movlw	low(main@F1144)
  1029  061C  1283               	bcf	status, 5	;RP0=0, select bank0
  1030  061D  1303               	bcf	status, 6	;RP1=0, select bank0
  1031  061E  00DE               	movwf	(??_main+0)+0
  1032  061F  0804               	movf	fsr0,w
  1033  0620  00DF               	movwf	((??_main+0)+0+1)
  1034  0621  3009               	movlw	9
  1035  0622  00E0               	movwf	((??_main+0)+0+2)
  1036  0623                     u2920:
  1037  0623  085E               	movf	(??_main+0)+0,w
  1038  0624  0084               	movwf	fsr0
  1039  0625  1383               	bcf	status, 7	;select IRP bank1
  1040                           	
  1041  0626  0800               	movf	indf,w
  1042  0627  00E1               	movwf	((??_main+0)+0+3)
  1043  0628  0ADE               	incf	(??_main+0)+0,f
  1044  0629  085F               	movf	((??_main+0)+0+1),w
  1045  062A  0084               	movwf	fsr0
  1046                           	
  1047  062B  0861               	movf	((??_main+0)+0+3),w
  1048  062C  0080               	movwf	indf
  1049  062D  0ADF               	incf	((??_main+0)+0+1),f
  1050  062E  0BE0               	decfsz	((??_main+0)+0+2),f
  1051  062F  2E23               	goto	u2920
  1052                           	line	44
  1053                           ;main.c: 44: char counterText[] = "Length: ";
  1054  0630  30DB               	movlw	(main@counterText)&0ffh
  1055  0631  0084               	movwf	fsr0
  1056  0632  3062               	movlw	low(main@F1146)
  1057  0633  00DE               	movwf	(??_main+0)+0
  1058  0634  0804               	movf	fsr0,w
  1059  0635  00DF               	movwf	((??_main+0)+0+1)
  1060  0636  3009               	movlw	9
  1061  0637  00E0               	movwf	((??_main+0)+0+2)
  1062  0638                     u2930:
  1063  0638  085E               	movf	(??_main+0)+0,w
  1064  0639  0084               	movwf	fsr0
  1065  063A  1383               	bcf	status, 7	;select IRP bank0
  1066                           	
  1067  063B  0800               	movf	indf,w
  1068  063C  00E1               	movwf	((??_main+0)+0+3)
  1069  063D  0ADE               	incf	(??_main+0)+0,f
  1070  063E  085F               	movf	((??_main+0)+0+1),w
  1071  063F  0084               	movwf	fsr0
  1072                           	
  1073  0640  0861               	movf	((??_main+0)+0+3),w
  1074  0641  0080               	movwf	indf
  1075  0642  0ADF               	incf	((??_main+0)+0+1),f
  1076  0643  0BE0               	decfsz	((??_main+0)+0+2),f
  1077  0644  2E38               	goto	u2930
  1078                           	line	47
  1079                           	
  1080  0645                     l7515:	
  1081                           ;main.c: 47: initUSART();
  1082  0645  120A  118A  2177   	fcall	_initUSART
              120A  118A         
  1083                           	line	48
  1084                           	
  1085  064A                     l7517:	
  1086                           ;main.c: 48: initADC();
  1087  064A  120A  118A  2160   	fcall	_initADC
              120A  118A         
  1088                           	line	51
  1089                           	
  1090  064F                     l7519:	
  1091                           ;main.c: 51: writeString(testString);
  1092  064F  30D2               	movlw	(main@testString)&0ffh
  1093  0650  120A  118A  223A   	fcall	_writeString
              120A  118A         
  1094  0655  2E57               	goto	l3772
  1095                           	line	54
  1096                           ;main.c: 54: while(1){
  1097                           	
  1098  0656                     l3771:	
  1099                           	line	62
  1100                           ;main.c: 62: while(!RCIF);
  1101  0656  2E57               	goto	l3772
  1102                           	
  1103  0657                     l3773:	
  1104                           	
  1105  0657                     l3772:	
  1106  0657  1283               	bcf	status, 5	;RP0=0, select bank0
  1107  0658  1303               	bcf	status, 6	;RP1=0, select bank0
  1108  0659  1E8C               	btfss	(101/8),(101)&7
  1109  065A  2E5C               	goto	u2941
  1110  065B  2E5D               	goto	u2940
  1111  065C                     u2941:
  1112  065C  2E57               	goto	l3772
  1113  065D                     u2940:
  1114  065D  2E5E               	goto	l7521
  1115                           	
  1116  065E                     l3774:	
  1117                           	line	64
  1118                           	
  1119  065E                     l7521:	
  1120                           ;main.c: 64: eeprom_write(calcCSByteAddr,0x00);
  1121  065E  01FA               	clrf	(?_eeprom_write)
  1122  065F  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1123  0660  0084               	movwf	fsr0
  1124  0661  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1125  0666  120A  118A  22C9   	fcall	_eeprom_write
              120A  118A         
  1126                           	line	66
  1127                           	
  1128  066B                     l7523:	
  1129                           ;main.c: 66: char arrStore[50] = {0};
  1130  066B  30A0               	movlw	(main@arrStore)&0ffh
  1131  066C  0084               	movwf	fsr0
  1132  066D  3020               	movlw	low(main@F1148)
  1133  066E  1283               	bcf	status, 5	;RP0=0, select bank0
  1134  066F  1303               	bcf	status, 6	;RP1=0, select bank0
  1135  0670  00DE               	movwf	(??_main+0)+0
  1136  0671  0804               	movf	fsr0,w
  1137  0672  00DF               	movwf	((??_main+0)+0+1)
  1138  0673  3032               	movlw	50
  1139  0674  00E0               	movwf	((??_main+0)+0+2)
  1140  0675                     u2950:
  1141  0675  085E               	movf	(??_main+0)+0,w
  1142  0676  0084               	movwf	fsr0
  1143  0677  1383               	bcf	status, 7	;select IRP bank0
  1144                           	
  1145  0678  0800               	movf	indf,w
  1146  0679  00E1               	movwf	((??_main+0)+0+3)
  1147  067A  0ADE               	incf	(??_main+0)+0,f
  1148  067B  085F               	movf	((??_main+0)+0+1),w
  1149  067C  0084               	movwf	fsr0
  1150                           	
  1151  067D  0861               	movf	((??_main+0)+0+3),w
  1152  067E  0080               	movwf	indf
  1153  067F  0ADF               	incf	((??_main+0)+0+1),f
  1154  0680  0BE0               	decfsz	((??_main+0)+0+2),f
  1155  0681  2E75               	goto	u2950
  1156                           	line	68
  1157                           	
  1158  0682                     l7525:	
  1159                           ;main.c: 68: readString(arrStore);
  1160  0682  30A0               	movlw	(main@arrStore)&0ffh
  1161  0683  120A  118A  232E   	fcall	_readString
              120A  118A         
  1162                           	line	70
  1163                           	
  1164  0688                     l7527:	
  1165                           ;main.c: 70: writeString(arrStore);
  1166  0688  30A0               	movlw	(main@arrStore)&0ffh
  1167  0689  120A  118A  223A   	fcall	_writeString
              120A  118A         
  1168                           	line	72
  1169                           	
  1170  068E                     l7529:	
  1171                           ;main.c: 72: writeString(counterText);
  1172  068E  30DB               	movlw	(main@counterText)&0ffh
  1173  068F  120A  118A  223A   	fcall	_writeString
              120A  118A         
  1174                           	line	74
  1175                           	
  1176  0694                     l7531:	
  1177                           ;main.c: 74: writeByte(eeprom_read(RXLenAddr));
  1178  0694  3040               	movlw	(_RXLenAddr-__stringbase)
  1179  0695  0084               	movwf	fsr0
  1180  0696  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1181  069B  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  1182  06A0  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  1183                           	line	75
  1184                           	
  1185  06A5                     l7533:	
  1186                           ;main.c: 75: parsePacket(arrStore);
  1187  06A5  30A0               	movlw	(main@arrStore)&0ffh
  1188  06A6  120A  118A  26CB   	fcall	_parsePacket
              120A  118A         
  1189                           	line	76
  1190                           	
  1191  06AB                     l7535:	
  1192                           ;main.c: 76: if(validatePacket()){
  1193  06AB  120A  118A  2379   	fcall	_validatePacket
              120A  118A         
  1194  06B0  1283               	bcf	status, 5	;RP0=0, select bank0
  1195  06B1  1303               	bcf	status, 6	;RP1=0, select bank0
  1196  06B2  0857               	movf	(1+(?_validatePacket)),w
  1197  06B3  0456               	iorwf	(0+(?_validatePacket)),w
  1198  06B4  1903               	skipnz
  1199  06B5  2EB7               	goto	u2961
  1200  06B6  2EB8               	goto	u2960
  1201  06B7                     u2961:
  1202  06B7  2EBF               	goto	l7539
  1203  06B8                     u2960:
  1204                           	line	77
  1205                           	
  1206  06B8                     l7537:	
  1207                           ;main.c: 77: writeByte('V');
  1208  06B8  3056               	movlw	(056h)
  1209  06B9  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  1210                           	line	80
  1211                           ;main.c: 80: }else{
  1212  06BE  2E57               	goto	l3772
  1213                           	
  1214  06BF                     l3777:	
  1215                           	line	81
  1216                           	
  1217  06BF                     l7539:	
  1218                           ;main.c: 81: writeByte('N');
  1219  06BF  304E               	movlw	(04Eh)
  1220  06C0  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  1221  06C5  2E57               	goto	l3772
  1222                           	line	82
  1223                           	
  1224  06C6                     l3778:	
  1225  06C6  2E57               	goto	l3772
  1226                           	line	83
  1227                           	
  1228  06C7                     l3779:	
  1229                           	line	54
  1230  06C7  2E57               	goto	l3772
  1231                           	
  1232  06C8                     l3780:	
  1233                           	line	88
  1234                           ;main.c: 82: }
  1235                           ;main.c: 83: }
  1236                           ;main.c: 87: return 0;
  1237                           ;	Return value of _main is never used
  1238                           	
  1239  06C8                     l3781:	
  1240                           	global	start
  1241  06C8  120A  118A  2800   	ljmp	start
  1242                           	opt stack 0
  1243                           GLOBAL	__end_of_main
  1244  06CB                     	__end_of_main:
  1245 ;; =============== function _main ends ============
  1246                           
  1247                           	signat	_main,90
  1248                           	global	_validatePacket
  1249                           psect	text471,local,class=CODE,delta=2
  1250                           global __ptext471
  1251  0379                     __ptext471:
  1252                           
  1253 ;; *************** function _validatePacket *****************
  1254 ;; Defined at:
  1255 ;;		line 190 in file "Packet.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  2    4[BANK0 ] int 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       2       0       0       0
  1270 ;;      Locals:         0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0
  1272 ;;      Totals:         0       2       0       0       0
  1273 ;;Total ram usage:        2 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    2
  1276 ;; This function calls:
  1277 ;;		_checkStartByte
  1278 ;;		_checkRWByte
  1279 ;;		_checkCMDByte
  1280 ;;		_checkDataFrames
  1281 ;;		_addDataToCheckSum
  1282 ;;		_checkCS
  1283 ;; This function is called by:
  1284 ;;		_main
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           psect	text471
  1288                           	file	"Packet.c"
  1289                           	line	190
  1290                           	global	__size_of_validatePacket
  1291  0051                     	__size_of_validatePacket	equ	__end_of_validatePacket-_validatePacket
  1292                           	
  1293  0379                     _validatePacket:	
  1294                           	opt	stack 5
  1295                           ; Regs used in _validatePacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1296                           	line	192
  1297                           	
  1298  0379                     l7495:	
  1299                           ;Packet.c: 192: if(checkStartByte() && checkRWByte() && checkCMDByte() && checkDataFrame
                                 s()){
  1300  0379  120A  118A  23CA   	fcall	_checkStartByte
              120A  118A         
  1301  037E  1283               	bcf	status, 5	;RP0=0, select bank0
  1302  037F  1303               	bcf	status, 6	;RP1=0, select bank0
  1303  0380  0853               	movf	(1+(?_checkStartByte)),w
  1304  0381  0452               	iorwf	(0+(?_checkStartByte)),w
  1305  0382  1903               	skipnz
  1306  0383  2B85               	goto	u2871
  1307  0384  2B86               	goto	u2870
  1308  0385                     u2871:
  1309  0385  2BC4               	goto	l7509
  1310  0386                     u2870:
  1311                           	
  1312  0386                     l7497:	
  1313  0386  120A  118A  242E   	fcall	_checkRWByte
              120A  118A         
  1314  038B  1283               	bcf	status, 5	;RP0=0, select bank0
  1315  038C  1303               	bcf	status, 6	;RP1=0, select bank0
  1316  038D  0853               	movf	(1+(?_checkRWByte)),w
  1317  038E  0452               	iorwf	(0+(?_checkRWByte)),w
  1318  038F  1903               	skipnz
  1319  0390  2B92               	goto	u2881
  1320  0391  2B93               	goto	u2880
  1321  0392                     u2881:
  1322  0392  2BC4               	goto	l7509
  1323  0393                     u2880:
  1324                           	
  1325  0393                     l7499:	
  1326  0393  120A  118A  2498   	fcall	_checkCMDByte
              120A  118A         
  1327  0398  1283               	bcf	status, 5	;RP0=0, select bank0
  1328  0399  1303               	bcf	status, 6	;RP1=0, select bank0
  1329  039A  0853               	movf	(1+(?_checkCMDByte)),w
  1330  039B  0452               	iorwf	(0+(?_checkCMDByte)),w
  1331  039C  1903               	skipnz
  1332  039D  2B9F               	goto	u2891
  1333  039E  2BA0               	goto	u2890
  1334  039F                     u2891:
  1335  039F  2BC4               	goto	l7509
  1336  03A0                     u2890:
  1337                           	
  1338  03A0                     l7501:	
  1339  03A0  120A  118A  257F   	fcall	_checkDataFrames
              120A  118A         
  1340  03A5  0873               	movf	(1+(?_checkDataFrames)),w
  1341  03A6  0472               	iorwf	(0+(?_checkDataFrames)),w
  1342  03A7  1903               	skipnz
  1343  03A8  2BAA               	goto	u2901
  1344  03A9  2BAB               	goto	u2900
  1345  03AA                     u2901:
  1346  03AA  2BC4               	goto	l7509
  1347  03AB                     u2900:
  1348                           	line	194
  1349                           	
  1350  03AB                     l7503:	
  1351                           ;Packet.c: 194: addDataToCheckSum();
  1352  03AB  120A  118A  2508   	fcall	_addDataToCheckSum
              120A  118A         
  1353                           	line	195
  1354                           ;Packet.c: 195: if(checkCS())
  1355  03B0  120A  118A  22FA   	fcall	_checkCS
              120A  118A         
  1356  03B5  0873               	movf	(1+(?_checkCS)),w
  1357  03B6  0472               	iorwf	(0+(?_checkCS)),w
  1358  03B7  1903               	skipnz
  1359  03B8  2BBA               	goto	u2911
  1360  03B9  2BBB               	goto	u2910
  1361  03BA                     u2911:
  1362  03BA  2BC4               	goto	l7509
  1363  03BB                     u2910:
  1364                           	line	196
  1365                           	
  1366  03BB                     l7505:	
  1367                           ;Packet.c: 196: return 1;
  1368  03BB  3001               	movlw	low(01h)
  1369  03BC  1283               	bcf	status, 5	;RP0=0, select bank0
  1370  03BD  1303               	bcf	status, 6	;RP1=0, select bank0
  1371  03BE  00D6               	movwf	(?_validatePacket)
  1372  03BF  3000               	movlw	high(01h)
  1373  03C0  00D7               	movwf	((?_validatePacket))+1
  1374  03C1  2BC9               	goto	l1545
  1375                           	
  1376  03C2                     l7507:	
  1377  03C2  2BC9               	goto	l1545
  1378                           	
  1379  03C3                     l1544:	
  1380  03C3  2BC4               	goto	l7509
  1381                           	line	197
  1382                           	
  1383  03C4                     l1543:	
  1384                           	line	198
  1385                           	
  1386  03C4                     l7509:	
  1387                           ;Packet.c: 197: }
  1388                           ;Packet.c: 198: return 0;
  1389  03C4  1283               	bcf	status, 5	;RP0=0, select bank0
  1390  03C5  1303               	bcf	status, 6	;RP1=0, select bank0
  1391  03C6  01D6               	clrf	(?_validatePacket)
  1392  03C7  01D7               	clrf	(?_validatePacket+1)
  1393  03C8  2BC9               	goto	l1545
  1394                           	
  1395  03C9                     l7511:	
  1396                           	line	200
  1397                           	
  1398  03C9                     l1545:	
  1399  03C9  0008               	return
  1400                           	opt stack 0
  1401                           GLOBAL	__end_of_validatePacket
  1402  03CA                     	__end_of_validatePacket:
  1403 ;; =============== function _validatePacket ends ============
  1404                           
  1405                           	signat	_validatePacket,90
  1406                           	global	_parsePacket
  1407                           psect	text472,local,class=CODE,delta=2
  1408                           global __ptext472
  1409  06CB                     __ptext472:
  1410                           
  1411 ;; *************** function _parsePacket *****************
  1412 ;; Defined at:
  1413 ;;		line 114 in file "Packet.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  dataPacket      1    wreg     PTR unsigned char 
  1416 ;;		 -> main@arrStore(50), 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  dataPacket      1   11[BANK0 ] PTR unsigned char 
  1419 ;;		 -> main@arrStore(50), 
  1420 ;;  i               1   10[BANK0 ] unsigned char 
  1421 ;;  dataCounter     2    8[BANK0 ] int 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;		None               void
  1424 ;; Registers used:
  1425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1431 ;;      Params:         0       0       0       0       0
  1432 ;;      Locals:         0       4       0       0       0
  1433 ;;      Temps:          0       4       0       0       0
  1434 ;;      Totals:         0       8       0       0       0
  1435 ;;Total ram usage:        8 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    2
  1438 ;; This function calls:
  1439 ;;		_checkLength
  1440 ;;		_checkEven
  1441 ;;		_makeHexByte
  1442 ;;		_eeprom_write
  1443 ;;		_strlen
  1444 ;;		_eeprom_read
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           psect	text472
  1450                           	file	"Packet.c"
  1451                           	line	114
  1452                           	global	__size_of_parsePacket
  1453  0135                     	__size_of_parsePacket	equ	__end_of_parsePacket-_parsePacket
  1454                           	
  1455  06CB                     _parsePacket:	
  1456                           	opt	stack 5
  1457                           ; Regs used in _parsePacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1458                           ;parsePacket@dataPacket stored from wreg
  1459                           	line	116
  1460  06CB  1283               	bcf	status, 5	;RP0=0, select bank0
  1461  06CC  1303               	bcf	status, 6	;RP1=0, select bank0
  1462  06CD  00DD               	movwf	(parsePacket@dataPacket)
  1463                           	
  1464  06CE                     l7477:	
  1465                           ;Packet.c: 116: int dataCounter = 0;
  1466  06CE  01DA               	clrf	(parsePacket@dataCounter)
  1467  06CF  01DB               	clrf	(parsePacket@dataCounter+1)
  1468                           	line	119
  1469                           	
  1470  06D0                     l7479:	
  1471                           ;Packet.c: 119: if (checkLength() && checkEven()) {
  1472  06D0  120A  118A  2269   	fcall	_checkLength
              120A  118A         
  1473  06D5  0873               	movf	(1+(?_checkLength)),w
  1474  06D6  0472               	iorwf	(0+(?_checkLength)),w
  1475  06D7  1903               	skipnz
  1476  06D8  2EDA               	goto	u2841
  1477  06D9  2EDB               	goto	u2840
  1478  06DA                     u2841:
  1479  06DA  2FFF               	goto	l1522
  1480  06DB                     u2840:
  1481                           	
  1482  06DB                     l7481:	
  1483  06DB  120A  118A  21EC   	fcall	_checkEven
              120A  118A         
  1484  06E0  0873               	movf	(1+(?_checkEven)),w
  1485  06E1  0472               	iorwf	(0+(?_checkEven)),w
  1486  06E2  1903               	skipnz
  1487  06E3  2EE5               	goto	u2851
  1488  06E4  2EE6               	goto	u2850
  1489  06E5                     u2851:
  1490  06E5  2FFF               	goto	l1522
  1491  06E6                     u2850:
  1492                           	line	122
  1493                           	
  1494  06E6                     l7483:	
  1495                           ;Packet.c: 122: eeprom_write(startByteAddr, makeHexByte(dataPacket[0], dataPacket[1]));
  1496  06E6  1283               	bcf	status, 5	;RP0=0, select bank0
  1497  06E7  1303               	bcf	status, 6	;RP1=0, select bank0
  1498  06E8  085D               	movf	(parsePacket@dataPacket),w
  1499  06E9  3E01               	addlw	01h
  1500  06EA  0084               	movwf	fsr0
  1501  06EB  1383               	bcf	status, 7	;select IRP bank0
  1502  06EC  0800               	movf	indf,w
  1503  06ED  00D6               	movwf	(??_parsePacket+0)+0
  1504  06EE  0856               	movf	(??_parsePacket+0)+0,w
  1505  06EF  00FD               	movwf	(?_makeHexByte)
  1506  06F0  085D               	movf	(parsePacket@dataPacket),w
  1507  06F1  0084               	movwf	fsr0
  1508  06F2  0800               	movf	indf,w
  1509  06F3  120A  118A  21C7   	fcall	_makeHexByte
              120A  118A         
  1510  06F8  1283               	bcf	status, 5	;RP0=0, select bank0
  1511  06F9  1303               	bcf	status, 6	;RP1=0, select bank0
  1512  06FA  00D7               	movwf	(??_parsePacket+1)+0
  1513  06FB  0857               	movf	(??_parsePacket+1)+0,w
  1514  06FC  00FA               	movwf	(?_eeprom_write)
  1515  06FD  304D               	movlw	(_startByteAddr-__stringbase)
  1516  06FE  0084               	movwf	fsr0
  1517  06FF  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1518  0704  120A  118A  22C9   	fcall	_eeprom_write
              120A  118A         
  1519                           	line	124
  1520                           ;Packet.c: 124: eeprom_write(rwByteAddr, makeHexByte(dataPacket[2], dataPacket[3]));
  1521  0709  1283               	bcf	status, 5	;RP0=0, select bank0
  1522  070A  1303               	bcf	status, 6	;RP1=0, select bank0
  1523  070B  085D               	movf	(parsePacket@dataPacket),w
  1524  070C  3E03               	addlw	03h
  1525  070D  0084               	movwf	fsr0
  1526  070E  1383               	bcf	status, 7	;select IRP bank0
  1527  070F  0800               	movf	indf,w
  1528  0710  00D6               	movwf	(??_parsePacket+0)+0
  1529  0711  0856               	movf	(??_parsePacket+0)+0,w
  1530  0712  00FD               	movwf	(?_makeHexByte)
  1531  0713  085D               	movf	(parsePacket@dataPacket),w
  1532  0714  3E02               	addlw	02h
  1533  0715  0084               	movwf	fsr0
  1534  0716  0800               	movf	indf,w
  1535  0717  120A  118A  21C7   	fcall	_makeHexByte
              120A  118A         
  1536  071C  1283               	bcf	status, 5	;RP0=0, select bank0
  1537  071D  1303               	bcf	status, 6	;RP1=0, select bank0
  1538  071E  00D7               	movwf	(??_parsePacket+1)+0
  1539  071F  0857               	movf	(??_parsePacket+1)+0,w
  1540  0720  00FA               	movwf	(?_eeprom_write)
  1541  0721  304C               	movlw	(_rwByteAddr-__stringbase)
  1542  0722  0084               	movwf	fsr0
  1543  0723  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1544  0728  120A  118A  22C9   	fcall	_eeprom_write
              120A  118A         
  1545                           	line	126
  1546                           ;Packet.c: 126: eeprom_write(cmdByteAddr, makeHexByte(dataPacket[4], dataPacket[5]));
  1547  072D  1283               	bcf	status, 5	;RP0=0, select bank0
  1548  072E  1303               	bcf	status, 6	;RP1=0, select bank0
  1549  072F  085D               	movf	(parsePacket@dataPacket),w
  1550  0730  3E05               	addlw	05h
  1551  0731  0084               	movwf	fsr0
  1552  0732  1383               	bcf	status, 7	;select IRP bank0
  1553  0733  0800               	movf	indf,w
  1554  0734  00D6               	movwf	(??_parsePacket+0)+0
  1555  0735  0856               	movf	(??_parsePacket+0)+0,w
  1556  0736  00FD               	movwf	(?_makeHexByte)
  1557  0737  085D               	movf	(parsePacket@dataPacket),w
  1558  0738  3E04               	addlw	04h
  1559  0739  0084               	movwf	fsr0
  1560  073A  0800               	movf	indf,w
  1561  073B  120A  118A  21C7   	fcall	_makeHexByte
              120A  118A         
  1562  0740  1283               	bcf	status, 5	;RP0=0, select bank0
  1563  0741  1303               	bcf	status, 6	;RP1=0, select bank0
  1564  0742  00D7               	movwf	(??_parsePacket+1)+0
  1565  0743  0857               	movf	(??_parsePacket+1)+0,w
  1566  0744  00FA               	movwf	(?_eeprom_write)
  1567  0745  3042               	movlw	(_cmdByteAddr-__stringbase)
  1568  0746  0084               	movwf	fsr0
  1569  0747  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1570  074C  120A  118A  22C9   	fcall	_eeprom_write
              120A  118A         
  1571                           	line	128
  1572                           ;Packet.c: 128: eeprom_write(lenByteAddr, makeHexByte(dataPacket[6], dataPacket[7]));
  1573  0751  1283               	bcf	status, 5	;RP0=0, select bank0
  1574  0752  1303               	bcf	status, 6	;RP1=0, select bank0
  1575  0753  085D               	movf	(parsePacket@dataPacket),w
  1576  0754  3E07               	addlw	07h
  1577  0755  0084               	movwf	fsr0
  1578  0756  1383               	bcf	status, 7	;select IRP bank0
  1579  0757  0800               	movf	indf,w
  1580  0758  00D6               	movwf	(??_parsePacket+0)+0
  1581  0759  0856               	movf	(??_parsePacket+0)+0,w
  1582  075A  00FD               	movwf	(?_makeHexByte)
  1583  075B  085D               	movf	(parsePacket@dataPacket),w
  1584  075C  3E06               	addlw	06h
  1585  075D  0084               	movwf	fsr0
  1586  075E  0800               	movf	indf,w
  1587  075F  120A  118A  21C7   	fcall	_makeHexByte
              120A  118A         
  1588  0764  1283               	bcf	status, 5	;RP0=0, select bank0
  1589  0765  1303               	bcf	status, 6	;RP1=0, select bank0
  1590  0766  00D7               	movwf	(??_parsePacket+1)+0
  1591  0767  0857               	movf	(??_parsePacket+1)+0,w
  1592  0768  00FA               	movwf	(?_eeprom_write)
  1593  0769  3047               	movlw	(_lenByteAddr-__stringbase)
  1594  076A  0084               	movwf	fsr0
  1595  076B  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1596  0770  120A  118A  22C9   	fcall	_eeprom_write
              120A  118A         
  1597                           	line	130
  1598                           ;Packet.c: 130: eeprom_write(csByteAddr, makeHexByte(dataPacket[strlen(dataPacket) - 2],
                                  dataPacket[strlen(dataPacket) - 1]));
  1599  0775  1283               	bcf	status, 5	;RP0=0, select bank0
  1600  0776  1303               	bcf	status, 6	;RP1=0, select bank0
  1601  0777  085D               	movf	(parsePacket@dataPacket),w
  1602  0778  120A  118A  2298   	fcall	_strlen
              120A  118A         
  1603  077D  0870               	movf	(0+(?_strlen)),w
  1604  077E  3EFF               	addlw	0FFh
  1605  077F  1283               	bcf	status, 5	;RP0=0, select bank0
  1606  0780  1303               	bcf	status, 6	;RP1=0, select bank0
  1607  0781  075D               	addwf	(parsePacket@dataPacket),w
  1608  0782  00D6               	movwf	(??_parsePacket+0)+0
  1609  0783  0856               	movf	0+(??_parsePacket+0)+0,w
  1610  0784  0084               	movwf	fsr0
  1611  0785  1383               	bcf	status, 7	;select IRP bank0
  1612  0786  0800               	movf	indf,w
  1613  0787  00D7               	movwf	(??_parsePacket+1)+0
  1614  0788  0857               	movf	(??_parsePacket+1)+0,w
  1615  0789  00FD               	movwf	(?_makeHexByte)
  1616  078A  085D               	movf	(parsePacket@dataPacket),w
  1617  078B  120A  118A  2298   	fcall	_strlen
              120A  118A         
  1618  0790  0870               	movf	(0+(?_strlen)),w
  1619  0791  3EFE               	addlw	0FEh
  1620  0792  1283               	bcf	status, 5	;RP0=0, select bank0
  1621  0793  1303               	bcf	status, 6	;RP1=0, select bank0
  1622  0794  075D               	addwf	(parsePacket@dataPacket),w
  1623  0795  00D8               	movwf	(??_parsePacket+2)+0
  1624  0796  0858               	movf	0+(??_parsePacket+2)+0,w
  1625  0797  0084               	movwf	fsr0
  1626  0798  1383               	bcf	status, 7	;select IRP bank0
  1627  0799  0800               	movf	indf,w
  1628  079A  120A  118A  21C7   	fcall	_makeHexByte
              120A  118A         
  1629  079F  1283               	bcf	status, 5	;RP0=0, select bank0
  1630  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
  1631  07A1  00D9               	movwf	(??_parsePacket+3)+0
  1632  07A2  0859               	movf	(??_parsePacket+3)+0,w
  1633  07A3  00FA               	movwf	(?_eeprom_write)
  1634  07A4  3043               	movlw	(_csByteAddr-__stringbase)
  1635  07A5  0084               	movwf	fsr0
  1636  07A6  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1637  07AB  120A  118A  22C9   	fcall	_eeprom_write
              120A  118A         
  1638                           	line	133
  1639                           	
  1640  07B0                     l7485:	
  1641                           ;Packet.c: 133: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  1642  07B0  1283               	bcf	status, 5	;RP0=0, select bank0
  1643  07B1  1303               	bcf	status, 6	;RP1=0, select bank0
  1644  07B2  01DC               	clrf	(parsePacket@i)
  1645  07B3  2FEA               	goto	l7493
  1646                           	
  1647  07B4                     l1520:	
  1648                           	line	134
  1649                           	
  1650  07B4                     l7487:	
  1651                           ;Packet.c: 134: eeprom_write(dataBytesAddr+i, makeHexByte(dataPacket[8 + dataCounter], d
                                 ataPacket[9 + dataCounter]));
  1652  07B4  085A               	movf	(parsePacket@dataCounter),w
  1653  07B5  3E09               	addlw	09h
  1654  07B6  075D               	addwf	(parsePacket@dataPacket),w
  1655  07B7  00D6               	movwf	(??_parsePacket+0)+0
  1656  07B8  0856               	movf	0+(??_parsePacket+0)+0,w
  1657  07B9  0084               	movwf	fsr0
  1658  07BA  1383               	bcf	status, 7	;select IRP bank0
  1659  07BB  0800               	movf	indf,w
  1660  07BC  00D7               	movwf	(??_parsePacket+1)+0
  1661  07BD  0857               	movf	(??_parsePacket+1)+0,w
  1662  07BE  00FD               	movwf	(?_makeHexByte)
  1663  07BF  085A               	movf	(parsePacket@dataCounter),w
  1664  07C0  3E08               	addlw	08h
  1665  07C1  075D               	addwf	(parsePacket@dataPacket),w
  1666  07C2  00D8               	movwf	(??_parsePacket+2)+0
  1667  07C3  0858               	movf	0+(??_parsePacket+2)+0,w
  1668  07C4  0084               	movwf	fsr0
  1669  07C5  0800               	movf	indf,w
  1670  07C6  120A  118A  21C7   	fcall	_makeHexByte
              120A  118A         
  1671  07CB  1283               	bcf	status, 5	;RP0=0, select bank0
  1672  07CC  1303               	bcf	status, 6	;RP1=0, select bank0
  1673  07CD  00D9               	movwf	(??_parsePacket+3)+0
  1674  07CE  0859               	movf	(??_parsePacket+3)+0,w
  1675  07CF  00FA               	movwf	(?_eeprom_write)
  1676  07D0  3044               	movlw	(_dataBytesAddr-__stringbase)
  1677  07D1  0084               	movwf	fsr0
  1678  07D2  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1679  07D7  075C               	addwf	(parsePacket@i),w
  1680  07D8  120A  118A  22C9   	fcall	_eeprom_write
              120A  118A         
  1681                           	line	135
  1682                           	
  1683  07DD                     l7489:	
  1684                           ;Packet.c: 135: dataCounter += 2;
  1685  07DD  3002               	movlw	low(02h)
  1686  07DE  1283               	bcf	status, 5	;RP0=0, select bank0
  1687  07DF  1303               	bcf	status, 6	;RP1=0, select bank0
  1688  07E0  07DA               	addwf	(parsePacket@dataCounter),f
  1689  07E1  1803               	skipnc
  1690  07E2  0ADB               	incf	(parsePacket@dataCounter+1),f
  1691  07E3  3000               	movlw	high(02h)
  1692  07E4  07DB               	addwf	(parsePacket@dataCounter+1),f
  1693                           	line	133
  1694                           	
  1695  07E5                     l7491:	
  1696  07E5  3001               	movlw	(01h)
  1697  07E6  00D6               	movwf	(??_parsePacket+0)+0
  1698  07E7  0856               	movf	(??_parsePacket+0)+0,w
  1699  07E8  07DC               	addwf	(parsePacket@i),f
  1700  07E9  2FEA               	goto	l7493
  1701                           	
  1702  07EA                     l1519:	
  1703                           	
  1704  07EA                     l7493:	
  1705  07EA  3047               	movlw	(_lenByteAddr-__stringbase)
  1706  07EB  0084               	movwf	fsr0
  1707  07EC  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1708  07F1  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  1709  07F6  1283               	bcf	status, 5	;RP0=0, select bank0
  1710  07F7  1303               	bcf	status, 6	;RP1=0, select bank0
  1711  07F8  025C               	subwf	(parsePacket@i),w
  1712  07F9  1C03               	skipc
  1713  07FA  2FFC               	goto	u2861
  1714  07FB  2FFD               	goto	u2860
  1715  07FC                     u2861:
  1716  07FC  2FB4               	goto	l7487
  1717  07FD                     u2860:
  1718  07FD  2FFF               	goto	l1522
  1719                           	
  1720  07FE                     l1521:	
  1721  07FE  2FFF               	goto	l1522
  1722                           	line	137
  1723                           	
  1724  07FF                     l1518:	
  1725                           	line	138
  1726                           	
  1727  07FF                     l1522:	
  1728  07FF  0008               	return
  1729                           	opt stack 0
  1730                           GLOBAL	__end_of_parsePacket
  1731  0800                     	__end_of_parsePacket:
  1732 ;; =============== function _parsePacket ends ============
  1733                           
  1734                           	signat	_parsePacket,4216
  1735                           	global	_addDataToCheckSum
  1736                           psect	text473,local,class=CODE,delta=2
  1737                           global __ptext473
  1738  0508                     __ptext473:
  1739                           
  1740 ;; *************** function _addDataToCheckSum *****************
  1741 ;; Defined at:
  1742 ;;		line 202 in file "Packet.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  i               1   13[COMMON] unsigned char 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;		None               void
  1749 ;; Registers used:
  1750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756 ;;      Params:         0       0       0       0       0
  1757 ;;      Locals:         1       0       0       0       0
  1758 ;;      Temps:          0       2       0       0       0
  1759 ;;      Totals:         1       2       0       0       0
  1760 ;;Total ram usage:        3 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    1
  1763 ;; This function calls:
  1764 ;;		_eeprom_read
  1765 ;;		_eeprom_write
  1766 ;; This function is called by:
  1767 ;;		_validatePacket
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           psect	text473
  1771                           	file	"Packet.c"
  1772                           	line	202
  1773                           	global	__size_of_addDataToCheckSum
  1774  0077                     	__size_of_addDataToCheckSum	equ	__end_of_addDataToCheckSum-_addDataToCheckSum
  1775                           	
  1776  0508                     _addDataToCheckSum:	
  1777                           	opt	stack 5
  1778                           ; Regs used in _addDataToCheckSum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1779                           	line	203
  1780                           	
  1781  0508                     l7467:	
  1782                           ;Packet.c: 203: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(lenB
                                 yteAddr));
  1783  0508  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1784  0509  0084               	movwf	fsr0
  1785  050A  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1786  050F  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  1787  0514  1283               	bcf	status, 5	;RP0=0, select bank0
  1788  0515  1303               	bcf	status, 6	;RP1=0, select bank0
  1789  0516  00D2               	movwf	(??_addDataToCheckSum+0)+0
  1790  0517  3047               	movlw	(_lenByteAddr-__stringbase)
  1791  0518  0084               	movwf	fsr0
  1792  0519  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1793  051E  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  1794  0523  1283               	bcf	status, 5	;RP0=0, select bank0
  1795  0524  1303               	bcf	status, 6	;RP1=0, select bank0
  1796  0525  0752               	addwf	0+(??_addDataToCheckSum+0)+0,w
  1797  0526  00D3               	movwf	(??_addDataToCheckSum+1)+0
  1798  0527  0853               	movf	(??_addDataToCheckSum+1)+0,w
  1799  0528  00FA               	movwf	(?_eeprom_write)
  1800  0529  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1801  052A  0084               	movwf	fsr0
  1802  052B  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1803  0530  120A  118A  22C9   	fcall	_eeprom_write
              120A  118A         
  1804                           	line	204
  1805                           	
  1806  0535                     l7469:	
  1807                           ;Packet.c: 204: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  1808  0535  01FD               	clrf	(addDataToCheckSum@i)
  1809  0536  2D6C               	goto	l7475
  1810                           	
  1811  0537                     l1549:	
  1812                           	line	205
  1813                           	
  1814  0537                     l7471:	
  1815                           ;Packet.c: 205: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(data
                                 BytesAddr+i));
  1816  0537  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1817  0538  0084               	movwf	fsr0
  1818  0539  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1819  053E  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  1820  0543  1283               	bcf	status, 5	;RP0=0, select bank0
  1821  0544  1303               	bcf	status, 6	;RP1=0, select bank0
  1822  0545  00D2               	movwf	(??_addDataToCheckSum+0)+0
  1823  0546  3044               	movlw	(_dataBytesAddr-__stringbase)
  1824  0547  0084               	movwf	fsr0
  1825  0548  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1826  054D  077D               	addwf	(addDataToCheckSum@i),w
  1827  054E  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  1828  0553  1283               	bcf	status, 5	;RP0=0, select bank0
  1829  0554  1303               	bcf	status, 6	;RP1=0, select bank0
  1830  0555  0752               	addwf	0+(??_addDataToCheckSum+0)+0,w
  1831  0556  00D3               	movwf	(??_addDataToCheckSum+1)+0
  1832  0557  0853               	movf	(??_addDataToCheckSum+1)+0,w
  1833  0558  00FA               	movwf	(?_eeprom_write)
  1834  0559  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1835  055A  0084               	movwf	fsr0
  1836  055B  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1837  0560  120A  118A  22C9   	fcall	_eeprom_write
              120A  118A         
  1838                           	line	204
  1839                           	
  1840  0565                     l7473:	
  1841  0565  3001               	movlw	(01h)
  1842  0566  1283               	bcf	status, 5	;RP0=0, select bank0
  1843  0567  1303               	bcf	status, 6	;RP1=0, select bank0
  1844  0568  00D2               	movwf	(??_addDataToCheckSum+0)+0
  1845  0569  0852               	movf	(??_addDataToCheckSum+0)+0,w
  1846  056A  07FD               	addwf	(addDataToCheckSum@i),f
  1847  056B  2D6C               	goto	l7475
  1848                           	
  1849  056C                     l1548:	
  1850                           	
  1851  056C                     l7475:	
  1852  056C  3047               	movlw	(_lenByteAddr-__stringbase)
  1853  056D  0084               	movwf	fsr0
  1854  056E  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1855  0573  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  1856  0578  027D               	subwf	(addDataToCheckSum@i),w
  1857  0579  1C03               	skipc
  1858  057A  2D7C               	goto	u2831
  1859  057B  2D7D               	goto	u2830
  1860  057C                     u2831:
  1861  057C  2D37               	goto	l7471
  1862  057D                     u2830:
  1863  057D  2D7E               	goto	l1551
  1864                           	
  1865  057E                     l1550:	
  1866                           	line	207
  1867                           	
  1868  057E                     l1551:	
  1869  057E  0008               	return
  1870                           	opt stack 0
  1871                           GLOBAL	__end_of_addDataToCheckSum
  1872  057F                     	__end_of_addDataToCheckSum:
  1873 ;; =============== function _addDataToCheckSum ends ============
  1874                           
  1875                           	signat	_addDataToCheckSum,88
  1876                           	global	_checkCS
  1877                           psect	text474,local,class=CODE,delta=2
  1878                           global __ptext474
  1879  02FA                     __ptext474:
  1880                           
  1881 ;; *************** function _checkCS *****************
  1882 ;; Defined at:
  1883 ;;		line 182 in file "Packet.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  2    2[COMMON] int 
  1890 ;; Registers used:
  1891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1897 ;;      Params:         2       0       0       0       0
  1898 ;;      Locals:         0       0       0       0       0
  1899 ;;      Temps:          1       0       0       0       0
  1900 ;;      Totals:         3       0       0       0       0
  1901 ;;Total ram usage:        3 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    1
  1904 ;; This function calls:
  1905 ;;		_eeprom_read
  1906 ;;		_writeByte
  1907 ;; This function is called by:
  1908 ;;		_validatePacket
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           psect	text474
  1912                           	file	"Packet.c"
  1913                           	line	182
  1914                           	global	__size_of_checkCS
  1915  0034                     	__size_of_checkCS	equ	__end_of_checkCS-_checkCS
  1916                           	
  1917  02FA                     _checkCS:	
  1918                           	opt	stack 5
  1919                           ; Regs used in _checkCS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1920                           	line	183
  1921                           	
  1922  02FA                     l7453:	
  1923                           ;Packet.c: 183: if(eeprom_read(csByteAddr) == eeprom_read(calcCSByteAddr)){
  1924  02FA  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1925  02FB  0084               	movwf	fsr0
  1926  02FC  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1927  0301  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  1928  0306  00F4               	movwf	(??_checkCS+0)+0
  1929  0307  3043               	movlw	(_csByteAddr-__stringbase)
  1930  0308  0084               	movwf	fsr0
  1931  0309  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1932  030E  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  1933  0313  0674               	xorwf	0+(??_checkCS+0)+0,w
  1934  0314  1D03               	skipz
  1935  0315  2B17               	goto	u2821
  1936  0316  2B18               	goto	u2820
  1937  0317                     u2821:
  1938  0317  2B24               	goto	l7461
  1939  0318                     u2820:
  1940                           	line	184
  1941                           	
  1942  0318                     l7455:	
  1943                           ;Packet.c: 184: writeByte('Y');
  1944  0318  3059               	movlw	(059h)
  1945  0319  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  1946                           	line	185
  1947                           	
  1948  031E                     l7457:	
  1949                           ;Packet.c: 185: return 1;
  1950  031E  3001               	movlw	low(01h)
  1951  031F  00F2               	movwf	(?_checkCS)
  1952  0320  3000               	movlw	high(01h)
  1953  0321  00F3               	movwf	((?_checkCS))+1
  1954  0322  2B2D               	goto	l1540
  1955                           	
  1956  0323                     l7459:	
  1957  0323  2B2D               	goto	l1540
  1958                           	line	186
  1959                           	
  1960  0324                     l1539:	
  1961                           	line	187
  1962                           	
  1963  0324                     l7461:	
  1964                           ;Packet.c: 186: }
  1965                           ;Packet.c: 187: writeByte('N');
  1966  0324  304E               	movlw	(04Eh)
  1967  0325  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  1968                           	line	188
  1969                           	
  1970  032A                     l7463:	
  1971                           ;Packet.c: 188: return 0;
  1972  032A  01F2               	clrf	(?_checkCS)
  1973  032B  01F3               	clrf	(?_checkCS+1)
  1974  032C  2B2D               	goto	l1540
  1975                           	
  1976  032D                     l7465:	
  1977                           	line	189
  1978                           	
  1979  032D                     l1540:	
  1980  032D  0008               	return
  1981                           	opt stack 0
  1982                           GLOBAL	__end_of_checkCS
  1983  032E                     	__end_of_checkCS:
  1984 ;; =============== function _checkCS ends ============
  1985                           
  1986                           	signat	_checkCS,90
  1987                           	global	_checkCMDByte
  1988                           psect	text475,local,class=CODE,delta=2
  1989                           global __ptext475
  1990  0498                     __ptext475:
  1991                           
  1992 ;; *************** function _checkCMDByte *****************
  1993 ;; Defined at:
  1994 ;;		line 172 in file "Packet.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  2    0[BANK0 ] int 
  2001 ;; Registers used:
  2002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2008 ;;      Params:         0       2       0       0       0
  2009 ;;      Locals:         0       0       0       0       0
  2010 ;;      Temps:          0       2       0       0       0
  2011 ;;      Totals:         0       4       0       0       0
  2012 ;;Total ram usage:        4 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    1
  2015 ;; This function calls:
  2016 ;;		_eeprom_read
  2017 ;;		_eeprom_write
  2018 ;;		_writeByte
  2019 ;; This function is called by:
  2020 ;;		_validatePacket
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           psect	text475
  2024                           	file	"Packet.c"
  2025                           	line	172
  2026                           	global	__size_of_checkCMDByte
  2027  0070                     	__size_of_checkCMDByte	equ	__end_of_checkCMDByte-_checkCMDByte
  2028                           	
  2029  0498                     _checkCMDByte:	
  2030                           	opt	stack 5
  2031                           ; Regs used in _checkCMDByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2032                           	line	173
  2033                           	
  2034  0498                     l7437:	
  2035                           ;Packet.c: 173: if(eeprom_read(cmdByteAddr) >= 0 && eeprom_read(cmdByteAddr) <= maxCmd){
  2036  0498  3042               	movlw	(_cmdByteAddr-__stringbase)
  2037  0499  0084               	movwf	fsr0
  2038  049A  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2039  049F  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2040  04A4  3042               	movlw	(_cmdByteAddr-__stringbase)
  2041  04A5  0084               	movwf	fsr0
  2042  04A6  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2043  04AB  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2044  04B0  1283               	bcf	status, 5	;RP0=0, select bank0
  2045  04B1  1303               	bcf	status, 6	;RP1=0, select bank0
  2046  04B2  00D4               	movwf	(??_checkCMDByte+0)+0
  2047  04B3  3048               	movlw	(_maxCmd-__stringbase)
  2048  04B4  0084               	movwf	fsr0
  2049  04B5  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2050  04BA  00D5               	movwf	(??_checkCMDByte+1)+0
  2051  04BB  0854               	movf	0+(??_checkCMDByte+0)+0,w
  2052  04BC  0255               	subwf	(??_checkCMDByte+1)+0,w
  2053  04BD  1C03               	skipc
  2054  04BE  2CC0               	goto	u2811
  2055  04BF  2CC1               	goto	u2810
  2056  04C0                     u2811:
  2057  04C0  2CFC               	goto	l7447
  2058  04C1                     u2810:
  2059                           	line	174
  2060                           	
  2061  04C1                     l7439:	
  2062                           ;Packet.c: 174: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(cmdB
                                 yteAddr));
  2063  04C1  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2064  04C2  0084               	movwf	fsr0
  2065  04C3  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2066  04C8  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2067  04CD  1283               	bcf	status, 5	;RP0=0, select bank0
  2068  04CE  1303               	bcf	status, 6	;RP1=0, select bank0
  2069  04CF  00D4               	movwf	(??_checkCMDByte+0)+0
  2070  04D0  3042               	movlw	(_cmdByteAddr-__stringbase)
  2071  04D1  0084               	movwf	fsr0
  2072  04D2  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2073  04D7  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2074  04DC  1283               	bcf	status, 5	;RP0=0, select bank0
  2075  04DD  1303               	bcf	status, 6	;RP1=0, select bank0
  2076  04DE  0754               	addwf	0+(??_checkCMDByte+0)+0,w
  2077  04DF  00D5               	movwf	(??_checkCMDByte+1)+0
  2078  04E0  0855               	movf	(??_checkCMDByte+1)+0,w
  2079  04E1  00FA               	movwf	(?_eeprom_write)
  2080  04E2  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2081  04E3  0084               	movwf	fsr0
  2082  04E4  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2083  04E9  120A  118A  22C9   	fcall	_eeprom_write
              120A  118A         
  2084                           	line	175
  2085                           	
  2086  04EE                     l7441:	
  2087                           ;Packet.c: 175: writeByte('C');
  2088  04EE  3043               	movlw	(043h)
  2089  04EF  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  2090                           	line	176
  2091                           	
  2092  04F4                     l7443:	
  2093                           ;Packet.c: 176: return 1;
  2094  04F4  3001               	movlw	low(01h)
  2095  04F5  1283               	bcf	status, 5	;RP0=0, select bank0
  2096  04F6  1303               	bcf	status, 6	;RP1=0, select bank0
  2097  04F7  00D2               	movwf	(?_checkCMDByte)
  2098  04F8  3000               	movlw	high(01h)
  2099  04F9  00D3               	movwf	((?_checkCMDByte))+1
  2100  04FA  2D07               	goto	l1536
  2101                           	
  2102  04FB                     l7445:	
  2103  04FB  2D07               	goto	l1536
  2104                           	line	177
  2105                           	
  2106  04FC                     l1535:	
  2107                           	line	178
  2108                           	
  2109  04FC                     l7447:	
  2110                           ;Packet.c: 177: }
  2111                           ;Packet.c: 178: writeByte('N');
  2112  04FC  304E               	movlw	(04Eh)
  2113  04FD  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  2114                           	line	179
  2115                           	
  2116  0502                     l7449:	
  2117                           ;Packet.c: 179: return 0;
  2118  0502  1283               	bcf	status, 5	;RP0=0, select bank0
  2119  0503  1303               	bcf	status, 6	;RP1=0, select bank0
  2120  0504  01D2               	clrf	(?_checkCMDByte)
  2121  0505  01D3               	clrf	(?_checkCMDByte+1)
  2122  0506  2D07               	goto	l1536
  2123                           	
  2124  0507                     l7451:	
  2125                           	line	180
  2126                           	
  2127  0507                     l1536:	
  2128  0507  0008               	return
  2129                           	opt stack 0
  2130                           GLOBAL	__end_of_checkCMDByte
  2131  0508                     	__end_of_checkCMDByte:
  2132 ;; =============== function _checkCMDByte ends ============
  2133                           
  2134                           	signat	_checkCMDByte,90
  2135                           	global	_checkRWByte
  2136                           psect	text476,local,class=CODE,delta=2
  2137                           global __ptext476
  2138  042E                     __ptext476:
  2139                           
  2140 ;; *************** function _checkRWByte *****************
  2141 ;; Defined at:
  2142 ;;		line 162 in file "Packet.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  2    0[BANK0 ] int 
  2149 ;; Registers used:
  2150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2156 ;;      Params:         0       2       0       0       0
  2157 ;;      Locals:         0       0       0       0       0
  2158 ;;      Temps:          0       2       0       0       0
  2159 ;;      Totals:         0       4       0       0       0
  2160 ;;Total ram usage:        4 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    1
  2163 ;; This function calls:
  2164 ;;		_eeprom_read
  2165 ;;		_writeByte
  2166 ;;		_eeprom_write
  2167 ;; This function is called by:
  2168 ;;		_validatePacket
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           psect	text476
  2172                           	file	"Packet.c"
  2173                           	line	162
  2174                           	global	__size_of_checkRWByte
  2175  006A                     	__size_of_checkRWByte	equ	__end_of_checkRWByte-_checkRWByte
  2176                           	
  2177  042E                     _checkRWByte:	
  2178                           	opt	stack 5
  2179                           ; Regs used in _checkRWByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2180                           	line	163
  2181                           	
  2182  042E                     l7419:	
  2183                           ;Packet.c: 163: if(eeprom_read(rwByteAddr) == 0 || eeprom_read(rwByteAddr) == 1){
  2184  042E  304C               	movlw	(_rwByteAddr-__stringbase)
  2185  042F  0084               	movwf	fsr0
  2186  0430  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2187  0435  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2188  043A  3A00               	xorlw	0
  2189  043B  1903               	skipnz
  2190  043C  2C3E               	goto	u2791
  2191  043D  2C3F               	goto	u2790
  2192  043E                     u2791:
  2193  043E  2C51               	goto	l7423
  2194  043F                     u2790:
  2195                           	
  2196  043F                     l7421:	
  2197  043F  304C               	movlw	(_rwByteAddr-__stringbase)
  2198  0440  0084               	movwf	fsr0
  2199  0441  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2200  0446  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2201  044B  3A01               	xorlw	01h
  2202  044C  1D03               	skipz
  2203  044D  2C4F               	goto	u2801
  2204  044E  2C50               	goto	u2800
  2205  044F                     u2801:
  2206  044F  2C8C               	goto	l7431
  2207  0450                     u2800:
  2208  0450  2C51               	goto	l7423
  2209                           	
  2210  0451                     l1531:	
  2211                           	line	164
  2212                           	
  2213  0451                     l7423:	
  2214                           ;Packet.c: 164: writeByte('R');
  2215  0451  3052               	movlw	(052h)
  2216  0452  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  2217                           	line	165
  2218                           	
  2219  0457                     l7425:	
  2220                           ;Packet.c: 165: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(rwBy
                                 teAddr));
  2221  0457  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2222  0458  0084               	movwf	fsr0
  2223  0459  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2224  045E  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2225  0463  1283               	bcf	status, 5	;RP0=0, select bank0
  2226  0464  1303               	bcf	status, 6	;RP1=0, select bank0
  2227  0465  00D4               	movwf	(??_checkRWByte+0)+0
  2228  0466  304C               	movlw	(_rwByteAddr-__stringbase)
  2229  0467  0084               	movwf	fsr0
  2230  0468  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2231  046D  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2232  0472  1283               	bcf	status, 5	;RP0=0, select bank0
  2233  0473  1303               	bcf	status, 6	;RP1=0, select bank0
  2234  0474  0754               	addwf	0+(??_checkRWByte+0)+0,w
  2235  0475  00D5               	movwf	(??_checkRWByte+1)+0
  2236  0476  0855               	movf	(??_checkRWByte+1)+0,w
  2237  0477  00FA               	movwf	(?_eeprom_write)
  2238  0478  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2239  0479  0084               	movwf	fsr0
  2240  047A  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2241  047F  120A  118A  22C9   	fcall	_eeprom_write
              120A  118A         
  2242                           	line	166
  2243                           	
  2244  0484                     l7427:	
  2245                           ;Packet.c: 166: return 1;
  2246  0484  3001               	movlw	low(01h)
  2247  0485  1283               	bcf	status, 5	;RP0=0, select bank0
  2248  0486  1303               	bcf	status, 6	;RP1=0, select bank0
  2249  0487  00D2               	movwf	(?_checkRWByte)
  2250  0488  3000               	movlw	high(01h)
  2251  0489  00D3               	movwf	((?_checkRWByte))+1
  2252  048A  2C97               	goto	l1532
  2253                           	
  2254  048B                     l7429:	
  2255  048B  2C97               	goto	l1532
  2256                           	line	167
  2257                           	
  2258  048C                     l1529:	
  2259                           	line	168
  2260                           	
  2261  048C                     l7431:	
  2262                           ;Packet.c: 167: }
  2263                           ;Packet.c: 168: writeByte('N');
  2264  048C  304E               	movlw	(04Eh)
  2265  048D  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  2266                           	line	169
  2267                           	
  2268  0492                     l7433:	
  2269                           ;Packet.c: 169: return 0;
  2270  0492  1283               	bcf	status, 5	;RP0=0, select bank0
  2271  0493  1303               	bcf	status, 6	;RP1=0, select bank0
  2272  0494  01D2               	clrf	(?_checkRWByte)
  2273  0495  01D3               	clrf	(?_checkRWByte+1)
  2274  0496  2C97               	goto	l1532
  2275                           	
  2276  0497                     l7435:	
  2277                           	line	170
  2278                           	
  2279  0497                     l1532:	
  2280  0497  0008               	return
  2281                           	opt stack 0
  2282                           GLOBAL	__end_of_checkRWByte
  2283  0498                     	__end_of_checkRWByte:
  2284 ;; =============== function _checkRWByte ends ============
  2285                           
  2286                           	signat	_checkRWByte,90
  2287                           	global	_checkStartByte
  2288                           psect	text477,local,class=CODE,delta=2
  2289                           global __ptext477
  2290  03CA                     __ptext477:
  2291                           
  2292 ;; *************** function _checkStartByte *****************
  2293 ;; Defined at:
  2294 ;;		line 148 in file "Packet.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  2    0[BANK0 ] int 
  2301 ;; Registers used:
  2302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2308 ;;      Params:         0       2       0       0       0
  2309 ;;      Locals:         0       0       0       0       0
  2310 ;;      Temps:          0       2       0       0       0
  2311 ;;      Totals:         0       4       0       0       0
  2312 ;;Total ram usage:        4 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    1
  2315 ;; This function calls:
  2316 ;;		_eeprom_read
  2317 ;;		_writeByte
  2318 ;;		_eeprom_write
  2319 ;; This function is called by:
  2320 ;;		_validatePacket
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           psect	text477
  2324                           	file	"Packet.c"
  2325                           	line	148
  2326                           	global	__size_of_checkStartByte
  2327  0064                     	__size_of_checkStartByte	equ	__end_of_checkStartByte-_checkStartByte
  2328                           	
  2329  03CA                     _checkStartByte:	
  2330                           	opt	stack 5
  2331                           ; Regs used in _checkStartByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2332                           	line	151
  2333                           	
  2334  03CA                     l7403:	
  2335                           ;Packet.c: 151: if (eeprom_read(startByteAddr) == userStartByte) {
  2336  03CA  304F               	movlw	(_userStartByte-__stringbase)
  2337  03CB  0084               	movwf	fsr0
  2338  03CC  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2339  03D1  1283               	bcf	status, 5	;RP0=0, select bank0
  2340  03D2  1303               	bcf	status, 6	;RP1=0, select bank0
  2341  03D3  00D4               	movwf	(??_checkStartByte+0)+0
  2342  03D4  304D               	movlw	(_startByteAddr-__stringbase)
  2343  03D5  0084               	movwf	fsr0
  2344  03D6  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2345  03DB  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2346  03E0  1283               	bcf	status, 5	;RP0=0, select bank0
  2347  03E1  1303               	bcf	status, 6	;RP1=0, select bank0
  2348  03E2  0654               	xorwf	(??_checkStartByte+0)+0,w
  2349  03E3  1D03               	skipz
  2350  03E4  2BE6               	goto	u2781
  2351  03E5  2BE7               	goto	u2780
  2352  03E6                     u2781:
  2353  03E6  2C22               	goto	l7413
  2354  03E7                     u2780:
  2355                           	line	153
  2356                           	
  2357  03E7                     l7405:	
  2358                           ;Packet.c: 153: writeByte('S');
  2359  03E7  3053               	movlw	(053h)
  2360  03E8  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  2361                           	line	154
  2362                           	
  2363  03ED                     l7407:	
  2364                           ;Packet.c: 154: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(star
                                 tByteAddr));
  2365  03ED  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2366  03EE  0084               	movwf	fsr0
  2367  03EF  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2368  03F4  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2369  03F9  1283               	bcf	status, 5	;RP0=0, select bank0
  2370  03FA  1303               	bcf	status, 6	;RP1=0, select bank0
  2371  03FB  00D4               	movwf	(??_checkStartByte+0)+0
  2372  03FC  304D               	movlw	(_startByteAddr-__stringbase)
  2373  03FD  0084               	movwf	fsr0
  2374  03FE  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2375  0403  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2376  0408  1283               	bcf	status, 5	;RP0=0, select bank0
  2377  0409  1303               	bcf	status, 6	;RP1=0, select bank0
  2378  040A  0754               	addwf	0+(??_checkStartByte+0)+0,w
  2379  040B  00D5               	movwf	(??_checkStartByte+1)+0
  2380  040C  0855               	movf	(??_checkStartByte+1)+0,w
  2381  040D  00FA               	movwf	(?_eeprom_write)
  2382  040E  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2383  040F  0084               	movwf	fsr0
  2384  0410  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2385  0415  120A  118A  22C9   	fcall	_eeprom_write
              120A  118A         
  2386                           	line	155
  2387                           	
  2388  041A                     l7409:	
  2389                           ;Packet.c: 155: return 1;
  2390  041A  3001               	movlw	low(01h)
  2391  041B  1283               	bcf	status, 5	;RP0=0, select bank0
  2392  041C  1303               	bcf	status, 6	;RP1=0, select bank0
  2393  041D  00D2               	movwf	(?_checkStartByte)
  2394  041E  3000               	movlw	high(01h)
  2395  041F  00D3               	movwf	((?_checkStartByte))+1
  2396  0420  2C2D               	goto	l1526
  2397                           	
  2398  0421                     l7411:	
  2399  0421  2C2D               	goto	l1526
  2400                           	line	156
  2401                           	
  2402  0422                     l1525:	
  2403                           	line	158
  2404                           	
  2405  0422                     l7413:	
  2406                           ;Packet.c: 156: }
  2407                           ;Packet.c: 158: writeByte('N');
  2408  0422  304E               	movlw	(04Eh)
  2409  0423  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  2410                           	line	159
  2411                           	
  2412  0428                     l7415:	
  2413                           ;Packet.c: 159: return 0;
  2414  0428  1283               	bcf	status, 5	;RP0=0, select bank0
  2415  0429  1303               	bcf	status, 6	;RP1=0, select bank0
  2416  042A  01D2               	clrf	(?_checkStartByte)
  2417  042B  01D3               	clrf	(?_checkStartByte+1)
  2418  042C  2C2D               	goto	l1526
  2419                           	
  2420  042D                     l7417:	
  2421                           	line	160
  2422                           	
  2423  042D                     l1526:	
  2424  042D  0008               	return
  2425                           	opt stack 0
  2426                           GLOBAL	__end_of_checkStartByte
  2427  042E                     	__end_of_checkStartByte:
  2428 ;; =============== function _checkStartByte ends ============
  2429                           
  2430                           	signat	_checkStartByte,90
  2431                           	global	_checkDataFrames
  2432                           psect	text478,local,class=CODE,delta=2
  2433                           global __ptext478
  2434  057F                     __ptext478:
  2435                           
  2436 ;; *************** function _checkDataFrames *****************
  2437 ;; Defined at:
  2438 ;;		line 85 in file "Packet.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  2    2[COMMON] int 
  2445 ;; Registers used:
  2446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2452 ;;      Params:         2       0       0       0       0
  2453 ;;      Locals:         0       0       0       0       0
  2454 ;;      Temps:          6       0       0       0       0
  2455 ;;      Totals:         8       0       0       0       0
  2456 ;;Total ram usage:        8 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    1
  2459 ;; This function calls:
  2460 ;;		_eeprom_read
  2461 ;;		_writeByte
  2462 ;; This function is called by:
  2463 ;;		_validatePacket
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           psect	text478
  2467                           	file	"Packet.c"
  2468                           	line	85
  2469                           	global	__size_of_checkDataFrames
  2470  009A                     	__size_of_checkDataFrames	equ	__end_of_checkDataFrames-_checkDataFrames
  2471                           	
  2472  057F                     _checkDataFrames:	
  2473                           	opt	stack 5
  2474                           ; Regs used in _checkDataFrames: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2475                           	line	87
  2476                           	
  2477  057F                     l7377:	
  2478                           ;Packet.c: 87: if(eeprom_read(lenByteAddr) == 0 && (eeprom_read(RXLenAddr)-noDataLen) ==
                                  0){
  2479  057F  3047               	movlw	(_lenByteAddr-__stringbase)
  2480  0580  0084               	movwf	fsr0
  2481  0581  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2482  0586  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2483  058B  3800               	iorlw	0
  2484  058C  1D03               	skipz
  2485  058D  2D8F               	goto	u2741
  2486  058E  2D90               	goto	u2740
  2487  058F                     u2741:
  2488  058F  2DC3               	goto	l7389
  2489  0590                     u2740:
  2490                           	
  2491  0590                     l7379:	
  2492  0590  304B               	movlw	(_noDataLen-__stringbase)
  2493  0591  0084               	movwf	fsr0
  2494  0592  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2495  0597  00F4               	movwf	(??_checkDataFrames+0)+0
  2496  0598  01F5               	clrf	(??_checkDataFrames+0)+0+1
  2497  0599  09F4               	comf	(??_checkDataFrames+0)+0,f
  2498  059A  09F5               	comf	(??_checkDataFrames+0)+1,f
  2499  059B  0AF4               	incf	(??_checkDataFrames+0)+0,f
  2500  059C  1903               	skipnz
  2501  059D  0AF5               	incf	(??_checkDataFrames+0)+1,f
  2502  059E  3040               	movlw	(_RXLenAddr-__stringbase)
  2503  059F  0084               	movwf	fsr0
  2504  05A0  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2505  05A5  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2506  05AA  0774               	addwf	0+(??_checkDataFrames+0)+0,w
  2507  05AB  00F6               	movwf	(??_checkDataFrames+2)+0
  2508  05AC  0875               	movf	1+(??_checkDataFrames+0)+0,w
  2509  05AD  1803               	skipnc
  2510  05AE  0A75               	incf	1+(??_checkDataFrames+0)+0,w
  2511  05AF  00F7               	movwf	((??_checkDataFrames+2)+0)+1
  2512  05B0  0877               	movf	1+(??_checkDataFrames+2)+0,w
  2513  05B1  0476               	iorwf	0+(??_checkDataFrames+2)+0,w
  2514  05B2  1D03               	skipz
  2515  05B3  2DB5               	goto	u2751
  2516  05B4  2DB6               	goto	u2750
  2517  05B5                     u2751:
  2518  05B5  2DC3               	goto	l7389
  2519  05B6                     u2750:
  2520                           	line	89
  2521                           	
  2522  05B6                     l7381:	
  2523                           ;Packet.c: 89: writeByte('D');
  2524  05B6  3044               	movlw	(044h)
  2525  05B7  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  2526                           	line	90
  2527                           	
  2528  05BC                     l7383:	
  2529                           ;Packet.c: 90: return 1;
  2530  05BC  3001               	movlw	low(01h)
  2531  05BD  00F2               	movwf	(?_checkDataFrames)
  2532  05BE  3000               	movlw	high(01h)
  2533  05BF  00F3               	movwf	((?_checkDataFrames))+1
  2534  05C0  2E18               	goto	l1513
  2535                           	
  2536  05C1                     l7385:	
  2537  05C1  2E18               	goto	l1513
  2538                           	line	94
  2539                           	
  2540  05C2                     l7387:	
  2541                           ;Packet.c: 94: }else if((eeprom_read(RXLenAddr) - noDataLen) == (eeprom_read(lenByteAddr
                                 )*2)){
  2542  05C2  2E0F               	goto	l7397
  2543                           	
  2544  05C3                     l1512:	
  2545                           	
  2546  05C3                     l7389:	
  2547  05C3  3047               	movlw	(_lenByteAddr-__stringbase)
  2548  05C4  0084               	movwf	fsr0
  2549  05C5  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2550  05CA  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2551  05CF  00F4               	movwf	(??_checkDataFrames+0)+0
  2552  05D0  01F5               	clrf	(??_checkDataFrames+0)+0+1
  2553  05D1  3001               	movlw	01h
  2554  05D2  00FF               	movwf	btemp+1
  2555  05D3                     u2765:
  2556  05D3  1003               	clrc
  2557  05D4  0DF4               	rlf	(??_checkDataFrames+0)+0,f
  2558  05D5  0DF5               	rlf	(??_checkDataFrames+0)+1,f
  2559  05D6  0BFF               	decfsz	btemp+1,f
  2560  05D7  2DD3               	goto	u2765
  2561  05D8  304B               	movlw	(_noDataLen-__stringbase)
  2562  05D9  0084               	movwf	fsr0
  2563  05DA  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2564  05DF  00F6               	movwf	(??_checkDataFrames+2)+0
  2565  05E0  01F7               	clrf	(??_checkDataFrames+2)+0+1
  2566  05E1  09F6               	comf	(??_checkDataFrames+2)+0,f
  2567  05E2  09F7               	comf	(??_checkDataFrames+2)+1,f
  2568  05E3  0AF6               	incf	(??_checkDataFrames+2)+0,f
  2569  05E4  1903               	skipnz
  2570  05E5  0AF7               	incf	(??_checkDataFrames+2)+1,f
  2571  05E6  3040               	movlw	(_RXLenAddr-__stringbase)
  2572  05E7  0084               	movwf	fsr0
  2573  05E8  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2574  05ED  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2575  05F2  0776               	addwf	0+(??_checkDataFrames+2)+0,w
  2576  05F3  00F8               	movwf	(??_checkDataFrames+4)+0
  2577  05F4  0877               	movf	1+(??_checkDataFrames+2)+0,w
  2578  05F5  1803               	skipnc
  2579  05F6  0A77               	incf	1+(??_checkDataFrames+2)+0,w
  2580  05F7  00F9               	movwf	((??_checkDataFrames+4)+0)+1
  2581  05F8  0875               	movf	1+(??_checkDataFrames+0)+0,w
  2582  05F9  0679               	xorwf	1+(??_checkDataFrames+4)+0,w
  2583  05FA  1D03               	skipz
  2584  05FB  2DFE               	goto	u2775
  2585  05FC  0874               	movf	0+(??_checkDataFrames+0)+0,w
  2586  05FD  0678               	xorwf	0+(??_checkDataFrames+4)+0,w
  2587  05FE                     u2775:
  2588                           
  2589  05FE  1D03               	skipz
  2590  05FF  2E01               	goto	u2771
  2591  0600  2E02               	goto	u2770
  2592  0601                     u2771:
  2593  0601  2E0F               	goto	l7397
  2594  0602                     u2770:
  2595                           	line	96
  2596                           	
  2597  0602                     l7391:	
  2598                           ;Packet.c: 96: writeByte('D');
  2599  0602  3044               	movlw	(044h)
  2600  0603  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  2601                           	line	97
  2602                           	
  2603  0608                     l7393:	
  2604                           ;Packet.c: 97: return 1;
  2605  0608  3001               	movlw	low(01h)
  2606  0609  00F2               	movwf	(?_checkDataFrames)
  2607  060A  3000               	movlw	high(01h)
  2608  060B  00F3               	movwf	((?_checkDataFrames))+1
  2609  060C  2E18               	goto	l1513
  2610                           	
  2611  060D                     l7395:	
  2612  060D  2E18               	goto	l1513
  2613                           	line	98
  2614                           	
  2615  060E                     l1515:	
  2616  060E  2E0F               	goto	l7397
  2617                           	line	101
  2618                           	
  2619  060F                     l1514:	
  2620                           	
  2621  060F                     l7397:	
  2622                           ;Packet.c: 98: }
  2623                           ;Packet.c: 101: writeByte('N');
  2624  060F  304E               	movlw	(04Eh)
  2625  0610  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  2626                           	line	102
  2627                           	
  2628  0615                     l7399:	
  2629                           ;Packet.c: 102: return 0;
  2630  0615  01F2               	clrf	(?_checkDataFrames)
  2631  0616  01F3               	clrf	(?_checkDataFrames+1)
  2632  0617  2E18               	goto	l1513
  2633                           	
  2634  0618                     l7401:	
  2635                           	line	103
  2636                           	
  2637  0618                     l1513:	
  2638  0618  0008               	return
  2639                           	opt stack 0
  2640                           GLOBAL	__end_of_checkDataFrames
  2641  0619                     	__end_of_checkDataFrames:
  2642 ;; =============== function _checkDataFrames ends ============
  2643                           
  2644                           	signat	_checkDataFrames,90
  2645                           	global	_checkLength
  2646                           psect	text479,local,class=CODE,delta=2
  2647                           global __ptext479
  2648  0269                     __ptext479:
  2649                           
  2650 ;; *************** function _checkLength *****************
  2651 ;; Defined at:
  2652 ;;		line 64 in file "Packet.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  2    2[COMMON] int 
  2659 ;; Registers used:
  2660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2666 ;;      Params:         2       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0
  2668 ;;      Temps:          1       0       0       0       0
  2669 ;;      Totals:         3       0       0       0       0
  2670 ;;Total ram usage:        3 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    1
  2673 ;; This function calls:
  2674 ;;		_eeprom_read
  2675 ;;		_writeByte
  2676 ;; This function is called by:
  2677 ;;		_parsePacket
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           psect	text479
  2681                           	file	"Packet.c"
  2682                           	line	64
  2683                           	global	__size_of_checkLength
  2684  002F                     	__size_of_checkLength	equ	__end_of_checkLength-_checkLength
  2685                           	
  2686  0269                     _checkLength:	
  2687                           	opt	stack 5
  2688                           ; Regs used in _checkLength: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2689                           	line	67
  2690                           	
  2691  0269                     l7363:	
  2692                           ;Packet.c: 67: if (eeprom_read(RXLenAddr) >= minSizeByte) {
  2693  0269  3040               	movlw	(_RXLenAddr-__stringbase)
  2694  026A  0084               	movwf	fsr0
  2695  026B  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2696  0270  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2697  0275  00F4               	movwf	(??_checkLength+0)+0
  2698  0276  3049               	movlw	(_minSizeByte-__stringbase)
  2699  0277  0084               	movwf	fsr0
  2700  0278  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2701  027D  0274               	subwf	0+(??_checkLength+0)+0,w
  2702  027E  1C03               	skipc
  2703  027F  2A81               	goto	u2731
  2704  0280  2A82               	goto	u2730
  2705  0281                     u2731:
  2706  0281  2A8E               	goto	l7371
  2707  0282                     u2730:
  2708                           	line	69
  2709                           	
  2710  0282                     l7365:	
  2711                           ;Packet.c: 69: writeByte('L');
  2712  0282  304C               	movlw	(04Ch)
  2713  0283  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  2714                           	line	70
  2715                           	
  2716  0288                     l7367:	
  2717                           ;Packet.c: 70: return 1;
  2718  0288  3001               	movlw	low(01h)
  2719  0289  00F2               	movwf	(?_checkLength)
  2720  028A  3000               	movlw	high(01h)
  2721  028B  00F3               	movwf	((?_checkLength))+1
  2722  028C  2A97               	goto	l1509
  2723                           	
  2724  028D                     l7369:	
  2725  028D  2A97               	goto	l1509
  2726                           	line	71
  2727                           	
  2728  028E                     l1508:	
  2729                           	line	73
  2730                           	
  2731  028E                     l7371:	
  2732                           ;Packet.c: 71: }
  2733                           ;Packet.c: 73: writeByte('N');
  2734  028E  304E               	movlw	(04Eh)
  2735  028F  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  2736                           	line	74
  2737                           	
  2738  0294                     l7373:	
  2739                           ;Packet.c: 74: return 0;
  2740  0294  01F2               	clrf	(?_checkLength)
  2741  0295  01F3               	clrf	(?_checkLength+1)
  2742  0296  2A97               	goto	l1509
  2743                           	
  2744  0297                     l7375:	
  2745                           	line	75
  2746                           	
  2747  0297                     l1509:	
  2748  0297  0008               	return
  2749                           	opt stack 0
  2750                           GLOBAL	__end_of_checkLength
  2751  0298                     	__end_of_checkLength:
  2752 ;; =============== function _checkLength ends ============
  2753                           
  2754                           	signat	_checkLength,90
  2755                           	global	_checkEven
  2756                           psect	text480,local,class=CODE,delta=2
  2757                           global __ptext480
  2758  01EC                     __ptext480:
  2759                           
  2760 ;; *************** function _checkEven *****************
  2761 ;; Defined at:
  2762 ;;		line 42 in file "Packet.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  2    2[COMMON] int 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2776 ;;      Params:         2       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0
  2778 ;;      Temps:          1       0       0       0       0
  2779 ;;      Totals:         3       0       0       0       0
  2780 ;;Total ram usage:        3 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    1
  2783 ;; This function calls:
  2784 ;;		_eeprom_read
  2785 ;;		_writeByte
  2786 ;; This function is called by:
  2787 ;;		_parsePacket
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           psect	text480
  2791                           	file	"Packet.c"
  2792                           	line	42
  2793                           	global	__size_of_checkEven
  2794  0027                     	__size_of_checkEven	equ	__end_of_checkEven-_checkEven
  2795                           	
  2796  01EC                     _checkEven:	
  2797                           	opt	stack 5
  2798                           ; Regs used in _checkEven: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2799                           	line	45
  2800                           	
  2801  01EC                     l7349:	
  2802                           ;Packet.c: 45: if (eeprom_read(RXLenAddr) % 2 == 0) {
  2803  01EC  3040               	movlw	(_RXLenAddr-__stringbase)
  2804  01ED  0084               	movwf	fsr0
  2805  01EE  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2806  01F3  120A  118A  21A8   	fcall	_eeprom_read
              120A  118A         
  2807  01F8  00F4               	movwf	(??_checkEven+0)+0
  2808  01F9  1874               	btfsc	0+(??_checkEven+0)+0,(0)&7
  2809  01FA  29FC               	goto	u2721
  2810  01FB  29FD               	goto	u2720
  2811  01FC                     u2721:
  2812  01FC  2A09               	goto	l7357
  2813  01FD                     u2720:
  2814                           	line	47
  2815                           	
  2816  01FD                     l7351:	
  2817                           ;Packet.c: 47: writeByte('E');
  2818  01FD  3045               	movlw	(045h)
  2819  01FE  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  2820                           	line	48
  2821                           	
  2822  0203                     l7353:	
  2823                           ;Packet.c: 48: return 1;
  2824  0203  3001               	movlw	low(01h)
  2825  0204  00F2               	movwf	(?_checkEven)
  2826  0205  3000               	movlw	high(01h)
  2827  0206  00F3               	movwf	((?_checkEven))+1
  2828  0207  2A12               	goto	l1505
  2829                           	
  2830  0208                     l7355:	
  2831  0208  2A12               	goto	l1505
  2832                           	line	49
  2833                           	
  2834  0209                     l1504:	
  2835                           	line	51
  2836                           	
  2837  0209                     l7357:	
  2838                           ;Packet.c: 49: }
  2839                           ;Packet.c: 51: writeByte('N');
  2840  0209  304E               	movlw	(04Eh)
  2841  020A  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  2842                           	line	52
  2843                           	
  2844  020F                     l7359:	
  2845                           ;Packet.c: 52: return 0;
  2846  020F  01F2               	clrf	(?_checkEven)
  2847  0210  01F3               	clrf	(?_checkEven+1)
  2848  0211  2A12               	goto	l1505
  2849                           	
  2850  0212                     l7361:	
  2851                           	line	53
  2852                           	
  2853  0212                     l1505:	
  2854  0212  0008               	return
  2855                           	opt stack 0
  2856                           GLOBAL	__end_of_checkEven
  2857  0213                     	__end_of_checkEven:
  2858 ;; =============== function _checkEven ends ============
  2859                           
  2860                           	signat	_checkEven,90
  2861                           	global	_makeHexByte
  2862                           psect	text481,local,class=CODE,delta=2
  2863                           global __ptext481
  2864  01C7                     __ptext481:
  2865                           
  2866 ;; *************** function _makeHexByte *****************
  2867 ;; Defined at:
  2868 ;;		line 195 in file "Bluetooth.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  nibOne          1    wreg     unsigned char 
  2871 ;;  nibTwo          1   13[COMMON] unsigned char 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  nibOne          1    2[BANK0 ] unsigned char 
  2874 ;;  input_byte      1    3[BANK0 ] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      unsigned char 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0, pclath, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         1       0       0       0       0
  2885 ;;      Locals:         0       2       0       0       0
  2886 ;;      Temps:          0       2       0       0       0
  2887 ;;      Totals:         1       4       0       0       0
  2888 ;;Total ram usage:        5 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    1
  2891 ;; This function calls:
  2892 ;;		_makeNibble
  2893 ;; This function is called by:
  2894 ;;		_parsePacket
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           psect	text481
  2898                           	file	"Bluetooth.c"
  2899                           	line	195
  2900                           	global	__size_of_makeHexByte
  2901  0025                     	__size_of_makeHexByte	equ	__end_of_makeHexByte-_makeHexByte
  2902                           	
  2903  01C7                     _makeHexByte:	
  2904                           	opt	stack 5
  2905                           ; Regs used in _makeHexByte: [wreg+status,2+status,0+pclath+cstack]
  2906                           ;makeHexByte@nibOne stored from wreg
  2907                           	line	197
  2908  01C7  1283               	bcf	status, 5	;RP0=0, select bank0
  2909  01C8  1303               	bcf	status, 6	;RP1=0, select bank0
  2910  01C9  00D4               	movwf	(makeHexByte@nibOne)
  2911                           	
  2912  01CA                     l7343:	
  2913                           ;Bluetooth.c: 196: unsigned char input_byte;
  2914                           ;Bluetooth.c: 197: input_byte = (makeNibble(nibOne)<<4);
  2915  01CA  0854               	movf	(makeHexByte@nibOne),w
  2916  01CB  120A  118A  2186   	fcall	_makeNibble
              120A  118A         
  2917  01D0  1283               	bcf	status, 5	;RP0=0, select bank0
  2918  01D1  1303               	bcf	status, 6	;RP1=0, select bank0
  2919  01D2  00D2               	movwf	(??_makeHexByte+0)+0
  2920  01D3  3003               	movlw	(04h)-1
  2921  01D4                     u2715:
  2922  01D4  1003               	clrc
  2923  01D5  0DD2               	rlf	(??_makeHexByte+0)+0,f
  2924  01D6  3EFF               	addlw	-1
  2925  01D7  1D03               	skipz
  2926  01D8  29D4               	goto	u2715
  2927  01D9  1003               	clrc
  2928  01DA  0D52               	rlf	(??_makeHexByte+0)+0,w
  2929  01DB  00D3               	movwf	(??_makeHexByte+1)+0
  2930  01DC  0853               	movf	(??_makeHexByte+1)+0,w
  2931  01DD  00D5               	movwf	(makeHexByte@input_byte)
  2932                           	line	198
  2933                           ;Bluetooth.c: 198: input_byte|= makeNibble(nibTwo);
  2934  01DE  087D               	movf	(makeHexByte@nibTwo),w
  2935  01DF  120A  118A  2186   	fcall	_makeNibble
              120A  118A         
  2936  01E4  1283               	bcf	status, 5	;RP0=0, select bank0
  2937  01E5  1303               	bcf	status, 6	;RP1=0, select bank0
  2938  01E6  00D2               	movwf	(??_makeHexByte+0)+0
  2939  01E7  0852               	movf	(??_makeHexByte+0)+0,w
  2940  01E8  04D5               	iorwf	(makeHexByte@input_byte),f
  2941                           	line	199
  2942                           	
  2943  01E9                     l7345:	
  2944                           ;Bluetooth.c: 199: return input_byte;
  2945  01E9  0855               	movf	(makeHexByte@input_byte),w
  2946  01EA  29EB               	goto	l765
  2947                           	
  2948  01EB                     l7347:	
  2949                           	line	200
  2950                           	
  2951  01EB                     l765:	
  2952  01EB  0008               	return
  2953                           	opt stack 0
  2954                           GLOBAL	__end_of_makeHexByte
  2955  01EC                     	__end_of_makeHexByte:
  2956 ;; =============== function _makeHexByte ends ============
  2957                           
  2958                           	signat	_makeHexByte,8313
  2959                           	global	_readString
  2960                           psect	text482,local,class=CODE,delta=2
  2961                           global __ptext482
  2962  032E                     __ptext482:
  2963                           
  2964 ;; *************** function _readString *****************
  2965 ;; Defined at:
  2966 ;;		line 147 in file "Bluetooth.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  readStorage     1    wreg     PTR unsigned char 
  2969 ;;		 -> main@arrStore(50), 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  readStorage     1    2[BANK0 ] PTR unsigned char 
  2972 ;;		 -> main@arrStore(50), 
  2973 ;;  i               2    3[BANK0 ] unsigned int 
  2974 ;;  ch              1    5[BANK0 ] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;		None               void
  2977 ;; Registers used:
  2978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2984 ;;      Params:         0       0       0       0       0
  2985 ;;      Locals:         0       4       0       0       0
  2986 ;;      Temps:          0       2       0       0       0
  2987 ;;      Totals:         0       6       0       0       0
  2988 ;;Total ram usage:        6 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    1
  2991 ;; This function calls:
  2992 ;;		_readByte
  2993 ;;		_eeprom_write
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           psect	text482
  2999                           	file	"Bluetooth.c"
  3000                           	line	147
  3001                           	global	__size_of_readString
  3002  004B                     	__size_of_readString	equ	__end_of_readString-_readString
  3003                           	
  3004  032E                     _readString:	
  3005                           	opt	stack 6
  3006                           ; Regs used in _readString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3007                           ;readString@readStorage stored from wreg
  3008                           	line	149
  3009  032E  1283               	bcf	status, 5	;RP0=0, select bank0
  3010  032F  1303               	bcf	status, 6	;RP1=0, select bank0
  3011  0330  00D4               	movwf	(readString@readStorage)
  3012                           	
  3013  0331                     l7329:	
  3014                           ;Bluetooth.c: 149: unsigned int i = 0;
  3015  0331  01D5               	clrf	(readString@i)
  3016  0332  01D6               	clrf	(readString@i+1)
  3017                           	line	154
  3018                           	
  3019  0333                     l7331:	
  3020                           ;Bluetooth.c: 151: unsigned char ch;
  3021                           ;Bluetooth.c: 154: ch = readByte();
  3022  0333  120A  118A  2155   	fcall	_readByte
              120A  118A         
  3023  0338  1283               	bcf	status, 5	;RP0=0, select bank0
  3024  0339  1303               	bcf	status, 6	;RP1=0, select bank0
  3025  033A  00D2               	movwf	(??_readString+0)+0
  3026  033B  0852               	movf	(??_readString+0)+0,w
  3027  033C  00D7               	movwf	(readString@ch)
  3028                           	line	156
  3029                           ;Bluetooth.c: 156: while(ch != userEndByte)
  3030  033D  2B59               	goto	l7339
  3031                           	
  3032  033E                     l756:	
  3033                           	line	159
  3034                           	
  3035  033E                     l7333:	
  3036                           ;Bluetooth.c: 157: {
  3037                           ;Bluetooth.c: 159: readStorage[i] = ch;
  3038  033E  0857               	movf	(readString@ch),w
  3039  033F  00D2               	movwf	(??_readString+0)+0
  3040  0340  0855               	movf	(readString@i),w
  3041  0341  0754               	addwf	(readString@readStorage),w
  3042  0342  00D3               	movwf	(??_readString+1)+0
  3043  0343  0853               	movf	0+(??_readString+1)+0,w
  3044  0344  0084               	movwf	fsr0
  3045  0345  0852               	movf	(??_readString+0)+0,w
  3046  0346  1383               	bcf	status, 7	;select IRP bank0
  3047  0347  0080               	movwf	indf
  3048                           	line	161
  3049                           	
  3050  0348                     l7335:	
  3051                           ;Bluetooth.c: 161: i++;
  3052  0348  3001               	movlw	low(01h)
  3053  0349  07D5               	addwf	(readString@i),f
  3054  034A  1803               	skipnc
  3055  034B  0AD6               	incf	(readString@i+1),f
  3056  034C  3000               	movlw	high(01h)
  3057  034D  07D6               	addwf	(readString@i+1),f
  3058                           	line	163
  3059                           	
  3060  034E                     l7337:	
  3061                           ;Bluetooth.c: 163: ch = readByte();
  3062  034E  120A  118A  2155   	fcall	_readByte
              120A  118A         
  3063  0353  1283               	bcf	status, 5	;RP0=0, select bank0
  3064  0354  1303               	bcf	status, 6	;RP1=0, select bank0
  3065  0355  00D2               	movwf	(??_readString+0)+0
  3066  0356  0852               	movf	(??_readString+0)+0,w
  3067  0357  00D7               	movwf	(readString@ch)
  3068  0358  2B59               	goto	l7339
  3069                           	line	164
  3070                           	
  3071  0359                     l755:	
  3072                           	line	156
  3073                           	
  3074  0359                     l7339:	
  3075  0359  304E               	movlw	(_userEndByte-__stringbase)
  3076  035A  0084               	movwf	fsr0
  3077  035B  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3078  0360  00D2               	movwf	(??_readString+0)+0
  3079  0361  0857               	movf	(readString@ch),w
  3080  0362  0652               	xorwf	(??_readString+0)+0,w
  3081  0363  1D03               	skipz
  3082  0364  2B66               	goto	u2701
  3083  0365  2B67               	goto	u2700
  3084  0366                     u2701:
  3085  0366  2B3E               	goto	l7333
  3086  0367                     u2700:
  3087  0367  2B68               	goto	l7341
  3088                           	
  3089  0368                     l757:	
  3090                           	line	167
  3091                           	
  3092  0368                     l7341:	
  3093                           ;Bluetooth.c: 164: }
  3094                           ;Bluetooth.c: 167: eeprom_write(RXLenAddr,i);
  3095  0368  0855               	movf	(readString@i),w
  3096  0369  00D2               	movwf	(??_readString+0)+0
  3097  036A  0852               	movf	(??_readString+0)+0,w
  3098  036B  00FA               	movwf	(?_eeprom_write)
  3099  036C  3040               	movlw	(_RXLenAddr-__stringbase)
  3100  036D  0084               	movwf	fsr0
  3101  036E  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3102  0373  120A  118A  22C9   	fcall	_eeprom_write
              120A  118A         
  3103                           	line	168
  3104                           	
  3105  0378                     l758:	
  3106  0378  0008               	return
  3107                           	opt stack 0
  3108                           GLOBAL	__end_of_readString
  3109  0379                     	__end_of_readString:
  3110 ;; =============== function _readString ends ============
  3111                           
  3112                           	signat	_readString,4216
  3113                           	global	_writeString
  3114                           psect	text483,local,class=CODE,delta=2
  3115                           global __ptext483
  3116  023A                     __ptext483:
  3117                           
  3118 ;; *************** function _writeString *****************
  3119 ;; Defined at:
  3120 ;;		line 125 in file "Bluetooth.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  userString      1    wreg     PTR unsigned char 
  3123 ;;		 -> main@arrStore(50), main@counterText(9), main@testString(9), 
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;  userString      1   11[COMMON] PTR unsigned char 
  3126 ;;		 -> main@arrStore(50), main@counterText(9), main@testString(9), 
  3127 ;;  i               2   12[COMMON] unsigned int 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;		None               void
  3130 ;; Registers used:
  3131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3137 ;;      Params:         0       0       0       0       0
  3138 ;;      Locals:         3       0       0       0       0
  3139 ;;      Temps:          1       0       0       0       0
  3140 ;;      Totals:         4       0       0       0       0
  3141 ;;Total ram usage:        4 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    1
  3144 ;; This function calls:
  3145 ;;		_writeByte
  3146 ;;		_strlen
  3147 ;; This function is called by:
  3148 ;;		_main
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           psect	text483
  3152                           	file	"Bluetooth.c"
  3153                           	line	125
  3154                           	global	__size_of_writeString
  3155  002F                     	__size_of_writeString	equ	__end_of_writeString-_writeString
  3156                           	
  3157  023A                     _writeString:	
  3158                           	opt	stack 6
  3159                           ; Regs used in _writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3160                           ;writeString@userString stored from wreg
  3161                           	line	129
  3162  023A  00FB               	movwf	(writeString@userString)
  3163                           	
  3164  023B                     l7319:	
  3165                           ;Bluetooth.c: 127: unsigned int i;
  3166                           ;Bluetooth.c: 129: for(i = 0;i<strlen(userString);i++){
  3167  023B  01FC               	clrf	(writeString@i)
  3168  023C  01FD               	clrf	(writeString@i+1)
  3169  023D  2A51               	goto	l7325
  3170                           	
  3171  023E                     l750:	
  3172                           	line	130
  3173                           	
  3174  023E                     l7321:	
  3175                           ;Bluetooth.c: 130: writeByte(userString[i]);
  3176  023E  087C               	movf	(writeString@i),w
  3177  023F  077B               	addwf	(writeString@userString),w
  3178  0240  00FA               	movwf	(??_writeString+0)+0
  3179  0241  087A               	movf	0+(??_writeString+0)+0,w
  3180  0242  0084               	movwf	fsr0
  3181  0243  1383               	bcf	status, 7	;select IRP bank0
  3182  0244  0800               	movf	indf,w
  3183  0245  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  3184                           	line	129
  3185                           	
  3186  024A                     l7323:	
  3187  024A  3001               	movlw	low(01h)
  3188  024B  07FC               	addwf	(writeString@i),f
  3189  024C  1803               	skipnc
  3190  024D  0AFD               	incf	(writeString@i+1),f
  3191  024E  3000               	movlw	high(01h)
  3192  024F  07FD               	addwf	(writeString@i+1),f
  3193  0250  2A51               	goto	l7325
  3194                           	
  3195  0251                     l749:	
  3196                           	
  3197  0251                     l7325:	
  3198  0251  087B               	movf	(writeString@userString),w
  3199  0252  120A  118A  2298   	fcall	_strlen
              120A  118A         
  3200  0257  0871               	movf	(1+(?_strlen)),w
  3201  0258  027D               	subwf	(writeString@i+1),w
  3202  0259  1D03               	skipz
  3203  025A  2A5D               	goto	u2695
  3204  025B  0870               	movf	(0+(?_strlen)),w
  3205  025C  027C               	subwf	(writeString@i),w
  3206  025D                     u2695:
  3207  025D  1C03               	skipc
  3208  025E  2A60               	goto	u2691
  3209  025F  2A61               	goto	u2690
  3210  0260                     u2691:
  3211  0260  2A3E               	goto	l7321
  3212  0261                     u2690:
  3213  0261  2A62               	goto	l7327
  3214                           	
  3215  0262                     l751:	
  3216                           	line	133
  3217                           	
  3218  0262                     l7327:	
  3219                           ;Bluetooth.c: 131: }
  3220                           ;Bluetooth.c: 133: writeByte((unsigned char)i);
  3221  0262  087C               	movf	(writeString@i),w
  3222  0263  120A  118A  216B   	fcall	_writeByte
              120A  118A         
  3223                           	line	135
  3224                           	
  3225  0268                     l752:	
  3226  0268  0008               	return
  3227                           	opt stack 0
  3228                           GLOBAL	__end_of_writeString
  3229  0269                     	__end_of_writeString:
  3230 ;; =============== function _writeString ends ============
  3231                           
  3232                           	signat	_writeString,4216
  3233                           	global	_initADC
  3234                           psect	text484,local,class=CODE,delta=2
  3235                           global __ptext484
  3236  0160                     __ptext484:
  3237                           
  3238 ;; *************** function _initADC *****************
  3239 ;; Defined at:
  3240 ;;		line 7 in file "customADC.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;		None
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;		None               void
  3247 ;; Registers used:
  3248 ;;		wreg
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3254 ;;      Params:         0       0       0       0       0
  3255 ;;      Locals:         0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0
  3257 ;;      Totals:         0       0       0       0       0
  3258 ;;Total ram usage:        0 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_main
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           psect	text484
  3267                           	file	"customADC.c"
  3268                           	line	7
  3269                           	global	__size_of_initADC
  3270  000B                     	__size_of_initADC	equ	__end_of_initADC-_initADC
  3271                           	
  3272  0160                     _initADC:	
  3273                           	opt	stack 7
  3274                           ; Regs used in _initADC: [wreg]
  3275                           	line	8
  3276                           	
  3277  0160                     l7317:	
  3278                           ;customADC.c: 8: TRISA = 0x03;
  3279  0160  3003               	movlw	(03h)
  3280  0161  1683               	bsf	status, 5	;RP0=1, select bank1
  3281  0162  1303               	bcf	status, 6	;RP1=0, select bank1
  3282  0163  0085               	movwf	(133)^080h	;volatile
  3283                           	line	22
  3284                           ;customADC.c: 22: ADCON1 = 0x80;
  3285  0164  3080               	movlw	(080h)
  3286  0165  009F               	movwf	(159)^080h	;volatile
  3287                           	line	39
  3288                           ;customADC.c: 39: ADCON0 = 0x80;
  3289  0166  3080               	movlw	(080h)
  3290  0167  1283               	bcf	status, 5	;RP0=0, select bank0
  3291  0168  1303               	bcf	status, 6	;RP1=0, select bank0
  3292  0169  009F               	movwf	(31)	;volatile
  3293                           	line	40
  3294                           	
  3295  016A                     l3016:	
  3296  016A  0008               	return
  3297                           	opt stack 0
  3298                           GLOBAL	__end_of_initADC
  3299  016B                     	__end_of_initADC:
  3300 ;; =============== function _initADC ends ============
  3301                           
  3302                           	signat	_initADC,88
  3303                           	global	_eeprom_read
  3304                           psect	text485,local,class=CODE,delta=2
  3305                           global __ptext485
  3306  01A8                     __ptext485:
  3307                           
  3308 ;; *************** function _eeprom_read *****************
  3309 ;; Defined at:
  3310 ;;		line 7 in file "eeread.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  addr            1    wreg     unsigned char 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  addr            1    1[COMMON] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      unsigned char 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3324 ;;      Params:         0       0       0       0       0
  3325 ;;      Locals:         1       0       0       0       0
  3326 ;;      Temps:          1       0       0       0       0
  3327 ;;      Totals:         2       0       0       0       0
  3328 ;;Total ram usage:        2 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_checkEven
  3334 ;;		_checkLength
  3335 ;;		_checkDataFrames
  3336 ;;		_parsePacket
  3337 ;;		_checkStartByte
  3338 ;;		_checkRWByte
  3339 ;;		_checkCMDByte
  3340 ;;		_checkCS
  3341 ;;		_addDataToCheckSum
  3342 ;;		_main
  3343 ;;		_displayPacket
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           psect	text485
  3347                           	file	"C:\Microchip\Hitech\sources\eeread.c"
  3348                           	line	7
  3349                           	global	__size_of_eeprom_read
  3350  001F                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
  3351                           	
  3352  01A8                     _eeprom_read:	
  3353                           	opt	stack 5
  3354                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3355                           ;eeprom_read@addr stored from wreg
  3356                           	line	9
  3357  01A8  00F1               	movwf	(eeprom_read@addr)
  3358                           	line	8
  3359                           	
  3360  01A9                     l4396:	
  3361                           	line	9
  3362                           # 9 "C:\Microchip\Hitech\sources\eeread.c"
  3363  01A9  0064               clrwdt ;#
  3364                           psect	text485
  3365                           	line	10
  3366  01AA  1683               	bsf	status, 5	;RP0=1, select bank3
  3367  01AB  1703               	bsf	status, 6	;RP1=1, select bank3
  3368  01AC  188C               	btfsc	(3169/8)^0180h,(3169)&7
  3369  01AD  29AF               	goto	u2671
  3370  01AE  29B0               	goto	u2670
  3371  01AF                     u2671:
  3372  01AF  29A9               	goto	l4396
  3373  01B0                     u2670:
  3374  01B0  29B1               	goto	l7301
  3375                           	
  3376  01B1                     l4397:	
  3377                           	line	11
  3378                           	
  3379  01B1                     l7301:	
  3380  01B1  0871               	movf	(eeprom_read@addr),w
  3381  01B2  1283               	bcf	status, 5	;RP0=0, select bank2
  3382  01B3  1703               	bsf	status, 6	;RP1=1, select bank2
  3383  01B4  008D               	movwf	(269)^0100h	;volatile
  3384  01B5  303F               	movlw	(03Fh)
  3385  01B6  00F0               	movwf	(??_eeprom_read+0)+0
  3386  01B7  0870               	movf	(??_eeprom_read+0)+0,w
  3387  01B8  1683               	bsf	status, 5	;RP0=1, select bank3
  3388  01B9  1703               	bsf	status, 6	;RP1=1, select bank3
  3389  01BA  058C               	andwf	(396)^0180h,f	;volatile
  3390  01BB  140C               	bsf	(3168/8)^0180h,(3168)&7
  3391  01BC  1003               	clrc
  3392  01BD  180C               	btfsc	(3168/8)^0180h,(3168)&7
  3393  01BE  1403               	setc
  3394  01BF  3000               	movlw	0
  3395  01C0  1803               	skipnc
  3396  01C1  3001               	movlw	1
  3397                           
  3398  01C2  1283               	bcf	status, 5	;RP0=0, select bank2
  3399  01C3  1703               	bsf	status, 6	;RP1=1, select bank2
  3400  01C4  080C               	movf	(268)^0100h,w	;volatile
  3401  01C5  29C6               	goto	l4398
  3402                           	
  3403  01C6                     l7303:	
  3404                           	line	12
  3405                           	
  3406  01C6                     l4398:	
  3407  01C6  0008               	return
  3408                           	opt stack 0
  3409                           GLOBAL	__end_of_eeprom_read
  3410  01C7                     	__end_of_eeprom_read:
  3411 ;; =============== function _eeprom_read ends ============
  3412                           
  3413                           	signat	_eeprom_read,4217
  3414                           	global	_makeNibble
  3415                           psect	text486,local,class=CODE,delta=2
  3416                           global __ptext486
  3417  0186                     __ptext486:
  3418                           
  3419 ;; *************** function _makeNibble *****************
  3420 ;; Defined at:
  3421 ;;		line 179 in file "Bluetooth.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  tempNib         1    wreg     unsigned char 
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;  tempNib         1    0[COMMON] unsigned char 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      unsigned char 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3435 ;;      Params:         0       0       0       0       0
  3436 ;;      Locals:         1       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0
  3438 ;;      Totals:         1       0       0       0       0
  3439 ;;Total ram usage:        1 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_makeHexByte
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           psect	text486
  3448                           	file	"Bluetooth.c"
  3449                           	line	179
  3450                           	global	__size_of_makeNibble
  3451  000F                     	__size_of_makeNibble	equ	__end_of_makeNibble-_makeNibble
  3452                           	
  3453  0186                     _makeNibble:	
  3454                           	opt	stack 5
  3455                           ; Regs used in _makeNibble: [wreg+status,2+status,0]
  3456                           ;makeNibble@tempNib stored from wreg
  3457  0186  00F0               	movwf	(makeNibble@tempNib)
  3458                           	line	180
  3459                           	
  3460  0187                     l7291:	
  3461                           ;Bluetooth.c: 180: if(tempNib>='A'){
  3462  0187  3041               	movlw	(041h)
  3463  0188  0270               	subwf	(makeNibble@tempNib),w
  3464  0189  1C03               	skipc
  3465  018A  298C               	goto	u2661
  3466  018B  298D               	goto	u2660
  3467  018C                     u2661:
  3468  018C  2991               	goto	l7297
  3469  018D                     u2660:
  3470                           	line	181
  3471                           	
  3472  018D                     l7293:	
  3473                           ;Bluetooth.c: 181: return ((tempNib - (unsigned char)'A')+10);
  3474  018D  0870               	movf	(makeNibble@tempNib),w
  3475  018E  3EC9               	addlw	0C9h
  3476  018F  2994               	goto	l762
  3477                           	
  3478  0190                     l7295:	
  3479  0190  2994               	goto	l762
  3480                           	line	182
  3481                           	
  3482  0191                     l761:	
  3483                           	line	183
  3484                           	
  3485  0191                     l7297:	
  3486                           ;Bluetooth.c: 182: }
  3487                           ;Bluetooth.c: 183: return (tempNib - '0');
  3488  0191  0870               	movf	(makeNibble@tempNib),w
  3489  0192  3ED0               	addlw	0D0h
  3490  0193  2994               	goto	l762
  3491                           	
  3492  0194                     l7299:	
  3493                           	line	184
  3494                           	
  3495  0194                     l762:	
  3496  0194  0008               	return
  3497                           	opt stack 0
  3498                           GLOBAL	__end_of_makeNibble
  3499  0195                     	__end_of_makeNibble:
  3500 ;; =============== function _makeNibble ends ============
  3501                           
  3502                           	signat	_makeNibble,4217
  3503                           	global	_eeprom_write
  3504                           psect	text487,local,class=CODE,delta=2
  3505                           global __ptext487
  3506  02C9                     __ptext487:
  3507                           
  3508 ;; *************** function _eeprom_write *****************
  3509 ;; Defined at:
  3510 ;;		line 7 in file "C:\Microchip\Hitech\sources\eewrite.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  addr            1    wreg     unsigned char 
  3513 ;;  value           1   10[COMMON] unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  addr            1   12[COMMON] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      unsigned char 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         1       0       0       0       0
  3526 ;;      Locals:         1       0       0       0       0
  3527 ;;      Temps:          1       0       0       0       0
  3528 ;;      Totals:         3       0       0       0       0
  3529 ;;Total ram usage:        3 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		_readString
  3535 ;;		_parsePacket
  3536 ;;		_checkStartByte
  3537 ;;		_checkRWByte
  3538 ;;		_checkCMDByte
  3539 ;;		_addDataToCheckSum
  3540 ;;		_main
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           psect	text487
  3544                           	file	"C:\Microchip\Hitech\sources\eewrite.c"
  3545                           	line	7
  3546                           	global	__size_of_eeprom_write
  3547  0031                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
  3548                           	
  3549  02C9                     _eeprom_write:	
  3550                           	opt	stack 5
  3551                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  3552                           ;eeprom_write@addr stored from wreg
  3553  02C9  00FC               	movwf	(eeprom_write@addr)
  3554                           	line	8
  3555                           	
  3556  02CA                     l5013:	
  3557  02CA  2ACB               	goto	l5014
  3558                           	
  3559  02CB                     l5015:	
  3560                           	
  3561  02CB                     l5014:	
  3562  02CB  1683               	bsf	status, 5	;RP0=1, select bank3
  3563  02CC  1703               	bsf	status, 6	;RP1=1, select bank3
  3564  02CD  188C               	btfsc	(3169/8)^0180h,(3169)&7
  3565  02CE  2AD0               	goto	u2631
  3566  02CF  2AD1               	goto	u2630
  3567  02D0                     u2631:
  3568  02D0  2ACB               	goto	l5014
  3569  02D1                     u2630:
  3570  02D1  2AD2               	goto	l7271
  3571                           	
  3572  02D2                     l5016:	
  3573                           	
  3574  02D2                     l7271:	
  3575  02D2  087C               	movf	(eeprom_write@addr),w
  3576  02D3  1283               	bcf	status, 5	;RP0=0, select bank2
  3577  02D4  1703               	bsf	status, 6	;RP1=1, select bank2
  3578  02D5  008D               	movwf	(269)^0100h	;volatile
  3579  02D6  087A               	movf	(eeprom_write@value),w
  3580  02D7  008C               	movwf	(268)^0100h	;volatile
  3581                           	
  3582  02D8                     l7273:	
  3583  02D8  303F               	movlw	(03Fh)
  3584  02D9  00FB               	movwf	(??_eeprom_write+0)+0
  3585  02DA  087B               	movf	(??_eeprom_write+0)+0,w
  3586  02DB  1683               	bsf	status, 5	;RP0=1, select bank3
  3587  02DC  1703               	bsf	status, 6	;RP1=1, select bank3
  3588  02DD  058C               	andwf	(396)^0180h,f	;volatile
  3589                           	
  3590  02DE                     l7275:	
  3591  02DE  1283               	bcf	status, 5	;RP0=0, select bank0
  3592  02DF  1303               	bcf	status, 6	;RP1=0, select bank0
  3593  02E0  1003               	bcf	(24/8),(24)&7
  3594                           	
  3595  02E1                     l7277:	
  3596  02E1  1F8B               	btfss	(95/8),(95)&7
  3597  02E2  2AE4               	goto	u2641
  3598  02E3  2AE5               	goto	u2640
  3599  02E4                     u2641:
  3600  02E4  2AE6               	goto	l5017
  3601  02E5                     u2640:
  3602                           	
  3603  02E5                     l7279:	
  3604  02E5  1403               	bsf	(24/8),(24)&7
  3605                           	
  3606  02E6                     l5017:	
  3607  02E6  138B               	bcf	(95/8),(95)&7
  3608  02E7  1683               	bsf	status, 5	;RP0=1, select bank3
  3609  02E8  1703               	bsf	status, 6	;RP1=1, select bank3
  3610  02E9  150C               	bsf	(3170/8)^0180h,(3170)&7
  3611                           	
  3612  02EA                     l7281:	
  3613  02EA  3055               	movlw	(055h)
  3614  02EB  008D               	movwf	(397)^0180h	;volatile
  3615  02EC  30AA               	movlw	(0AAh)
  3616  02ED  008D               	movwf	(397)^0180h	;volatile
  3617                           	
  3618  02EE                     l7283:	
  3619  02EE  148C               	bsf	(3169/8)^0180h,(3169)&7
  3620                           	
  3621  02EF                     l7285:	
  3622  02EF  110C               	bcf	(3170/8)^0180h,(3170)&7
  3623                           	
  3624  02F0                     l7287:	
  3625  02F0  1283               	bcf	status, 5	;RP0=0, select bank0
  3626  02F1  1303               	bcf	status, 6	;RP1=0, select bank0
  3627  02F2  1C03               	btfss	(24/8),(24)&7
  3628  02F3  2AF5               	goto	u2651
  3629  02F4  2AF6               	goto	u2650
  3630  02F5                     u2651:
  3631  02F5  2AF9               	goto	l5020
  3632  02F6                     u2650:
  3633                           	
  3634  02F6                     l7289:	
  3635  02F6  178B               	bsf	(95/8),(95)&7
  3636  02F7  2AF9               	goto	l5020
  3637                           	
  3638  02F8                     l5018:	
  3639  02F8  2AF9               	goto	l5020
  3640                           	
  3641  02F9                     l5019:	
  3642                           	line	10
  3643                           ;	Return value of _eeprom_write is never used
  3644                           	
  3645  02F9                     l5020:	
  3646  02F9  0008               	return
  3647                           	opt stack 0
  3648                           GLOBAL	__end_of_eeprom_write
  3649  02FA                     	__end_of_eeprom_write:
  3650 ;; =============== function _eeprom_write ends ============
  3651                           
  3652                           	signat	_eeprom_write,8313
  3653                           	global	_strlen
  3654                           psect	text488,local,class=CODE,delta=2
  3655                           global __ptext488
  3656  0298                     __ptext488:
  3657                           
  3658 ;; *************** function _strlen *****************
  3659 ;; Defined at:
  3660 ;;		line 5 in file "C:\Microchip\Hitech\sources\strlen.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  s               1    wreg     PTR const unsigned char 
  3663 ;;		 -> main@arrStore(50), main@counterText(9), main@testString(9), 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  s               1    8[COMMON] PTR const unsigned char 
  3666 ;;		 -> main@arrStore(50), main@counterText(9), main@testString(9), 
  3667 ;;  cp              1    9[COMMON] PTR const unsigned char 
  3668 ;;		 -> main@arrStore(50), main@counterText(9), main@testString(9), 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  2    0[COMMON] unsigned int 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3678 ;;      Params:         2       0       0       0       0
  3679 ;;      Locals:         2       0       0       0       0
  3680 ;;      Temps:          6       0       0       0       0
  3681 ;;      Totals:        10       0       0       0       0
  3682 ;;Total ram usage:       10 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_writeString
  3688 ;;		_parsePacket
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           psect	text488
  3692                           	file	"C:\Microchip\Hitech\sources\strlen.c"
  3693                           	line	5
  3694                           	global	__size_of_strlen
  3695  0031                     	__size_of_strlen	equ	__end_of_strlen-_strlen
  3696                           	
  3697  0298                     _strlen:	
  3698                           	opt	stack 6
  3699                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  3700                           ;strlen@s stored from wreg
  3701                           	line	8
  3702  0298  00F8               	movwf	(strlen@s)
  3703                           	
  3704  0299                     l7263:	
  3705  0299  0878               	movf	(strlen@s),w
  3706  029A  00F2               	movwf	(??_strlen+0)+0
  3707  029B  0872               	movf	(??_strlen+0)+0,w
  3708  029C  00F9               	movwf	(strlen@cp)
  3709                           	line	9
  3710  029D  2A9F               	goto	l7265
  3711                           	
  3712  029E                     l5698:	
  3713                           	line	10
  3714  029E  2A9F               	goto	l7265
  3715                           	
  3716  029F                     l5697:	
  3717                           	line	9
  3718                           	
  3719  029F                     l7265:	
  3720  029F  0879               	movf	(strlen@cp),w
  3721  02A0  0084               	movwf	fsr0
  3722  02A1  3001               	movlw	01h
  3723  02A2  07F9               	addwf	(strlen@cp),f
  3724  02A3  1383               	bcf	status, 7	;select IRP bank0
  3725  02A4  0880               	movf	indf,f
  3726  02A5  1D03               	skipz
  3727  02A6  2AA8               	goto	u2621
  3728  02A7  2AA9               	goto	u2620
  3729  02A8                     u2621:
  3730  02A8  2A9F               	goto	l7265
  3731  02A9                     u2620:
  3732  02A9  2AAA               	goto	l7267
  3733                           	
  3734  02AA                     l5699:	
  3735                           	line	11
  3736                           	
  3737  02AA                     l7267:	
  3738  02AA  0878               	movf	(strlen@s),w
  3739  02AB  00F2               	movwf	(??_strlen+0)+0
  3740  02AC  3000               	movlw	((0x0/2))
  3741  02AD  00F3               	movwf	(??_strlen+0)+0+1
  3742  02AE  09F2               	comf	(??_strlen+0)+0,f
  3743  02AF  09F3               	comf	(??_strlen+0)+1,f
  3744  02B0  0AF2               	incf	(??_strlen+0)+0,f
  3745  02B1  1903               	skipnz
  3746  02B2  0AF3               	incf	(??_strlen+0)+1,f
  3747  02B3  0879               	movf	(strlen@cp),w
  3748  02B4  00F4               	movwf	(??_strlen+2)+0
  3749  02B5  3000               	movlw	((0x0/2))
  3750  02B6  00F5               	movwf	(??_strlen+2)+0+1
  3751  02B7  0872               	movf	0+(??_strlen+0)+0,w
  3752  02B8  0774               	addwf	0+(??_strlen+2)+0,w
  3753  02B9  00F6               	movwf	(??_strlen+4)+0
  3754  02BA  0873               	movf	1+(??_strlen+0)+0,w
  3755  02BB  1803               	skipnc
  3756  02BC  0A73               	incf	1+(??_strlen+0)+0,w
  3757  02BD  0775               	addwf	1+(??_strlen+2)+0,w
  3758  02BE  00F7               	movwf	1+(??_strlen+4)+0
  3759  02BF  0876               	movf	0+(??_strlen+4)+0,w
  3760  02C0  3EFF               	addlw	low(-1)
  3761  02C1  00F0               	movwf	(?_strlen)
  3762  02C2  0877               	movf	1+(??_strlen+4)+0,w
  3763  02C3  1803               	skipnc
  3764  02C4  3E01               	addlw	1
  3765  02C5  3EFF               	addlw	high(-1)
  3766  02C6  00F1               	movwf	1+(?_strlen)
  3767  02C7  2AC8               	goto	l5700
  3768                           	
  3769  02C8                     l7269:	
  3770                           	line	12
  3771                           	
  3772  02C8                     l5700:	
  3773  02C8  0008               	return
  3774                           	opt stack 0
  3775                           GLOBAL	__end_of_strlen
  3776  02C9                     	__end_of_strlen:
  3777 ;; =============== function _strlen ends ============
  3778                           
  3779                           	signat	_strlen,4218
  3780                           	global	_readByte
  3781                           psect	text489,local,class=CODE,delta=2
  3782                           global __ptext489
  3783  0155                     __ptext489:
  3784                           
  3785 ;; *************** function _readByte *****************
  3786 ;; Defined at:
  3787 ;;		line 86 in file "Bluetooth.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      unsigned char 
  3794 ;; Registers used:
  3795 ;;		wreg
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3801 ;;      Params:         0       0       0       0       0
  3802 ;;      Locals:         0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0
  3804 ;;      Totals:         0       0       0       0       0
  3805 ;;Total ram usage:        0 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		_readString
  3811 ;;		_echoBack
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           psect	text489
  3815                           	file	"Bluetooth.c"
  3816                           	line	86
  3817                           	global	__size_of_readByte
  3818  000B                     	__size_of_readByte	equ	__end_of_readByte-_readByte
  3819                           	
  3820  0155                     _readByte:	
  3821                           	opt	stack 6
  3822                           ; Regs used in _readByte: [wreg]
  3823                           	line	90
  3824                           	
  3825  0155                     l7251:	
  3826                           ;Bluetooth.c: 90: while(!RCIF);
  3827  0155  2956               	goto	l740
  3828                           	
  3829  0156                     l741:	
  3830                           	
  3831  0156                     l740:	
  3832  0156  1283               	bcf	status, 5	;RP0=0, select bank0
  3833  0157  1303               	bcf	status, 6	;RP1=0, select bank0
  3834  0158  1E8C               	btfss	(101/8),(101)&7
  3835  0159  295B               	goto	u2611
  3836  015A  295C               	goto	u2610
  3837  015B                     u2611:
  3838  015B  2956               	goto	l740
  3839  015C                     u2610:
  3840  015C  295D               	goto	l7253
  3841                           	
  3842  015D                     l742:	
  3843                           	line	93
  3844                           	
  3845  015D                     l7253:	
  3846                           ;Bluetooth.c: 93: return RCREG;
  3847  015D  081A               	movf	(26),w	;volatile
  3848  015E  295F               	goto	l743
  3849                           	
  3850  015F                     l7255:	
  3851                           	line	94
  3852                           	
  3853  015F                     l743:	
  3854  015F  0008               	return
  3855                           	opt stack 0
  3856                           GLOBAL	__end_of_readByte
  3857  0160                     	__end_of_readByte:
  3858 ;; =============== function _readByte ends ============
  3859                           
  3860                           	signat	_readByte,89
  3861                           	global	_writeByte
  3862                           psect	text490,local,class=CODE,delta=2
  3863                           global __ptext490
  3864  016B                     __ptext490:
  3865                           
  3866 ;; *************** function _writeByte *****************
  3867 ;; Defined at:
  3868 ;;		line 68 in file "Bluetooth.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  Byte            1    wreg     unsigned char 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  Byte            1    0[COMMON] unsigned char 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;		None               void
  3875 ;; Registers used:
  3876 ;;		wreg
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3882 ;;      Params:         0       0       0       0       0
  3883 ;;      Locals:         1       0       0       0       0
  3884 ;;      Temps:          0       0       0       0       0
  3885 ;;      Totals:         1       0       0       0       0
  3886 ;;Total ram usage:        1 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_writeString
  3892 ;;		_checkEven
  3893 ;;		_checkLength
  3894 ;;		_checkDataFrames
  3895 ;;		_checkStartByte
  3896 ;;		_checkRWByte
  3897 ;;		_checkCMDByte
  3898 ;;		_checkCS
  3899 ;;		_main
  3900 ;;		_echoBack
  3901 ;;		_displayPacket
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           psect	text490
  3905                           	file	"Bluetooth.c"
  3906                           	line	68
  3907                           	global	__size_of_writeByte
  3908  000C                     	__size_of_writeByte	equ	__end_of_writeByte-_writeByte
  3909                           	
  3910  016B                     _writeByte:	
  3911                           	opt	stack 5
  3912                           ; Regs used in _writeByte: [wreg]
  3913                           ;writeByte@Byte stored from wreg
  3914  016B  00F0               	movwf	(writeByte@Byte)
  3915                           	line	72
  3916                           	
  3917  016C                     l7247:	
  3918                           ;Bluetooth.c: 72: while(!TXIF);
  3919  016C  296D               	goto	l734
  3920                           	
  3921  016D                     l735:	
  3922                           	
  3923  016D                     l734:	
  3924  016D  1283               	bcf	status, 5	;RP0=0, select bank0
  3925  016E  1303               	bcf	status, 6	;RP1=0, select bank0
  3926  016F  1E0C               	btfss	(100/8),(100)&7
  3927  0170  2972               	goto	u2601
  3928  0171  2973               	goto	u2600
  3929  0172                     u2601:
  3930  0172  296D               	goto	l734
  3931  0173                     u2600:
  3932  0173  2974               	goto	l7249
  3933                           	
  3934  0174                     l736:	
  3935                           	line	75
  3936                           	
  3937  0174                     l7249:	
  3938                           ;Bluetooth.c: 75: TXREG = Byte;
  3939  0174  0870               	movf	(writeByte@Byte),w
  3940  0175  0099               	movwf	(25)	;volatile
  3941                           	line	76
  3942                           	
  3943  0176                     l737:	
  3944  0176  0008               	return
  3945                           	opt stack 0
  3946                           GLOBAL	__end_of_writeByte
  3947  0177                     	__end_of_writeByte:
  3948 ;; =============== function _writeByte ends ============
  3949                           
  3950                           	signat	_writeByte,4216
  3951                           	global	_initUSART
  3952                           psect	text491,local,class=CODE,delta=2
  3953                           global __ptext491
  3954  0177                     __ptext491:
  3955                           
  3956 ;; *************** function _initUSART *****************
  3957 ;; Defined at:
  3958 ;;		line 17 in file "Bluetooth.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;		None               void
  3965 ;; Registers used:
  3966 ;;		wreg
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3972 ;;      Params:         0       0       0       0       0
  3973 ;;      Locals:         0       0       0       0       0
  3974 ;;      Temps:          0       0       0       0       0
  3975 ;;      Totals:         0       0       0       0       0
  3976 ;;Total ram usage:        0 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_main
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           psect	text491
  3985                           	file	"Bluetooth.c"
  3986                           	line	17
  3987                           	global	__size_of_initUSART
  3988  000F                     	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  3989                           	
  3990  0177                     _initUSART:	
  3991                           	opt	stack 7
  3992                           ; Regs used in _initUSART: [wreg]
  3993                           	line	19
  3994                           	
  3995  0177                     l7243:	
  3996                           ;Bluetooth.c: 19: TRISC6 = 0;
  3997  0177  1683               	bsf	status, 5	;RP0=1, select bank1
  3998  0178  1303               	bcf	status, 6	;RP1=0, select bank1
  3999  0179  1307               	bcf	(1086/8)^080h,(1086)&7
  4000                           	line	22
  4001                           ;Bluetooth.c: 22: TRISC7 = 1;
  4002  017A  1787               	bsf	(1087/8)^080h,(1087)&7
  4003                           	line	35
  4004                           	
  4005  017B                     l7245:	
  4006                           ;Bluetooth.c: 35: RCSTA = 0x90;
  4007  017B  3090               	movlw	(090h)
  4008  017C  1283               	bcf	status, 5	;RP0=0, select bank0
  4009  017D  1303               	bcf	status, 6	;RP1=0, select bank0
  4010  017E  0098               	movwf	(24)	;volatile
  4011                           	line	49
  4012                           ;Bluetooth.c: 49: TXSTA = 0x24;
  4013  017F  3024               	movlw	(024h)
  4014  0180  1683               	bsf	status, 5	;RP0=1, select bank1
  4015  0181  1303               	bcf	status, 6	;RP1=0, select bank1
  4016  0182  0098               	movwf	(152)^080h	;volatile
  4017                           	line	57
  4018                           ;Bluetooth.c: 57: SPBRG = 129;
  4019  0183  3081               	movlw	(081h)
  4020  0184  0099               	movwf	(153)^080h	;volatile
  4021                           	line	58
  4022                           	
  4023  0185                     l731:	
  4024  0185  0008               	return
  4025                           	opt stack 0
  4026                           GLOBAL	__end_of_initUSART
  4027  0186                     	__end_of_initUSART:
  4028 ;; =============== function _initUSART ends ============
  4029                           
  4030                           	signat	_initUSART,88
  4031                           psect	text492,local,class=CODE,delta=2
  4032                           global __ptext492
  4033  0000                     __ptext492:
  4034                           	global	btemp
  4035  007E                     	btemp set 07Eh
  4036                           
  4037                           	DABS	1,126,2	;btemp
  4038                           	global	wtemp0
  4039  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Dec 12 12:56:17 2013

                         pc 0002                          _RD 0C60                          _WR 0C61  
                        fsr 0004                 _userEndByte 0056                         l731 0185  
                       l740 0156                         l741 0156                         l734 016D  
                       l742 015D                         l750 023E                         l735 016D  
                       l743 015F                         l751 0262                         l736 0174  
                       l752 0268                         l737 0176                         l761 0191  
                       l762 0194                         l755 0359                         l756 033E  
                       l749 0251                         l757 0368                         l765 01EB  
                       l758 0378                         _GIE 005F                         fsr0 0004  
                       indf 0000            ?_checkDataFrames 0072                        l3016 016A  
                      l1504 0209                        l1512 05C3                        l1520 07B4  
                      l1505 0212                        l1513 0618                        l1521 07FE  
                      l1514 060F                        l1522 07FF                        l1515 060E  
                      l1531 0451                        l1508 028E                        l1532 0497  
                      l1540 032D                        l1509 0297                        l1525 0422  
                      l1526 042D                        l1550 057E                        l1518 07FF  
                      l1535 04FC                        l1551 057E                        l1519 07EA  
                      l1543 03C4                        l1536 0507                        l1544 03C3  
                      l1529 048C                        l1545 03C9                        l1539 0324  
                      l5020 02F9                        l1548 056C                        l5013 02CA  
                      l1549 0537                        l5014 02CB                        l5015 02CB  
                      l5016 02D2                        l5017 02E6                        l5018 02F8  
                      l5019 02F9                        l3771 0656                        l5700 02C8  
                      l4396 01A9                        l3780 06C8                        l3772 0657  
                      l4397 01B1                        l7301 01B1                        l3781 06C8  
                      l3773 0657                        l4398 01C6                        l3774 065E  
                      l7303 01C6                        l7321 023E                        l7401 0618  
                      l3777 06BF                        l3778 06C6                        l7243 0177  
                      l7251 0155                        l7323 024A                        l7331 0333  
                      l7411 0421                        l7403 03CA                        l3779 06C7  
                      l7245 017B                        l7253 015D                        l7317 0160  
                      l7325 0251                        l7341 0368                        l7333 033E  
                      l7405 03E7                        l7413 0422                        l7421 043F  
                      l7501 03A0                        l7247 016C                        l7255 015F  
                      l7263 0299                        l7271 02D2                        l7327 0262  
                      l7319 023B                        l7335 0348                        l7343 01CA  
                      l7351 01FD                        l7415 0428                        l7407 03ED  
                      l7431 048C                        l7423 0451                        l7511 03C9  
                      l7503 03AB                        l7249 0174                        l7265 029F  
                      l7281 02EA                        l7273 02D8                        l7337 034E  
                      l7329 0331                        l7345 01E9                        l7361 0212  
                      l7353 0203                        l7417 042D                        l7409 041A  
                      l7433 0492                        l7425 0457                        l7441 04EE  
                      l7505 03BB                        l7521 065E                        l7513 0619  
                      l7267 02AA                        l7283 02EE                        l7275 02DE  
                      l7291 0187                        l7339 0359                        l7347 01EB  
                      l7355 0208                        l7371 028E                        l7363 0269  
                      l7435 0497                        l7427 0484                        l7419 042E  
                      l7451 0507                        l7443 04F4                        l7507 03C2  
                      l7531 0694                        l7523 066B                        l7515 0645  
                      l7269 02C8                        l7285 02EF                        l7277 02E1  
                      l7293 018D                        l7357 0209                        l7349 01EC  
                      l7373 0294                        l7365 0282                        l7381 05B6  
                      l7429 048B                        l7445 04FB                        l7437 0498  
                      l7461 0324                        l7453 02FA                        l7509 03C4  
                      l7533 06A5                        l7525 0682                        l7517 064A  
                      l7287 02F0                        l7279 02E5                        l7295 0190  
                      l7359 020F                        l7375 0297                        l7367 0288  
                      l7391 0602                        l7383 05BC                        l7439 04C1  
                      l7447 04FC                        l7463 032A                        l7455 0318  
                      l7471 0537                        l7535 06AB                        l7527 0688  
                      l7519 064F                        l5697 029F                        l7289 02F6  
                      l7297 0191                        l7369 028D                        l7393 0608  
                      l7385 05C1                        l7377 057F                        l7449 0502  
                      l7465 032D                        l7457 031E                        l7473 0565  
                      l7481 06DB                        l7537 06B8                        l7529 068E  
                      l5698 029E                        l5699 02AA                        l7299 0194  
                      l7395 060D                        l7387 05C2                        l7379 0590  
                      l7459 0323                        l7475 056C                        l7467 0508  
                      l7491 07E5                        l7483 06E6                        l7539 06BF  
                      l7397 060F                        l7389 05C3                        l7469 0535  
                      l7493 07EA                        l7485 07B0                        l7477 06CE  
                      l7399 0615                        l7487 07B4                        l7479 06D0  
                      l7495 0379                        l7489 07DD                        l7497 0386  
                      l7499 0393                        _ADON 00F8                        u2600 0173  
                      u2601 0172                        u2610 015C                        u2611 015B  
                      u2620 02A9                        u2700 0367                        u2621 02A8  
                      u2701 0366                        u2630 02D1                        u2631 02D0  
                      u2640 02E5                        u2720 01FD                        u2800 0450  
                      u2641 02E4                        u2721 01FC                        u2801 044F  
                      u2650 02F6                        u2730 0282                        u2810 04C1  
                      u2651 02F5                        u2715 01D4                        u2731 0281  
                      u2811 04C0                        u2660 018D                        u2740 0590  
                      u2820 0318                        u2900 03AB                        u2661 018C  
                      u2741 058F                        u2821 0317                        u2901 03AA  
                      u2670 01B0                        u2750 05B6                        u2830 057D  
                      u2910 03BB                        u2671 01AF                        u2751 05B5  
                      u2831 057C                        u2911 03BA                        u2840 06DB  
                      u2920 0623                        u2841 06DA                        u2690 0261  
                      u2770 0602                        u2850 06E6                        u2930 0638  
                      u2691 0260                        u2771 0601                        u2851 06E5  
                      u2780 03E7                        u2860 07FD                        u2940 065D  
                      u2765 05D3                        u2781 03E6                        u2861 07FC  
                      u2941 065C                        u2790 043F                        u2870 0386  
                      u2950 0675                        u2695 025D                        u2775 05FE  
                      u2791 043E                        u2871 0385                        u2880 0393  
                      u2960 06B8                        u2881 0392                        u2961 06B7  
                      u2890 03A0                        u2891 039F                        _RCIF 0065  
                      _WREN 0C62                        _TXIF 0064              ??_eeprom_write 007B  
    __end_of_checkStartByte 042E                        _main 0619               _startByteAddr 0055  
                      btemp 007E                        start 0000           _addDataToCheckSum 0508  
        ?_addDataToCheckSum 0070       makeHexByte@input_byte 0055                main@arrStore 00A0  
                     ?_main 0070         ??_addDataToCheckSum 0052                       _EEADR 010D  
                     _CARRY 0018        __size_of_checkRWByte 006A                       _RCREG 001A  
                     _RCSTA 0018                       _SPBRG 0099             __end_of_checkCS 032E  
      __size_of_checkLength 002F                       _TRISA 0085                       _TXREG 0019  
                     _TXSTA 0098                 _writeString 023A             __end_of_initADC 016B  
                     pclath 000A                       status 0003             ?_checkStartByte 0052  
                     wtemp0 007E   __end_of_addDataToCheckSum 057F                ?_parsePacket 0070  
              __end_of_main 06CB       __size_of_checkCMDByte 0070                      ??_main 005E  
             _userStartByte 0057                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D                      _TRISC6 043E  
                    _TRISC7 043F                _checkCMDByte 0498        __size_of_eeprom_read 001F  
      __size_of_makeHexByte 0025                      _maxCmd 0050            __end_of_readByte 0160  
                 ??_checkCS 0074        __end_of_eeprom_write 02FA     __size_of_validatePacket 0051  
     readString@readStorage 0054                      clrloop 013C                      _strlen 0298  
                 ??_initADC 0070                 readString@i 0055           makeHexByte@nibOne 0054  
         makeHexByte@nibTwo 007D             eeprom_read@addr 0071  __size_of_addDataToCheckSum 0077  
            __pcstackCOMMON 0070                __pidataBANK0 014C                __pidataBANK1 0143  
        __size_of_checkEven 0027           eeprom_write@value 007A                  _csByteAddr 004B  
                __pbssBANK0 0020          __size_of_initUSART 000F              _calcCSByteAddr 0049  
                __pmaintext 0619        __size_of_parsePacket 0135                     ?_strlen 0070  
              ?_writeString 0070                  _makeNibble 0186            ??_checkStartByte 0054  
         __end_of_checkEven 0213                   ?_readByte 0070          __size_of_writeByte 000C  
  __size_of_checkDataFrames 009A       __size_of_eeprom_write 0031               ??_checkRWByte 0054  
                   _checkCS 02FA                  _readString 032E               ??_checkLength 0074  
            _validatePacket 0379           __end_of_initUSART 0186                     _initADC 0160  
           __size_of_strlen 0031                     _member1 002A                     _member2 0009  
                   _member3 001D        end_of_initialization 0236       parsePacket@dataPacket 005D  
                ??_readByte 0070                     init_ram 0199                _eeprom_write 02C9  
              readString@ch 0057              main@testString 00D2                  _rwByteAddr 0054  
             _dataBytesAddr 004C      __end_of_validatePacket 03CA                     strlen@s 0078  
         __end_of_writeByte 0177         __end_of_checkRWByte 0498         __end_of_checkLength 0298  
               ?_makeNibble 0070                writeString@i 007C               ??_eeprom_read 0070  
                 _RXLenAddr 0048               ??_makeHexByte 0052             ?_validatePacket 0056  
         ??_checkDataFrames 0074                 ?_readString 0070              __end_of_strlen 02C9  
       start_initialization 0213        __size_of_writeString 002F                parsePacket@i 005C  
       __end_of_eeprom_read 01C7         __size_of_makeNibble 000F                 __pdataBANK0 0062  
               __pdataBANK1 00E4                 _checkRWByte 042E                 _cmdByteAddr 004A  
       __end_of_makeHexByte 01EC                 _checkLength 0269                    ??_strlen 0072  
             __pcstackBANK0 0052               __pcstackBANK1 00A0            eeprom_write@addr 007C  
       __size_of_readString 004B                   _checkEven 01EC                 _endByteAddr 004D  
             ??_parsePacket 0056           __size_of_readByte 000B                   _classTerm 0036  
                 __ptext471 0379                   __ptext480 01EC                   __ptext472 06CB  
                 __ptext481 01C7                   __ptext473 0508                   __ptext490 016B  
                 __ptext482 032E                   __ptext474 02FA                   __ptext491 0177  
                 __ptext483 023A                   __ptext475 0498                   __ptext492 0000  
                 __ptext484 0160                   __ptext476 042E                   __ptext485 01A8  
                 __ptext477 03CA                   __ptext486 0186                   __ptext478 057F  
                 __ptext487 02C9                   __ptext479 0269                   __ptext488 0298  
                 __ptext489 0155                    ?_checkCS 0072                   _noDataLen 0053  
                 __pstrings 0003                    ?_initADC 0070                   _initUSART 0177  
                ?_checkEven 0072             main@counterText 00DB                 _eeprom_read 01A8  
             ?_checkCMDByte 0052                 _makeHexByte 01C7                    _GO_nDONE 00FA  
                 main@F1144 00E4                   main@F1146 0062                   main@F1148 0020  
               _lenByteAddr 004F         __end_of_parsePacket 0800                 __stringbase 0008  
                ?_initUSART 0070                ??_makeNibble 0070                   _writeByte 016B  
           _checkDataFrames 057F              ??_checkCMDByte 0054            ??_validatePacket 007E  
   __size_of_checkStartByte 0064                   init_fetch 0195          __end_of_makeNibble 0195  
              ??_readString 0052                 _newLineChar 0052                 _minSizeByte 0051  
          __size_of_checkCS 0034            __size_of_initADC 000B                    _classNum 0040  
                ?_writeByte 0070       writeString@userString 007B                    _readByte 0155  
             __size_of_main 00B2                 ??_checkEven 0074          __end_of_readString 0379  
                  _groupNum 004E                 _parsePacket 06CB                    clear_ram 013B  
              ?_checkRWByte 0052                ?_checkLength 0072      parsePacket@dataCounter 005A  
             ??_writeString 007A          addDataToCheckSum@i 007D                 ??_initUSART 0070  
   __end_of_checkDataFrames 0619                   stringcode 0003           makeNibble@tempNib 0070  
             writeByte@Byte 0070                    strlen@cp 0079        __end_of_checkCMDByte 0508  
                  stringdir 0003                    stringtab 0003                 ??_writeByte 0070  
       __end_of_writeString 0269               ?_eeprom_write 007A                ?_eeprom_read 0070  
            _checkStartByte 03CA                ?_makeHexByte 007D  
