

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sun Dec 15 21:06:53 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 34 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 34 "main.c"
    45  2007  FF3A               	dw 0xFFFB & 0xFF7F & 0xFFBF & 0xFFFE & 0xFFFF ;#
    46                           	FNCALL	_main,_initADC
    47                           	FNCALL	_main,_initTemp
    48                           	FNCALL	_main,_initUSART
    49                           	FNCALL	_main,_writeString
    50                           	FNCALL	_main,_getTemp
    51                           	FNCALL	_getTemp,_selectTemp
    52                           	FNCALL	_getTemp,_readTemp
    53                           	FNCALL	_getTemp,_eeprom_write
    54                           	FNCALL	_initTemp,_eeprom_write
    55                           	FNCALL	_writeString,_writeByte
    56                           	FNCALL	_writeString,_strlen
    57                           	FNROOT	_main
    58                           	FNCALL	_isr,_getPacket
    59                           	FNCALL	_getPacket,_readString
    60                           	FNCALL	_getPacket,i1_eeprom_write
    61                           	FNCALL	_getPacket,_parsePacket
    62                           	FNCALL	_getPacket,_validatePacket
    63                           	FNCALL	_getPacket,_eeprom_read
    64                           	FNCALL	_getPacket,_readCommands
    65                           	FNCALL	_getPacket,_writeCommands
    66                           	FNCALL	_readCommands,i1_writeByte
    67                           	FNCALL	_readCommands,i1_writeString
    68                           	FNCALL	_readCommands,_eeprom_read
    69                           	FNCALL	_validatePacket,_checkStartByte
    70                           	FNCALL	_validatePacket,_checkRWByte
    71                           	FNCALL	_validatePacket,_checkCMDByte
    72                           	FNCALL	_validatePacket,_checkDataFrames
    73                           	FNCALL	_validatePacket,_addDataToCheckSum
    74                           	FNCALL	_validatePacket,_checkCS
    75                           	FNCALL	_parsePacket,_checkLength
    76                           	FNCALL	_parsePacket,_checkEven
    77                           	FNCALL	_parsePacket,_makeHexByte
    78                           	FNCALL	_parsePacket,i1_eeprom_write
    79                           	FNCALL	_parsePacket,i1_strlen
    80                           	FNCALL	_parsePacket,_eeprom_read
    81                           	FNCALL	i1_writeString,i1_writeByte
    82                           	FNCALL	i1_writeString,i1_strlen
    83                           	FNCALL	_addDataToCheckSum,_eeprom_read
    84                           	FNCALL	_addDataToCheckSum,i1_eeprom_write
    85                           	FNCALL	_checkCS,_eeprom_read
    86                           	FNCALL	_checkCS,i1_writeByte
    87                           	FNCALL	_checkCMDByte,_eeprom_read
    88                           	FNCALL	_checkCMDByte,i1_eeprom_write
    89                           	FNCALL	_checkCMDByte,i1_writeByte
    90                           	FNCALL	_checkRWByte,_eeprom_read
    91                           	FNCALL	_checkRWByte,i1_writeByte
    92                           	FNCALL	_checkRWByte,i1_eeprom_write
    93                           	FNCALL	_checkStartByte,_eeprom_read
    94                           	FNCALL	_checkStartByte,i1_writeByte
    95                           	FNCALL	_checkStartByte,i1_eeprom_write
    96                           	FNCALL	_checkDataFrames,_eeprom_read
    97                           	FNCALL	_checkDataFrames,i1_writeByte
    98                           	FNCALL	_checkLength,_eeprom_read
    99                           	FNCALL	_checkLength,i1_writeByte
   100                           	FNCALL	_checkEven,_eeprom_read
   101                           	FNCALL	_checkEven,i1_writeByte
   102                           	FNCALL	_makeHexByte,_makeNibble
   103                           	FNCALL	_readString,_readByte
   104                           	FNCALL	_readString,i1_eeprom_write
   105                           	FNCALL	intlevel1,_isr
   106                           	global	intlevel1
   107                           	FNROOT	intlevel1
   108                           	global	main@F1176
   109                           	global	_readError
   110                           psect	idataBANK0,class=CODE,space=0,delta=2
   111                           global __pidataBANK0
   112  0E4A                     __pidataBANK0:
   113                           	file	"main.c"
   114                           	line	63
   115                           
   116                           ;initializer for main@F1176
   117  0E4A  3457               	retlw	057h
   118  0E4B  3465               	retlw	065h
   119  0E4C  346C               	retlw	06Ch
   120  0E4D  3463               	retlw	063h
   121  0E4E  346F               	retlw	06Fh
   122  0E4F  346D               	retlw	06Dh
   123  0E50  3465               	retlw	065h
   124  0E51  340A               	retlw	0Ah
   125  0E52  3400               	retlw	0
   126                           	file	"userMacro.h"
   127                           	line	26
   128                           
   129                           ;initializer for _readError
   130  0E53  344E               	retlw	04Eh
   131  0E54  346F               	retlw	06Fh
   132  0E55  3474               	retlw	074h
   133  0E56  3420               	retlw	020h
   134  0E57  3461               	retlw	061h
   135  0E58  3420               	retlw	020h
   136  0E59  3476               	retlw	076h
   137  0E5A  3461               	retlw	061h
   138  0E5B  346C               	retlw	06Ch
   139  0E5C  3469               	retlw	069h
   140  0E5D  3464               	retlw	064h
   141  0E5E  3420               	retlw	020h
   142  0E5F  3472               	retlw	072h
   143  0E60  3465               	retlw	065h
   144  0E61  3461               	retlw	061h
   145  0E62  3464               	retlw	064h
   146  0E63  3420               	retlw	020h
   147  0E64  3463               	retlw	063h
   148  0E65  346F               	retlw	06Fh
   149  0E66  346D               	retlw	06Dh
   150  0E67  346D               	retlw	06Dh
   151  0E68  3461               	retlw	061h
   152  0E69  346E               	retlw	06Eh
   153  0E6A  3464               	retlw	064h
   154  0E6B  3400               	retlw	0
   155                           	global	_member2
   156                           psect	strings,class=STRING,delta=2
   157                           global __pstrings
   158  0500                     __pstrings:
   159                           ;	global	stringdir,stringtab,__stringbase
   160  0500                     stringtab:
   161                           ;	String table - string pointers are 1 byte each
   162  0500                     stringcode:stringdir:
      + 0500                     stringdir:	
   163  0500  3005               movlw high(stringdir)
   164  0501  008A               movwf pclath
   165  0502  0804               movf fsr,w
   166  0503  0A84               incf fsr
   167  0504  0782               	addwf pc
   168  0505                     __stringbase:
   169  0505  3400               	retlw	0
   170                           psect	strings
   171                           	file	"userMacro.h"
   172                           	line	20
   173  0506                     _member2:
   174  0506  3444               	retlw	044h
   175  0507  3465               	retlw	065h
   176  0508  3465               	retlw	065h
   177  0509  3470               	retlw	070h
   178  050A  3461               	retlw	061h
   179  050B  346B               	retlw	06Bh
   180  050C  3420               	retlw	020h
   181  050D  3443               	retlw	043h
   182  050E  3468               	retlw	068h
   183  050F  3461               	retlw	061h
   184  0510  346E               	retlw	06Eh
   185  0511  3464               	retlw	064h
   186  0512  3472               	retlw	072h
   187  0513  3461               	retlw	061h
   188  0514  3473               	retlw	073h
   189  0515  3465               	retlw	065h
   190  0516  346B               	retlw	06Bh
   191  0517  3461               	retlw	061h
   192  0518  3472               	retlw	072h
   193  0519  3400               	retlw	0
   194                           	global	_member3
   195                           psect	strings
   196                           	file	"userMacro.h"
   197                           	line	21
   198  051A                     _member3:
   199  051A  3441               	retlw	041h
   200  051B  3470               	retlw	070h
   201  051C  3475               	retlw	075h
   202  051D  3472               	retlw	072h
   203  051E  3476               	retlw	076h
   204  051F  3465               	retlw	065h
   205  0520  3420               	retlw	020h
   206  0521  3442               	retlw	042h
   207  0522  3468               	retlw	068h
   208  0523  3469               	retlw	069h
   209  0524  3464               	retlw	064h
   210  0525  3465               	retlw	065h
   211  0526  3400               	retlw	0
   212                           	global	_member1
   213                           psect	strings
   214                           	file	"userMacro.h"
   215                           	line	19
   216  0527                     _member1:
   217  0527  3447               	retlw	047h
   218  0528  3472               	retlw	072h
   219  0529  3465               	retlw	065h
   220  052A  3467               	retlw	067h
   221  052B  3420               	retlw	020h
   222  052C  3447               	retlw	047h
   223  052D  3469               	retlw	069h
   224  052E  3472               	retlw	072h
   225  052F  3461               	retlw	061h
   226  0530  3472               	retlw	072h
   227  0531  3464               	retlw	064h
   228  0532  3400               	retlw	0
   229                           	global	_classTerm
   230                           psect	strings
   231                           	file	"userMacro.h"
   232                           	line	23
   233  0533                     _classTerm:
   234  0533  3446               	retlw	046h
   235  0534  3461               	retlw	061h
   236  0535  346C               	retlw	06Ch
   237  0536  346C               	retlw	06Ch
   238  0537  3420               	retlw	020h
   239  0538  3432               	retlw	032h
   240  0539  3430               	retlw	030h
   241  053A  3431               	retlw	031h
   242  053B  3433               	retlw	033h
   243  053C  3400               	retlw	0
   244                           	global	_classNum
   245                           psect	strings
   246                           	file	"userMacro.h"
   247                           	line	22
   248  053D                     _classNum:
   249  053D  3445               	retlw	045h
   250  053E  3443               	retlw	043h
   251  053F  3445               	retlw	045h
   252  0540  3435               	retlw	035h
   253  0541  3436               	retlw	036h
   254  0542  3432               	retlw	032h
   255  0543  3430               	retlw	030h
   256  0544  3400               	retlw	0
   257                           	global	_RXLenAddr
   258                           psect	strings
   259                           	file	"userMacro.h"
   260                           	line	50
   261  0545                     _RXLenAddr:
   262  0545  3400               	retlw	0
   263                           	global	_calcCSByteAddr
   264                           psect	strings
   265                           	file	"userMacro.h"
   266                           	line	66
   267  0546                     _calcCSByteAddr:
   268  0546  3430               	retlw	030h
   269                           	global	_cmdByteAddr
   270                           psect	strings
   271                           	file	"userMacro.h"
   272                           	line	56
   273  0547                     _cmdByteAddr:
   274  0547  3403               	retlw	03h
   275                           	global	_csByteAddr
   276                           psect	strings
   277                           	file	"userMacro.h"
   278                           	line	60
   279  0548                     _csByteAddr:
   280  0548  3405               	retlw	05h
   281                           	global	_dataBytesAddr
   282                           psect	strings
   283                           	file	"userMacro.h"
   284                           	line	64
   285  0549                     _dataBytesAddr:
   286  0549  3407               	retlw	07h
   287                           	global	_endByteAddr
   288                           psect	strings
   289                           	file	"userMacro.h"
   290                           	line	62
   291  054A                     _endByteAddr:
   292  054A  3406               	retlw	06h
   293                           	global	_groupNum
   294                           psect	strings
   295                           	file	"userMacro.h"
   296                           	line	24
   297  054B                     _groupNum:
   298  054B  3432               	retlw	032h
   299                           	global	_humHiAddr
   300                           psect	strings
   301                           	file	"userMacro.h"
   302                           	line	96
   303  054C                     _humHiAddr:
   304  054C  3484               	retlw	084h
   305                           	global	_humLoAddr
   306                           psect	strings
   307                           	file	"userMacro.h"
   308                           	line	98
   309  054D                     _humLoAddr:
   310  054D  3486               	retlw	086h
   311                           	global	_humStartHi
   312                           psect	strings
   313                           	file	"userMacro.h"
   314                           	line	102
   315  054E                     _humStartHi:
   316  054E  3450               	retlw	050h
   317                           	global	_humStartLo
   318                           psect	strings
   319                           	file	"userMacro.h"
   320                           	line	104
   321  054F                     _humStartLo:
   322  054F  340A               	retlw	0Ah
   323                           	global	_humValHAddr
   324                           psect	strings
   325                           	file	"userMacro.h"
   326                           	line	92
   327  0550                     _humValHAddr:
   328  0550  3480               	retlw	080h
   329                           	global	_humValLAddr
   330                           psect	strings
   331                           	file	"userMacro.h"
   332                           	line	94
   333  0551                     _humValLAddr:
   334  0551  3482               	retlw	082h
   335                           	global	_lenByteAddr
   336                           psect	strings
   337                           	file	"userMacro.h"
   338                           	line	58
   339  0552                     _lenByteAddr:
   340  0552  3404               	retlw	04h
   341                           	global	_maxCmd
   342                           psect	strings
   343                           	file	"userMacro.h"
   344                           	line	40
   345  0553                     _maxCmd:
   346  0553  340E               	retlw	0Eh
   347                           	global	_minSizeByte
   348                           psect	strings
   349                           	file	"userMacro.h"
   350                           	line	36
   351  0554                     _minSizeByte:
   352  0554  340A               	retlw	0Ah
   353                           	global	_newLineChar
   354                           psect	strings
   355                           	file	"userMacro.h"
   356                           	line	34
   357  0555                     _newLineChar:
   358  0555  340A               	retlw	0Ah
   359                           	global	_noDataLen
   360                           psect	strings
   361                           	file	"userMacro.h"
   362                           	line	38
   363  0556                     _noDataLen:
   364  0556  340A               	retlw	0Ah
   365                           	global	_readByteVal
   366                           psect	strings
   367                           	file	"userMacro.h"
   368                           	line	42
   369  0557                     _readByteVal:
   370  0557  3400               	retlw	0
   371                           	global	_rwByteAddr
   372                           psect	strings
   373                           	file	"userMacro.h"
   374                           	line	54
   375  0558                     _rwByteAddr:
   376  0558  3402               	retlw	02h
   377                           	global	_startByteAddr
   378                           psect	strings
   379                           	file	"userMacro.h"
   380                           	line	52
   381  0559                     _startByteAddr:
   382  0559  3401               	retlw	01h
   383                           	global	_tempC
   384                           psect	strings
   385                           	file	"userMacro.h"
   386                           	line	86
   387  055A                     _tempC:
   388  055A  3400               	retlw	0
   389                           	global	_tempF
   390                           psect	strings
   391                           	file	"userMacro.h"
   392                           	line	88
   393  055B                     _tempF:
   394  055B  3410               	retlw	010h
   395                           	global	_tempHiAddr
   396                           psect	strings
   397                           	file	"userMacro.h"
   398                           	line	74
   399  055C                     _tempHiAddr:
   400  055C  3462               	retlw	062h
   401                           	global	_tempLoAddr
   402                           psect	strings
   403                           	file	"userMacro.h"
   404                           	line	76
   405  055D                     _tempLoAddr:
   406  055D  3464               	retlw	064h
   407                           	global	_tempStartHi
   408                           psect	strings
   409                           	file	"userMacro.h"
   410                           	line	82
   411  055E                     _tempStartHi:
   412  055E  3464               	retlw	064h
   413                           	global	_tempStartLo
   414                           psect	strings
   415                           	file	"userMacro.h"
   416                           	line	84
   417  055F                     _tempStartLo:
   418  055F  34A0               	retlw	0A0h
   419                           	global	_tempUnitAddr
   420                           psect	strings
   421                           	file	"userMacro.h"
   422                           	line	78
   423  0560                     _tempUnitAddr:
   424  0560  3466               	retlw	066h
   425                           	global	_tempValHAddr
   426                           psect	strings
   427                           	file	"userMacro.h"
   428                           	line	70
   429  0561                     _tempValHAddr:
   430  0561  3460               	retlw	060h
   431                           	global	_tempValLAddr
   432                           psect	strings
   433                           	file	"userMacro.h"
   434                           	line	72
   435  0562                     _tempValLAddr:
   436  0562  3461               	retlw	061h
   437                           	global	_timeoutByte
   438                           psect	strings
   439                           	file	"userMacro.h"
   440                           	line	46
   441  0563                     _timeoutByte:
   442  0563  34FF               	retlw	0FFh
   443                           	global	_userEndByte
   444                           psect	strings
   445                           	file	"userMacro.h"
   446                           	line	32
   447  0564                     _userEndByte:
   448  0564  340A               	retlw	0Ah
   449                           	global	_userStartByte
   450                           psect	strings
   451                           	file	"userMacro.h"
   452                           	line	30
   453  0565                     _userStartByte:
   454  0565  34AA               	retlw	0AAh
   455                           	global	_writeByteVal
   456                           psect	strings
   457                           	file	"userMacro.h"
   458                           	line	44
   459  0566                     _writeByteVal:
   460  0566  3401               	retlw	01h
   461                           	global	_member2
   462                           	global	_member3
   463                           	global	_member1
   464                           	global	_classTerm
   465                           	global	_classNum
   466                           	global	_RXLenAddr
   467                           	global	_calcCSByteAddr
   468                           	global	_cmdByteAddr
   469                           	global	_csByteAddr
   470                           	global	_dataBytesAddr
   471                           	global	_endByteAddr
   472                           	global	_groupNum
   473                           	global	_humHiAddr
   474                           	global	_humLoAddr
   475                           	global	_humStartHi
   476                           	global	_humStartLo
   477                           	global	_humValHAddr
   478                           	global	_humValLAddr
   479                           	global	_lenByteAddr
   480                           	global	_maxCmd
   481                           	global	_minSizeByte
   482                           	global	_newLineChar
   483                           	global	_noDataLen
   484                           	global	_readByteVal
   485                           	global	_rwByteAddr
   486                           	global	_startByteAddr
   487                           	global	_tempC
   488                           	global	_tempF
   489                           	global	_tempHiAddr
   490                           	global	_tempLoAddr
   491                           	global	_tempStartHi
   492                           	global	_tempStartLo
   493                           	global	_tempUnitAddr
   494                           	global	_tempValHAddr
   495                           	global	_tempValLAddr
   496                           	global	_timeoutByte
   497                           	global	_userEndByte
   498                           	global	_userStartByte
   499                           	global	_writeByteVal
   500                           	global	_arrStore
   501                           	global	_ADCON0
   502  001F                     _ADCON0	set	31
   503                           	global	_ADRESH
   504  001E                     _ADRESH	set	30
   505                           	global	_PORTD
   506  0008                     _PORTD	set	8
   507                           	global	_RCREG
   508  001A                     _RCREG	set	26
   509                           	global	_RCSTA
   510  0018                     _RCSTA	set	24
   511                           	global	_TXREG
   512  0019                     _TXREG	set	25
   513                           	global	_ADON
   514  00F8                     _ADON	set	248
   515                           	global	_CARRY
   516  0018                     _CARRY	set	24
   517                           	global	_CREN
   518  00C4                     _CREN	set	196
   519                           	global	_GIE
   520  005F                     _GIE	set	95
   521                           	global	_GO_nDONE
   522  00FA                     _GO_nDONE	set	250
   523                           	global	_OERR
   524  00C1                     _OERR	set	193
   525                           	global	_PEIE
   526  005E                     _PEIE	set	94
   527                           	global	_RB1
   528  0031                     _RB1	set	49
   529                           	global	_RCIF
   530  0065                     _RCIF	set	101
   531                           	global	_RD0
   532  0040                     _RD0	set	64
   533                           	global	_RD1
   534  0041                     _RD1	set	65
   535                           	global	_RD2
   536  0042                     _RD2	set	66
   537                           	global	_RD4
   538  0044                     _RD4	set	68
   539                           	global	_RD5
   540  0045                     _RD5	set	69
   541                           	global	_RD6
   542  0046                     _RD6	set	70
   543                           	global	_RD7
   544  0047                     _RD7	set	71
   545                           	global	_TXIF
   546  0064                     _TXIF	set	100
   547                           	global	_ADCON1
   548  009F                     _ADCON1	set	159
   549                           	global	_ADRESL
   550  009E                     _ADRESL	set	158
   551                           	global	_SPBRG
   552  0099                     _SPBRG	set	153
   553                           	global	_TRISA
   554  0085                     _TRISA	set	133
   555                           	global	_TRISB
   556  0086                     _TRISB	set	134
   557                           	global	_TRISD
   558  0088                     _TRISD	set	136
   559                           	global	_TXSTA
   560  0098                     _TXSTA	set	152
   561                           	global	_RCIE
   562  0465                     _RCIE	set	1125
   563                           	global	_TRISC6
   564  043E                     _TRISC6	set	1086
   565                           	global	_TRISC7
   566  043F                     _TRISC7	set	1087
   567                           	global	_TRISD0
   568  0440                     _TRISD0	set	1088
   569                           	global	_TRISD2
   570  0442                     _TRISD2	set	1090
   571                           	global	_TRISD4
   572  0444                     _TRISD4	set	1092
   573                           	global	_TRISD5
   574  0445                     _TRISD5	set	1093
   575                           	global	_TRISD6
   576  0446                     _TRISD6	set	1094
   577                           	global	_TRISD7
   578  0447                     _TRISD7	set	1095
   579                           	global	_EEADR
   580  010D                     _EEADR	set	269
   581                           	global	_EEDATA
   582  010C                     _EEDATA	set	268
   583                           	global	_EECON1
   584  018C                     _EECON1	set	396
   585                           	global	_EECON2
   586  018D                     _EECON2	set	397
   587                           	global	_RD
   588  0C60                     _RD	set	3168
   589                           	global	_WR
   590  0C61                     _WR	set	3169
   591                           	global	_WREN
   592  0C62                     _WREN	set	3170
   593                           	file	"C:\Users\Greg\AppData\Local\Temp\s854."
   594                           	line	#
   595                           psect cinit,class=CODE,delta=2
   596                           global start_initialization
   597  04E5                     start_initialization:
   598                           
   599                           psect	dataBANK0,class=BANK0,space=1
   600                           global __pdataBANK0
   601  0020                     __pdataBANK0:
   602                           	file	"main.c"
   603                           	line	63
   604  0020                     main@F1176:
   605  0020                            ds      9
   606                           
   607                           psect	dataBANK0
   608                           	file	"userMacro.h"
   609                           	line	26
   610  0029                     _readError:
   611  0029                            ds      25
   612                           
   613                           psect	bssBANK1,class=BANK1,space=1
   614                           global __pbssBANK1
   615  00A0                     __pbssBANK1:
   616  00A0                     _arrStore:
   617  00A0                            ds      50
   618                           
   619                           psect clrtext,class=CODE,delta=2
   620                           global clear_ram
   621                           ;	Called with FSR containing the base address, and
   622                           ;	W with the last address+1
   623  0DBA                     clear_ram:
   624  0DBA  0064               	clrwdt			;clear the watchdog before getting into this loop
   625  0DBB                     clrloop:
   626  0DBB  0180               	clrf	indf		;clear RAM location pointed to by FSR
   627  0DBC  0A84               	incf	fsr,f		;increment pointer
   628  0DBD  0604               	xorwf	fsr,w		;XOR with final address
   629  0DBE  1903               	btfsc	status,2	;have we reached the end yet?
   630  0DBF  3400               	retlw	0		;all done for this memory range, return
   631  0DC0  0604               	xorwf	fsr,w		;XOR again to restore value
   632  0DC1  2DBB               	goto	clrloop		;do the next byte
   633                           
   634                           ; Clear objects allocated to BANK1
   635                           psect cinit,class=CODE,delta=2
   636  04E5  1383               	bcf	status, 7	;select IRP bank0
   637  04E6  30A0               	movlw	low(__pbssBANK1)
   638  04E7  0084               	movwf	fsr
   639  04E8  30D2               	movlw	low((__pbssBANK1)+032h)
   640  04E9  120A  158A  25BA   	fcall	clear_ram
              120A  118A         
   641                           global btemp
   642                           psect inittext,class=CODE,delta=2
   643                           global init_fetch,btemp
   644                           ;	Called with low address in FSR and high address in W
   645  0E18                     init_fetch:
   646  0E18  087E               	movf btemp,w
   647  0E19  008A               	movwf pclath
   648  0E1A  087F               	movf btemp+1,w
   649  0E1B  0082               	movwf pc
   650                           global init_ram
   651                           ;Called with:
   652                           ;	high address of idata address in btemp 
   653                           ;	low address of idata address in btemp+1 
   654                           ;	low address of data in FSR
   655                           ;	high address + 1 of data in btemp-1
   656  0E1C                     init_ram:
   657  0E1C  120A  158A  2618   	fcall init_fetch
              120A  158A         
   658  0E21  0080               	movwf indf,f
   659  0E22  0A84               	incf fsr,f
   660  0E23  0804               	movf fsr,w
   661  0E24  067D               	xorwf btemp-1,w
   662  0E25  1903               	btfsc status,2
   663  0E26  3400               	retlw 0
   664  0E27  0AFF               	incf btemp+1,f
   665  0E28  1903               	btfsc status,2
   666  0E29  0AFE               	incf btemp,f
   667  0E2A  2E1C               	goto init_ram
   668                           ; Initialize objects allocated to BANK0
   669                           psect cinit,class=CODE,delta=2
   670                           global init_ram, __pidataBANK0
   671  04EE  3042               	movlw low(__pdataBANK0+34)
   672  04EF  00FD               	movwf btemp-1,f
   673  04F0  300E               	movlw high(__pidataBANK0)
   674  04F1  00FE               	movwf btemp,f
   675  04F2  304A               	movlw low(__pidataBANK0)
   676  04F3  00FF               	movwf btemp+1,f
   677  04F4  3020               	movlw low(__pdataBANK0)
   678  04F5  0084               	movwf fsr,f
   679  04F6  120A  158A  261C   	fcall init_ram
              120A  118A         
   680                           psect cinit,class=CODE,delta=2
   681                           global end_of_initialization
   682                           
   683                           ;End of C runtime variable initialization code
   684                           
   685  04FB                     end_of_initialization:
   686  04FB  0183               clrf status
   687  04FC  120A  118A  2F19   ljmp _main	;jump to C main() function
   688                           psect	cstackBANK1,class=BANK1,space=1
   689                           global __pcstackBANK1
   690  00D2                     __pcstackBANK1:
   691                           	global	??_main
   692  00D2                     ??_main:	; 0 bytes @ 0x0
   693  00D2                     	ds	4
   694                           	global	main@testString
   695  00D6                     main@testString:	; 9 bytes @ 0x4
   696  00D6                     	ds	9
   697                           psect	cstackCOMMON,class=COMMON,space=1
   698                           global __pcstackCOMMON
   699  0070                     __pcstackCOMMON:
   700                           	global	??_eeprom_read
   701  0070                     ??_eeprom_read:	; 0 bytes @ 0x0
   702                           	global	?_addDataToCheckSum
   703  0070                     ?_addDataToCheckSum:	; 0 bytes @ 0x0
   704                           	global	?_selectTemp
   705  0070                     ?_selectTemp:	; 0 bytes @ 0x0
   706                           	global	?_getPacket
   707  0070                     ?_getPacket:	; 0 bytes @ 0x0
   708                           	global	?_readCommands
   709  0070                     ?_readCommands:	; 0 bytes @ 0x0
   710                           	global	?_writeCommands
   711  0070                     ?_writeCommands:	; 0 bytes @ 0x0
   712                           	global	??_writeCommands
   713  0070                     ??_writeCommands:	; 0 bytes @ 0x0
   714                           	global	?_initUSART
   715  0070                     ?_initUSART:	; 0 bytes @ 0x0
   716                           	global	?_writeByte
   717  0070                     ?_writeByte:	; 0 bytes @ 0x0
   718                           	global	??_readByte
   719  0070                     ??_readByte:	; 0 bytes @ 0x0
   720                           	global	?_writeString
   721  0070                     ?_writeString:	; 0 bytes @ 0x0
   722                           	global	?_readString
   723  0070                     ?_readString:	; 0 bytes @ 0x0
   724                           	global	??_makeNibble
   725  0070                     ??_makeNibble:	; 0 bytes @ 0x0
   726                           	global	?_parsePacket
   727  0070                     ?_parsePacket:	; 0 bytes @ 0x0
   728                           	global	?_initTemp
   729  0070                     ?_initTemp:	; 0 bytes @ 0x0
   730                           	global	?_getTemp
   731  0070                     ?_getTemp:	; 0 bytes @ 0x0
   732                           	global	?_initADC
   733  0070                     ?_initADC:	; 0 bytes @ 0x0
   734                           	global	?_isr
   735  0070                     ?_isr:	; 0 bytes @ 0x0
   736                           	global	?i1_writeByte
   737  0070                     ?i1_writeByte:	; 0 bytes @ 0x0
   738                           	global	??i1_writeByte
   739  0070                     ??i1_writeByte:	; 0 bytes @ 0x0
   740                           	global	?i1_writeString
   741  0070                     ?i1_writeString:	; 0 bytes @ 0x0
   742                           	global	?_eeprom_read
   743  0070                     ?_eeprom_read:	; 1 bytes @ 0x0
   744                           	global	?_readByte
   745  0070                     ?_readByte:	; 1 bytes @ 0x0
   746                           	global	?_makeNibble
   747  0070                     ?_makeNibble:	; 1 bytes @ 0x0
   748                           	global	?_main
   749  0070                     ?_main:	; 2 bytes @ 0x0
   750                           	global	?i1_strlen
   751  0070                     ?i1_strlen:	; 2 bytes @ 0x0
   752                           	global	makeNibble@tempNib
   753  0070                     makeNibble@tempNib:	; 1 bytes @ 0x0
   754                           	global	i1writeByte@Byte
   755  0070                     i1writeByte@Byte:	; 1 bytes @ 0x0
   756  0070                     	ds	1
   757                           	global	eeprom_read@addr
   758  0071                     eeprom_read@addr:	; 1 bytes @ 0x1
   759  0071                     	ds	1
   760                           	global	??i1_strlen
   761  0072                     ??i1_strlen:	; 0 bytes @ 0x2
   762                           	global	?_checkEven
   763  0072                     ?_checkEven:	; 2 bytes @ 0x2
   764                           	global	?_checkLength
   765  0072                     ?_checkLength:	; 2 bytes @ 0x2
   766                           	global	?_checkDataFrames
   767  0072                     ?_checkDataFrames:	; 2 bytes @ 0x2
   768                           	global	?_checkCS
   769  0072                     ?_checkCS:	; 2 bytes @ 0x2
   770  0072                     	ds	2
   771                           	global	??_checkEven
   772  0074                     ??_checkEven:	; 0 bytes @ 0x4
   773                           	global	??_checkLength
   774  0074                     ??_checkLength:	; 0 bytes @ 0x4
   775                           	global	??_checkDataFrames
   776  0074                     ??_checkDataFrames:	; 0 bytes @ 0x4
   777                           	global	??_checkCS
   778  0074                     ??_checkCS:	; 0 bytes @ 0x4
   779  0074                     	ds	4
   780                           	global	i1strlen@s
   781  0078                     i1strlen@s:	; 1 bytes @ 0x8
   782  0078                     	ds	1
   783                           	global	i1strlen@cp
   784  0079                     i1strlen@cp:	; 1 bytes @ 0x9
   785  0079                     	ds	1
   786                           	global	??i1_writeString
   787  007A                     ??i1_writeString:	; 0 bytes @ 0xA
   788                           	global	?i1_eeprom_write
   789  007A                     ?i1_eeprom_write:	; 1 bytes @ 0xA
   790                           	global	i1eeprom_write@value
   791  007A                     i1eeprom_write@value:	; 1 bytes @ 0xA
   792  007A                     	ds	1
   793                           	global	??i1_eeprom_write
   794  007B                     ??i1_eeprom_write:	; 0 bytes @ 0xB
   795                           	global	i1writeString@userString
   796  007B                     i1writeString@userString:	; 1 bytes @ 0xB
   797  007B                     	ds	1
   798                           	global	i1eeprom_write@addr
   799  007C                     i1eeprom_write@addr:	; 1 bytes @ 0xC
   800                           	global	i1writeString@i
   801  007C                     i1writeString@i:	; 2 bytes @ 0xC
   802  007C                     	ds	1
   803                           	global	?_makeHexByte
   804  007D                     ?_makeHexByte:	; 1 bytes @ 0xD
   805                           	global	makeHexByte@nibTwo
   806  007D                     makeHexByte@nibTwo:	; 1 bytes @ 0xD
   807                           	global	addDataToCheckSum@i
   808  007D                     addDataToCheckSum@i:	; 1 bytes @ 0xD
   809  007D                     	ds	1
   810                           	global	??_getPacket
   811  007E                     ??_getPacket:	; 0 bytes @ 0xE
   812                           	global	??_readCommands
   813  007E                     ??_readCommands:	; 0 bytes @ 0xE
   814                           	global	??_validatePacket
   815  007E                     ??_validatePacket:	; 0 bytes @ 0xE
   816                           psect	cstackBANK0,class=BANK0,space=1
   817                           global __pcstackBANK0
   818  0042                     __pcstackBANK0:
   819                           	global	??_addDataToCheckSum
   820  0042                     ??_addDataToCheckSum:	; 0 bytes @ 0x0
   821                           	global	??_readString
   822  0042                     ??_readString:	; 0 bytes @ 0x0
   823                           	global	??_makeHexByte
   824  0042                     ??_makeHexByte:	; 0 bytes @ 0x0
   825                           	global	?_checkStartByte
   826  0042                     ?_checkStartByte:	; 2 bytes @ 0x0
   827                           	global	?_checkRWByte
   828  0042                     ?_checkRWByte:	; 2 bytes @ 0x0
   829                           	global	?_checkCMDByte
   830  0042                     ?_checkCMDByte:	; 2 bytes @ 0x0
   831  0042                     	ds	2
   832                           	global	??_checkStartByte
   833  0044                     ??_checkStartByte:	; 0 bytes @ 0x2
   834                           	global	??_checkRWByte
   835  0044                     ??_checkRWByte:	; 0 bytes @ 0x2
   836                           	global	??_checkCMDByte
   837  0044                     ??_checkCMDByte:	; 0 bytes @ 0x2
   838                           	global	readString@readStorage
   839  0044                     readString@readStorage:	; 1 bytes @ 0x2
   840                           	global	makeHexByte@nibOne
   841  0044                     makeHexByte@nibOne:	; 1 bytes @ 0x2
   842  0044                     	ds	1
   843                           	global	makeHexByte@input_byte
   844  0045                     makeHexByte@input_byte:	; 1 bytes @ 0x3
   845                           	global	readString@i
   846  0045                     readString@i:	; 2 bytes @ 0x3
   847  0045                     	ds	1
   848                           	global	??_parsePacket
   849  0046                     ??_parsePacket:	; 0 bytes @ 0x4
   850                           	global	?_validatePacket
   851  0046                     ?_validatePacket:	; 2 bytes @ 0x4
   852  0046                     	ds	1
   853                           	global	readString@ch
   854  0047                     readString@ch:	; 1 bytes @ 0x5
   855  0047                     	ds	3
   856                           	global	parsePacket@dataCounter
   857  004A                     parsePacket@dataCounter:	; 2 bytes @ 0x8
   858  004A                     	ds	2
   859                           	global	parsePacket@i
   860  004C                     parsePacket@i:	; 1 bytes @ 0xA
   861  004C                     	ds	1
   862                           	global	parsePacket@dataPacket
   863  004D                     parsePacket@dataPacket:	; 1 bytes @ 0xB
   864  004D                     	ds	1
   865                           	global	??_isr
   866  004E                     ??_isr:	; 0 bytes @ 0xC
   867  004E                     	ds	4
   868                           	global	??_selectTemp
   869  0052                     ??_selectTemp:	; 0 bytes @ 0x10
   870                           	global	??_initUSART
   871  0052                     ??_initUSART:	; 0 bytes @ 0x10
   872                           	global	??_writeByte
   873  0052                     ??_writeByte:	; 0 bytes @ 0x10
   874                           	global	??_initADC
   875  0052                     ??_initADC:	; 0 bytes @ 0x10
   876                           	global	?_eeprom_write
   877  0052                     ?_eeprom_write:	; 1 bytes @ 0x10
   878                           	global	?_strlen
   879  0052                     ?_strlen:	; 2 bytes @ 0x10
   880                           	global	?_readTemp
   881  0052                     ?_readTemp:	; 2 bytes @ 0x10
   882                           	global	writeByte@Byte
   883  0052                     writeByte@Byte:	; 1 bytes @ 0x10
   884                           	global	eeprom_write@value
   885  0052                     eeprom_write@value:	; 1 bytes @ 0x10
   886  0052                     	ds	1
   887                           	global	??_eeprom_write
   888  0053                     ??_eeprom_write:	; 0 bytes @ 0x11
   889  0053                     	ds	1
   890                           	global	??_strlen
   891  0054                     ??_strlen:	; 0 bytes @ 0x12
   892                           	global	??_readTemp
   893  0054                     ??_readTemp:	; 0 bytes @ 0x12
   894                           	global	eeprom_write@addr
   895  0054                     eeprom_write@addr:	; 1 bytes @ 0x12
   896  0054                     	ds	1
   897                           	global	??_initTemp
   898  0055                     ??_initTemp:	; 0 bytes @ 0x13
   899  0055                     	ds	1
   900                           	global	??_getTemp
   901  0056                     ??_getTemp:	; 0 bytes @ 0x14
   902  0056                     	ds	1
   903                           	global	getTemp@tempReading
   904  0057                     getTemp@tempReading:	; 2 bytes @ 0x15
   905  0057                     	ds	3
   906                           	global	strlen@s
   907  005A                     strlen@s:	; 1 bytes @ 0x18
   908  005A                     	ds	1
   909                           	global	strlen@cp
   910  005B                     strlen@cp:	; 1 bytes @ 0x19
   911  005B                     	ds	1
   912                           	global	??_writeString
   913  005C                     ??_writeString:	; 0 bytes @ 0x1A
   914  005C                     	ds	1
   915                           	global	writeString@userString
   916  005D                     writeString@userString:	; 1 bytes @ 0x1B
   917  005D                     	ds	1
   918                           	global	writeString@i
   919  005E                     writeString@i:	; 2 bytes @ 0x1C
   920  005E                     	ds	2
   921 ;;Data sizes: Strings 0, constant 97, data 34, bss 50, persistent 0 stack 0
   922 ;;Auto spaces:   Size  Autos    Used
   923 ;; COMMON          14     14      14
   924 ;; BANK0           80     30      64
   925 ;; BANK1           80     13      63
   926 ;; BANK3           96      0       0
   927 ;; BANK2           96      0       0
   928                           
   929 ;;
   930 ;; Pointer list with targets:
   931                           
   932 ;; i1writeString@userString	PTR unsigned char  size(1) Largest target is 25
   933 ;;		 -> readError(BANK0[25]), 
   934 ;;
   935 ;; ?i1_strlen	unsigned int  size(1) Largest target is 50
   936 ;;		 -> readError(BANK0[25]), arrStore(BANK1[50]), main@testString(BANK1[9]), 
   937 ;;
   938 ;; i1strlen@s	PTR const unsigned char  size(1) Largest target is 50
   939 ;;		 -> readError(BANK0[25]), arrStore(BANK1[50]), main@testString(BANK1[9]), 
   940 ;;
   941 ;; ?_readTemp	unsigned int  size(1) Largest target is 0
   942 ;;
   943 ;; ?_strlen	unsigned int  size(1) Largest target is 50
   944 ;;		 -> readError(BANK0[25]), arrStore(BANK1[50]), main@testString(BANK1[9]), 
   945 ;;
   946 ;; strlen@s	PTR const unsigned char  size(1) Largest target is 50
   947 ;;		 -> readError(BANK0[25]), arrStore(BANK1[50]), main@testString(BANK1[9]), 
   948 ;;
   949 ;; strlen@cp	PTR const unsigned char  size(1) Largest target is 50
   950 ;;		 -> readError(BANK0[25]), arrStore(BANK1[50]), main@testString(BANK1[9]), 
   951 ;;
   952 ;; parsePacket@dataPacket	PTR unsigned char  size(1) Largest target is 50
   953 ;;		 -> arrStore(BANK1[50]), 
   954 ;;
   955 ;; readString@readStorage	PTR unsigned char  size(1) Largest target is 50
   956 ;;		 -> arrStore(BANK1[50]), 
   957 ;;
   958 ;; writeString@userString	PTR unsigned char  size(1) Largest target is 25
   959 ;;		 -> readError(BANK0[25]), main@testString(BANK1[9]), 
   960 ;;
   961                           
   962                           
   963 ;;
   964 ;; Critical Paths under _main in COMMON
   965 ;;
   966 ;;   None.
   967 ;;
   968 ;; Critical Paths under _isr in COMMON
   969 ;;
   970 ;;   _readCommands->i1_writeString
   971 ;;   _validatePacket->_addDataToCheckSum
   972 ;;   _parsePacket->_makeHexByte
   973 ;;   i1_writeString->i1_strlen
   974 ;;   _addDataToCheckSum->i1_eeprom_write
   975 ;;   _checkCS->_eeprom_read
   976 ;;   _checkCMDByte->i1_eeprom_write
   977 ;;   _checkRWByte->i1_eeprom_write
   978 ;;   _checkStartByte->i1_eeprom_write
   979 ;;   _checkDataFrames->_eeprom_read
   980 ;;   _checkLength->_eeprom_read
   981 ;;   _checkEven->_eeprom_read
   982 ;;   _makeHexByte->i1_eeprom_write
   983 ;;   _readString->i1_eeprom_write
   984 ;;   i1_eeprom_write->i1_strlen
   985 ;;
   986 ;; Critical Paths under _main in BANK0
   987 ;;
   988 ;;   _main->_writeString
   989 ;;   _getTemp->_readTemp
   990 ;;   _initTemp->_eeprom_write
   991 ;;   _writeString->_strlen
   992 ;;
   993 ;; Critical Paths under _isr in BANK0
   994 ;;
   995 ;;   _getPacket->_parsePacket
   996 ;;   _validatePacket->_checkStartByte
   997 ;;   _validatePacket->_checkRWByte
   998 ;;   _validatePacket->_checkCMDByte
   999 ;;   _parsePacket->_makeHexByte
  1000 ;;
  1001 ;; Critical Paths under _main in BANK1
  1002 ;;
  1003 ;;   None.
  1004 ;;
  1005 ;; Critical Paths under _isr in BANK1
  1006 ;;
  1007 ;;   None.
  1008 ;;
  1009 ;; Critical Paths under _main in BANK3
  1010 ;;
  1011 ;;   None.
  1012 ;;
  1013 ;; Critical Paths under _isr in BANK3
  1014 ;;
  1015 ;;   None.
  1016 ;;
  1017 ;; Critical Paths under _main in BANK2
  1018 ;;
  1019 ;;   None.
  1020 ;;
  1021 ;; Critical Paths under _isr in BANK2
  1022 ;;
  1023 ;;   None.
  1024                           
  1025 ;;
  1026 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1027 ;;
  1028                           
  1029 ;;
  1030 ;;Call Graph Tables:
  1031 ;;
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1034 ;; ---------------------------------------------------------------------------------
  1035 ;; (0) _main                                                13    13      0     572
  1036 ;;                                              0 BANK1     13    13      0
  1037 ;;                            _initADC
  1038 ;;                           _initTemp
  1039 ;;                          _initUSART
  1040 ;;                        _writeString
  1041 ;;                            _getTemp
  1042 ;; ---------------------------------------------------------------------------------
  1043 ;; (1) _getTemp                                              3     3      0     134
  1044 ;;                                             20 BANK0      3     3      0
  1045 ;;                         _selectTemp
  1046 ;;                           _readTemp
  1047 ;;                       _eeprom_write
  1048 ;; ---------------------------------------------------------------------------------
  1049 ;; (1) _initTemp                                             1     1      0      69
  1050 ;;                                             19 BANK0      1     1      0
  1051 ;;                       _eeprom_write
  1052 ;; ---------------------------------------------------------------------------------
  1053 ;; (2) _readTemp                                             4     2      2       0
  1054 ;;                                             16 BANK0      4     2      2
  1055 ;; ---------------------------------------------------------------------------------
  1056 ;; (1) _writeString                                          4     4      0     319
  1057 ;;                                             26 BANK0      4     4      0
  1058 ;;                          _writeByte
  1059 ;;                             _strlen
  1060 ;; ---------------------------------------------------------------------------------
  1061 ;; (1) _initADC                                              0     0      0       0
  1062 ;; ---------------------------------------------------------------------------------
  1063 ;; (2) _selectTemp                                           0     0      0       0
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (2) _eeprom_write                                         3     2      1      69
  1066 ;;                                             16 BANK0      3     2      1
  1067 ;; ---------------------------------------------------------------------------------
  1068 ;; (2) _strlen                                              10     8      2     127
  1069 ;;                                             16 BANK0     10     8      2
  1070 ;; ---------------------------------------------------------------------------------
  1071 ;; (2) _writeByte                                            1     1      0      31
  1072 ;;                                             16 BANK0      1     1      0
  1073 ;; ---------------------------------------------------------------------------------
  1074 ;; (1) _initUSART                                            0     0      0       0
  1075 ;; ---------------------------------------------------------------------------------
  1076 ;; Estimated maximum stack depth 2
  1077 ;; ---------------------------------------------------------------------------------
  1078 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1079 ;; ---------------------------------------------------------------------------------
  1080 ;; (3) _isr                                                  4     4      0    4238
  1081 ;;                                             12 BANK0      4     4      0
  1082 ;;                          _getPacket
  1083 ;; ---------------------------------------------------------------------------------
  1084 ;; (4) _getPacket                                            0     0      0    4238
  1085 ;;                         _readString
  1086 ;;                     i1_eeprom_write
  1087 ;;                        _parsePacket
  1088 ;;                     _validatePacket
  1089 ;;                        _eeprom_read
  1090 ;;                       _readCommands
  1091 ;;                      _writeCommands
  1092 ;; ---------------------------------------------------------------------------------
  1093 ;; (5) _readCommands                                         0     0      0    1005
  1094 ;;                        i1_writeByte
  1095 ;;                      i1_writeString
  1096 ;;                        _eeprom_read
  1097 ;; ---------------------------------------------------------------------------------
  1098 ;; (5) _validatePacket                                       2     0      2    1290
  1099 ;;                                              4 BANK0      2     0      2
  1100 ;;                     _checkStartByte
  1101 ;;                        _checkRWByte
  1102 ;;                       _checkCMDByte
  1103 ;;                    _checkDataFrames
  1104 ;;                  _addDataToCheckSum
  1105 ;;                            _checkCS
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (5) _parsePacket                                          8     8      0    1471
  1108 ;;                                              4 BANK0      8     8      0
  1109 ;;                        _checkLength
  1110 ;;                          _checkEven
  1111 ;;                        _makeHexByte
  1112 ;;                     i1_eeprom_write
  1113 ;;                           i1_strlen
  1114 ;;                        _eeprom_read
  1115 ;; ---------------------------------------------------------------------------------
  1116 ;; (6) i1_writeString                                        4     4      0     895
  1117 ;;                                             10 COMMON     4     4      0
  1118 ;;                        i1_writeByte
  1119 ;;                           i1_strlen
  1120 ;; ---------------------------------------------------------------------------------
  1121 ;; (6) _addDataToCheckSum                                    3     3      0     236
  1122 ;;                                             13 COMMON     1     1      0
  1123 ;;                                              0 BANK0      2     2      0
  1124 ;;                        _eeprom_read
  1125 ;;                     i1_eeprom_write
  1126 ;; ---------------------------------------------------------------------------------
  1127 ;; (6) _checkCS                                              3     1      2     110
  1128 ;;                                              2 COMMON     3     1      2
  1129 ;;                        _eeprom_read
  1130 ;;                        i1_writeByte
  1131 ;; ---------------------------------------------------------------------------------
  1132 ;; (6) _checkCMDByte                                         4     2      2     278
  1133 ;;                                              0 BANK0      4     2      2
  1134 ;;                        _eeprom_read
  1135 ;;                     i1_eeprom_write
  1136 ;;                        i1_writeByte
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; (6) _checkRWByte                                          4     2      2     278
  1139 ;;                                              0 BANK0      4     2      2
  1140 ;;                        _eeprom_read
  1141 ;;                        i1_writeByte
  1142 ;;                     i1_eeprom_write
  1143 ;; ---------------------------------------------------------------------------------
  1144 ;; (6) _checkStartByte                                       4     2      2     278
  1145 ;;                                              0 BANK0      4     2      2
  1146 ;;                        _eeprom_read
  1147 ;;                        i1_writeByte
  1148 ;;                     i1_eeprom_write
  1149 ;; ---------------------------------------------------------------------------------
  1150 ;; (6) _checkDataFrames                                      8     6      2     110
  1151 ;;                                              2 COMMON     8     6      2
  1152 ;;                        _eeprom_read
  1153 ;;                        i1_writeByte
  1154 ;; ---------------------------------------------------------------------------------
  1155 ;; (6) _checkLength                                          3     1      2     110
  1156 ;;                                              2 COMMON     3     1      2
  1157 ;;                        _eeprom_read
  1158 ;;                        i1_writeByte
  1159 ;; ---------------------------------------------------------------------------------
  1160 ;; (6) _checkEven                                            3     1      2     110
  1161 ;;                                              2 COMMON     3     1      2
  1162 ;;                        _eeprom_read
  1163 ;;                        i1_writeByte
  1164 ;; ---------------------------------------------------------------------------------
  1165 ;; (6) _makeHexByte                                          5     4      1     134
  1166 ;;                                             13 COMMON     1     0      1
  1167 ;;                                              0 BANK0      4     4      0
  1168 ;;                         _makeNibble
  1169 ;;                     i1_eeprom_write (ARG)
  1170 ;;                           i1_strlen (ARG)
  1171 ;; ---------------------------------------------------------------------------------
  1172 ;; (5) _readString                                           6     6      0     282
  1173 ;;                                              0 BANK0      6     6      0
  1174 ;;                           _readByte
  1175 ;;                     i1_eeprom_write
  1176 ;; ---------------------------------------------------------------------------------
  1177 ;; (7) i1_strlen                                            10     8      2     357
  1178 ;;                                              0 COMMON    10     8      2
  1179 ;; ---------------------------------------------------------------------------------
  1180 ;; (7) i1_eeprom_write                                       3     2      1     168
  1181 ;;                                             10 COMMON     3     2      1
  1182 ;;                         _makeNibble (ARG)
  1183 ;;                           i1_strlen (ARG)
  1184 ;;                        _eeprom_read (ARG)
  1185 ;; ---------------------------------------------------------------------------------
  1186 ;; (7) i1_writeByte                                          1     1      0      88
  1187 ;;                                              0 COMMON     1     1      0
  1188 ;; ---------------------------------------------------------------------------------
  1189 ;; (5) _writeCommands                                        0     0      0       0
  1190 ;; ---------------------------------------------------------------------------------
  1191 ;; (6) _eeprom_read                                          2     2      0      22
  1192 ;;                                              0 COMMON     2     2      0
  1193 ;; ---------------------------------------------------------------------------------
  1194 ;; (7) _makeNibble                                           1     1      0      66
  1195 ;;                                              0 COMMON     1     1      0
  1196 ;; ---------------------------------------------------------------------------------
  1197 ;; (6) _readByte                                             0     0      0       0
  1198 ;; ---------------------------------------------------------------------------------
  1199 ;; Estimated maximum stack depth 7
  1200 ;; ---------------------------------------------------------------------------------
  1201                           
  1202 ;; Call Graph Graphs:
  1203                           
  1204 ;; _main (ROOT)
  1205 ;;   _initADC
  1206 ;;   _initTemp
  1207 ;;     _eeprom_write
  1208 ;;   _initUSART
  1209 ;;   _writeString
  1210 ;;     _writeByte
  1211 ;;     _strlen
  1212 ;;   _getTemp
  1213 ;;     _selectTemp
  1214 ;;     _readTemp
  1215 ;;     _eeprom_write
  1216 ;;
  1217 ;; _isr (ROOT)
  1218 ;;   _getPacket
  1219 ;;     _readString
  1220 ;;       _readByte
  1221 ;;       i1_eeprom_write
  1222 ;;         _makeNibble (ARG)
  1223 ;;         i1_strlen (ARG)
  1224 ;;         _eeprom_read (ARG)
  1225 ;;     i1_eeprom_write
  1226 ;;       _makeNibble (ARG)
  1227 ;;       i1_strlen (ARG)
  1228 ;;       _eeprom_read (ARG)
  1229 ;;     _parsePacket
  1230 ;;       _checkLength
  1231 ;;         _eeprom_read
  1232 ;;         i1_writeByte
  1233 ;;       _checkEven
  1234 ;;         _eeprom_read
  1235 ;;         i1_writeByte
  1236 ;;       _makeHexByte
  1237 ;;         _makeNibble
  1238 ;;         i1_eeprom_write (ARG)
  1239 ;;           _makeNibble (ARG)
  1240 ;;           i1_strlen (ARG)
  1241 ;;           _eeprom_read (ARG)
  1242 ;;         i1_strlen (ARG)
  1243 ;;       i1_eeprom_write
  1244 ;;         _makeNibble (ARG)
  1245 ;;         i1_strlen (ARG)
  1246 ;;         _eeprom_read (ARG)
  1247 ;;       i1_strlen
  1248 ;;       _eeprom_read
  1249 ;;     _validatePacket
  1250 ;;       _checkStartByte
  1251 ;;         _eeprom_read
  1252 ;;         i1_writeByte
  1253 ;;         i1_eeprom_write
  1254 ;;           _makeNibble (ARG)
  1255 ;;           i1_strlen (ARG)
  1256 ;;           _eeprom_read (ARG)
  1257 ;;       _checkRWByte
  1258 ;;         _eeprom_read
  1259 ;;         i1_writeByte
  1260 ;;         i1_eeprom_write
  1261 ;;           _makeNibble (ARG)
  1262 ;;           i1_strlen (ARG)
  1263 ;;           _eeprom_read (ARG)
  1264 ;;       _checkCMDByte
  1265 ;;         _eeprom_read
  1266 ;;         i1_eeprom_write
  1267 ;;           _makeNibble (ARG)
  1268 ;;           i1_strlen (ARG)
  1269 ;;           _eeprom_read (ARG)
  1270 ;;         i1_writeByte
  1271 ;;       _checkDataFrames
  1272 ;;         _eeprom_read
  1273 ;;         i1_writeByte
  1274 ;;       _addDataToCheckSum
  1275 ;;         _eeprom_read
  1276 ;;         i1_eeprom_write
  1277 ;;           _makeNibble (ARG)
  1278 ;;           i1_strlen (ARG)
  1279 ;;           _eeprom_read (ARG)
  1280 ;;       _checkCS
  1281 ;;         _eeprom_read
  1282 ;;         i1_writeByte
  1283 ;;     _eeprom_read
  1284 ;;     _readCommands
  1285 ;;       i1_writeByte
  1286 ;;       i1_writeString
  1287 ;;         i1_writeByte
  1288 ;;         i1_strlen
  1289 ;;       _eeprom_read
  1290 ;;     _writeCommands
  1291 ;;
  1292                           
  1293 ;; Address spaces:
  1294                           
  1295 ;;Name               Size   Autos  Total    Cost      Usage
  1296 ;;BANK3               60      0       0       9        0.0%
  1297 ;;BITBANK3            60      0       0       8        0.0%
  1298 ;;SFR3                 0      0       0       4        0.0%
  1299 ;;BITSFR3              0      0       0       4        0.0%
  1300 ;;BANK2               60      0       0      11        0.0%
  1301 ;;BITBANK2            60      0       0      10        0.0%
  1302 ;;SFR2                 0      0       0       5        0.0%
  1303 ;;BITSFR2              0      0       0       5        0.0%
  1304 ;;SFR1                 0      0       0       2        0.0%
  1305 ;;BITSFR1              0      0       0       2        0.0%
  1306 ;;BANK1               50      D      3F       7       78.8%
  1307 ;;BITBANK1            50      0       0       6        0.0%
  1308 ;;CODE                 0      0       0       0        0.0%
  1309 ;;DATA                 0      0      99      12        0.0%
  1310 ;;ABS                  0      0      8D       3        0.0%
  1311 ;;NULL                 0      0       0       0        0.0%
  1312 ;;STACK                0      0       C       2        0.0%
  1313 ;;BANK0               50     1E      40       5       80.0%
  1314 ;;BITBANK0            50      0       0       4        0.0%
  1315 ;;SFR0                 0      0       0       1        0.0%
  1316 ;;BITSFR0              0      0       0       1        0.0%
  1317 ;;COMMON               E      E       E       1      100.0%
  1318 ;;BITCOMMON            E      0       0       0        0.0%
  1319 ;;EEDATA             100      0       0       0        0.0%
  1320                           
  1321                           	global	_main
  1322                           psect	maintext,global,class=CODE,delta=2
  1323                           global __pmaintext
  1324  0719                     __pmaintext:
  1325                           
  1326 ;; *************** function _main *****************
  1327 ;; Defined at:
  1328 ;;		line 62 in file "main.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;		None
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  testString      9    4[BANK1 ] unsigned char [9]
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  2  3994[COMMON] int 
  1335 ;; Registers used:
  1336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 17F/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1342 ;;      Params:         0       0       0       0       0
  1343 ;;      Locals:         0       0       9       0       0
  1344 ;;      Temps:          0       0       4       0       0
  1345 ;;      Totals:         0       0      13       0       0
  1346 ;;Total ram usage:       13 bytes
  1347 ;; Hardware stack levels required when called:    7
  1348 ;; This function calls:
  1349 ;;		_initADC
  1350 ;;		_initTemp
  1351 ;;		_initUSART
  1352 ;;		_writeString
  1353 ;;		_getTemp
  1354 ;; This function is called by:
  1355 ;;		Startup code after reset
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           psect	maintext
  1359                           	file	"main.c"
  1360                           	line	62
  1361                           	global	__size_of_main
  1362  0046                     	__size_of_main	equ	__end_of_main-_main
  1363                           	
  1364  0719                     _main:	
  1365                           	opt	stack 1
  1366                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1367                           	line	63
  1368                           	
  1369  0719                     l10897:	
  1370                           ;main.c: 63: char testString[] = "Welcome\n";
  1371  0719  30D6               	movlw	(main@testString)&0ffh
  1372  071A  0084               	movwf	fsr0
  1373  071B  3020               	movlw	low(main@F1176)
  1374  071C  1683               	bsf	status, 5	;RP0=1, select bank1
  1375  071D  1303               	bcf	status, 6	;RP1=0, select bank1
  1376  071E  00D2               	movwf	(??_main+0)^080h+0
  1377  071F  0804               	movf	fsr0,w
  1378  0720  00D3               	movwf	((??_main+0)^080h+0+1)
  1379  0721  3009               	movlw	9
  1380  0722  00D4               	movwf	((??_main+0)^080h+0+2)
  1381  0723                     u3600:
  1382  0723  0852               	movf	(??_main+0)^080h+0,w
  1383  0724  0084               	movwf	fsr0
  1384  0725  1383               	bcf	status, 7	;select IRP bank0
  1385                           	
  1386  0726  0800               	movf	indf,w
  1387  0727  00D5               	movwf	((??_main+0)^080h+0+3)
  1388  0728  0AD2               	incf	(??_main+0)^080h+0,f
  1389  0729  0853               	movf	((??_main+0)^080h+0+1),w
  1390  072A  0084               	movwf	fsr0
  1391                           	
  1392  072B  0855               	movf	((??_main+0)^080h+0+3),w
  1393  072C  0080               	movwf	indf
  1394  072D  0AD3               	incf	((??_main+0)^080h+0+1),f
  1395  072E  0BD4               	decfsz	((??_main+0)^080h+0+2),f
  1396  072F  2F23               	goto	u3600
  1397                           	line	65
  1398                           	
  1399  0730                     l10899:	
  1400                           ;main.c: 65: TRISB = 0x00;
  1401  0730  0186               	clrf	(134)^080h	;volatile
  1402                           	line	66
  1403                           	
  1404  0731                     l10901:	
  1405                           ;main.c: 66: RB1 = 1;
  1406  0731  1283               	bcf	status, 5	;RP0=0, select bank0
  1407  0732  1303               	bcf	status, 6	;RP1=0, select bank0
  1408  0733  1486               	bsf	(49/8),(49)&7
  1409                           	line	68
  1410                           	
  1411  0734                     l10903:	
  1412                           ;main.c: 68: initADC();
  1413  0734  120A  158A  25C2   	fcall	_initADC
              120A  118A         
  1414                           	line	70
  1415                           	
  1416  0739                     l10905:	
  1417                           ;main.c: 70: initTemp();
  1418  0739  120A  118A  2567   	fcall	_initTemp
              120A  118A         
  1419                           	line	72
  1420                           	
  1421  073E                     l10907:	
  1422                           ;main.c: 72: initUSART();
  1423  073E  120A  158A  2606   	fcall	_initUSART
              120A  118A         
  1424                           	line	74
  1425                           	
  1426  0743                     l10909:	
  1427                           ;main.c: 74: writeString(testString);
  1428  0743  30D6               	movlw	(main@testString)&0ffh
  1429  0744  120A  118A  24B0   	fcall	_writeString
              120A  118A         
  1430  0749  2F4A               	goto	l10911
  1431                           	line	78
  1432                           ;main.c: 78: while(1){
  1433                           	
  1434  074A                     l3997:	
  1435                           	line	79
  1436                           	
  1437  074A                     l10911:	
  1438                           ;main.c: 79: getTemp();
  1439  074A  120A  118A  279A   	fcall	_getTemp
              120A  118A         
  1440                           	line	80
  1441                           	
  1442  074F                     l10913:	
  1443                           ;main.c: 80: _delay((unsigned long)((10)*(20000000/4000.0)));
  1444                           	opt asmopt_off
  1445  074F  3041               movlw	65
  1446  0750  1683               	bsf	status, 5	;RP0=1, select bank1
  1447  0751  1303               	bcf	status, 6	;RP1=0, select bank1
  1448  0752  00D3               movwf	((??_main+0)^080h+0+1),f
  1449  0753  30EE               	movlw	238
  1450  0754  00D2               movwf	((??_main+0)^080h+0),f
  1451  0755                     u3617:
  1452  0755  0BD2               	decfsz	((??_main+0)^080h+0),f
  1453  0756  2F55               	goto	u3617
  1454  0757  0BD3               	decfsz	((??_main+0)^080h+0+1),f
  1455  0758  2F55               	goto	u3617
  1456  0759  0064               	clrwdt
  1457                           opt asmopt_on
  1458                           
  1459  075A  2F4A               	goto	l10911
  1460                           	line	82
  1461                           	
  1462  075B                     l3998:	
  1463                           	line	78
  1464  075B  2F4A               	goto	l10911
  1465                           	
  1466  075C                     l3999:	
  1467                           	line	87
  1468                           ;main.c: 82: }
  1469                           ;main.c: 86: return 0;
  1470                           ;	Return value of _main is never used
  1471                           	
  1472  075C                     l4000:	
  1473                           	global	start
  1474  075C  120A  118A  2812   	ljmp	start
  1475                           	opt stack 0
  1476                           GLOBAL	__end_of_main
  1477  075F                     	__end_of_main:
  1478 ;; =============== function _main ends ============
  1479                           
  1480                           	signat	_main,90
  1481                           	global	_getTemp
  1482                           psect	text1073,local,class=CODE,delta=2
  1483                           global __ptext1073
  1484  079A                     __ptext1073:
  1485                           
  1486 ;; *************** function _getTemp *****************
  1487 ;; Defined at:
  1488 ;;		line 45 in file "Temperature.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  tempReading     2   21[BANK0 ] unsigned int 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;		None               void
  1495 ;; Registers used:
  1496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       0       0       0       0
  1503 ;;      Locals:         0       2       0       0       0
  1504 ;;      Temps:          0       1       0       0       0
  1505 ;;      Totals:         0       3       0       0       0
  1506 ;;Total ram usage:        3 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    6
  1509 ;; This function calls:
  1510 ;;		_selectTemp
  1511 ;;		_readTemp
  1512 ;;		_eeprom_write
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           psect	text1073
  1518                           	file	"Temperature.c"
  1519                           	line	45
  1520                           	global	__size_of_getTemp
  1521  0036                     	__size_of_getTemp	equ	__end_of_getTemp-_getTemp
  1522                           	
  1523  079A                     _getTemp:	
  1524                           	opt	stack 1
  1525                           ; Regs used in _getTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1526                           	line	48
  1527                           	
  1528  079A                     l10889:	
  1529                           ;Temperature.c: 46: unsigned int tempReading;
  1530                           ;Temperature.c: 48: selectTemp();
  1531  079A  120A  158A  25B5   	fcall	_selectTemp
              120A  118A         
  1532                           	line	50
  1533                           	
  1534  079F                     l10891:	
  1535                           ;Temperature.c: 50: tempReading = readTemp();
  1536  079F  120A  158A  26DF   	fcall	_readTemp
              120A  118A         
  1537  07A4  1283               	bcf	status, 5	;RP0=0, select bank0
  1538  07A5  1303               	bcf	status, 6	;RP1=0, select bank0
  1539  07A6  0853               	movf	(1+(?_readTemp)),w
  1540  07A7  01D8               	clrf	(getTemp@tempReading+1)
  1541  07A8  07D8               	addwf	(getTemp@tempReading+1)
  1542  07A9  0852               	movf	(0+(?_readTemp)),w
  1543  07AA  01D7               	clrf	(getTemp@tempReading)
  1544  07AB  07D7               	addwf	(getTemp@tempReading)
  1545                           
  1546                           	line	52
  1547                           	
  1548  07AC                     l10893:	
  1549                           ;Temperature.c: 52: eeprom_write(tempValLAddr,tempReading);
  1550  07AC  0857               	movf	(getTemp@tempReading),w
  1551  07AD  00D6               	movwf	(??_getTemp+0)+0
  1552  07AE  0856               	movf	(??_getTemp+0)+0,w
  1553  07AF  00D2               	movwf	(?_eeprom_write)
  1554  07B0  305D               	movlw	(_tempValLAddr-__stringbase)
  1555  07B1  0084               	movwf	fsr0
  1556  07B2  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1557  07B7  120A  118A  275F   	fcall	_eeprom_write
              120A  118A         
  1558                           	line	54
  1559                           	
  1560  07BC                     l10895:	
  1561                           ;Temperature.c: 54: eeprom_write(tempValHAddr+1,tempReading>>8);
  1562  07BC  1283               	bcf	status, 5	;RP0=0, select bank0
  1563  07BD  1303               	bcf	status, 6	;RP1=0, select bank0
  1564  07BE  0858               	movf	(getTemp@tempReading+1),w
  1565  07BF  00D6               	movwf	(??_getTemp+0)+0
  1566  07C0  0856               	movf	(??_getTemp+0)+0,w
  1567  07C1  00D2               	movwf	(?_eeprom_write)
  1568  07C2  305C               	movlw	(_tempValHAddr-__stringbase)
  1569  07C3  0084               	movwf	fsr0
  1570  07C4  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1571  07C9  3E01               	addlw	01h
  1572  07CA  120A  118A  275F   	fcall	_eeprom_write
              120A  118A         
  1573                           	line	55
  1574                           	
  1575  07CF                     l2423:	
  1576  07CF  0008               	return
  1577                           	opt stack 0
  1578                           GLOBAL	__end_of_getTemp
  1579  07D0                     	__end_of_getTemp:
  1580 ;; =============== function _getTemp ends ============
  1581                           
  1582                           	signat	_getTemp,88
  1583                           	global	_initTemp
  1584                           psect	text1074,local,class=CODE,delta=2
  1585                           global __ptext1074
  1586  0567                     __ptext1074:
  1587                           
  1588 ;; *************** function _initTemp *****************
  1589 ;; Defined at:
  1590 ;;		line 24 in file "Temperature.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;		None               void
  1597 ;; Registers used:
  1598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1604 ;;      Params:         0       0       0       0       0
  1605 ;;      Locals:         0       0       0       0       0
  1606 ;;      Temps:          0       1       0       0       0
  1607 ;;      Totals:         0       1       0       0       0
  1608 ;;Total ram usage:        1 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    6
  1611 ;; This function calls:
  1612 ;;		_eeprom_write
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           psect	text1074
  1618                           	file	"Temperature.c"
  1619                           	line	24
  1620                           	global	__size_of_initTemp
  1621  0067                     	__size_of_initTemp	equ	__end_of_initTemp-_initTemp
  1622                           	
  1623  0567                     _initTemp:	
  1624                           	opt	stack 1
  1625                           ; Regs used in _initTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1626                           	line	26
  1627                           	
  1628  0567                     l10887:	
  1629                           ;Temperature.c: 26: eeprom_write(tempValHAddr,0x00);
  1630  0567  1283               	bcf	status, 5	;RP0=0, select bank0
  1631  0568  1303               	bcf	status, 6	;RP1=0, select bank0
  1632  0569  01D2               	clrf	(?_eeprom_write)
  1633  056A  305C               	movlw	(_tempValHAddr-__stringbase)
  1634  056B  0084               	movwf	fsr0
  1635  056C  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1636  0571  120A  118A  275F   	fcall	_eeprom_write
              120A  118A         
  1637                           	line	27
  1638                           ;Temperature.c: 27: eeprom_write(tempValLAddr, 0x00);
  1639  0576  1283               	bcf	status, 5	;RP0=0, select bank0
  1640  0577  1303               	bcf	status, 6	;RP1=0, select bank0
  1641  0578  01D2               	clrf	(?_eeprom_write)
  1642  0579  305D               	movlw	(_tempValLAddr-__stringbase)
  1643  057A  0084               	movwf	fsr0
  1644  057B  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1645  0580  120A  118A  275F   	fcall	_eeprom_write
              120A  118A         
  1646                           	line	28
  1647                           ;Temperature.c: 28: eeprom_write(tempHiAddr, tempStartHi);
  1648  0585  3059               	movlw	(_tempStartHi-__stringbase)
  1649  0586  0084               	movwf	fsr0
  1650  0587  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1651  058C  1283               	bcf	status, 5	;RP0=0, select bank0
  1652  058D  1303               	bcf	status, 6	;RP1=0, select bank0
  1653  058E  00D5               	movwf	(??_initTemp+0)+0
  1654  058F  0855               	movf	(??_initTemp+0)+0,w
  1655  0590  00D2               	movwf	(?_eeprom_write)
  1656  0591  3057               	movlw	(_tempHiAddr-__stringbase)
  1657  0592  0084               	movwf	fsr0
  1658  0593  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1659  0598  120A  118A  275F   	fcall	_eeprom_write
              120A  118A         
  1660                           	line	29
  1661                           ;Temperature.c: 29: eeprom_write(tempLoAddr, tempStartLo);
  1662  059D  305A               	movlw	(_tempStartLo-__stringbase)
  1663  059E  0084               	movwf	fsr0
  1664  059F  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1665  05A4  1283               	bcf	status, 5	;RP0=0, select bank0
  1666  05A5  1303               	bcf	status, 6	;RP1=0, select bank0
  1667  05A6  00D5               	movwf	(??_initTemp+0)+0
  1668  05A7  0855               	movf	(??_initTemp+0)+0,w
  1669  05A8  00D2               	movwf	(?_eeprom_write)
  1670  05A9  3058               	movlw	(_tempLoAddr-__stringbase)
  1671  05AA  0084               	movwf	fsr0
  1672  05AB  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1673  05B0  120A  118A  275F   	fcall	_eeprom_write
              120A  118A         
  1674                           	line	30
  1675                           ;Temperature.c: 30: eeprom_write(tempUnitAddr, tempC);
  1676  05B5  3055               	movlw	(_tempC-__stringbase)
  1677  05B6  0084               	movwf	fsr0
  1678  05B7  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1679  05BC  1283               	bcf	status, 5	;RP0=0, select bank0
  1680  05BD  1303               	bcf	status, 6	;RP1=0, select bank0
  1681  05BE  00D5               	movwf	(??_initTemp+0)+0
  1682  05BF  0855               	movf	(??_initTemp+0)+0,w
  1683  05C0  00D2               	movwf	(?_eeprom_write)
  1684  05C1  305B               	movlw	(_tempUnitAddr-__stringbase)
  1685  05C2  0084               	movwf	fsr0
  1686  05C3  120A  118A  2500   	fcall	stringdir
              120A  118A         
  1687  05C8  120A  118A  275F   	fcall	_eeprom_write
              120A  118A         
  1688                           	line	31
  1689                           	
  1690  05CD                     l2411:	
  1691  05CD  0008               	return
  1692                           	opt stack 0
  1693                           GLOBAL	__end_of_initTemp
  1694  05CE                     	__end_of_initTemp:
  1695 ;; =============== function _initTemp ends ============
  1696                           
  1697                           	signat	_initTemp,88
  1698                           	global	_readTemp
  1699                           psect	text1075,local,class=CODE,delta=2
  1700                           global __ptext1075
  1701  0EDF                     __ptext1075:
  1702                           
  1703 ;; *************** function _readTemp *****************
  1704 ;; Defined at:
  1705 ;;		line 7 in file "Temperature.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  2   16[BANK0 ] unsigned int 
  1712 ;; Registers used:
  1713 ;;		wreg, status,2, status,0, btemp+1
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1719 ;;      Params:         0       2       0       0       0
  1720 ;;      Locals:         0       0       0       0       0
  1721 ;;      Temps:          0       2       0       0       0
  1722 ;;      Totals:         0       4       0       0       0
  1723 ;;Total ram usage:        4 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    5
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		_getTemp
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           psect	text1075
  1733                           	file	"Temperature.c"
  1734                           	line	7
  1735                           	global	__size_of_readTemp
  1736  0029                     	__size_of_readTemp	equ	__end_of_readTemp-_readTemp
  1737                           	
  1738  0EDF                     _readTemp:	
  1739                           	opt	stack 1
  1740                           ; Regs used in _readTemp: [wreg+status,2+status,0+btemp+1]
  1741                           	line	9
  1742                           	
  1743  0EDF                     l10877:	
  1744                           ;Temperature.c: 9: ADON = 1;
  1745  0EDF  1283               	bcf	status, 5	;RP0=0, select bank0
  1746  0EE0  1303               	bcf	status, 6	;RP1=0, select bank0
  1747  0EE1  141F               	bsf	(248/8),(248)&7
  1748                           	line	13
  1749                           	
  1750  0EE2                     l10879:	
  1751                           ;Temperature.c: 13: _delay((unsigned long)((10)*(20000000/4000.0)));
  1752                           	opt asmopt_off
  1753  0EE2  3041               movlw	65
  1754  0EE3  00D5               movwf	((??_readTemp+0)+0+1),f
  1755  0EE4  30EE               	movlw	238
  1756  0EE5  00D4               movwf	((??_readTemp+0)+0),f
  1757  0EE6                     u3627:
  1758  0EE6  0BD4               	decfsz	((??_readTemp+0)+0),f
  1759  0EE7  2EE6               	goto	u3627
  1760  0EE8  0BD5               	decfsz	((??_readTemp+0)+0+1),f
  1761  0EE9  2EE6               	goto	u3627
  1762  0EEA  0064               	clrwdt
  1763                           opt asmopt_on
  1764                           
  1765                           	line	15
  1766                           	
  1767  0EEB                     l10881:	
  1768                           ;Temperature.c: 15: GO_nDONE = 1;
  1769  0EEB  1283               	bcf	status, 5	;RP0=0, select bank0
  1770  0EEC  1303               	bcf	status, 6	;RP1=0, select bank0
  1771  0EED  151F               	bsf	(250/8),(250)&7
  1772                           	line	18
  1773                           ;Temperature.c: 18: while(GO_nDONE);
  1774  0EEE  2EEF               	goto	l2405
  1775                           	
  1776  0EEF                     l2406:	
  1777                           	
  1778  0EEF                     l2405:	
  1779  0EEF  191F               	btfsc	(250/8),(250)&7
  1780  0EF0  2EF2               	goto	u3591
  1781  0EF1  2EF3               	goto	u3590
  1782  0EF2                     u3591:
  1783  0EF2  2EEF               	goto	l2405
  1784  0EF3                     u3590:
  1785  0EF3  2EF4               	goto	l10883
  1786                           	
  1787  0EF4                     l2407:	
  1788                           	line	21
  1789                           	
  1790  0EF4                     l10883:	
  1791                           ;Temperature.c: 21: return ((ADRESH<<8)+ADRESL);
  1792  0EF4  081E               	movf	(30),w	;volatile
  1793  0EF5  00D4               	movwf	(??_readTemp+0)+0
  1794  0EF6  01D5               	clrf	(??_readTemp+0)+0+1
  1795  0EF7  0854               	movf	(??_readTemp+0)+0,w
  1796  0EF8  00D5               	movwf	(??_readTemp+0)+1
  1797  0EF9  01D4               	clrf	(??_readTemp+0)+0
  1798  0EFA  1683               	bsf	status, 5	;RP0=1, select bank1
  1799  0EFB  1303               	bcf	status, 6	;RP1=0, select bank1
  1800  0EFC  081E               	movf	(158)^080h,w	;volatile
  1801  0EFD  1283               	bcf	status, 5	;RP0=0, select bank0
  1802  0EFE  1303               	bcf	status, 6	;RP1=0, select bank0
  1803  0EFF  0754               	addwf	0+(??_readTemp+0)+0,w
  1804  0F00  00D2               	movwf	(?_readTemp)
  1805  0F01  3000               	movlw	0
  1806  0F02  1803               	skipnc
  1807  0F03  3001               	movlw	1
  1808  0F04  0755               	addwf	1+(??_readTemp+0)+0,w
  1809  0F05  00D3               	movwf	1+(?_readTemp)
  1810  0F06  2F07               	goto	l2408
  1811                           	
  1812  0F07                     l10885:	
  1813                           	line	22
  1814                           	
  1815  0F07                     l2408:	
  1816  0F07  0008               	return
  1817                           	opt stack 0
  1818                           GLOBAL	__end_of_readTemp
  1819  0F08                     	__end_of_readTemp:
  1820 ;; =============== function _readTemp ends ============
  1821                           
  1822                           	signat	_readTemp,90
  1823                           	global	_writeString
  1824                           psect	text1076,local,class=CODE,delta=2
  1825                           global __ptext1076
  1826  04B0                     __ptext1076:
  1827                           
  1828 ;; *************** function _writeString *****************
  1829 ;; Defined at:
  1830 ;;		line 150 in file "Bluetooth.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  userString      1    wreg     PTR unsigned char 
  1833 ;;		 -> readError(25), main@testString(9), 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  userString      1   27[BANK0 ] PTR unsigned char 
  1836 ;;		 -> readError(25), main@testString(9), 
  1837 ;;  i               2   28[BANK0 ] unsigned int 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;		None               void
  1840 ;; Registers used:
  1841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1847 ;;      Params:         0       0       0       0       0
  1848 ;;      Locals:         0       3       0       0       0
  1849 ;;      Temps:          0       1       0       0       0
  1850 ;;      Totals:         0       4       0       0       0
  1851 ;;Total ram usage:        4 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    6
  1854 ;; This function calls:
  1855 ;;		_writeByte
  1856 ;;		_strlen
  1857 ;; This function is called by:
  1858 ;;		_main
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           psect	text1076
  1862                           	file	"Bluetooth.c"
  1863                           	line	150
  1864                           	global	__size_of_writeString
  1865  0035                     	__size_of_writeString	equ	__end_of_writeString-_writeString
  1866                           	
  1867  04B0                     _writeString:	
  1868                           	opt	stack 1
  1869                           ; Regs used in _writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1870                           ;writeString@userString stored from wreg
  1871                           	line	154
  1872  04B0  1283               	bcf	status, 5	;RP0=0, select bank0
  1873  04B1  1303               	bcf	status, 6	;RP1=0, select bank0
  1874  04B2  00DD               	movwf	(writeString@userString)
  1875                           	
  1876  04B3                     l10867:	
  1877                           ;Bluetooth.c: 152: unsigned int i;
  1878                           ;Bluetooth.c: 154: for(i = 0;i<strlen(userString);i++){
  1879  04B3  01DE               	clrf	(writeString@i)
  1880  04B4  01DF               	clrf	(writeString@i+1)
  1881  04B5  2CCB               	goto	l10873
  1882                           	
  1883  04B6                     l789:	
  1884                           	line	155
  1885                           	
  1886  04B6                     l10869:	
  1887                           ;Bluetooth.c: 155: writeByte(userString[i]);
  1888  04B6  085E               	movf	(writeString@i),w
  1889  04B7  075D               	addwf	(writeString@userString),w
  1890  04B8  00DC               	movwf	(??_writeString+0)+0
  1891  04B9  085C               	movf	0+(??_writeString+0)+0,w
  1892  04BA  0084               	movwf	fsr0
  1893  04BB  1383               	bcf	status, 7	;select IRP bank0
  1894  04BC  0800               	movf	indf,w
  1895  04BD  120A  158A  25D9   	fcall	_writeByte
              120A  118A         
  1896                           	line	154
  1897                           	
  1898  04C2                     l10871:	
  1899  04C2  3001               	movlw	low(01h)
  1900  04C3  1283               	bcf	status, 5	;RP0=0, select bank0
  1901  04C4  1303               	bcf	status, 6	;RP1=0, select bank0
  1902  04C5  07DE               	addwf	(writeString@i),f
  1903  04C6  1803               	skipnc
  1904  04C7  0ADF               	incf	(writeString@i+1),f
  1905  04C8  3000               	movlw	high(01h)
  1906  04C9  07DF               	addwf	(writeString@i+1),f
  1907  04CA  2CCB               	goto	l10873
  1908                           	
  1909  04CB                     l788:	
  1910                           	
  1911  04CB                     l10873:	
  1912  04CB  085D               	movf	(writeString@userString),w
  1913  04CC  120A  158A  2799   	fcall	_strlen
              120A  118A         
  1914  04D1  1283               	bcf	status, 5	;RP0=0, select bank0
  1915  04D2  1303               	bcf	status, 6	;RP1=0, select bank0
  1916  04D3  0853               	movf	(1+(?_strlen)),w
  1917  04D4  025F               	subwf	(writeString@i+1),w
  1918  04D5  1D03               	skipz
  1919  04D6  2CD9               	goto	u3585
  1920  04D7  0852               	movf	(0+(?_strlen)),w
  1921  04D8  025E               	subwf	(writeString@i),w
  1922  04D9                     u3585:
  1923  04D9  1C03               	skipc
  1924  04DA  2CDC               	goto	u3581
  1925  04DB  2CDD               	goto	u3580
  1926  04DC                     u3581:
  1927  04DC  2CB6               	goto	l10869
  1928  04DD                     u3580:
  1929  04DD  2CDE               	goto	l10875
  1930                           	
  1931  04DE                     l790:	
  1932                           	line	158
  1933                           	
  1934  04DE                     l10875:	
  1935                           ;Bluetooth.c: 156: }
  1936                           ;Bluetooth.c: 158: writeByte((unsigned char)i);
  1937  04DE  085E               	movf	(writeString@i),w
  1938  04DF  120A  158A  25D9   	fcall	_writeByte
              120A  118A         
  1939                           	line	160
  1940                           	
  1941  04E4                     l791:	
  1942  04E4  0008               	return
  1943                           	opt stack 0
  1944                           GLOBAL	__end_of_writeString
  1945  04E5                     	__end_of_writeString:
  1946 ;; =============== function _writeString ends ============
  1947                           
  1948                           	signat	_writeString,4216
  1949                           	global	_initADC
  1950                           psect	text1077,local,class=CODE,delta=2
  1951                           global __ptext1077
  1952  0DC2                     __ptext1077:
  1953                           
  1954 ;; *************** function _initADC *****************
  1955 ;; Defined at:
  1956 ;;		line 7 in file "customADC.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;		None               void
  1963 ;; Registers used:
  1964 ;;		wreg
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1970 ;;      Params:         0       0       0       0       0
  1971 ;;      Locals:         0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0
  1973 ;;      Totals:         0       0       0       0       0
  1974 ;;Total ram usage:        0 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    5
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_main
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           psect	text1077
  1984                           	file	"customADC.c"
  1985                           	line	7
  1986                           	global	__size_of_initADC
  1987  000B                     	__size_of_initADC	equ	__end_of_initADC-_initADC
  1988                           	
  1989  0DC2                     _initADC:	
  1990                           	opt	stack 2
  1991                           ; Regs used in _initADC: [wreg]
  1992                           	line	8
  1993                           	
  1994  0DC2                     l10785:	
  1995                           ;customADC.c: 8: TRISA = 0x03;
  1996  0DC2  3003               	movlw	(03h)
  1997  0DC3  1683               	bsf	status, 5	;RP0=1, select bank1
  1998  0DC4  1303               	bcf	status, 6	;RP1=0, select bank1
  1999  0DC5  0085               	movwf	(133)^080h	;volatile
  2000                           	line	21
  2001                           ;customADC.c: 21: ADCON1 = 0x80;
  2002  0DC6  3080               	movlw	(080h)
  2003  0DC7  009F               	movwf	(159)^080h	;volatile
  2004                           	line	40
  2005                           ;customADC.c: 40: ADCON0 = 0x80;
  2006  0DC8  3080               	movlw	(080h)
  2007  0DC9  1283               	bcf	status, 5	;RP0=0, select bank0
  2008  0DCA  1303               	bcf	status, 6	;RP1=0, select bank0
  2009  0DCB  009F               	movwf	(31)	;volatile
  2010                           	line	41
  2011                           	
  2012  0DCC                     l3188:	
  2013  0DCC  0008               	return
  2014                           	opt stack 0
  2015                           GLOBAL	__end_of_initADC
  2016  0DCD                     	__end_of_initADC:
  2017 ;; =============== function _initADC ends ============
  2018                           
  2019                           	signat	_initADC,88
  2020                           	global	_selectTemp
  2021                           psect	text1078,local,class=CODE,delta=2
  2022                           global __ptext1078
  2023  0DB5                     __ptext1078:
  2024                           
  2025 ;; *************** function _selectTemp *****************
  2026 ;; Defined at:
  2027 ;;		line 44 in file "customADC.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;		None
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;		None               void
  2034 ;; Registers used:
  2035 ;;		wreg
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2041 ;;      Params:         0       0       0       0       0
  2042 ;;      Locals:         0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0
  2044 ;;      Totals:         0       0       0       0       0
  2045 ;;Total ram usage:        0 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; Hardware stack levels required when called:    5
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_getTemp
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           psect	text1078
  2055                           	file	"customADC.c"
  2056                           	line	44
  2057                           	global	__size_of_selectTemp
  2058  0005                     	__size_of_selectTemp	equ	__end_of_selectTemp-_selectTemp
  2059                           	
  2060  0DB5                     _selectTemp:	
  2061                           	opt	stack 1
  2062                           ; Regs used in _selectTemp: [wreg]
  2063                           	line	45
  2064                           	
  2065  0DB5                     l10783:	
  2066                           ;customADC.c: 45: ADCON0 = 0x80;
  2067  0DB5  3080               	movlw	(080h)
  2068  0DB6  1283               	bcf	status, 5	;RP0=0, select bank0
  2069  0DB7  1303               	bcf	status, 6	;RP1=0, select bank0
  2070  0DB8  009F               	movwf	(31)	;volatile
  2071                           	line	46
  2072                           	
  2073  0DB9                     l3191:	
  2074  0DB9  0008               	return
  2075                           	opt stack 0
  2076                           GLOBAL	__end_of_selectTemp
  2077  0DBA                     	__end_of_selectTemp:
  2078 ;; =============== function _selectTemp ends ============
  2079                           
  2080                           	signat	_selectTemp,88
  2081                           	global	_eeprom_write
  2082                           psect	text1079,local,class=CODE,delta=2
  2083                           global __ptext1079
  2084  075F                     __ptext1079:
  2085                           
  2086 ;; *************** function _eeprom_write *****************
  2087 ;; Defined at:
  2088 ;;		line 7 in file "C:\Microchip\HiTech\PICC\9.83\sources\eewrite.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  addr            1    wreg     unsigned char 
  2091 ;;  value           1   16[BANK0 ] unsigned char 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  addr            1   18[BANK0 ] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      unsigned char 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2103 ;;      Params:         0       1       0       0       0
  2104 ;;      Locals:         0       1       0       0       0
  2105 ;;      Temps:          0       1       0       0       0
  2106 ;;      Totals:         0       3       0       0       0
  2107 ;;Total ram usage:        3 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    5
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_initTemp
  2114 ;;		_getTemp
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           psect	text1079
  2118                           	file	"C:\Microchip\HiTech\PICC\9.83\sources\eewrite.c"
  2119                           	line	7
  2120                           	global	__size_of_eeprom_write
  2121  003B                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
  2122                           	
  2123  075F                     _eeprom_write:	
  2124                           	opt	stack 1
  2125                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2126                           ;eeprom_write@addr stored from wreg
  2127  075F  1283               	bcf	status, 5	;RP0=0, select bank0
  2128  0760  1303               	bcf	status, 6	;RP1=0, select bank0
  2129  0761  00D4               	movwf	(eeprom_write@addr)
  2130                           	line	8
  2131                           	
  2132  0762                     l7603:	
  2133  0762  2F63               	goto	l7604
  2134                           	
  2135  0763                     l7605:	
  2136                           	
  2137  0763                     l7604:	
  2138  0763  1683               	bsf	status, 5	;RP0=1, select bank3
  2139  0764  1703               	bsf	status, 6	;RP1=1, select bank3
  2140  0765  188C               	btfsc	(3169/8)^0180h,(3169)&7
  2141  0766  2F68               	goto	u3271
  2142  0767  2F69               	goto	u3270
  2143  0768                     u3271:
  2144  0768  2F63               	goto	l7604
  2145  0769                     u3270:
  2146  0769  2F6A               	goto	l10597
  2147                           	
  2148  076A                     l7606:	
  2149                           	
  2150  076A                     l10597:	
  2151  076A  1283               	bcf	status, 5	;RP0=0, select bank0
  2152  076B  1303               	bcf	status, 6	;RP1=0, select bank0
  2153  076C  0854               	movf	(eeprom_write@addr),w
  2154  076D  1283               	bcf	status, 5	;RP0=0, select bank2
  2155  076E  1703               	bsf	status, 6	;RP1=1, select bank2
  2156  076F  008D               	movwf	(269)^0100h	;volatile
  2157  0770  1283               	bcf	status, 5	;RP0=0, select bank0
  2158  0771  1303               	bcf	status, 6	;RP1=0, select bank0
  2159  0772  0852               	movf	(eeprom_write@value),w
  2160  0773  1283               	bcf	status, 5	;RP0=0, select bank2
  2161  0774  1703               	bsf	status, 6	;RP1=1, select bank2
  2162  0775  008C               	movwf	(268)^0100h	;volatile
  2163                           	
  2164  0776                     l10599:	
  2165  0776  303F               	movlw	(03Fh)
  2166  0777  1283               	bcf	status, 5	;RP0=0, select bank0
  2167  0778  1303               	bcf	status, 6	;RP1=0, select bank0
  2168  0779  00D3               	movwf	(??_eeprom_write+0)+0
  2169  077A  0853               	movf	(??_eeprom_write+0)+0,w
  2170  077B  1683               	bsf	status, 5	;RP0=1, select bank3
  2171  077C  1703               	bsf	status, 6	;RP1=1, select bank3
  2172  077D  058C               	andwf	(396)^0180h,f	;volatile
  2173                           	
  2174  077E                     l10601:	
  2175  077E  1283               	bcf	status, 5	;RP0=0, select bank0
  2176  077F  1303               	bcf	status, 6	;RP1=0, select bank0
  2177  0780  1003               	bcf	(24/8),(24)&7
  2178                           	
  2179  0781                     l10603:	
  2180  0781  1F8B               	btfss	(95/8),(95)&7
  2181  0782  2F84               	goto	u3281
  2182  0783  2F85               	goto	u3280
  2183  0784                     u3281:
  2184  0784  2F86               	goto	l7607
  2185  0785                     u3280:
  2186                           	
  2187  0785                     l10605:	
  2188  0785  1403               	bsf	(24/8),(24)&7
  2189                           	
  2190  0786                     l7607:	
  2191  0786  138B               	bcf	(95/8),(95)&7
  2192  0787  1683               	bsf	status, 5	;RP0=1, select bank3
  2193  0788  1703               	bsf	status, 6	;RP1=1, select bank3
  2194  0789  150C               	bsf	(3170/8)^0180h,(3170)&7
  2195                           	
  2196  078A                     l10607:	
  2197  078A  3055               	movlw	(055h)
  2198  078B  008D               	movwf	(397)^0180h	;volatile
  2199  078C  30AA               	movlw	(0AAh)
  2200  078D  008D               	movwf	(397)^0180h	;volatile
  2201                           	
  2202  078E                     l10609:	
  2203  078E  148C               	bsf	(3169/8)^0180h,(3169)&7
  2204                           	
  2205  078F                     l10611:	
  2206  078F  110C               	bcf	(3170/8)^0180h,(3170)&7
  2207                           	
  2208  0790                     l10613:	
  2209  0790  1283               	bcf	status, 5	;RP0=0, select bank0
  2210  0791  1303               	bcf	status, 6	;RP1=0, select bank0
  2211  0792  1C03               	btfss	(24/8),(24)&7
  2212  0793  2F95               	goto	u3291
  2213  0794  2F96               	goto	u3290
  2214  0795                     u3291:
  2215  0795  2F99               	goto	l7610
  2216  0796                     u3290:
  2217                           	
  2218  0796                     l10615:	
  2219  0796  178B               	bsf	(95/8),(95)&7
  2220  0797  2F99               	goto	l7610
  2221                           	
  2222  0798                     l7608:	
  2223  0798  2F99               	goto	l7610
  2224                           	
  2225  0799                     l7609:	
  2226                           	line	10
  2227                           ;	Return value of _eeprom_write is never used
  2228                           	
  2229  0799                     l7610:	
  2230  0799  0008               	return
  2231                           	opt stack 0
  2232                           GLOBAL	__end_of_eeprom_write
  2233  079A                     	__end_of_eeprom_write:
  2234 ;; =============== function _eeprom_write ends ============
  2235                           
  2236                           	signat	_eeprom_write,8313
  2237                           	global	_strlen
  2238                           psect	text1080,local,class=CODE,delta=2
  2239                           global __ptext1080
  2240  0F99                     __ptext1080:
  2241                           
  2242 ;; *************** function _strlen *****************
  2243 ;; Defined at:
  2244 ;;		line 5 in file "C:\Microchip\HiTech\PICC\9.83\sources\strlen.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  s               1    wreg     PTR const unsigned char 
  2247 ;;		 -> readError(25), arrStore(50), main@testString(9), 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  s               1   24[BANK0 ] PTR const unsigned char 
  2250 ;;		 -> readError(25), arrStore(50), main@testString(9), 
  2251 ;;  cp              1   25[BANK0 ] PTR const unsigned char 
  2252 ;;		 -> readError(25), arrStore(50), main@testString(9), 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  2   16[BANK0 ] unsigned int 
  2255 ;; Registers used:
  2256 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2262 ;;      Params:         0       2       0       0       0
  2263 ;;      Locals:         0       2       0       0       0
  2264 ;;      Temps:          0       6       0       0       0
  2265 ;;      Totals:         0      10       0       0       0
  2266 ;;Total ram usage:       10 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    5
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_writeString
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           psect	text1080
  2276                           	file	"C:\Microchip\HiTech\PICC\9.83\sources\strlen.c"
  2277                           	line	5
  2278                           	global	__size_of_strlen
  2279  0033                     	__size_of_strlen	equ	__end_of_strlen-_strlen
  2280                           	
  2281  0F99                     _strlen:	
  2282                           	opt	stack 1
  2283                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  2284                           ;strlen@s stored from wreg
  2285                           	line	8
  2286  0F99  1283               	bcf	status, 5	;RP0=0, select bank0
  2287  0F9A  1303               	bcf	status, 6	;RP1=0, select bank0
  2288  0F9B  00DA               	movwf	(strlen@s)
  2289                           	
  2290  0F9C                     l10589:	
  2291  0F9C  085A               	movf	(strlen@s),w
  2292  0F9D  00D4               	movwf	(??_strlen+0)+0
  2293  0F9E  0854               	movf	(??_strlen+0)+0,w
  2294  0F9F  00DB               	movwf	(strlen@cp)
  2295                           	line	9
  2296  0FA0  2FA2               	goto	l10591
  2297                           	
  2298  0FA1                     l8288:	
  2299                           	line	10
  2300  0FA1  2FA2               	goto	l10591
  2301                           	
  2302  0FA2                     l8287:	
  2303                           	line	9
  2304                           	
  2305  0FA2                     l10591:	
  2306  0FA2  085B               	movf	(strlen@cp),w
  2307  0FA3  0084               	movwf	fsr0
  2308  0FA4  3001               	movlw	01h
  2309  0FA5  07DB               	addwf	(strlen@cp),f
  2310  0FA6  1383               	bcf	status, 7	;select IRP bank0
  2311  0FA7  0880               	movf	indf,f
  2312  0FA8  1D03               	skipz
  2313  0FA9  2FAB               	goto	u3261
  2314  0FAA  2FAC               	goto	u3260
  2315  0FAB                     u3261:
  2316  0FAB  2FA2               	goto	l10591
  2317  0FAC                     u3260:
  2318  0FAC  2FAD               	goto	l10593
  2319                           	
  2320  0FAD                     l8289:	
  2321                           	line	11
  2322                           	
  2323  0FAD                     l10593:	
  2324  0FAD  085A               	movf	(strlen@s),w
  2325  0FAE  00D4               	movwf	(??_strlen+0)+0
  2326  0FAF  3000               	movlw	((0x0/2))
  2327  0FB0  00D5               	movwf	(??_strlen+0)+0+1
  2328  0FB1  09D4               	comf	(??_strlen+0)+0,f
  2329  0FB2  09D5               	comf	(??_strlen+0)+1,f
  2330  0FB3  0AD4               	incf	(??_strlen+0)+0,f
  2331  0FB4  1903               	skipnz
  2332  0FB5  0AD5               	incf	(??_strlen+0)+1,f
  2333  0FB6  085B               	movf	(strlen@cp),w
  2334  0FB7  00D6               	movwf	(??_strlen+2)+0
  2335  0FB8  3000               	movlw	((0x0/2))
  2336  0FB9  00D7               	movwf	(??_strlen+2)+0+1
  2337  0FBA  0854               	movf	0+(??_strlen+0)+0,w
  2338  0FBB  0756               	addwf	0+(??_strlen+2)+0,w
  2339  0FBC  00D8               	movwf	(??_strlen+4)+0
  2340  0FBD  0855               	movf	1+(??_strlen+0)+0,w
  2341  0FBE  1803               	skipnc
  2342  0FBF  0A55               	incf	1+(??_strlen+0)+0,w
  2343  0FC0  0757               	addwf	1+(??_strlen+2)+0,w
  2344  0FC1  00D9               	movwf	1+(??_strlen+4)+0
  2345  0FC2  0858               	movf	0+(??_strlen+4)+0,w
  2346  0FC3  3EFF               	addlw	low(-1)
  2347  0FC4  00D2               	movwf	(?_strlen)
  2348  0FC5  0859               	movf	1+(??_strlen+4)+0,w
  2349  0FC6  1803               	skipnc
  2350  0FC7  3E01               	addlw	1
  2351  0FC8  3EFF               	addlw	high(-1)
  2352  0FC9  00D3               	movwf	1+(?_strlen)
  2353  0FCA  2FCB               	goto	l8290
  2354                           	
  2355  0FCB                     l10595:	
  2356                           	line	12
  2357                           	
  2358  0FCB                     l8290:	
  2359  0FCB  0008               	return
  2360                           	opt stack 0
  2361                           GLOBAL	__end_of_strlen
  2362  0FCC                     	__end_of_strlen:
  2363 ;; =============== function _strlen ends ============
  2364                           
  2365                           	signat	_strlen,4218
  2366                           	global	_writeByte
  2367                           psect	text1081,local,class=CODE,delta=2
  2368                           global __ptext1081
  2369  0DD9                     __ptext1081:
  2370                           
  2371 ;; *************** function _writeByte *****************
  2372 ;; Defined at:
  2373 ;;		line 79 in file "Bluetooth.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  Byte            1    wreg     unsigned char 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  Byte            1   16[BANK0 ] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;		None               void
  2380 ;; Registers used:
  2381 ;;		wreg
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2387 ;;      Params:         0       0       0       0       0
  2388 ;;      Locals:         0       1       0       0       0
  2389 ;;      Temps:          0       0       0       0       0
  2390 ;;      Totals:         0       1       0       0       0
  2391 ;;Total ram usage:        1 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    5
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_writeString
  2398 ;;		_echoBack
  2399 ;;		_displayPacket
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           psect	text1081
  2403                           	file	"Bluetooth.c"
  2404                           	line	79
  2405                           	global	__size_of_writeByte
  2406  000C                     	__size_of_writeByte	equ	__end_of_writeByte-_writeByte
  2407                           	
  2408  0DD9                     _writeByte:	
  2409                           	opt	stack 1
  2410                           ; Regs used in _writeByte: [wreg]
  2411                           ;writeByte@Byte stored from wreg
  2412  0DD9  1283               	bcf	status, 5	;RP0=0, select bank0
  2413  0DDA  1303               	bcf	status, 6	;RP1=0, select bank0
  2414  0DDB  00D2               	movwf	(writeByte@Byte)
  2415                           	line	83
  2416                           	
  2417  0DDC                     l10579:	
  2418                           ;Bluetooth.c: 83: while(!TXIF);
  2419  0DDC  2DDD               	goto	l772
  2420                           	
  2421  0DDD                     l773:	
  2422                           	
  2423  0DDD                     l772:	
  2424  0DDD  1E0C               	btfss	(100/8),(100)&7
  2425  0DDE  2DE0               	goto	u3251
  2426  0DDF  2DE1               	goto	u3250
  2427  0DE0                     u3251:
  2428  0DE0  2DDD               	goto	l772
  2429  0DE1                     u3250:
  2430  0DE1  2DE2               	goto	l10581
  2431                           	
  2432  0DE2                     l774:	
  2433                           	line	86
  2434                           	
  2435  0DE2                     l10581:	
  2436                           ;Bluetooth.c: 86: TXREG = Byte;
  2437  0DE2  0852               	movf	(writeByte@Byte),w
  2438  0DE3  0099               	movwf	(25)	;volatile
  2439                           	line	87
  2440                           	
  2441  0DE4                     l775:	
  2442  0DE4  0008               	return
  2443                           	opt stack 0
  2444                           GLOBAL	__end_of_writeByte
  2445  0DE5                     	__end_of_writeByte:
  2446 ;; =============== function _writeByte ends ============
  2447                           
  2448                           	signat	_writeByte,4216
  2449                           	global	_initUSART
  2450                           psect	text1082,local,class=CODE,delta=2
  2451                           global __ptext1082
  2452  0E06                     __ptext1082:
  2453                           
  2454 ;; *************** function _initUSART *****************
  2455 ;; Defined at:
  2456 ;;		line 16 in file "Bluetooth.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;		None               void
  2463 ;; Registers used:
  2464 ;;		wreg
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2470 ;;      Params:         0       0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0
  2473 ;;      Totals:         0       0       0       0       0
  2474 ;;Total ram usage:        0 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    5
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           psect	text1082
  2484                           	file	"Bluetooth.c"
  2485                           	line	16
  2486                           	global	__size_of_initUSART
  2487  0012                     	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  2488                           	
  2489  0E06                     _initUSART:	
  2490                           	opt	stack 2
  2491                           ; Regs used in _initUSART: [wreg]
  2492                           	line	18
  2493                           	
  2494  0E06                     l10569:	
  2495                           ;Bluetooth.c: 18: TRISC6 = 0;
  2496  0E06  1683               	bsf	status, 5	;RP0=1, select bank1
  2497  0E07  1303               	bcf	status, 6	;RP1=0, select bank1
  2498  0E08  1307               	bcf	(1086/8)^080h,(1086)&7
  2499                           	line	21
  2500                           ;Bluetooth.c: 21: TRISC7 = 1;
  2501  0E09  1787               	bsf	(1087/8)^080h,(1087)&7
  2502                           	line	36
  2503                           	
  2504  0E0A                     l10571:	
  2505                           ;Bluetooth.c: 36: RCSTA = 0x90;
  2506  0E0A  3090               	movlw	(090h)
  2507  0E0B  1283               	bcf	status, 5	;RP0=0, select bank0
  2508  0E0C  1303               	bcf	status, 6	;RP1=0, select bank0
  2509  0E0D  0098               	movwf	(24)	;volatile
  2510                           	line	50
  2511                           ;Bluetooth.c: 50: TXSTA = 0x24;
  2512  0E0E  3024               	movlw	(024h)
  2513  0E0F  1683               	bsf	status, 5	;RP0=1, select bank1
  2514  0E10  1303               	bcf	status, 6	;RP1=0, select bank1
  2515  0E11  0098               	movwf	(152)^080h	;volatile
  2516                           	line	58
  2517                           ;Bluetooth.c: 58: SPBRG = 129;
  2518  0E12  3081               	movlw	(081h)
  2519  0E13  0099               	movwf	(153)^080h	;volatile
  2520                           	line	63
  2521                           	
  2522  0E14                     l10573:	
  2523                           ;Bluetooth.c: 63: GIE = 1;
  2524  0E14  178B               	bsf	(95/8),(95)&7
  2525                           	line	65
  2526                           	
  2527  0E15                     l10575:	
  2528                           ;Bluetooth.c: 65: PEIE = 1;
  2529  0E15  170B               	bsf	(94/8),(94)&7
  2530                           	line	67
  2531                           	
  2532  0E16                     l10577:	
  2533                           ;Bluetooth.c: 67: RCIE = 1;
  2534  0E16  168C               	bsf	(1125/8)^080h,(1125)&7
  2535                           	line	69
  2536                           	
  2537  0E17                     l769:	
  2538  0E17  0008               	return
  2539                           	opt stack 0
  2540                           GLOBAL	__end_of_initUSART
  2541  0E18                     	__end_of_initUSART:
  2542 ;; =============== function _initUSART ends ============
  2543                           
  2544                           	signat	_initUSART,88
  2545                           	global	_isr
  2546                           psect	text1083,local,class=CODE,delta=2
  2547                           global __ptext1083
  2548  0EB8                     __ptext1083:
  2549                           
  2550 ;; *************** function _isr *****************
  2551 ;; Defined at:
  2552 ;;		line 42 in file "main.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;		None               void
  2559 ;; Registers used:
  2560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2566 ;;      Params:         0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0
  2568 ;;      Temps:          0       4       0       0       0
  2569 ;;      Totals:         0       4       0       0       0
  2570 ;;Total ram usage:        4 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    4
  2573 ;; This function calls:
  2574 ;;		_getPacket
  2575 ;; This function is called by:
  2576 ;;		Interrupt level 1
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           psect	text1083
  2580                           	file	"main.c"
  2581                           	line	42
  2582                           	global	__size_of_isr
  2583  0027                     	__size_of_isr	equ	__end_of_isr-_isr
  2584                           	
  2585  0EB8                     _isr:	
  2586                           	opt	stack 1
  2587                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2588                           psect	intentry,class=CODE,delta=2
  2589                           global __pintentry
  2590  0004                     __pintentry:
  2591                           global interrupt_function
  2592  0004                     interrupt_function:
  2593                           	global saved_w
  2594  007E                     	saved_w	set	btemp+0
  2595  0004  00FE               	movwf	saved_w
  2596  0005  0E03               	swapf	status,w
  2597  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  2598  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  2599  0008  00CE               	movwf	(??_isr+0)
  2600  0009  0804               	movf	fsr0,w
  2601  000A  00CF               	movwf	(??_isr+1)
  2602  000B  080A               	movf	pclath,w
  2603  000C  00D0               	movwf	(??_isr+2)
  2604  000D  087F               	movf	btemp+1,w
  2605  000E  00D1               	movwf	(??_isr+3)
  2606  000F  120A  158A  2EB8   	ljmp	_isr
  2607                           psect	text1083
  2608                           	line	43
  2609                           	
  2610  0EB8                     i1l10787:	
  2611                           ;main.c: 43: if(RCIF && RCIE){
  2612  0EB8  1E8C               	btfss	(101/8),(101)&7
  2613  0EB9  2EBB               	goto	u350_21
  2614  0EBA  2EBC               	goto	u350_20
  2615  0EBB                     u350_21:
  2616  0EBB  2ED2               	goto	i1l3992
  2617  0EBC                     u350_20:
  2618                           	
  2619  0EBC                     i1l10789:	
  2620  0EBC  1683               	bsf	status, 5	;RP0=1, select bank1
  2621  0EBD  1303               	bcf	status, 6	;RP1=0, select bank1
  2622  0EBE  1E8C               	btfss	(1125/8)^080h,(1125)&7
  2623  0EBF  2EC1               	goto	u351_21
  2624  0EC0  2EC2               	goto	u351_20
  2625  0EC1                     u351_21:
  2626  0EC1  2ED2               	goto	i1l3992
  2627  0EC2                     u351_20:
  2628                           	line	44
  2629                           	
  2630  0EC2                     i1l10791:	
  2631                           ;main.c: 44: if(OERR){
  2632  0EC2  1283               	bcf	status, 5	;RP0=0, select bank0
  2633  0EC3  1303               	bcf	status, 6	;RP1=0, select bank0
  2634  0EC4  1C98               	btfss	(193/8),(193)&7
  2635  0EC5  2EC7               	goto	u352_21
  2636  0EC6  2EC8               	goto	u352_20
  2637  0EC7                     u352_21:
  2638  0EC7  2ECB               	goto	i1l10795
  2639  0EC8                     u352_20:
  2640                           	line	45
  2641                           	
  2642  0EC8                     i1l10793:	
  2643                           ;main.c: 45: CREN = 0;
  2644  0EC8  1218               	bcf	(196/8),(196)&7
  2645                           	line	46
  2646                           ;main.c: 46: CREN = 1;
  2647  0EC9  1618               	bsf	(196/8),(196)&7
  2648                           	line	47
  2649                           ;main.c: 47: }else{
  2650  0ECA  2ED2               	goto	i1l3992
  2651                           	
  2652  0ECB                     i1l3990:	
  2653                           	line	48
  2654                           	
  2655  0ECB                     i1l10795:	
  2656                           ;main.c: 48: getPacket();
  2657  0ECB  120A  118A  2683   	fcall	_getPacket
              120A  158A         
  2658  0ED0  2ED2               	goto	i1l3992
  2659                           	line	49
  2660                           	
  2661  0ED1                     i1l3991:	
  2662  0ED1  2ED2               	goto	i1l3992
  2663                           	line	50
  2664                           	
  2665  0ED2                     i1l3989:	
  2666                           	line	51
  2667                           	
  2668  0ED2                     i1l3992:	
  2669  0ED2  1283               	bcf	status, 5	;RP0=0, select bank0
  2670  0ED3  1303               	bcf	status, 6	;RP1=0, select bank0
  2671  0ED4  0851               	movf	(??_isr+3),w
  2672  0ED5  00FF               	movwf	btemp+1
  2673  0ED6  0850               	movf	(??_isr+2),w
  2674  0ED7  008A               	movwf	pclath
  2675  0ED8  084F               	movf	(??_isr+1),w
  2676  0ED9  0084               	movwf	fsr0
  2677  0EDA  0E4E               	swapf	(??_isr+0)^00h,w
  2678  0EDB  0083               	movwf	status
  2679  0EDC  0EFE               	swapf	saved_w,f
  2680  0EDD  0E7E               	swapf	saved_w,w
  2681  0EDE  0009               	retfie
  2682                           	opt stack 0
  2683                           GLOBAL	__end_of_isr
  2684  0EDF                     	__end_of_isr:
  2685 ;; =============== function _isr ends ============
  2686                           
  2687                           	signat	_isr,88
  2688                           	global	_getPacket
  2689                           psect	text1084,local,class=CODE,delta=2
  2690                           global __ptext1084
  2691  0683                     __ptext1084:
  2692                           
  2693 ;; *************** function _getPacket *****************
  2694 ;; Defined at:
  2695 ;;		line 89 in file "main.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;		None
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;		None               void
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         0       0       0       0       0
  2710 ;;      Locals:         0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0
  2712 ;;      Totals:         0       0       0       0       0
  2713 ;;Total ram usage:        0 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    3
  2716 ;; This function calls:
  2717 ;;		_readString
  2718 ;;		i1_eeprom_write
  2719 ;;		_parsePacket
  2720 ;;		_validatePacket
  2721 ;;		_eeprom_read
  2722 ;;		_readCommands
  2723 ;;		_writeCommands
  2724 ;; This function is called by:
  2725 ;;		_isr
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           psect	text1084
  2729                           	file	"main.c"
  2730                           	line	89
  2731                           	global	__size_of_getPacket
  2732  004B                     	__size_of_getPacket	equ	__end_of_getPacket-_getPacket
  2733                           	
  2734  0683                     _getPacket:	
  2735                           	opt	stack 1
  2736                           ; Regs used in _getPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2737                           	line	93
  2738                           	
  2739  0683                     i1l10797:	
  2740                           ;main.c: 93: readString(arrStore);
  2741  0683  30A0               	movlw	(_arrStore)&0ffh
  2742  0684  120A  118A  26CE   	fcall	_readString
              120A  118A         
  2743                           	line	94
  2744                           	
  2745  0689                     i1l10799:	
  2746                           ;main.c: 94: CREN = 0;
  2747  0689  1283               	bcf	status, 5	;RP0=0, select bank0
  2748  068A  1303               	bcf	status, 6	;RP1=0, select bank0
  2749  068B  1218               	bcf	(196/8),(196)&7
  2750                           	line	96
  2751                           ;main.c: 96: eeprom_write(calcCSByteAddr,0x00);
  2752  068C  01FA               	clrf	(?i1_eeprom_write)
  2753  068D  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2754  068E  0084               	movwf	fsr0
  2755  068F  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2756  0694  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  2757                           	line	98
  2758                           ;main.c: 98: parsePacket(arrStore);
  2759  0699  30A0               	movlw	(_arrStore)&0ffh
  2760  069A  120A  118A  2190   	fcall	_parsePacket
              120A  118A         
  2761                           	line	101
  2762                           	
  2763  069F                     i1l10801:	
  2764                           ;main.c: 101: if(validatePacket()){
  2765  069F  120A  118A  2632   	fcall	_validatePacket
              120A  118A         
  2766  06A4  1283               	bcf	status, 5	;RP0=0, select bank0
  2767  06A5  1303               	bcf	status, 6	;RP1=0, select bank0
  2768  06A6  0847               	movf	(1+(?_validatePacket)),w
  2769  06A7  0446               	iorwf	(0+(?_validatePacket)),w
  2770  06A8  1903               	skipnz
  2771  06A9  2EAB               	goto	u353_21
  2772  06AA  2EAC               	goto	u353_20
  2773  06AB                     u353_21:
  2774  06AB  2ECA               	goto	i1l4006
  2775  06AC                     u353_20:
  2776                           	line	104
  2777                           	
  2778  06AC                     i1l10803:	
  2779                           ;main.c: 104: if(eeprom_read(rwByteAddr) == 0){
  2780  06AC  3053               	movlw	(_rwByteAddr-__stringbase)
  2781  06AD  0084               	movwf	fsr0
  2782  06AE  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2783  06B3  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  2784  06B8  3800               	iorlw	0
  2785  06B9  1D03               	skipz
  2786  06BA  2EBC               	goto	u354_21
  2787  06BB  2EBD               	goto	u354_20
  2788  06BC                     u354_21:
  2789  06BC  2EC3               	goto	i1l10807
  2790  06BD                     u354_20:
  2791                           	line	105
  2792                           	
  2793  06BD                     i1l10805:	
  2794                           ;main.c: 105: readCommands();
  2795  06BD  120A  118A  2015   	fcall	_readCommands
              120A  118A         
  2796                           	line	107
  2797                           ;main.c: 107: }else{
  2798  06C2  2ECA               	goto	i1l4006
  2799                           	
  2800  06C3                     i1l4004:	
  2801                           	line	108
  2802                           	
  2803  06C3                     i1l10807:	
  2804                           ;main.c: 108: writeCommands();
  2805  06C3  120A  118A  27FF   	fcall	_writeCommands
              120A  118A         
  2806  06C8  2ECA               	goto	i1l4006
  2807                           	line	109
  2808                           	
  2809  06C9                     i1l4005:	
  2810                           	line	111
  2811                           ;main.c: 109: }
  2812                           ;main.c: 111: }else{
  2813  06C9  2ECA               	goto	i1l4006
  2814                           	
  2815  06CA                     i1l4003:	
  2816                           	line	114
  2817                           	
  2818  06CA                     i1l4006:	
  2819                           	line	115
  2820                           ;main.c: 114: }
  2821                           ;main.c: 115: CREN = 1;
  2822  06CA  1283               	bcf	status, 5	;RP0=0, select bank0
  2823  06CB  1303               	bcf	status, 6	;RP1=0, select bank0
  2824  06CC  1618               	bsf	(196/8),(196)&7
  2825                           	line	116
  2826                           	
  2827  06CD                     i1l4007:	
  2828  06CD  0008               	return
  2829                           	opt stack 0
  2830                           GLOBAL	__end_of_getPacket
  2831  06CE                     	__end_of_getPacket:
  2832 ;; =============== function _getPacket ends ============
  2833                           
  2834                           	signat	_getPacket,88
  2835                           	global	_readCommands
  2836                           psect	text1085,local,class=CODE,delta=2
  2837                           global __ptext1085
  2838  0015                     __ptext1085:
  2839                           
  2840 ;; *************** function _readCommands *****************
  2841 ;; Defined at:
  2842 ;;		line 12 in file "Command.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;		None               void
  2849 ;; Registers used:
  2850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2856 ;;      Params:         0       0       0       0       0
  2857 ;;      Locals:         0       0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0
  2859 ;;      Totals:         0       0       0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    2
  2863 ;; This function calls:
  2864 ;;		i1_writeByte
  2865 ;;		i1_writeString
  2866 ;;		_eeprom_read
  2867 ;; This function is called by:
  2868 ;;		_getPacket
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           psect	text1085
  2872                           	file	"Command.c"
  2873                           	line	12
  2874                           	global	__size_of_readCommands
  2875  017B                     	__size_of_readCommands	equ	__end_of_readCommands-_readCommands
  2876                           	
  2877  0015                     _readCommands:	
  2878                           	opt	stack 1
  2879                           ; Regs used in _readCommands: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2880                           	line	14
  2881                           	
  2882  0015                     i1l10809:	
  2883                           ;Command.c: 14: switch(eeprom_read(cmdByteAddr)){
  2884  0015  296A               	goto	i1l10843
  2885                           	line	16
  2886                           ;Command.c: 16: case 0:
  2887                           	
  2888  0016                     i1l4779:	
  2889                           	line	17
  2890                           	
  2891  0016                     i1l10811:	
  2892                           ;Command.c: 17: writeByte(userStartByte);
  2893  0016  3060               	movlw	(_userStartByte-__stringbase)
  2894  0017  0084               	movwf	fsr0
  2895  0018  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2896  001D  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  2897                           	line	18
  2898                           ;Command.c: 18: writeByte(tempValHAddr);
  2899  0022  305C               	movlw	(_tempValHAddr-__stringbase)
  2900  0023  0084               	movwf	fsr0
  2901  0024  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2902  0029  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  2903                           	line	19
  2904                           ;Command.c: 19: writeByte(tempValLAddr);
  2905  002E  305D               	movlw	(_tempValLAddr-__stringbase)
  2906  002F  0084               	movwf	fsr0
  2907  0030  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2908  0035  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  2909                           	line	20
  2910                           ;Command.c: 20: break;
  2911  003A  298F               	goto	i1l4789
  2912                           	line	22
  2913                           ;Command.c: 22: case 1:
  2914                           	
  2915  003B                     i1l4781:	
  2916                           	line	23
  2917                           	
  2918  003B                     i1l10813:	
  2919                           ;Command.c: 23: writeByte(userStartByte);
  2920  003B  3060               	movlw	(_userStartByte-__stringbase)
  2921  003C  0084               	movwf	fsr0
  2922  003D  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2923  0042  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  2924                           	line	24
  2925                           ;Command.c: 24: writeByte(tempHiAddr);
  2926  0047  3057               	movlw	(_tempHiAddr-__stringbase)
  2927  0048  0084               	movwf	fsr0
  2928  0049  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2929  004E  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  2930                           	line	25
  2931                           ;Command.c: 25: break;
  2932  0053  298F               	goto	i1l4789
  2933                           	line	27
  2934                           ;Command.c: 27: case 2:
  2935                           	
  2936  0054                     i1l4782:	
  2937                           	line	28
  2938                           	
  2939  0054                     i1l10815:	
  2940                           ;Command.c: 28: writeByte(userStartByte);
  2941  0054  3060               	movlw	(_userStartByte-__stringbase)
  2942  0055  0084               	movwf	fsr0
  2943  0056  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2944  005B  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  2945                           	line	29
  2946                           ;Command.c: 29: writeByte(tempLoAddr);
  2947  0060  3058               	movlw	(_tempLoAddr-__stringbase)
  2948  0061  0084               	movwf	fsr0
  2949  0062  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2950  0067  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  2951                           	line	30
  2952                           ;Command.c: 30: break;
  2953  006C  298F               	goto	i1l4789
  2954                           	line	32
  2955                           ;Command.c: 32: case 3:
  2956                           	
  2957  006D                     i1l4783:	
  2958                           	line	33
  2959                           	
  2960  006D                     i1l10817:	
  2961                           ;Command.c: 33: writeByte(userStartByte);
  2962  006D  3060               	movlw	(_userStartByte-__stringbase)
  2963  006E  0084               	movwf	fsr0
  2964  006F  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2965  0074  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  2966                           	line	34
  2967                           ;Command.c: 34: writeByte(humValHAddr);
  2968  0079  304B               	movlw	(_humValHAddr-__stringbase)
  2969  007A  0084               	movwf	fsr0
  2970  007B  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2971  0080  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  2972                           	line	35
  2973                           ;Command.c: 35: writeByte(humValLAddr);
  2974  0085  304C               	movlw	(_humValLAddr-__stringbase)
  2975  0086  0084               	movwf	fsr0
  2976  0087  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2977  008C  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  2978                           	line	36
  2979                           ;Command.c: 36: break;
  2980  0091  298F               	goto	i1l4789
  2981                           	line	38
  2982                           ;Command.c: 38: case 4:
  2983                           	
  2984  0092                     i1l4784:	
  2985                           	line	39
  2986                           	
  2987  0092                     i1l10819:	
  2988                           ;Command.c: 39: writeByte(userStartByte);
  2989  0092  3060               	movlw	(_userStartByte-__stringbase)
  2990  0093  0084               	movwf	fsr0
  2991  0094  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2992  0099  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  2993                           	line	40
  2994                           ;Command.c: 40: writeByte(humHiAddr);
  2995  009E  3047               	movlw	(_humHiAddr-__stringbase)
  2996  009F  0084               	movwf	fsr0
  2997  00A0  120A  118A  2500   	fcall	stringdir
              120A  118A         
  2998  00A5  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  2999                           	line	41
  3000                           ;Command.c: 41: break;
  3001  00AA  298F               	goto	i1l4789
  3002                           	line	43
  3003                           ;Command.c: 43: case 5:
  3004                           	
  3005  00AB                     i1l4785:	
  3006                           	line	44
  3007                           	
  3008  00AB                     i1l10821:	
  3009                           ;Command.c: 44: writeByte(userStartByte);
  3010  00AB  3060               	movlw	(_userStartByte-__stringbase)
  3011  00AC  0084               	movwf	fsr0
  3012  00AD  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3013  00B2  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3014                           	line	45
  3015                           ;Command.c: 45: writeByte(humLoAddr);
  3016  00B7  3048               	movlw	(_humLoAddr-__stringbase)
  3017  00B8  0084               	movwf	fsr0
  3018  00B9  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3019  00BE  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3020                           	line	46
  3021                           ;Command.c: 46: break;
  3022  00C3  298F               	goto	i1l4789
  3023                           	line	48
  3024                           ;Command.c: 48: case 6:
  3025                           	
  3026  00C4                     i1l4786:	
  3027                           	line	49
  3028                           	
  3029  00C4                     i1l10823:	
  3030                           ;Command.c: 49: writeByte(userStartByte);
  3031  00C4  3060               	movlw	(_userStartByte-__stringbase)
  3032  00C5  0084               	movwf	fsr0
  3033  00C6  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3034  00CB  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3035                           	line	50
  3036                           	
  3037  00D0                     i1l10825:	
  3038                           ;Command.c: 50: writeByte('R');
  3039  00D0  3052               	movlw	(052h)
  3040  00D1  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3041                           	line	51
  3042                           	
  3043  00D6                     i1l10827:	
  3044                           ;Command.c: 51: writeByte('T');
  3045  00D6  3054               	movlw	(054h)
  3046  00D7  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3047                           	line	52
  3048                           	
  3049  00DC                     i1l10829:	
  3050                           ;Command.c: 52: writeByte('C');
  3051  00DC  3043               	movlw	(043h)
  3052  00DD  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3053                           	line	53
  3054                           ;Command.c: 53: break;
  3055  00E2  298F               	goto	i1l4789
  3056                           	line	55
  3057                           ;Command.c: 55: case 7:
  3058                           	
  3059  00E3                     i1l4787:	
  3060                           	line	56
  3061                           	
  3062  00E3                     i1l10831:	
  3063                           ;Command.c: 56: writeByte(userStartByte);
  3064  00E3  3060               	movlw	(_userStartByte-__stringbase)
  3065  00E4  0084               	movwf	fsr0
  3066  00E5  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3067  00EA  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3068                           	line	57
  3069                           ;Command.c: 57: writeByte(tempValHAddr);
  3070  00EF  305C               	movlw	(_tempValHAddr-__stringbase)
  3071  00F0  0084               	movwf	fsr0
  3072  00F1  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3073  00F6  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3074                           	line	58
  3075                           ;Command.c: 58: writeByte(tempValLAddr);
  3076  00FB  305D               	movlw	(_tempValLAddr-__stringbase)
  3077  00FC  0084               	movwf	fsr0
  3078  00FD  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3079  0102  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3080                           	line	59
  3081                           ;Command.c: 59: writeByte(tempHiAddr);
  3082  0107  3057               	movlw	(_tempHiAddr-__stringbase)
  3083  0108  0084               	movwf	fsr0
  3084  0109  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3085  010E  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3086                           	line	60
  3087                           ;Command.c: 60: writeByte(tempLoAddr);
  3088  0113  3058               	movlw	(_tempLoAddr-__stringbase)
  3089  0114  0084               	movwf	fsr0
  3090  0115  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3091  011A  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3092                           	line	61
  3093                           ;Command.c: 61: writeByte(humValHAddr);
  3094  011F  304B               	movlw	(_humValHAddr-__stringbase)
  3095  0120  0084               	movwf	fsr0
  3096  0121  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3097  0126  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3098                           	line	62
  3099                           ;Command.c: 62: writeByte(humValLAddr);
  3100  012B  304C               	movlw	(_humValLAddr-__stringbase)
  3101  012C  0084               	movwf	fsr0
  3102  012D  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3103  0132  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3104                           	line	63
  3105                           ;Command.c: 63: writeByte(humHiAddr);
  3106  0137  3047               	movlw	(_humHiAddr-__stringbase)
  3107  0138  0084               	movwf	fsr0
  3108  0139  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3109  013E  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3110                           	line	64
  3111                           ;Command.c: 64: writeByte(humLoAddr);
  3112  0143  3048               	movlw	(_humLoAddr-__stringbase)
  3113  0144  0084               	movwf	fsr0
  3114  0145  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3115  014A  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3116                           	line	65
  3117                           	
  3118  014F                     i1l10833:	
  3119                           ;Command.c: 65: writeByte('R');
  3120  014F  3052               	movlw	(052h)
  3121  0150  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3122                           	line	66
  3123                           	
  3124  0155                     i1l10835:	
  3125                           ;Command.c: 66: writeByte('T');
  3126  0155  3054               	movlw	(054h)
  3127  0156  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3128                           	line	67
  3129                           	
  3130  015B                     i1l10837:	
  3131                           ;Command.c: 67: writeByte('C');
  3132  015B  3043               	movlw	(043h)
  3133  015C  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3134                           	line	68
  3135                           ;Command.c: 68: break;
  3136  0161  298F               	goto	i1l4789
  3137                           	line	70
  3138                           ;Command.c: 70: default:
  3139                           	
  3140  0162                     i1l4788:	
  3141                           	line	71
  3142                           	
  3143  0162                     i1l10839:	
  3144                           ;Command.c: 71: writeString(readError);
  3145  0162  3029               	movlw	(_readError)&0ffh
  3146  0163  120A  118A  27D0   	fcall	i1_writeString
              120A  118A         
  3147                           	line	72
  3148                           ;Command.c: 72: break;
  3149  0168  298F               	goto	i1l4789
  3150                           	line	73
  3151                           	
  3152  0169                     i1l10841:	
  3153                           ;Command.c: 73: }
  3154  0169  298F               	goto	i1l4789
  3155                           	line	14
  3156                           	
  3157  016A                     i1l4778:	
  3158                           	
  3159  016A                     i1l10843:	
  3160  016A  3042               	movlw	(_cmdByteAddr-__stringbase)
  3161  016B  0084               	movwf	fsr0
  3162  016C  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3163  0171  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  3164                           	; Switch size 1, requested type "space"
  3165                           ; Number of cases is 8, Range of values is 0 to 7
  3166                           ; switch strategies available:
  3167                           ; Name         Instructions Cycles
  3168                           ; simple_byte           25    13 (average)
  3169                           ; direct_byte           32     8 (fixed)
  3170                           ; jumptable            260     6 (fixed)
  3171                           ; rangetable            12     6 (fixed)
  3172                           ; spacedrange           22     9 (fixed)
  3173                           ; locatedrange           8     3 (fixed)
  3174                           ;	Chosen strategy is simple_byte
  3175                           
  3176                           	opt asmopt_off
  3177  0176  3A00               	xorlw	0^0	; case 0
  3178  0177  1903               	skipnz
  3179  0178  2816               	goto	i1l10811
  3180  0179  3A01               	xorlw	1^0	; case 1
  3181  017A  1903               	skipnz
  3182  017B  283B               	goto	i1l10813
  3183  017C  3A03               	xorlw	2^1	; case 2
  3184  017D  1903               	skipnz
  3185  017E  2854               	goto	i1l10815
  3186  017F  3A01               	xorlw	3^2	; case 3
  3187  0180  1903               	skipnz
  3188  0181  286D               	goto	i1l10817
  3189  0182  3A07               	xorlw	4^3	; case 4
  3190  0183  1903               	skipnz
  3191  0184  2892               	goto	i1l10819
  3192  0185  3A01               	xorlw	5^4	; case 5
  3193  0186  1903               	skipnz
  3194  0187  28AB               	goto	i1l10821
  3195  0188  3A03               	xorlw	6^5	; case 6
  3196  0189  1903               	skipnz
  3197  018A  28C4               	goto	i1l10823
  3198  018B  3A01               	xorlw	7^6	; case 7
  3199  018C  1903               	skipnz
  3200  018D  28E3               	goto	i1l10831
  3201  018E  2962               	goto	i1l10839
  3202                           	opt asmopt_on
  3203                           
  3204                           	line	73
  3205                           	
  3206  018F                     i1l4780:	
  3207                           	line	76
  3208                           	
  3209  018F                     i1l4789:	
  3210  018F  0008               	return
  3211                           	opt stack 0
  3212                           GLOBAL	__end_of_readCommands
  3213  0190                     	__end_of_readCommands:
  3214 ;; =============== function _readCommands ends ============
  3215                           
  3216                           	signat	_readCommands,88
  3217                           	global	_validatePacket
  3218                           psect	text1086,local,class=CODE,delta=2
  3219                           global __ptext1086
  3220  0632                     __ptext1086:
  3221                           
  3222 ;; *************** function _validatePacket *****************
  3223 ;; Defined at:
  3224 ;;		line 236 in file "Packet.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  2    4[BANK0 ] int 
  3231 ;; Registers used:
  3232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3238 ;;      Params:         0       2       0       0       0
  3239 ;;      Locals:         0       0       0       0       0
  3240 ;;      Temps:          0       0       0       0       0
  3241 ;;      Totals:         0       2       0       0       0
  3242 ;;Total ram usage:        2 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    2
  3245 ;; This function calls:
  3246 ;;		_checkStartByte
  3247 ;;		_checkRWByte
  3248 ;;		_checkCMDByte
  3249 ;;		_checkDataFrames
  3250 ;;		_addDataToCheckSum
  3251 ;;		_checkCS
  3252 ;; This function is called by:
  3253 ;;		_getPacket
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           psect	text1086
  3257                           	file	"Packet.c"
  3258                           	line	236
  3259                           	global	__size_of_validatePacket
  3260  0051                     	__size_of_validatePacket	equ	__end_of_validatePacket-_validatePacket
  3261                           	
  3262  0632                     _validatePacket:	
  3263                           	opt	stack 1
  3264                           ; Regs used in _validatePacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3265                           	line	238
  3266                           	
  3267  0632                     i1l10753:	
  3268                           ;Packet.c: 238: if(checkStartByte() && checkRWByte() && checkCMDByte() && checkDataFrame
                                 s()){
  3269  0632  120A  118A  25CE   	fcall	_checkStartByte
              120A  118A         
  3270  0637  1283               	bcf	status, 5	;RP0=0, select bank0
  3271  0638  1303               	bcf	status, 6	;RP1=0, select bank0
  3272  0639  0843               	movf	(1+(?_checkStartByte)),w
  3273  063A  0442               	iorwf	(0+(?_checkStartByte)),w
  3274  063B  1903               	skipnz
  3275  063C  2E3E               	goto	u344_21
  3276  063D  2E3F               	goto	u344_20
  3277  063E                     u344_21:
  3278  063E  2E7D               	goto	i1l10767
  3279  063F                     u344_20:
  3280                           	
  3281  063F                     i1l10755:	
  3282  063F  120A  118A  2446   	fcall	_checkRWByte
              120A  118A         
  3283  0644  1283               	bcf	status, 5	;RP0=0, select bank0
  3284  0645  1303               	bcf	status, 6	;RP1=0, select bank0
  3285  0646  0843               	movf	(1+(?_checkRWByte)),w
  3286  0647  0442               	iorwf	(0+(?_checkRWByte)),w
  3287  0648  1903               	skipnz
  3288  0649  2E4B               	goto	u345_21
  3289  064A  2E4C               	goto	u345_20
  3290  064B                     u345_21:
  3291  064B  2E7D               	goto	i1l10767
  3292  064C                     u345_20:
  3293                           	
  3294  064C                     i1l10757:	
  3295  064C  120A  118A  23D6   	fcall	_checkCMDByte
              120A  118A         
  3296  0651  1283               	bcf	status, 5	;RP0=0, select bank0
  3297  0652  1303               	bcf	status, 6	;RP1=0, select bank0
  3298  0653  0843               	movf	(1+(?_checkCMDByte)),w
  3299  0654  0442               	iorwf	(0+(?_checkCMDByte)),w
  3300  0655  1903               	skipnz
  3301  0656  2E58               	goto	u346_21
  3302  0657  2E59               	goto	u346_20
  3303  0658                     u346_21:
  3304  0658  2E7D               	goto	i1l10767
  3305  0659                     u346_20:
  3306                           	
  3307  0659                     i1l10759:	
  3308  0659  120A  118A  22C5   	fcall	_checkDataFrames
              120A  118A         
  3309  065E  0873               	movf	(1+(?_checkDataFrames)),w
  3310  065F  0472               	iorwf	(0+(?_checkDataFrames)),w
  3311  0660  1903               	skipnz
  3312  0661  2E63               	goto	u347_21
  3313  0662  2E64               	goto	u347_20
  3314  0663                     u347_21:
  3315  0663  2E7D               	goto	i1l10767
  3316  0664                     u347_20:
  3317                           	line	240
  3318                           	
  3319  0664                     i1l10761:	
  3320                           ;Packet.c: 240: addDataToCheckSum();
  3321  0664  120A  118A  235F   	fcall	_addDataToCheckSum
              120A  118A         
  3322                           	line	242
  3323                           ;Packet.c: 242: if(checkCS())
  3324  0669  120A  158A  27CC   	fcall	_checkCS
              120A  118A         
  3325  066E  0873               	movf	(1+(?_checkCS)),w
  3326  066F  0472               	iorwf	(0+(?_checkCS)),w
  3327  0670  1903               	skipnz
  3328  0671  2E73               	goto	u348_21
  3329  0672  2E74               	goto	u348_20
  3330  0673                     u348_21:
  3331  0673  2E7D               	goto	i1l10767
  3332  0674                     u348_20:
  3333                           	line	244
  3334                           	
  3335  0674                     i1l10763:	
  3336                           ;Packet.c: 244: return 1;
  3337  0674  3001               	movlw	low(01h)
  3338  0675  1283               	bcf	status, 5	;RP0=0, select bank0
  3339  0676  1303               	bcf	status, 6	;RP1=0, select bank0
  3340  0677  00C6               	movwf	(?_validatePacket)
  3341  0678  3000               	movlw	high(01h)
  3342  0679  00C7               	movwf	((?_validatePacket))+1
  3343  067A  2E82               	goto	i1l1622
  3344                           	
  3345  067B                     i1l10765:	
  3346  067B  2E82               	goto	i1l1622
  3347                           	
  3348  067C                     i1l1621:	
  3349  067C  2E7D               	goto	i1l10767
  3350                           	line	245
  3351                           	
  3352  067D                     i1l1620:	
  3353                           	line	247
  3354                           	
  3355  067D                     i1l10767:	
  3356                           ;Packet.c: 245: }
  3357                           ;Packet.c: 247: return 0;
  3358  067D  1283               	bcf	status, 5	;RP0=0, select bank0
  3359  067E  1303               	bcf	status, 6	;RP1=0, select bank0
  3360  067F  01C6               	clrf	(?_validatePacket)
  3361  0680  01C7               	clrf	(?_validatePacket+1)
  3362  0681  2E82               	goto	i1l1622
  3363                           	
  3364  0682                     i1l10769:	
  3365                           	line	249
  3366                           	
  3367  0682                     i1l1622:	
  3368  0682  0008               	return
  3369                           	opt stack 0
  3370                           GLOBAL	__end_of_validatePacket
  3371  0683                     	__end_of_validatePacket:
  3372 ;; =============== function _validatePacket ends ============
  3373                           
  3374                           	signat	_validatePacket,90
  3375                           	global	_parsePacket
  3376                           psect	text1087,local,class=CODE,delta=2
  3377                           global __ptext1087
  3378  0190                     __ptext1087:
  3379                           
  3380 ;; *************** function _parsePacket *****************
  3381 ;; Defined at:
  3382 ;;		line 114 in file "Packet.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  dataPacket      1    wreg     PTR unsigned char 
  3385 ;;		 -> arrStore(50), 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  dataPacket      1   11[BANK0 ] PTR unsigned char 
  3388 ;;		 -> arrStore(50), 
  3389 ;;  i               1   10[BANK0 ] unsigned char 
  3390 ;;  dataCounter     2    8[BANK0 ] int 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;		None               void
  3393 ;; Registers used:
  3394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3400 ;;      Params:         0       0       0       0       0
  3401 ;;      Locals:         0       4       0       0       0
  3402 ;;      Temps:          0       4       0       0       0
  3403 ;;      Totals:         0       8       0       0       0
  3404 ;;Total ram usage:        8 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    2
  3407 ;; This function calls:
  3408 ;;		_checkLength
  3409 ;;		_checkEven
  3410 ;;		_makeHexByte
  3411 ;;		i1_eeprom_write
  3412 ;;		i1_strlen
  3413 ;;		_eeprom_read
  3414 ;; This function is called by:
  3415 ;;		_getPacket
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           psect	text1087
  3419                           	file	"Packet.c"
  3420                           	line	114
  3421                           	global	__size_of_parsePacket
  3422  0135                     	__size_of_parsePacket	equ	__end_of_parsePacket-_parsePacket
  3423                           	
  3424  0190                     _parsePacket:	
  3425                           	opt	stack 1
  3426                           ; Regs used in _parsePacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3427                           ;parsePacket@dataPacket stored from wreg
  3428                           	line	116
  3429  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  3430  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  3431  0192  00CD               	movwf	(parsePacket@dataPacket)
  3432                           	
  3433  0193                     i1l10671:	
  3434                           ;Packet.c: 116: int dataCounter = 0;
  3435  0193  01CA               	clrf	(parsePacket@dataCounter)
  3436  0194  01CB               	clrf	(parsePacket@dataCounter+1)
  3437                           	line	119
  3438                           	
  3439  0195                     i1l10673:	
  3440                           ;Packet.c: 119: if (checkLength() && checkEven()) {
  3441  0195  120A  158A  2708   	fcall	_checkLength
              120A  118A         
  3442  019A  0873               	movf	(1+(?_checkLength)),w
  3443  019B  0472               	iorwf	(0+(?_checkLength)),w
  3444  019C  1903               	skipnz
  3445  019D  299F               	goto	u336_21
  3446  019E  29A0               	goto	u336_20
  3447  019F                     u336_21:
  3448  019F  2AC4               	goto	i1l1599
  3449  01A0                     u336_20:
  3450                           	
  3451  01A0                     i1l10675:	
  3452  01A0  120A  158A  2691   	fcall	_checkEven
              120A  118A         
  3453  01A5  0873               	movf	(1+(?_checkEven)),w
  3454  01A6  0472               	iorwf	(0+(?_checkEven)),w
  3455  01A7  1903               	skipnz
  3456  01A8  29AA               	goto	u337_21
  3457  01A9  29AB               	goto	u337_20
  3458  01AA                     u337_21:
  3459  01AA  2AC4               	goto	i1l1599
  3460  01AB                     u337_20:
  3461                           	line	122
  3462                           	
  3463  01AB                     i1l10677:	
  3464                           ;Packet.c: 122: eeprom_write(startByteAddr, makeHexByte(dataPacket[0], dataPacket[1]));
  3465  01AB  1283               	bcf	status, 5	;RP0=0, select bank0
  3466  01AC  1303               	bcf	status, 6	;RP1=0, select bank0
  3467  01AD  084D               	movf	(parsePacket@dataPacket),w
  3468  01AE  3E01               	addlw	01h
  3469  01AF  0084               	movwf	fsr0
  3470  01B0  1383               	bcf	status, 7	;select IRP bank0
  3471  01B1  0800               	movf	indf,w
  3472  01B2  00C6               	movwf	(??_parsePacket+0)+0
  3473  01B3  0846               	movf	(??_parsePacket+0)+0,w
  3474  01B4  00FD               	movwf	(?_makeHexByte)
  3475  01B5  084D               	movf	(parsePacket@dataPacket),w
  3476  01B6  0084               	movwf	fsr0
  3477  01B7  0800               	movf	indf,w
  3478  01B8  120A  158A  266C   	fcall	_makeHexByte
              120A  118A         
  3479  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  3480  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  3481  01BF  00C7               	movwf	(??_parsePacket+1)+0
  3482  01C0  0847               	movf	(??_parsePacket+1)+0,w
  3483  01C1  00FA               	movwf	(?i1_eeprom_write)
  3484  01C2  3054               	movlw	(_startByteAddr-__stringbase)
  3485  01C3  0084               	movwf	fsr0
  3486  01C4  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3487  01C9  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3488                           	line	124
  3489                           ;Packet.c: 124: eeprom_write(rwByteAddr, makeHexByte(dataPacket[2], dataPacket[3]));
  3490  01CE  1283               	bcf	status, 5	;RP0=0, select bank0
  3491  01CF  1303               	bcf	status, 6	;RP1=0, select bank0
  3492  01D0  084D               	movf	(parsePacket@dataPacket),w
  3493  01D1  3E03               	addlw	03h
  3494  01D2  0084               	movwf	fsr0
  3495  01D3  1383               	bcf	status, 7	;select IRP bank0
  3496  01D4  0800               	movf	indf,w
  3497  01D5  00C6               	movwf	(??_parsePacket+0)+0
  3498  01D6  0846               	movf	(??_parsePacket+0)+0,w
  3499  01D7  00FD               	movwf	(?_makeHexByte)
  3500  01D8  084D               	movf	(parsePacket@dataPacket),w
  3501  01D9  3E02               	addlw	02h
  3502  01DA  0084               	movwf	fsr0
  3503  01DB  0800               	movf	indf,w
  3504  01DC  120A  158A  266C   	fcall	_makeHexByte
              120A  118A         
  3505  01E1  1283               	bcf	status, 5	;RP0=0, select bank0
  3506  01E2  1303               	bcf	status, 6	;RP1=0, select bank0
  3507  01E3  00C7               	movwf	(??_parsePacket+1)+0
  3508  01E4  0847               	movf	(??_parsePacket+1)+0,w
  3509  01E5  00FA               	movwf	(?i1_eeprom_write)
  3510  01E6  3053               	movlw	(_rwByteAddr-__stringbase)
  3511  01E7  0084               	movwf	fsr0
  3512  01E8  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3513  01ED  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3514                           	line	126
  3515                           ;Packet.c: 126: eeprom_write(cmdByteAddr, makeHexByte(dataPacket[4], dataPacket[5]));
  3516  01F2  1283               	bcf	status, 5	;RP0=0, select bank0
  3517  01F3  1303               	bcf	status, 6	;RP1=0, select bank0
  3518  01F4  084D               	movf	(parsePacket@dataPacket),w
  3519  01F5  3E05               	addlw	05h
  3520  01F6  0084               	movwf	fsr0
  3521  01F7  1383               	bcf	status, 7	;select IRP bank0
  3522  01F8  0800               	movf	indf,w
  3523  01F9  00C6               	movwf	(??_parsePacket+0)+0
  3524  01FA  0846               	movf	(??_parsePacket+0)+0,w
  3525  01FB  00FD               	movwf	(?_makeHexByte)
  3526  01FC  084D               	movf	(parsePacket@dataPacket),w
  3527  01FD  3E04               	addlw	04h
  3528  01FE  0084               	movwf	fsr0
  3529  01FF  0800               	movf	indf,w
  3530  0200  120A  158A  266C   	fcall	_makeHexByte
              120A  118A         
  3531  0205  1283               	bcf	status, 5	;RP0=0, select bank0
  3532  0206  1303               	bcf	status, 6	;RP1=0, select bank0
  3533  0207  00C7               	movwf	(??_parsePacket+1)+0
  3534  0208  0847               	movf	(??_parsePacket+1)+0,w
  3535  0209  00FA               	movwf	(?i1_eeprom_write)
  3536  020A  3042               	movlw	(_cmdByteAddr-__stringbase)
  3537  020B  0084               	movwf	fsr0
  3538  020C  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3539  0211  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3540                           	line	128
  3541                           ;Packet.c: 128: eeprom_write(lenByteAddr, makeHexByte(dataPacket[6], dataPacket[7]));
  3542  0216  1283               	bcf	status, 5	;RP0=0, select bank0
  3543  0217  1303               	bcf	status, 6	;RP1=0, select bank0
  3544  0218  084D               	movf	(parsePacket@dataPacket),w
  3545  0219  3E07               	addlw	07h
  3546  021A  0084               	movwf	fsr0
  3547  021B  1383               	bcf	status, 7	;select IRP bank0
  3548  021C  0800               	movf	indf,w
  3549  021D  00C6               	movwf	(??_parsePacket+0)+0
  3550  021E  0846               	movf	(??_parsePacket+0)+0,w
  3551  021F  00FD               	movwf	(?_makeHexByte)
  3552  0220  084D               	movf	(parsePacket@dataPacket),w
  3553  0221  3E06               	addlw	06h
  3554  0222  0084               	movwf	fsr0
  3555  0223  0800               	movf	indf,w
  3556  0224  120A  158A  266C   	fcall	_makeHexByte
              120A  118A         
  3557  0229  1283               	bcf	status, 5	;RP0=0, select bank0
  3558  022A  1303               	bcf	status, 6	;RP1=0, select bank0
  3559  022B  00C7               	movwf	(??_parsePacket+1)+0
  3560  022C  0847               	movf	(??_parsePacket+1)+0,w
  3561  022D  00FA               	movwf	(?i1_eeprom_write)
  3562  022E  304D               	movlw	(_lenByteAddr-__stringbase)
  3563  022F  0084               	movwf	fsr0
  3564  0230  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3565  0235  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3566                           	line	130
  3567                           ;Packet.c: 130: eeprom_write(csByteAddr, makeHexByte(dataPacket[strlen(dataPacket) - 2],
                                  dataPacket[strlen(dataPacket) - 1]));
  3568  023A  1283               	bcf	status, 5	;RP0=0, select bank0
  3569  023B  1303               	bcf	status, 6	;RP1=0, select bank0
  3570  023C  084D               	movf	(parsePacket@dataPacket),w
  3571  023D  120A  158A  2768   	fcall	i1_strlen
              120A  118A         
  3572  0242  0870               	movf	(0+(?i1_strlen)),w
  3573  0243  3EFF               	addlw	0FFh
  3574  0244  1283               	bcf	status, 5	;RP0=0, select bank0
  3575  0245  1303               	bcf	status, 6	;RP1=0, select bank0
  3576  0246  074D               	addwf	(parsePacket@dataPacket),w
  3577  0247  00C6               	movwf	(??_parsePacket+0)+0
  3578  0248  0846               	movf	0+(??_parsePacket+0)+0,w
  3579  0249  0084               	movwf	fsr0
  3580  024A  1383               	bcf	status, 7	;select IRP bank0
  3581  024B  0800               	movf	indf,w
  3582  024C  00C7               	movwf	(??_parsePacket+1)+0
  3583  024D  0847               	movf	(??_parsePacket+1)+0,w
  3584  024E  00FD               	movwf	(?_makeHexByte)
  3585  024F  084D               	movf	(parsePacket@dataPacket),w
  3586  0250  120A  158A  2768   	fcall	i1_strlen
              120A  118A         
  3587  0255  0870               	movf	(0+(?i1_strlen)),w
  3588  0256  3EFE               	addlw	0FEh
  3589  0257  1283               	bcf	status, 5	;RP0=0, select bank0
  3590  0258  1303               	bcf	status, 6	;RP1=0, select bank0
  3591  0259  074D               	addwf	(parsePacket@dataPacket),w
  3592  025A  00C8               	movwf	(??_parsePacket+2)+0
  3593  025B  0848               	movf	0+(??_parsePacket+2)+0,w
  3594  025C  0084               	movwf	fsr0
  3595  025D  1383               	bcf	status, 7	;select IRP bank0
  3596  025E  0800               	movf	indf,w
  3597  025F  120A  158A  266C   	fcall	_makeHexByte
              120A  118A         
  3598  0264  1283               	bcf	status, 5	;RP0=0, select bank0
  3599  0265  1303               	bcf	status, 6	;RP1=0, select bank0
  3600  0266  00C9               	movwf	(??_parsePacket+3)+0
  3601  0267  0849               	movf	(??_parsePacket+3)+0,w
  3602  0268  00FA               	movwf	(?i1_eeprom_write)
  3603  0269  3043               	movlw	(_csByteAddr-__stringbase)
  3604  026A  0084               	movwf	fsr0
  3605  026B  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3606  0270  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3607                           	line	133
  3608                           	
  3609  0275                     i1l10679:	
  3610                           ;Packet.c: 133: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  3611  0275  1283               	bcf	status, 5	;RP0=0, select bank0
  3612  0276  1303               	bcf	status, 6	;RP1=0, select bank0
  3613  0277  01CC               	clrf	(parsePacket@i)
  3614  0278  2AAF               	goto	i1l10687
  3615                           	
  3616  0279                     i1l1597:	
  3617                           	line	134
  3618                           	
  3619  0279                     i1l10681:	
  3620                           ;Packet.c: 134: eeprom_write(dataBytesAddr+i, makeHexByte(dataPacket[8 + dataCounter], d
                                 ataPacket[9 + dataCounter]));
  3621  0279  084A               	movf	(parsePacket@dataCounter),w
  3622  027A  3E09               	addlw	09h
  3623  027B  074D               	addwf	(parsePacket@dataPacket),w
  3624  027C  00C6               	movwf	(??_parsePacket+0)+0
  3625  027D  0846               	movf	0+(??_parsePacket+0)+0,w
  3626  027E  0084               	movwf	fsr0
  3627  027F  1383               	bcf	status, 7	;select IRP bank0
  3628  0280  0800               	movf	indf,w
  3629  0281  00C7               	movwf	(??_parsePacket+1)+0
  3630  0282  0847               	movf	(??_parsePacket+1)+0,w
  3631  0283  00FD               	movwf	(?_makeHexByte)
  3632  0284  084A               	movf	(parsePacket@dataCounter),w
  3633  0285  3E08               	addlw	08h
  3634  0286  074D               	addwf	(parsePacket@dataPacket),w
  3635  0287  00C8               	movwf	(??_parsePacket+2)+0
  3636  0288  0848               	movf	0+(??_parsePacket+2)+0,w
  3637  0289  0084               	movwf	fsr0
  3638  028A  0800               	movf	indf,w
  3639  028B  120A  158A  266C   	fcall	_makeHexByte
              120A  118A         
  3640  0290  1283               	bcf	status, 5	;RP0=0, select bank0
  3641  0291  1303               	bcf	status, 6	;RP1=0, select bank0
  3642  0292  00C9               	movwf	(??_parsePacket+3)+0
  3643  0293  0849               	movf	(??_parsePacket+3)+0,w
  3644  0294  00FA               	movwf	(?i1_eeprom_write)
  3645  0295  3044               	movlw	(_dataBytesAddr-__stringbase)
  3646  0296  0084               	movwf	fsr0
  3647  0297  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3648  029C  074C               	addwf	(parsePacket@i),w
  3649  029D  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3650                           	line	135
  3651                           	
  3652  02A2                     i1l10683:	
  3653                           ;Packet.c: 135: dataCounter += 2;
  3654  02A2  3002               	movlw	low(02h)
  3655  02A3  1283               	bcf	status, 5	;RP0=0, select bank0
  3656  02A4  1303               	bcf	status, 6	;RP1=0, select bank0
  3657  02A5  07CA               	addwf	(parsePacket@dataCounter),f
  3658  02A6  1803               	skipnc
  3659  02A7  0ACB               	incf	(parsePacket@dataCounter+1),f
  3660  02A8  3000               	movlw	high(02h)
  3661  02A9  07CB               	addwf	(parsePacket@dataCounter+1),f
  3662                           	line	133
  3663                           	
  3664  02AA                     i1l10685:	
  3665  02AA  3001               	movlw	(01h)
  3666  02AB  00C6               	movwf	(??_parsePacket+0)+0
  3667  02AC  0846               	movf	(??_parsePacket+0)+0,w
  3668  02AD  07CC               	addwf	(parsePacket@i),f
  3669  02AE  2AAF               	goto	i1l10687
  3670                           	
  3671  02AF                     i1l1596:	
  3672                           	
  3673  02AF                     i1l10687:	
  3674  02AF  304D               	movlw	(_lenByteAddr-__stringbase)
  3675  02B0  0084               	movwf	fsr0
  3676  02B1  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3677  02B6  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  3678  02BB  1283               	bcf	status, 5	;RP0=0, select bank0
  3679  02BC  1303               	bcf	status, 6	;RP1=0, select bank0
  3680  02BD  024C               	subwf	(parsePacket@i),w
  3681  02BE  1C03               	skipc
  3682  02BF  2AC1               	goto	u338_21
  3683  02C0  2AC2               	goto	u338_20
  3684  02C1                     u338_21:
  3685  02C1  2A79               	goto	i1l10681
  3686  02C2                     u338_20:
  3687  02C2  2AC4               	goto	i1l1599
  3688                           	
  3689  02C3                     i1l1598:	
  3690  02C3  2AC4               	goto	i1l1599
  3691                           	line	137
  3692                           	
  3693  02C4                     i1l1595:	
  3694                           	line	138
  3695                           	
  3696  02C4                     i1l1599:	
  3697  02C4  0008               	return
  3698                           	opt stack 0
  3699                           GLOBAL	__end_of_parsePacket
  3700  02C5                     	__end_of_parsePacket:
  3701 ;; =============== function _parsePacket ends ============
  3702                           
  3703                           	signat	_parsePacket,4216
  3704                           	global	i1_writeString
  3705                           psect	text1088,local,class=CODE,delta=2
  3706                           global __ptext1088
  3707  07D0                     __ptext1088:
  3708                           
  3709 ;; *************** function i1_writeString *****************
  3710 ;; Defined at:
  3711 ;;		line 150 in file "Bluetooth.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  writeString     1    wreg     PTR unsigned char 
  3714 ;;		 -> readError(25), 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  writeString     1   11[COMMON] PTR unsigned char 
  3717 ;;		 -> readError(25), 
  3718 ;;  writeString     2   12[COMMON] unsigned int 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;		None               void
  3721 ;; Registers used:
  3722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3728 ;;      Params:         0       0       0       0       0
  3729 ;;      Locals:         3       0       0       0       0
  3730 ;;      Temps:          1       0       0       0       0
  3731 ;;      Totals:         4       0       0       0       0
  3732 ;;Total ram usage:        4 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    1
  3735 ;; This function calls:
  3736 ;;		i1_writeByte
  3737 ;;		i1_strlen
  3738 ;; This function is called by:
  3739 ;;		_readCommands
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           psect	text1088
  3743                           	file	"Bluetooth.c"
  3744                           	line	150
  3745                           	global	__size_ofi1_writeString
  3746  002F                     	__size_ofi1_writeString	equ	__end_ofi1_writeString-i1_writeString
  3747                           	
  3748  07D0                     i1_writeString:	
  3749                           	opt	stack 1
  3750                           ; Regs used in i1_writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3751                           ;i1writeString@userString stored from wreg
  3752                           	line	154
  3753  07D0  00FB               	movwf	(i1writeString@userString)
  3754                           	
  3755  07D1                     i1l10849:	
  3756                           ;Bluetooth.c: 152: unsigned int i;
  3757                           ;Bluetooth.c: 154: for(i = 0;i<strlen(userString);i++){
  3758  07D1  01FC               	clrf	(i1writeString@i)
  3759  07D2  01FD               	clrf	(i1writeString@i+1)
  3760  07D3  2FE7               	goto	i1l10855
  3761                           	
  3762  07D4                     i1l789:	
  3763                           	line	155
  3764                           	
  3765  07D4                     i1l10851:	
  3766                           ;Bluetooth.c: 155: writeByte(userString[i]);
  3767  07D4  087C               	movf	(i1writeString@i),w
  3768  07D5  077B               	addwf	(i1writeString@userString),w
  3769  07D6  00FA               	movwf	(??i1_writeString+0)+0
  3770  07D7  087A               	movf	0+(??i1_writeString+0)+0,w
  3771  07D8  0084               	movwf	fsr0
  3772  07D9  1383               	bcf	status, 7	;select IRP bank0
  3773  07DA  0800               	movf	indf,w
  3774  07DB  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3775                           	line	154
  3776                           	
  3777  07E0                     i1l10853:	
  3778  07E0  3001               	movlw	low(01h)
  3779  07E1  07FC               	addwf	(i1writeString@i),f
  3780  07E2  1803               	skipnc
  3781  07E3  0AFD               	incf	(i1writeString@i+1),f
  3782  07E4  3000               	movlw	high(01h)
  3783  07E5  07FD               	addwf	(i1writeString@i+1),f
  3784  07E6  2FE7               	goto	i1l10855
  3785                           	
  3786  07E7                     i1l788:	
  3787                           	
  3788  07E7                     i1l10855:	
  3789  07E7  087B               	movf	(i1writeString@userString),w
  3790  07E8  120A  158A  2768   	fcall	i1_strlen
              120A  118A         
  3791  07ED  0871               	movf	(1+(?i1_strlen)),w
  3792  07EE  027D               	subwf	(i1writeString@i+1),w
  3793  07EF  1D03               	skipz
  3794  07F0  2FF3               	goto	u356_25
  3795  07F1  0870               	movf	(0+(?i1_strlen)),w
  3796  07F2  027C               	subwf	(i1writeString@i),w
  3797  07F3                     u356_25:
  3798  07F3  1C03               	skipc
  3799  07F4  2FF6               	goto	u356_21
  3800  07F5  2FF7               	goto	u356_20
  3801  07F6                     u356_21:
  3802  07F6  2FD4               	goto	i1l10851
  3803  07F7                     u356_20:
  3804  07F7  2FF8               	goto	i1l10857
  3805                           	
  3806  07F8                     i1l790:	
  3807                           	line	158
  3808                           	
  3809  07F8                     i1l10857:	
  3810                           ;Bluetooth.c: 156: }
  3811                           ;Bluetooth.c: 158: writeByte((unsigned char)i);
  3812  07F8  087C               	movf	(i1writeString@i),w
  3813  07F9  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  3814                           	line	160
  3815                           	
  3816  07FE                     i1l791:	
  3817  07FE  0008               	return
  3818                           	opt stack 0
  3819                           GLOBAL	__end_ofi1_writeString
  3820  07FF                     	__end_ofi1_writeString:
  3821 ;; =============== function i1_writeString ends ============
  3822                           
  3823                           	signat	i1_writeString,88
  3824                           	global	_addDataToCheckSum
  3825                           psect	text1089,local,class=CODE,delta=2
  3826                           global __ptext1089
  3827  035F                     __ptext1089:
  3828                           
  3829 ;; *************** function _addDataToCheckSum *****************
  3830 ;; Defined at:
  3831 ;;		line 258 in file "Packet.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;		None
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  i               1   13[COMMON] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;		None               void
  3838 ;; Registers used:
  3839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3845 ;;      Params:         0       0       0       0       0
  3846 ;;      Locals:         1       0       0       0       0
  3847 ;;      Temps:          0       2       0       0       0
  3848 ;;      Totals:         1       2       0       0       0
  3849 ;;Total ram usage:        3 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    1
  3852 ;; This function calls:
  3853 ;;		_eeprom_read
  3854 ;;		i1_eeprom_write
  3855 ;; This function is called by:
  3856 ;;		_validatePacket
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           psect	text1089
  3860                           	file	"Packet.c"
  3861                           	line	258
  3862                           	global	__size_of_addDataToCheckSum
  3863  0077                     	__size_of_addDataToCheckSum	equ	__end_of_addDataToCheckSum-_addDataToCheckSum
  3864                           	
  3865  035F                     _addDataToCheckSum:	
  3866                           	opt	stack 1
  3867                           ; Regs used in _addDataToCheckSum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3868                           	line	260
  3869                           	
  3870  035F                     i1l10395:	
  3871                           ;Packet.c: 260: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(lenB
                                 yteAddr));
  3872  035F  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3873  0360  0084               	movwf	fsr0
  3874  0361  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3875  0366  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  3876  036B  1283               	bcf	status, 5	;RP0=0, select bank0
  3877  036C  1303               	bcf	status, 6	;RP1=0, select bank0
  3878  036D  00C2               	movwf	(??_addDataToCheckSum+0)+0
  3879  036E  304D               	movlw	(_lenByteAddr-__stringbase)
  3880  036F  0084               	movwf	fsr0
  3881  0370  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3882  0375  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  3883  037A  1283               	bcf	status, 5	;RP0=0, select bank0
  3884  037B  1303               	bcf	status, 6	;RP1=0, select bank0
  3885  037C  0742               	addwf	0+(??_addDataToCheckSum+0)+0,w
  3886  037D  00C3               	movwf	(??_addDataToCheckSum+1)+0
  3887  037E  0843               	movf	(??_addDataToCheckSum+1)+0,w
  3888  037F  00FA               	movwf	(?i1_eeprom_write)
  3889  0380  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3890  0381  0084               	movwf	fsr0
  3891  0382  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3892  0387  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3893                           	line	263
  3894                           	
  3895  038C                     i1l10397:	
  3896                           ;Packet.c: 263: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  3897  038C  01FD               	clrf	(addDataToCheckSum@i)
  3898  038D  2BC3               	goto	i1l10403
  3899                           	
  3900  038E                     i1l1626:	
  3901                           	line	265
  3902                           	
  3903  038E                     i1l10399:	
  3904                           ;Packet.c: 265: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(data
                                 BytesAddr+i));
  3905  038E  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3906  038F  0084               	movwf	fsr0
  3907  0390  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3908  0395  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  3909  039A  1283               	bcf	status, 5	;RP0=0, select bank0
  3910  039B  1303               	bcf	status, 6	;RP1=0, select bank0
  3911  039C  00C2               	movwf	(??_addDataToCheckSum+0)+0
  3912  039D  3044               	movlw	(_dataBytesAddr-__stringbase)
  3913  039E  0084               	movwf	fsr0
  3914  039F  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3915  03A4  077D               	addwf	(addDataToCheckSum@i),w
  3916  03A5  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  3917  03AA  1283               	bcf	status, 5	;RP0=0, select bank0
  3918  03AB  1303               	bcf	status, 6	;RP1=0, select bank0
  3919  03AC  0742               	addwf	0+(??_addDataToCheckSum+0)+0,w
  3920  03AD  00C3               	movwf	(??_addDataToCheckSum+1)+0
  3921  03AE  0843               	movf	(??_addDataToCheckSum+1)+0,w
  3922  03AF  00FA               	movwf	(?i1_eeprom_write)
  3923  03B0  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3924  03B1  0084               	movwf	fsr0
  3925  03B2  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3926  03B7  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  3927                           	line	263
  3928                           	
  3929  03BC                     i1l10401:	
  3930  03BC  3001               	movlw	(01h)
  3931  03BD  1283               	bcf	status, 5	;RP0=0, select bank0
  3932  03BE  1303               	bcf	status, 6	;RP1=0, select bank0
  3933  03BF  00C2               	movwf	(??_addDataToCheckSum+0)+0
  3934  03C0  0842               	movf	(??_addDataToCheckSum+0)+0,w
  3935  03C1  07FD               	addwf	(addDataToCheckSum@i),f
  3936  03C2  2BC3               	goto	i1l10403
  3937                           	
  3938  03C3                     i1l1625:	
  3939                           	
  3940  03C3                     i1l10403:	
  3941  03C3  304D               	movlw	(_lenByteAddr-__stringbase)
  3942  03C4  0084               	movwf	fsr0
  3943  03C5  120A  118A  2500   	fcall	stringdir
              120A  118A         
  3944  03CA  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  3945  03CF  027D               	subwf	(addDataToCheckSum@i),w
  3946  03D0  1C03               	skipc
  3947  03D1  2BD3               	goto	u309_21
  3948  03D2  2BD4               	goto	u309_20
  3949  03D3                     u309_21:
  3950  03D3  2B8E               	goto	i1l10399
  3951  03D4                     u309_20:
  3952  03D4  2BD5               	goto	i1l1628
  3953                           	
  3954  03D5                     i1l1627:	
  3955                           	line	267
  3956                           	
  3957  03D5                     i1l1628:	
  3958  03D5  0008               	return
  3959                           	opt stack 0
  3960                           GLOBAL	__end_of_addDataToCheckSum
  3961  03D6                     	__end_of_addDataToCheckSum:
  3962 ;; =============== function _addDataToCheckSum ends ============
  3963                           
  3964                           	signat	_addDataToCheckSum,88
  3965                           	global	_checkCS
  3966                           psect	text1090,local,class=CODE,delta=2
  3967                           global __ptext1090
  3968  0FCC                     __ptext1090:
  3969                           
  3970 ;; *************** function _checkCS *****************
  3971 ;; Defined at:
  3972 ;;		line 216 in file "Packet.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  2    2[COMMON] int 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3986 ;;      Params:         2       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0
  3988 ;;      Temps:          1       0       0       0       0
  3989 ;;      Totals:         3       0       0       0       0
  3990 ;;Total ram usage:        3 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    1
  3993 ;; This function calls:
  3994 ;;		_eeprom_read
  3995 ;;		i1_writeByte
  3996 ;; This function is called by:
  3997 ;;		_validatePacket
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           psect	text1090
  4001                           	file	"Packet.c"
  4002                           	line	216
  4003                           	global	__size_of_checkCS
  4004  0034                     	__size_of_checkCS	equ	__end_of_checkCS-_checkCS
  4005                           	
  4006  0FCC                     _checkCS:	
  4007                           	opt	stack 1
  4008                           ; Regs used in _checkCS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4009                           	line	218
  4010                           	
  4011  0FCC                     i1l10739:	
  4012                           ;Packet.c: 218: if(eeprom_read(csByteAddr) == eeprom_read(calcCSByteAddr)){
  4013  0FCC  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4014  0FCD  0084               	movwf	fsr0
  4015  0FCE  120A  118A  2500   	fcall	stringdir
              120A  158A         
  4016  0FD3  120A  158A  262B   	fcall	_eeprom_read
              120A  158A         
  4017  0FD8  00F4               	movwf	(??_checkCS+0)+0
  4018  0FD9  3043               	movlw	(_csByteAddr-__stringbase)
  4019  0FDA  0084               	movwf	fsr0
  4020  0FDB  120A  118A  2500   	fcall	stringdir
              120A  158A         
  4021  0FE0  120A  158A  262B   	fcall	_eeprom_read
              120A  158A         
  4022  0FE5  0674               	xorwf	0+(??_checkCS+0)+0,w
  4023  0FE6  1D03               	skipz
  4024  0FE7  2FE9               	goto	u343_21
  4025  0FE8  2FEA               	goto	u343_20
  4026  0FE9                     u343_21:
  4027  0FE9  2FF6               	goto	i1l10747
  4028  0FEA                     u343_20:
  4029                           	line	220
  4030                           	
  4031  0FEA                     i1l10741:	
  4032                           ;Packet.c: 220: writeByte('Y');
  4033  0FEA  3059               	movlw	(059h)
  4034  0FEB  120A  158A  25CD   	fcall	i1_writeByte
              120A  158A         
  4035                           	line	221
  4036                           	
  4037  0FF0                     i1l10743:	
  4038                           ;Packet.c: 221: return 1;
  4039  0FF0  3001               	movlw	low(01h)
  4040  0FF1  00F2               	movwf	(?_checkCS)
  4041  0FF2  3000               	movlw	high(01h)
  4042  0FF3  00F3               	movwf	((?_checkCS))+1
  4043  0FF4  2FFF               	goto	i1l1617
  4044                           	
  4045  0FF5                     i1l10745:	
  4046  0FF5  2FFF               	goto	i1l1617
  4047                           	line	222
  4048                           	
  4049  0FF6                     i1l1616:	
  4050                           	line	224
  4051                           	
  4052  0FF6                     i1l10747:	
  4053                           ;Packet.c: 222: }
  4054                           ;Packet.c: 224: writeByte('N');
  4055  0FF6  304E               	movlw	(04Eh)
  4056  0FF7  120A  158A  25CD   	fcall	i1_writeByte
              120A  158A         
  4057                           	line	225
  4058                           	
  4059  0FFC                     i1l10749:	
  4060                           ;Packet.c: 225: return 0;
  4061  0FFC  01F2               	clrf	(?_checkCS)
  4062  0FFD  01F3               	clrf	(?_checkCS+1)
  4063  0FFE  2FFF               	goto	i1l1617
  4064                           	
  4065  0FFF                     i1l10751:	
  4066                           	line	226
  4067                           	
  4068  0FFF                     i1l1617:	
  4069  0FFF  0008               	return
  4070                           	opt stack 0
  4071                           GLOBAL	__end_of_checkCS
  4072  1000                     	__end_of_checkCS:
  4073 ;; =============== function _checkCS ends ============
  4074                           
  4075                           	signat	_checkCS,90
  4076                           	global	_checkCMDByte
  4077                           psect	text1091,local,class=CODE,delta=2
  4078                           global __ptext1091
  4079  03D6                     __ptext1091:
  4080                           
  4081 ;; *************** function _checkCMDByte *****************
  4082 ;; Defined at:
  4083 ;;		line 193 in file "Packet.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  2    0[BANK0 ] int 
  4090 ;; Registers used:
  4091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4097 ;;      Params:         0       2       0       0       0
  4098 ;;      Locals:         0       0       0       0       0
  4099 ;;      Temps:          0       2       0       0       0
  4100 ;;      Totals:         0       4       0       0       0
  4101 ;;Total ram usage:        4 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    1
  4104 ;; This function calls:
  4105 ;;		_eeprom_read
  4106 ;;		i1_eeprom_write
  4107 ;;		i1_writeByte
  4108 ;; This function is called by:
  4109 ;;		_validatePacket
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           psect	text1091
  4113                           	file	"Packet.c"
  4114                           	line	193
  4115                           	global	__size_of_checkCMDByte
  4116  0070                     	__size_of_checkCMDByte	equ	__end_of_checkCMDByte-_checkCMDByte
  4117                           	
  4118  03D6                     _checkCMDByte:	
  4119                           	opt	stack 1
  4120                           ; Regs used in _checkCMDByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4121                           	line	195
  4122                           	
  4123  03D6                     i1l10723:	
  4124                           ;Packet.c: 195: if(eeprom_read(cmdByteAddr) >= 0 && eeprom_read(cmdByteAddr) <= maxCmd){
  4125  03D6  3042               	movlw	(_cmdByteAddr-__stringbase)
  4126  03D7  0084               	movwf	fsr0
  4127  03D8  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4128  03DD  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4129  03E2  3042               	movlw	(_cmdByteAddr-__stringbase)
  4130  03E3  0084               	movwf	fsr0
  4131  03E4  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4132  03E9  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4133  03EE  1283               	bcf	status, 5	;RP0=0, select bank0
  4134  03EF  1303               	bcf	status, 6	;RP1=0, select bank0
  4135  03F0  00C4               	movwf	(??_checkCMDByte+0)+0
  4136  03F1  304E               	movlw	(_maxCmd-__stringbase)
  4137  03F2  0084               	movwf	fsr0
  4138  03F3  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4139  03F8  00C5               	movwf	(??_checkCMDByte+1)+0
  4140  03F9  0844               	movf	0+(??_checkCMDByte+0)+0,w
  4141  03FA  0245               	subwf	(??_checkCMDByte+1)+0,w
  4142  03FB  1C03               	skipc
  4143  03FC  2BFE               	goto	u342_21
  4144  03FD  2BFF               	goto	u342_20
  4145  03FE                     u342_21:
  4146  03FE  2C3A               	goto	i1l10733
  4147  03FF                     u342_20:
  4148                           	line	197
  4149                           	
  4150  03FF                     i1l10725:	
  4151                           ;Packet.c: 197: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(cmdB
                                 yteAddr));
  4152  03FF  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4153  0400  0084               	movwf	fsr0
  4154  0401  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4155  0406  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4156  040B  1283               	bcf	status, 5	;RP0=0, select bank0
  4157  040C  1303               	bcf	status, 6	;RP1=0, select bank0
  4158  040D  00C4               	movwf	(??_checkCMDByte+0)+0
  4159  040E  3042               	movlw	(_cmdByteAddr-__stringbase)
  4160  040F  0084               	movwf	fsr0
  4161  0410  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4162  0415  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4163  041A  1283               	bcf	status, 5	;RP0=0, select bank0
  4164  041B  1303               	bcf	status, 6	;RP1=0, select bank0
  4165  041C  0744               	addwf	0+(??_checkCMDByte+0)+0,w
  4166  041D  00C5               	movwf	(??_checkCMDByte+1)+0
  4167  041E  0845               	movf	(??_checkCMDByte+1)+0,w
  4168  041F  00FA               	movwf	(?i1_eeprom_write)
  4169  0420  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4170  0421  0084               	movwf	fsr0
  4171  0422  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4172  0427  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  4173                           	line	199
  4174                           	
  4175  042C                     i1l10727:	
  4176                           ;Packet.c: 199: writeByte('C');
  4177  042C  3043               	movlw	(043h)
  4178  042D  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  4179                           	line	200
  4180                           	
  4181  0432                     i1l10729:	
  4182                           ;Packet.c: 200: return 1;
  4183  0432  3001               	movlw	low(01h)
  4184  0433  1283               	bcf	status, 5	;RP0=0, select bank0
  4185  0434  1303               	bcf	status, 6	;RP1=0, select bank0
  4186  0435  00C2               	movwf	(?_checkCMDByte)
  4187  0436  3000               	movlw	high(01h)
  4188  0437  00C3               	movwf	((?_checkCMDByte))+1
  4189  0438  2C45               	goto	i1l1613
  4190                           	
  4191  0439                     i1l10731:	
  4192  0439  2C45               	goto	i1l1613
  4193                           	line	201
  4194                           	
  4195  043A                     i1l1612:	
  4196                           	line	203
  4197                           	
  4198  043A                     i1l10733:	
  4199                           ;Packet.c: 201: }
  4200                           ;Packet.c: 203: writeByte('N');
  4201  043A  304E               	movlw	(04Eh)
  4202  043B  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  4203                           	line	204
  4204                           	
  4205  0440                     i1l10735:	
  4206                           ;Packet.c: 204: return 0;
  4207  0440  1283               	bcf	status, 5	;RP0=0, select bank0
  4208  0441  1303               	bcf	status, 6	;RP1=0, select bank0
  4209  0442  01C2               	clrf	(?_checkCMDByte)
  4210  0443  01C3               	clrf	(?_checkCMDByte+1)
  4211  0444  2C45               	goto	i1l1613
  4212                           	
  4213  0445                     i1l10737:	
  4214                           	line	205
  4215                           	
  4216  0445                     i1l1613:	
  4217  0445  0008               	return
  4218                           	opt stack 0
  4219                           GLOBAL	__end_of_checkCMDByte
  4220  0446                     	__end_of_checkCMDByte:
  4221 ;; =============== function _checkCMDByte ends ============
  4222                           
  4223                           	signat	_checkCMDByte,90
  4224                           	global	_checkRWByte
  4225                           psect	text1092,local,class=CODE,delta=2
  4226                           global __ptext1092
  4227  0446                     __ptext1092:
  4228                           
  4229 ;; *************** function _checkRWByte *****************
  4230 ;; Defined at:
  4231 ;;		line 171 in file "Packet.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  2    0[BANK0 ] int 
  4238 ;; Registers used:
  4239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4245 ;;      Params:         0       2       0       0       0
  4246 ;;      Locals:         0       0       0       0       0
  4247 ;;      Temps:          0       2       0       0       0
  4248 ;;      Totals:         0       4       0       0       0
  4249 ;;Total ram usage:        4 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    1
  4252 ;; This function calls:
  4253 ;;		_eeprom_read
  4254 ;;		i1_writeByte
  4255 ;;		i1_eeprom_write
  4256 ;; This function is called by:
  4257 ;;		_validatePacket
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           psect	text1092
  4261                           	file	"Packet.c"
  4262                           	line	171
  4263                           	global	__size_of_checkRWByte
  4264  006A                     	__size_of_checkRWByte	equ	__end_of_checkRWByte-_checkRWByte
  4265                           	
  4266  0446                     _checkRWByte:	
  4267                           	opt	stack 1
  4268                           ; Regs used in _checkRWByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4269                           	line	174
  4270                           	
  4271  0446                     i1l10705:	
  4272                           ;Packet.c: 174: if(eeprom_read(rwByteAddr) == 0 || eeprom_read(rwByteAddr) == 1){
  4273  0446  3053               	movlw	(_rwByteAddr-__stringbase)
  4274  0447  0084               	movwf	fsr0
  4275  0448  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4276  044D  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4277  0452  3A00               	xorlw	0
  4278  0453  1903               	skipnz
  4279  0454  2C56               	goto	u340_21
  4280  0455  2C57               	goto	u340_20
  4281  0456                     u340_21:
  4282  0456  2C69               	goto	i1l10709
  4283  0457                     u340_20:
  4284                           	
  4285  0457                     i1l10707:	
  4286  0457  3053               	movlw	(_rwByteAddr-__stringbase)
  4287  0458  0084               	movwf	fsr0
  4288  0459  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4289  045E  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4290  0463  3A01               	xorlw	01h
  4291  0464  1D03               	skipz
  4292  0465  2C67               	goto	u341_21
  4293  0466  2C68               	goto	u341_20
  4294  0467                     u341_21:
  4295  0467  2CA4               	goto	i1l10717
  4296  0468                     u341_20:
  4297  0468  2C69               	goto	i1l10709
  4298                           	
  4299  0469                     i1l1608:	
  4300                           	line	176
  4301                           	
  4302  0469                     i1l10709:	
  4303                           ;Packet.c: 176: writeByte('R');
  4304  0469  3052               	movlw	(052h)
  4305  046A  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  4306                           	line	178
  4307                           	
  4308  046F                     i1l10711:	
  4309                           ;Packet.c: 178: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(rwBy
                                 teAddr));
  4310  046F  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4311  0470  0084               	movwf	fsr0
  4312  0471  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4313  0476  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4314  047B  1283               	bcf	status, 5	;RP0=0, select bank0
  4315  047C  1303               	bcf	status, 6	;RP1=0, select bank0
  4316  047D  00C4               	movwf	(??_checkRWByte+0)+0
  4317  047E  3053               	movlw	(_rwByteAddr-__stringbase)
  4318  047F  0084               	movwf	fsr0
  4319  0480  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4320  0485  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4321  048A  1283               	bcf	status, 5	;RP0=0, select bank0
  4322  048B  1303               	bcf	status, 6	;RP1=0, select bank0
  4323  048C  0744               	addwf	0+(??_checkRWByte+0)+0,w
  4324  048D  00C5               	movwf	(??_checkRWByte+1)+0
  4325  048E  0845               	movf	(??_checkRWByte+1)+0,w
  4326  048F  00FA               	movwf	(?i1_eeprom_write)
  4327  0490  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4328  0491  0084               	movwf	fsr0
  4329  0492  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4330  0497  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  4331                           	line	179
  4332                           	
  4333  049C                     i1l10713:	
  4334                           ;Packet.c: 179: return 1;
  4335  049C  3001               	movlw	low(01h)
  4336  049D  1283               	bcf	status, 5	;RP0=0, select bank0
  4337  049E  1303               	bcf	status, 6	;RP1=0, select bank0
  4338  049F  00C2               	movwf	(?_checkRWByte)
  4339  04A0  3000               	movlw	high(01h)
  4340  04A1  00C3               	movwf	((?_checkRWByte))+1
  4341  04A2  2CAF               	goto	i1l1609
  4342                           	
  4343  04A3                     i1l10715:	
  4344  04A3  2CAF               	goto	i1l1609
  4345                           	line	180
  4346                           	
  4347  04A4                     i1l1606:	
  4348                           	line	182
  4349                           	
  4350  04A4                     i1l10717:	
  4351                           ;Packet.c: 180: }
  4352                           ;Packet.c: 182: writeByte('N');
  4353  04A4  304E               	movlw	(04Eh)
  4354  04A5  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  4355                           	line	183
  4356                           	
  4357  04AA                     i1l10719:	
  4358                           ;Packet.c: 183: return 0;
  4359  04AA  1283               	bcf	status, 5	;RP0=0, select bank0
  4360  04AB  1303               	bcf	status, 6	;RP1=0, select bank0
  4361  04AC  01C2               	clrf	(?_checkRWByte)
  4362  04AD  01C3               	clrf	(?_checkRWByte+1)
  4363  04AE  2CAF               	goto	i1l1609
  4364                           	
  4365  04AF                     i1l10721:	
  4366                           	line	184
  4367                           	
  4368  04AF                     i1l1609:	
  4369  04AF  0008               	return
  4370                           	opt stack 0
  4371                           GLOBAL	__end_of_checkRWByte
  4372  04B0                     	__end_of_checkRWByte:
  4373 ;; =============== function _checkRWByte ends ============
  4374                           
  4375                           	signat	_checkRWByte,90
  4376                           	global	_checkStartByte
  4377                           psect	text1093,local,class=CODE,delta=2
  4378                           global __ptext1093
  4379  05CE                     __ptext1093:
  4380                           
  4381 ;; *************** function _checkStartByte *****************
  4382 ;; Defined at:
  4383 ;;		line 148 in file "Packet.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;		None
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  2    0[BANK0 ] int 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4397 ;;      Params:         0       2       0       0       0
  4398 ;;      Locals:         0       0       0       0       0
  4399 ;;      Temps:          0       2       0       0       0
  4400 ;;      Totals:         0       4       0       0       0
  4401 ;;Total ram usage:        4 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    1
  4404 ;; This function calls:
  4405 ;;		_eeprom_read
  4406 ;;		i1_writeByte
  4407 ;;		i1_eeprom_write
  4408 ;; This function is called by:
  4409 ;;		_validatePacket
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           psect	text1093
  4413                           	file	"Packet.c"
  4414                           	line	148
  4415                           	global	__size_of_checkStartByte
  4416  0064                     	__size_of_checkStartByte	equ	__end_of_checkStartByte-_checkStartByte
  4417                           	
  4418  05CE                     _checkStartByte:	
  4419                           	opt	stack 1
  4420                           ; Regs used in _checkStartByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4421                           	line	151
  4422                           	
  4423  05CE                     i1l10689:	
  4424                           ;Packet.c: 151: if (eeprom_read(startByteAddr) == userStartByte) {
  4425  05CE  3060               	movlw	(_userStartByte-__stringbase)
  4426  05CF  0084               	movwf	fsr0
  4427  05D0  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4428  05D5  1283               	bcf	status, 5	;RP0=0, select bank0
  4429  05D6  1303               	bcf	status, 6	;RP1=0, select bank0
  4430  05D7  00C4               	movwf	(??_checkStartByte+0)+0
  4431  05D8  3054               	movlw	(_startByteAddr-__stringbase)
  4432  05D9  0084               	movwf	fsr0
  4433  05DA  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4434  05DF  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4435  05E4  1283               	bcf	status, 5	;RP0=0, select bank0
  4436  05E5  1303               	bcf	status, 6	;RP1=0, select bank0
  4437  05E6  0644               	xorwf	(??_checkStartByte+0)+0,w
  4438  05E7  1D03               	skipz
  4439  05E8  2DEA               	goto	u339_21
  4440  05E9  2DEB               	goto	u339_20
  4441  05EA                     u339_21:
  4442  05EA  2E26               	goto	i1l10699
  4443  05EB                     u339_20:
  4444                           	line	153
  4445                           	
  4446  05EB                     i1l10691:	
  4447                           ;Packet.c: 153: writeByte('S');
  4448  05EB  3053               	movlw	(053h)
  4449  05EC  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  4450                           	line	155
  4451                           	
  4452  05F1                     i1l10693:	
  4453                           ;Packet.c: 155: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(star
                                 tByteAddr));
  4454  05F1  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4455  05F2  0084               	movwf	fsr0
  4456  05F3  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4457  05F8  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4458  05FD  1283               	bcf	status, 5	;RP0=0, select bank0
  4459  05FE  1303               	bcf	status, 6	;RP1=0, select bank0
  4460  05FF  00C4               	movwf	(??_checkStartByte+0)+0
  4461  0600  3054               	movlw	(_startByteAddr-__stringbase)
  4462  0601  0084               	movwf	fsr0
  4463  0602  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4464  0607  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4465  060C  1283               	bcf	status, 5	;RP0=0, select bank0
  4466  060D  1303               	bcf	status, 6	;RP1=0, select bank0
  4467  060E  0744               	addwf	0+(??_checkStartByte+0)+0,w
  4468  060F  00C5               	movwf	(??_checkStartByte+1)+0
  4469  0610  0845               	movf	(??_checkStartByte+1)+0,w
  4470  0611  00FA               	movwf	(?i1_eeprom_write)
  4471  0612  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4472  0613  0084               	movwf	fsr0
  4473  0614  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4474  0619  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  4475                           	line	156
  4476                           	
  4477  061E                     i1l10695:	
  4478                           ;Packet.c: 156: return 1;
  4479  061E  3001               	movlw	low(01h)
  4480  061F  1283               	bcf	status, 5	;RP0=0, select bank0
  4481  0620  1303               	bcf	status, 6	;RP1=0, select bank0
  4482  0621  00C2               	movwf	(?_checkStartByte)
  4483  0622  3000               	movlw	high(01h)
  4484  0623  00C3               	movwf	((?_checkStartByte))+1
  4485  0624  2E31               	goto	i1l1603
  4486                           	
  4487  0625                     i1l10697:	
  4488  0625  2E31               	goto	i1l1603
  4489                           	line	157
  4490                           	
  4491  0626                     i1l1602:	
  4492                           	line	159
  4493                           	
  4494  0626                     i1l10699:	
  4495                           ;Packet.c: 157: }
  4496                           ;Packet.c: 159: writeByte('N');
  4497  0626  304E               	movlw	(04Eh)
  4498  0627  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  4499                           	line	160
  4500                           	
  4501  062C                     i1l10701:	
  4502                           ;Packet.c: 160: return 0;
  4503  062C  1283               	bcf	status, 5	;RP0=0, select bank0
  4504  062D  1303               	bcf	status, 6	;RP1=0, select bank0
  4505  062E  01C2               	clrf	(?_checkStartByte)
  4506  062F  01C3               	clrf	(?_checkStartByte+1)
  4507  0630  2E31               	goto	i1l1603
  4508                           	
  4509  0631                     i1l10703:	
  4510                           	line	161
  4511                           	
  4512  0631                     i1l1603:	
  4513  0631  0008               	return
  4514                           	opt stack 0
  4515                           GLOBAL	__end_of_checkStartByte
  4516  0632                     	__end_of_checkStartByte:
  4517 ;; =============== function _checkStartByte ends ============
  4518                           
  4519                           	signat	_checkStartByte,90
  4520                           	global	_checkDataFrames
  4521                           psect	text1094,local,class=CODE,delta=2
  4522                           global __ptext1094
  4523  02C5                     __ptext1094:
  4524                           
  4525 ;; *************** function _checkDataFrames *****************
  4526 ;; Defined at:
  4527 ;;		line 85 in file "Packet.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  2    2[COMMON] int 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4541 ;;      Params:         2       0       0       0       0
  4542 ;;      Locals:         0       0       0       0       0
  4543 ;;      Temps:          6       0       0       0       0
  4544 ;;      Totals:         8       0       0       0       0
  4545 ;;Total ram usage:        8 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    1
  4548 ;; This function calls:
  4549 ;;		_eeprom_read
  4550 ;;		i1_writeByte
  4551 ;; This function is called by:
  4552 ;;		_validatePacket
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           psect	text1094
  4556                           	file	"Packet.c"
  4557                           	line	85
  4558                           	global	__size_of_checkDataFrames
  4559  009A                     	__size_of_checkDataFrames	equ	__end_of_checkDataFrames-_checkDataFrames
  4560                           	
  4561  02C5                     _checkDataFrames:	
  4562                           	opt	stack 1
  4563                           ; Regs used in _checkDataFrames: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4564                           	line	87
  4565                           	
  4566  02C5                     i1l10645:	
  4567                           ;Packet.c: 87: if(eeprom_read(lenByteAddr) == 0 && (eeprom_read(RXLenAddr)-noDataLen) ==
                                  0){
  4568  02C5  304D               	movlw	(_lenByteAddr-__stringbase)
  4569  02C6  0084               	movwf	fsr0
  4570  02C7  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4571  02CC  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4572  02D1  3800               	iorlw	0
  4573  02D2  1D03               	skipz
  4574  02D3  2AD5               	goto	u332_21
  4575  02D4  2AD6               	goto	u332_20
  4576  02D5                     u332_21:
  4577  02D5  2B09               	goto	i1l10657
  4578  02D6                     u332_20:
  4579                           	
  4580  02D6                     i1l10647:	
  4581  02D6  3051               	movlw	(_noDataLen-__stringbase)
  4582  02D7  0084               	movwf	fsr0
  4583  02D8  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4584  02DD  00F4               	movwf	(??_checkDataFrames+0)+0
  4585  02DE  01F5               	clrf	(??_checkDataFrames+0)+0+1
  4586  02DF  09F4               	comf	(??_checkDataFrames+0)+0,f
  4587  02E0  09F5               	comf	(??_checkDataFrames+0)+1,f
  4588  02E1  0AF4               	incf	(??_checkDataFrames+0)+0,f
  4589  02E2  1903               	skipnz
  4590  02E3  0AF5               	incf	(??_checkDataFrames+0)+1,f
  4591  02E4  3040               	movlw	(_RXLenAddr-__stringbase)
  4592  02E5  0084               	movwf	fsr0
  4593  02E6  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4594  02EB  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4595  02F0  0774               	addwf	0+(??_checkDataFrames+0)+0,w
  4596  02F1  00F6               	movwf	(??_checkDataFrames+2)+0
  4597  02F2  0875               	movf	1+(??_checkDataFrames+0)+0,w
  4598  02F3  1803               	skipnc
  4599  02F4  0A75               	incf	1+(??_checkDataFrames+0)+0,w
  4600  02F5  00F7               	movwf	((??_checkDataFrames+2)+0)+1
  4601  02F6  0877               	movf	1+(??_checkDataFrames+2)+0,w
  4602  02F7  0476               	iorwf	0+(??_checkDataFrames+2)+0,w
  4603  02F8  1D03               	skipz
  4604  02F9  2AFB               	goto	u333_21
  4605  02FA  2AFC               	goto	u333_20
  4606  02FB                     u333_21:
  4607  02FB  2B09               	goto	i1l10657
  4608  02FC                     u333_20:
  4609                           	line	89
  4610                           	
  4611  02FC                     i1l10649:	
  4612                           ;Packet.c: 89: writeByte('D');
  4613  02FC  3044               	movlw	(044h)
  4614  02FD  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  4615                           	line	90
  4616                           	
  4617  0302                     i1l10651:	
  4618                           ;Packet.c: 90: return 1;
  4619  0302  3001               	movlw	low(01h)
  4620  0303  00F2               	movwf	(?_checkDataFrames)
  4621  0304  3000               	movlw	high(01h)
  4622  0305  00F3               	movwf	((?_checkDataFrames))+1
  4623  0306  2B5E               	goto	i1l1590
  4624                           	
  4625  0307                     i1l10653:	
  4626  0307  2B5E               	goto	i1l1590
  4627                           	line	94
  4628                           	
  4629  0308                     i1l10655:	
  4630                           ;Packet.c: 94: }else if((eeprom_read(RXLenAddr) - noDataLen) == (eeprom_read(lenByteAddr
                                 )*2)){
  4631  0308  2B55               	goto	i1l10665
  4632                           	
  4633  0309                     i1l1589:	
  4634                           	
  4635  0309                     i1l10657:	
  4636  0309  304D               	movlw	(_lenByteAddr-__stringbase)
  4637  030A  0084               	movwf	fsr0
  4638  030B  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4639  0310  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4640  0315  00F4               	movwf	(??_checkDataFrames+0)+0
  4641  0316  01F5               	clrf	(??_checkDataFrames+0)+0+1
  4642  0317  3001               	movlw	01h
  4643  0318  00FF               	movwf	btemp+1
  4644  0319                     u334_25:
  4645  0319  1003               	clrc
  4646  031A  0DF4               	rlf	(??_checkDataFrames+0)+0,f
  4647  031B  0DF5               	rlf	(??_checkDataFrames+0)+1,f
  4648  031C  0BFF               	decfsz	btemp+1,f
  4649  031D  2B19               	goto	u334_25
  4650  031E  3051               	movlw	(_noDataLen-__stringbase)
  4651  031F  0084               	movwf	fsr0
  4652  0320  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4653  0325  00F6               	movwf	(??_checkDataFrames+2)+0
  4654  0326  01F7               	clrf	(??_checkDataFrames+2)+0+1
  4655  0327  09F6               	comf	(??_checkDataFrames+2)+0,f
  4656  0328  09F7               	comf	(??_checkDataFrames+2)+1,f
  4657  0329  0AF6               	incf	(??_checkDataFrames+2)+0,f
  4658  032A  1903               	skipnz
  4659  032B  0AF7               	incf	(??_checkDataFrames+2)+1,f
  4660  032C  3040               	movlw	(_RXLenAddr-__stringbase)
  4661  032D  0084               	movwf	fsr0
  4662  032E  120A  118A  2500   	fcall	stringdir
              120A  118A         
  4663  0333  120A  158A  262B   	fcall	_eeprom_read
              120A  118A         
  4664  0338  0776               	addwf	0+(??_checkDataFrames+2)+0,w
  4665  0339  00F8               	movwf	(??_checkDataFrames+4)+0
  4666  033A  0877               	movf	1+(??_checkDataFrames+2)+0,w
  4667  033B  1803               	skipnc
  4668  033C  0A77               	incf	1+(??_checkDataFrames+2)+0,w
  4669  033D  00F9               	movwf	((??_checkDataFrames+4)+0)+1
  4670  033E  0875               	movf	1+(??_checkDataFrames+0)+0,w
  4671  033F  0679               	xorwf	1+(??_checkDataFrames+4)+0,w
  4672  0340  1D03               	skipz
  4673  0341  2B44               	goto	u335_25
  4674  0342  0874               	movf	0+(??_checkDataFrames+0)+0,w
  4675  0343  0678               	xorwf	0+(??_checkDataFrames+4)+0,w
  4676  0344                     u335_25:
  4677                           
  4678  0344  1D03               	skipz
  4679  0345  2B47               	goto	u335_21
  4680  0346  2B48               	goto	u335_20
  4681  0347                     u335_21:
  4682  0347  2B55               	goto	i1l10665
  4683  0348                     u335_20:
  4684                           	line	96
  4685                           	
  4686  0348                     i1l10659:	
  4687                           ;Packet.c: 96: writeByte('D');
  4688  0348  3044               	movlw	(044h)
  4689  0349  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  4690                           	line	97
  4691                           	
  4692  034E                     i1l10661:	
  4693                           ;Packet.c: 97: return 1;
  4694  034E  3001               	movlw	low(01h)
  4695  034F  00F2               	movwf	(?_checkDataFrames)
  4696  0350  3000               	movlw	high(01h)
  4697  0351  00F3               	movwf	((?_checkDataFrames))+1
  4698  0352  2B5E               	goto	i1l1590
  4699                           	
  4700  0353                     i1l10663:	
  4701  0353  2B5E               	goto	i1l1590
  4702                           	line	98
  4703                           	
  4704  0354                     i1l1592:	
  4705  0354  2B55               	goto	i1l10665
  4706                           	line	101
  4707                           	
  4708  0355                     i1l1591:	
  4709                           	
  4710  0355                     i1l10665:	
  4711                           ;Packet.c: 98: }
  4712                           ;Packet.c: 101: writeByte('N');
  4713  0355  304E               	movlw	(04Eh)
  4714  0356  120A  158A  25CD   	fcall	i1_writeByte
              120A  118A         
  4715                           	line	102
  4716                           	
  4717  035B                     i1l10667:	
  4718                           ;Packet.c: 102: return 0;
  4719  035B  01F2               	clrf	(?_checkDataFrames)
  4720  035C  01F3               	clrf	(?_checkDataFrames+1)
  4721  035D  2B5E               	goto	i1l1590
  4722                           	
  4723  035E                     i1l10669:	
  4724                           	line	103
  4725                           	
  4726  035E                     i1l1590:	
  4727  035E  0008               	return
  4728                           	opt stack 0
  4729                           GLOBAL	__end_of_checkDataFrames
  4730  035F                     	__end_of_checkDataFrames:
  4731 ;; =============== function _checkDataFrames ends ============
  4732                           
  4733                           	signat	_checkDataFrames,90
  4734                           	global	_checkLength
  4735                           psect	text1095,local,class=CODE,delta=2
  4736                           global __ptext1095
  4737  0F08                     __ptext1095:
  4738                           
  4739 ;; *************** function _checkLength *****************
  4740 ;; Defined at:
  4741 ;;		line 64 in file "Packet.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  2    2[COMMON] int 
  4748 ;; Registers used:
  4749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4755 ;;      Params:         2       0       0       0       0
  4756 ;;      Locals:         0       0       0       0       0
  4757 ;;      Temps:          1       0       0       0       0
  4758 ;;      Totals:         3       0       0       0       0
  4759 ;;Total ram usage:        3 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    1
  4762 ;; This function calls:
  4763 ;;		_eeprom_read
  4764 ;;		i1_writeByte
  4765 ;; This function is called by:
  4766 ;;		_parsePacket
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           psect	text1095
  4770                           	file	"Packet.c"
  4771                           	line	64
  4772                           	global	__size_of_checkLength
  4773  002F                     	__size_of_checkLength	equ	__end_of_checkLength-_checkLength
  4774                           	
  4775  0F08                     _checkLength:	
  4776                           	opt	stack 1
  4777                           ; Regs used in _checkLength: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4778                           	line	67
  4779                           	
  4780  0F08                     i1l10631:	
  4781                           ;Packet.c: 67: if (eeprom_read(RXLenAddr) >= minSizeByte) {
  4782  0F08  3040               	movlw	(_RXLenAddr-__stringbase)
  4783  0F09  0084               	movwf	fsr0
  4784  0F0A  120A  118A  2500   	fcall	stringdir
              120A  158A         
  4785  0F0F  120A  158A  262B   	fcall	_eeprom_read
              120A  158A         
  4786  0F14  00F4               	movwf	(??_checkLength+0)+0
  4787  0F15  304F               	movlw	(_minSizeByte-__stringbase)
  4788  0F16  0084               	movwf	fsr0
  4789  0F17  120A  118A  2500   	fcall	stringdir
              120A  158A         
  4790  0F1C  0274               	subwf	0+(??_checkLength+0)+0,w
  4791  0F1D  1C03               	skipc
  4792  0F1E  2F20               	goto	u331_21
  4793  0F1F  2F21               	goto	u331_20
  4794  0F20                     u331_21:
  4795  0F20  2F2D               	goto	i1l10639
  4796  0F21                     u331_20:
  4797                           	line	69
  4798                           	
  4799  0F21                     i1l10633:	
  4800                           ;Packet.c: 69: writeByte('L');
  4801  0F21  304C               	movlw	(04Ch)
  4802  0F22  120A  158A  25CD   	fcall	i1_writeByte
              120A  158A         
  4803                           	line	70
  4804                           	
  4805  0F27                     i1l10635:	
  4806                           ;Packet.c: 70: return 1;
  4807  0F27  3001               	movlw	low(01h)
  4808  0F28  00F2               	movwf	(?_checkLength)
  4809  0F29  3000               	movlw	high(01h)
  4810  0F2A  00F3               	movwf	((?_checkLength))+1
  4811  0F2B  2F36               	goto	i1l1586
  4812                           	
  4813  0F2C                     i1l10637:	
  4814  0F2C  2F36               	goto	i1l1586
  4815                           	line	71
  4816                           	
  4817  0F2D                     i1l1585:	
  4818                           	line	73
  4819                           	
  4820  0F2D                     i1l10639:	
  4821                           ;Packet.c: 71: }
  4822                           ;Packet.c: 73: writeByte('N');
  4823  0F2D  304E               	movlw	(04Eh)
  4824  0F2E  120A  158A  25CD   	fcall	i1_writeByte
              120A  158A         
  4825                           	line	74
  4826                           	
  4827  0F33                     i1l10641:	
  4828                           ;Packet.c: 74: return 0;
  4829  0F33  01F2               	clrf	(?_checkLength)
  4830  0F34  01F3               	clrf	(?_checkLength+1)
  4831  0F35  2F36               	goto	i1l1586
  4832                           	
  4833  0F36                     i1l10643:	
  4834                           	line	75
  4835                           	
  4836  0F36                     i1l1586:	
  4837  0F36  0008               	return
  4838                           	opt stack 0
  4839                           GLOBAL	__end_of_checkLength
  4840  0F37                     	__end_of_checkLength:
  4841 ;; =============== function _checkLength ends ============
  4842                           
  4843                           	signat	_checkLength,90
  4844                           	global	_checkEven
  4845                           psect	text1096,local,class=CODE,delta=2
  4846                           global __ptext1096
  4847  0E91                     __ptext1096:
  4848                           
  4849 ;; *************** function _checkEven *****************
  4850 ;; Defined at:
  4851 ;;		line 42 in file "Packet.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;		None
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  2    2[COMMON] int 
  4858 ;; Registers used:
  4859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4865 ;;      Params:         2       0       0       0       0
  4866 ;;      Locals:         0       0       0       0       0
  4867 ;;      Temps:          1       0       0       0       0
  4868 ;;      Totals:         3       0       0       0       0
  4869 ;;Total ram usage:        3 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:    1
  4872 ;; This function calls:
  4873 ;;		_eeprom_read
  4874 ;;		i1_writeByte
  4875 ;; This function is called by:
  4876 ;;		_parsePacket
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           psect	text1096
  4880                           	file	"Packet.c"
  4881                           	line	42
  4882                           	global	__size_of_checkEven
  4883  0027                     	__size_of_checkEven	equ	__end_of_checkEven-_checkEven
  4884                           	
  4885  0E91                     _checkEven:	
  4886                           	opt	stack 1
  4887                           ; Regs used in _checkEven: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4888                           	line	45
  4889                           	
  4890  0E91                     i1l10617:	
  4891                           ;Packet.c: 45: if (eeprom_read(RXLenAddr) % 2 == 0) {
  4892  0E91  3040               	movlw	(_RXLenAddr-__stringbase)
  4893  0E92  0084               	movwf	fsr0
  4894  0E93  120A  118A  2500   	fcall	stringdir
              120A  158A         
  4895  0E98  120A  158A  262B   	fcall	_eeprom_read
              120A  158A         
  4896  0E9D  00F4               	movwf	(??_checkEven+0)+0
  4897  0E9E  1874               	btfsc	0+(??_checkEven+0)+0,(0)&7
  4898  0E9F  2EA1               	goto	u330_21
  4899  0EA0  2EA2               	goto	u330_20
  4900  0EA1                     u330_21:
  4901  0EA1  2EAE               	goto	i1l10625
  4902  0EA2                     u330_20:
  4903                           	line	47
  4904                           	
  4905  0EA2                     i1l10619:	
  4906                           ;Packet.c: 47: writeByte('E');
  4907  0EA2  3045               	movlw	(045h)
  4908  0EA3  120A  158A  25CD   	fcall	i1_writeByte
              120A  158A         
  4909                           	line	48
  4910                           	
  4911  0EA8                     i1l10621:	
  4912                           ;Packet.c: 48: return 1;
  4913  0EA8  3001               	movlw	low(01h)
  4914  0EA9  00F2               	movwf	(?_checkEven)
  4915  0EAA  3000               	movlw	high(01h)
  4916  0EAB  00F3               	movwf	((?_checkEven))+1
  4917  0EAC  2EB7               	goto	i1l1582
  4918                           	
  4919  0EAD                     i1l10623:	
  4920  0EAD  2EB7               	goto	i1l1582
  4921                           	line	49
  4922                           	
  4923  0EAE                     i1l1581:	
  4924                           	line	51
  4925                           	
  4926  0EAE                     i1l10625:	
  4927                           ;Packet.c: 49: }
  4928                           ;Packet.c: 51: writeByte('N');
  4929  0EAE  304E               	movlw	(04Eh)
  4930  0EAF  120A  158A  25CD   	fcall	i1_writeByte
              120A  158A         
  4931                           	line	52
  4932                           	
  4933  0EB4                     i1l10627:	
  4934                           ;Packet.c: 52: return 0;
  4935  0EB4  01F2               	clrf	(?_checkEven)
  4936  0EB5  01F3               	clrf	(?_checkEven+1)
  4937  0EB6  2EB7               	goto	i1l1582
  4938                           	
  4939  0EB7                     i1l10629:	
  4940                           	line	53
  4941                           	
  4942  0EB7                     i1l1582:	
  4943  0EB7  0008               	return
  4944                           	opt stack 0
  4945                           GLOBAL	__end_of_checkEven
  4946  0EB8                     	__end_of_checkEven:
  4947 ;; =============== function _checkEven ends ============
  4948                           
  4949                           	signat	_checkEven,90
  4950                           	global	_makeHexByte
  4951                           psect	text1097,local,class=CODE,delta=2
  4952                           global __ptext1097
  4953  0E6C                     __ptext1097:
  4954                           
  4955 ;; *************** function _makeHexByte *****************
  4956 ;; Defined at:
  4957 ;;		line 218 in file "Bluetooth.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  nibOne          1    wreg     unsigned char 
  4960 ;;  nibTwo          1   13[COMMON] unsigned char 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  nibOne          1    2[BANK0 ] unsigned char 
  4963 ;;  input_byte      1    3[BANK0 ] unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      unsigned char 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2, status,0, pclath, cstack
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4973 ;;      Params:         1       0       0       0       0
  4974 ;;      Locals:         0       2       0       0       0
  4975 ;;      Temps:          0       2       0       0       0
  4976 ;;      Totals:         1       4       0       0       0
  4977 ;;Total ram usage:        5 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    1
  4980 ;; This function calls:
  4981 ;;		_makeNibble
  4982 ;; This function is called by:
  4983 ;;		_parsePacket
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           psect	text1097
  4987                           	file	"Bluetooth.c"
  4988                           	line	218
  4989                           	global	__size_of_makeHexByte
  4990  0025                     	__size_of_makeHexByte	equ	__end_of_makeHexByte-_makeHexByte
  4991                           	
  4992  0E6C                     _makeHexByte:	
  4993                           	opt	stack 1
  4994                           ; Regs used in _makeHexByte: [wreg+status,2+status,0+pclath+cstack]
  4995                           ;makeHexByte@nibOne stored from wreg
  4996                           	line	220
  4997  0E6C  1283               	bcf	status, 5	;RP0=0, select bank0
  4998  0E6D  1303               	bcf	status, 6	;RP1=0, select bank0
  4999  0E6E  00C4               	movwf	(makeHexByte@nibOne)
  5000                           	
  5001  0E6F                     i1l10231:	
  5002                           ;Bluetooth.c: 219: unsigned char input_byte;
  5003                           ;Bluetooth.c: 220: input_byte = (makeNibble(nibOne)<<4);
  5004  0E6F  0844               	movf	(makeHexByte@nibOne),w
  5005  0E70  120A  158A  25E5   	fcall	_makeNibble
              120A  158A         
  5006  0E75  1283               	bcf	status, 5	;RP0=0, select bank0
  5007  0E76  1303               	bcf	status, 6	;RP1=0, select bank0
  5008  0E77  00C2               	movwf	(??_makeHexByte+0)+0
  5009  0E78  3003               	movlw	(04h)-1
  5010  0E79                     u288_25:
  5011  0E79  1003               	clrc
  5012  0E7A  0DC2               	rlf	(??_makeHexByte+0)+0,f
  5013  0E7B  3EFF               	addlw	-1
  5014  0E7C  1D03               	skipz
  5015  0E7D  2E79               	goto	u288_25
  5016  0E7E  1003               	clrc
  5017  0E7F  0D42               	rlf	(??_makeHexByte+0)+0,w
  5018  0E80  00C3               	movwf	(??_makeHexByte+1)+0
  5019  0E81  0843               	movf	(??_makeHexByte+1)+0,w
  5020  0E82  00C5               	movwf	(makeHexByte@input_byte)
  5021                           	line	221
  5022                           ;Bluetooth.c: 221: input_byte|= makeNibble(nibTwo);
  5023  0E83  087D               	movf	(makeHexByte@nibTwo),w
  5024  0E84  120A  158A  25E5   	fcall	_makeNibble
              120A  158A         
  5025  0E89  1283               	bcf	status, 5	;RP0=0, select bank0
  5026  0E8A  1303               	bcf	status, 6	;RP1=0, select bank0
  5027  0E8B  00C2               	movwf	(??_makeHexByte+0)+0
  5028  0E8C  0842               	movf	(??_makeHexByte+0)+0,w
  5029  0E8D  04C5               	iorwf	(makeHexByte@input_byte),f
  5030                           	line	222
  5031                           	
  5032  0E8E                     i1l10233:	
  5033                           ;Bluetooth.c: 222: return input_byte;
  5034  0E8E  0845               	movf	(makeHexByte@input_byte),w
  5035  0E8F  2E90               	goto	i1l804
  5036                           	
  5037  0E90                     i1l10235:	
  5038                           	line	223
  5039                           	
  5040  0E90                     i1l804:	
  5041  0E90  0008               	return
  5042                           	opt stack 0
  5043                           GLOBAL	__end_of_makeHexByte
  5044  0E91                     	__end_of_makeHexByte:
  5045 ;; =============== function _makeHexByte ends ============
  5046                           
  5047                           	signat	_makeHexByte,8313
  5048                           	global	_readString
  5049                           psect	text1098,local,class=CODE,delta=2
  5050                           global __ptext1098
  5051  06CE                     __ptext1098:
  5052                           
  5053 ;; *************** function _readString *****************
  5054 ;; Defined at:
  5055 ;;		line 172 in file "Bluetooth.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;  readStorage     1    wreg     PTR unsigned char 
  5058 ;;		 -> arrStore(50), 
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;  readStorage     1    2[BANK0 ] PTR unsigned char 
  5061 ;;		 -> arrStore(50), 
  5062 ;;  i               2    3[BANK0 ] unsigned int 
  5063 ;;  ch              1    5[BANK0 ] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;		None               void
  5066 ;; Registers used:
  5067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5073 ;;      Params:         0       0       0       0       0
  5074 ;;      Locals:         0       4       0       0       0
  5075 ;;      Temps:          0       2       0       0       0
  5076 ;;      Totals:         0       6       0       0       0
  5077 ;;Total ram usage:        6 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    1
  5080 ;; This function calls:
  5081 ;;		_readByte
  5082 ;;		i1_eeprom_write
  5083 ;; This function is called by:
  5084 ;;		_getPacket
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           psect	text1098
  5088                           	file	"Bluetooth.c"
  5089                           	line	172
  5090                           	global	__size_of_readString
  5091  004B                     	__size_of_readString	equ	__end_of_readString-_readString
  5092                           	
  5093  06CE                     _readString:	
  5094                           	opt	stack 2
  5095                           ; Regs used in _readString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5096                           ;readString@readStorage stored from wreg
  5097                           	line	174
  5098  06CE  1283               	bcf	status, 5	;RP0=0, select bank0
  5099  06CF  1303               	bcf	status, 6	;RP1=0, select bank0
  5100  06D0  00C4               	movwf	(readString@readStorage)
  5101                           	
  5102  06D1                     i1l10187:	
  5103                           ;Bluetooth.c: 174: unsigned int i = 0;
  5104  06D1  01C5               	clrf	(readString@i)
  5105  06D2  01C6               	clrf	(readString@i+1)
  5106                           	line	178
  5107                           	
  5108  06D3                     i1l10189:	
  5109                           ;Bluetooth.c: 176: unsigned char ch;
  5110                           ;Bluetooth.c: 178: ch = readByte();
  5111  06D3  120A  158A  25F4   	fcall	_readByte
              120A  118A         
  5112  06D8  1283               	bcf	status, 5	;RP0=0, select bank0
  5113  06D9  1303               	bcf	status, 6	;RP1=0, select bank0
  5114  06DA  00C2               	movwf	(??_readString+0)+0
  5115  06DB  0842               	movf	(??_readString+0)+0,w
  5116  06DC  00C7               	movwf	(readString@ch)
  5117                           	line	180
  5118                           ;Bluetooth.c: 180: while(ch != userEndByte)
  5119  06DD  2EF9               	goto	i1l10197
  5120                           	
  5121  06DE                     i1l795:	
  5122                           	line	183
  5123                           	
  5124  06DE                     i1l10191:	
  5125                           ;Bluetooth.c: 181: {
  5126                           ;Bluetooth.c: 183: readStorage[i] = ch;
  5127  06DE  0847               	movf	(readString@ch),w
  5128  06DF  00C2               	movwf	(??_readString+0)+0
  5129  06E0  0845               	movf	(readString@i),w
  5130  06E1  0744               	addwf	(readString@readStorage),w
  5131  06E2  00C3               	movwf	(??_readString+1)+0
  5132  06E3  0843               	movf	0+(??_readString+1)+0,w
  5133  06E4  0084               	movwf	fsr0
  5134  06E5  0842               	movf	(??_readString+0)+0,w
  5135  06E6  1383               	bcf	status, 7	;select IRP bank0
  5136  06E7  0080               	movwf	indf
  5137                           	line	185
  5138                           	
  5139  06E8                     i1l10193:	
  5140                           ;Bluetooth.c: 185: i++;
  5141  06E8  3001               	movlw	low(01h)
  5142  06E9  07C5               	addwf	(readString@i),f
  5143  06EA  1803               	skipnc
  5144  06EB  0AC6               	incf	(readString@i+1),f
  5145  06EC  3000               	movlw	high(01h)
  5146  06ED  07C6               	addwf	(readString@i+1),f
  5147                           	line	187
  5148                           	
  5149  06EE                     i1l10195:	
  5150                           ;Bluetooth.c: 187: ch = readByte();
  5151  06EE  120A  158A  25F4   	fcall	_readByte
              120A  118A         
  5152  06F3  1283               	bcf	status, 5	;RP0=0, select bank0
  5153  06F4  1303               	bcf	status, 6	;RP1=0, select bank0
  5154  06F5  00C2               	movwf	(??_readString+0)+0
  5155  06F6  0842               	movf	(??_readString+0)+0,w
  5156  06F7  00C7               	movwf	(readString@ch)
  5157  06F8  2EF9               	goto	i1l10197
  5158                           	line	188
  5159                           	
  5160  06F9                     i1l794:	
  5161                           	line	180
  5162                           	
  5163  06F9                     i1l10197:	
  5164  06F9  305F               	movlw	(_userEndByte-__stringbase)
  5165  06FA  0084               	movwf	fsr0
  5166  06FB  120A  118A  2500   	fcall	stringdir
              120A  118A         
  5167  0700  00C2               	movwf	(??_readString+0)+0
  5168  0701  0847               	movf	(readString@ch),w
  5169  0702  0642               	xorwf	(??_readString+0)+0,w
  5170  0703  1D03               	skipz
  5171  0704  2F06               	goto	u283_21
  5172  0705  2F07               	goto	u283_20
  5173  0706                     u283_21:
  5174  0706  2EDE               	goto	i1l10191
  5175  0707                     u283_20:
  5176  0707  2F08               	goto	i1l10199
  5177                           	
  5178  0708                     i1l796:	
  5179                           	line	189
  5180                           	
  5181  0708                     i1l10199:	
  5182                           ;Bluetooth.c: 188: }
  5183                           ;Bluetooth.c: 189: eeprom_write(RXLenAddr,i);
  5184  0708  0845               	movf	(readString@i),w
  5185  0709  00C2               	movwf	(??_readString+0)+0
  5186  070A  0842               	movf	(??_readString+0)+0,w
  5187  070B  00FA               	movwf	(?i1_eeprom_write)
  5188  070C  3040               	movlw	(_RXLenAddr-__stringbase)
  5189  070D  0084               	movwf	fsr0
  5190  070E  120A  118A  2500   	fcall	stringdir
              120A  118A         
  5191  0713  120A  158A  2737   	fcall	i1_eeprom_write
              120A  118A         
  5192                           	line	191
  5193                           	
  5194  0718                     i1l797:	
  5195  0718  0008               	return
  5196                           	opt stack 0
  5197                           GLOBAL	__end_of_readString
  5198  0719                     	__end_of_readString:
  5199 ;; =============== function _readString ends ============
  5200                           
  5201                           	signat	_readString,4216
  5202                           	global	i1_strlen
  5203                           psect	text1099,local,class=CODE,delta=2
  5204                           global __ptext1099
  5205  0F68                     __ptext1099:
  5206                           
  5207 ;; *************** function i1_strlen *****************
  5208 ;; Defined at:
  5209 ;;		line 5 in file "C:\Microchip\HiTech\PICC\9.83\sources\strlen.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  strlen          1    wreg     PTR const unsigned char 
  5212 ;;		 -> readError(25), arrStore(50), main@testString(9), 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  strlen          1    8[COMMON] PTR const unsigned char 
  5215 ;;		 -> readError(25), arrStore(50), main@testString(9), 
  5216 ;;  strlen          1    9[COMMON] PTR const unsigned char 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  2    0[COMMON] unsigned int 
  5219 ;; Registers used:
  5220 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5226 ;;      Params:         2       0       0       0       0
  5227 ;;      Locals:         2       0       0       0       0
  5228 ;;      Temps:          6       0       0       0       0
  5229 ;;      Totals:        10       0       0       0       0
  5230 ;;Total ram usage:       10 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; This function calls:
  5233 ;;		Nothing
  5234 ;; This function is called by:
  5235 ;;		_parsePacket
  5236 ;;		i1_writeString
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           psect	text1099
  5240                           	file	"C:\Microchip\HiTech\PICC\9.83\sources\strlen.c"
  5241                           	line	5
  5242                           	global	__size_ofi1_strlen
  5243  0031                     	__size_ofi1_strlen	equ	__end_ofi1_strlen-i1_strlen
  5244                           	
  5245  0F68                     i1_strlen:	
  5246                           	opt	stack 1
  5247                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  5248                           ;i1strlen@s stored from wreg
  5249                           	line	8
  5250  0F68  00F8               	movwf	(i1strlen@s)
  5251                           	
  5252  0F69                     i1l10859:	
  5253  0F69  0878               	movf	(i1strlen@s),w
  5254  0F6A  00F2               	movwf	(??i1_strlen+0)+0
  5255  0F6B  0872               	movf	(??i1_strlen+0)+0,w
  5256  0F6C  00F9               	movwf	(i1strlen@cp)
  5257                           	line	9
  5258  0F6D  2F6F               	goto	i1l10861
  5259                           	
  5260  0F6E                     i1l8288:	
  5261                           	line	10
  5262  0F6E  2F6F               	goto	i1l10861
  5263                           	
  5264  0F6F                     i1l8287:	
  5265                           	line	9
  5266                           	
  5267  0F6F                     i1l10861:	
  5268  0F6F  0879               	movf	(i1strlen@cp),w
  5269  0F70  0084               	movwf	fsr0
  5270  0F71  3001               	movlw	01h
  5271  0F72  07F9               	addwf	(i1strlen@cp),f
  5272  0F73  1383               	bcf	status, 7	;select IRP bank0
  5273  0F74  0880               	movf	indf,f
  5274  0F75  1D03               	skipz
  5275  0F76  2F78               	goto	u357_21
  5276  0F77  2F79               	goto	u357_20
  5277  0F78                     u357_21:
  5278  0F78  2F6F               	goto	i1l10861
  5279  0F79                     u357_20:
  5280  0F79  2F7A               	goto	i1l10863
  5281                           	
  5282  0F7A                     i1l8289:	
  5283                           	line	11
  5284                           	
  5285  0F7A                     i1l10863:	
  5286  0F7A  0878               	movf	(i1strlen@s),w
  5287  0F7B  00F2               	movwf	(??i1_strlen+0)+0
  5288  0F7C  3000               	movlw	((0x0/2))
  5289  0F7D  00F3               	movwf	(??i1_strlen+0)+0+1
  5290  0F7E  09F2               	comf	(??i1_strlen+0)+0,f
  5291  0F7F  09F3               	comf	(??i1_strlen+0)+1,f
  5292  0F80  0AF2               	incf	(??i1_strlen+0)+0,f
  5293  0F81  1903               	skipnz
  5294  0F82  0AF3               	incf	(??i1_strlen+0)+1,f
  5295  0F83  0879               	movf	(i1strlen@cp),w
  5296  0F84  00F4               	movwf	(??i1_strlen+2)+0
  5297  0F85  3000               	movlw	((0x0/2))
  5298  0F86  00F5               	movwf	(??i1_strlen+2)+0+1
  5299  0F87  0872               	movf	0+(??i1_strlen+0)+0,w
  5300  0F88  0774               	addwf	0+(??i1_strlen+2)+0,w
  5301  0F89  00F6               	movwf	(??i1_strlen+4)+0
  5302  0F8A  0873               	movf	1+(??i1_strlen+0)+0,w
  5303  0F8B  1803               	skipnc
  5304  0F8C  0A73               	incf	1+(??i1_strlen+0)+0,w
  5305  0F8D  0775               	addwf	1+(??i1_strlen+2)+0,w
  5306  0F8E  00F7               	movwf	1+(??i1_strlen+4)+0
  5307  0F8F  0876               	movf	0+(??i1_strlen+4)+0,w
  5308  0F90  3EFF               	addlw	low(-1)
  5309  0F91  00F0               	movwf	(?i1_strlen)
  5310  0F92  0877               	movf	1+(??i1_strlen+4)+0,w
  5311  0F93  1803               	skipnc
  5312  0F94  3E01               	addlw	1
  5313  0F95  3EFF               	addlw	high(-1)
  5314  0F96  00F1               	movwf	1+(?i1_strlen)
  5315  0F97  2F98               	goto	i1l8290
  5316                           	
  5317  0F98                     i1l10865:	
  5318                           	line	12
  5319                           	
  5320  0F98                     i1l8290:	
  5321  0F98  0008               	return
  5322                           	opt stack 0
  5323                           GLOBAL	__end_ofi1_strlen
  5324  0F99                     	__end_ofi1_strlen:
  5325 ;; =============== function i1_strlen ends ============
  5326                           
  5327                           	signat	i1_strlen,90
  5328                           	global	i1_eeprom_write
  5329                           psect	text1100,local,class=CODE,delta=2
  5330                           global __ptext1100
  5331  0F37                     __ptext1100:
  5332                           
  5333 ;; *************** function i1_eeprom_write *****************
  5334 ;; Defined at:
  5335 ;;		line 7 in file "C:\Microchip\HiTech\PICC\9.83\sources\eewrite.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  eeprom_write    1    wreg     unsigned char 
  5338 ;;  eeprom_write    1   10[COMMON] unsigned char 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  eeprom_write    1   12[COMMON] unsigned char 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      unsigned char 
  5343 ;; Registers used:
  5344 ;;		wreg, status,2, status,0
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5350 ;;      Params:         1       0       0       0       0
  5351 ;;      Locals:         1       0       0       0       0
  5352 ;;      Temps:          1       0       0       0       0
  5353 ;;      Totals:         3       0       0       0       0
  5354 ;;Total ram usage:        3 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; This function calls:
  5357 ;;		Nothing
  5358 ;; This function is called by:
  5359 ;;		_readString
  5360 ;;		_parsePacket
  5361 ;;		_checkStartByte
  5362 ;;		_checkRWByte
  5363 ;;		_checkCMDByte
  5364 ;;		_addDataToCheckSum
  5365 ;;		_getPacket
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           psect	text1100
  5369                           	file	"C:\Microchip\HiTech\PICC\9.83\sources\eewrite.c"
  5370                           	line	7
  5371                           	global	__size_ofi1_eeprom_write
  5372  0031                     	__size_ofi1_eeprom_write	equ	__end_ofi1_eeprom_write-i1_eeprom_write
  5373                           	
  5374  0F37                     i1_eeprom_write:	
  5375                           	opt	stack 1
  5376                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0]
  5377                           ;i1eeprom_write@addr stored from wreg
  5378  0F37  00FC               	movwf	(i1eeprom_write@addr)
  5379                           	line	8
  5380                           	
  5381  0F38                     i1l7603:	
  5382  0F38  2F39               	goto	i1l7604
  5383                           	
  5384  0F39                     i1l7605:	
  5385                           	
  5386  0F39                     i1l7604:	
  5387  0F39  1683               	bsf	status, 5	;RP0=1, select bank3
  5388  0F3A  1703               	bsf	status, 6	;RP1=1, select bank3
  5389  0F3B  188C               	btfsc	(3169/8)^0180h,(3169)&7
  5390  0F3C  2F3E               	goto	u318_21
  5391  0F3D  2F3F               	goto	u318_20
  5392  0F3E                     u318_21:
  5393  0F3E  2F39               	goto	i1l7604
  5394  0F3F                     u318_20:
  5395  0F3F  2F40               	goto	i1l10493
  5396                           	
  5397  0F40                     i1l7606:	
  5398                           	
  5399  0F40                     i1l10493:	
  5400  0F40  087C               	movf	(i1eeprom_write@addr),w
  5401  0F41  1283               	bcf	status, 5	;RP0=0, select bank2
  5402  0F42  1703               	bsf	status, 6	;RP1=1, select bank2
  5403  0F43  008D               	movwf	(269)^0100h	;volatile
  5404  0F44  087A               	movf	(i1eeprom_write@value),w
  5405  0F45  008C               	movwf	(268)^0100h	;volatile
  5406                           	
  5407  0F46                     i1l10495:	
  5408  0F46  303F               	movlw	(03Fh)
  5409  0F47  00FB               	movwf	(??i1_eeprom_write+0)+0
  5410  0F48  087B               	movf	(??i1_eeprom_write+0)+0,w
  5411  0F49  1683               	bsf	status, 5	;RP0=1, select bank3
  5412  0F4A  1703               	bsf	status, 6	;RP1=1, select bank3
  5413  0F4B  058C               	andwf	(396)^0180h,f	;volatile
  5414                           	
  5415  0F4C                     i1l10497:	
  5416  0F4C  1283               	bcf	status, 5	;RP0=0, select bank0
  5417  0F4D  1303               	bcf	status, 6	;RP1=0, select bank0
  5418  0F4E  1003               	bcf	(24/8),(24)&7
  5419                           	
  5420  0F4F                     i1l10499:	
  5421  0F4F  1F8B               	btfss	(95/8),(95)&7
  5422  0F50  2F52               	goto	u319_21
  5423  0F51  2F53               	goto	u319_20
  5424  0F52                     u319_21:
  5425  0F52  2F54               	goto	i1l7607
  5426  0F53                     u319_20:
  5427                           	
  5428  0F53                     i1l10501:	
  5429  0F53  1403               	bsf	(24/8),(24)&7
  5430                           	
  5431  0F54                     i1l7607:	
  5432  0F54  138B               	bcf	(95/8),(95)&7
  5433  0F55  1683               	bsf	status, 5	;RP0=1, select bank3
  5434  0F56  1703               	bsf	status, 6	;RP1=1, select bank3
  5435  0F57  150C               	bsf	(3170/8)^0180h,(3170)&7
  5436                           	
  5437  0F58                     i1l10503:	
  5438  0F58  3055               	movlw	(055h)
  5439  0F59  008D               	movwf	(397)^0180h	;volatile
  5440  0F5A  30AA               	movlw	(0AAh)
  5441  0F5B  008D               	movwf	(397)^0180h	;volatile
  5442                           	
  5443  0F5C                     i1l10505:	
  5444  0F5C  148C               	bsf	(3169/8)^0180h,(3169)&7
  5445                           	
  5446  0F5D                     i1l10507:	
  5447  0F5D  110C               	bcf	(3170/8)^0180h,(3170)&7
  5448                           	
  5449  0F5E                     i1l10509:	
  5450  0F5E  1283               	bcf	status, 5	;RP0=0, select bank0
  5451  0F5F  1303               	bcf	status, 6	;RP1=0, select bank0
  5452  0F60  1C03               	btfss	(24/8),(24)&7
  5453  0F61  2F63               	goto	u320_21
  5454  0F62  2F64               	goto	u320_20
  5455  0F63                     u320_21:
  5456  0F63  2F67               	goto	i1l7610
  5457  0F64                     u320_20:
  5458                           	
  5459  0F64                     i1l10511:	
  5460  0F64  178B               	bsf	(95/8),(95)&7
  5461  0F65  2F67               	goto	i1l7610
  5462                           	
  5463  0F66                     i1l7608:	
  5464  0F66  2F67               	goto	i1l7610
  5465                           	
  5466  0F67                     i1l7609:	
  5467                           	line	10
  5468                           ;	Return value of i1_eeprom_write is never used
  5469                           	
  5470  0F67                     i1l7610:	
  5471  0F67  0008               	return
  5472                           	opt stack 0
  5473                           GLOBAL	__end_ofi1_eeprom_write
  5474  0F68                     	__end_ofi1_eeprom_write:
  5475 ;; =============== function i1_eeprom_write ends ============
  5476                           
  5477                           	signat	i1_eeprom_write,89
  5478                           	global	i1_writeByte
  5479                           psect	text1101,local,class=CODE,delta=2
  5480                           global __ptext1101
  5481  0DCD                     __ptext1101:
  5482                           
  5483 ;; *************** function i1_writeByte *****************
  5484 ;; Defined at:
  5485 ;;		line 79 in file "Bluetooth.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  writeByte       1    wreg     unsigned char 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  writeByte       1    0[COMMON] unsigned char 
  5490 ;; Return value:  Size  Location     Type
  5491 ;;		None               void
  5492 ;; Registers used:
  5493 ;;		wreg
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5499 ;;      Params:         0       0       0       0       0
  5500 ;;      Locals:         1       0       0       0       0
  5501 ;;      Temps:          0       0       0       0       0
  5502 ;;      Totals:         1       0       0       0       0
  5503 ;;Total ram usage:        1 bytes
  5504 ;; Hardware stack levels used:    1
  5505 ;; This function calls:
  5506 ;;		Nothing
  5507 ;; This function is called by:
  5508 ;;		_checkEven
  5509 ;;		_checkLength
  5510 ;;		_checkDataFrames
  5511 ;;		_checkStartByte
  5512 ;;		_checkRWByte
  5513 ;;		_checkCMDByte
  5514 ;;		_checkCS
  5515 ;;		_readCommands
  5516 ;;		i1_writeString
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           psect	text1101
  5520                           	file	"Bluetooth.c"
  5521                           	line	79
  5522                           	global	__size_ofi1_writeByte
  5523  000C                     	__size_ofi1_writeByte	equ	__end_ofi1_writeByte-i1_writeByte
  5524                           	
  5525  0DCD                     i1_writeByte:	
  5526                           	opt	stack 1
  5527                           ; Regs used in i1_writeByte: [wreg]
  5528                           ;i1writeByte@Byte stored from wreg
  5529  0DCD  00F0               	movwf	(i1writeByte@Byte)
  5530                           	line	83
  5531                           	
  5532  0DCE                     i1l10845:	
  5533                           ;Bluetooth.c: 83: while(!TXIF);
  5534  0DCE  2DCF               	goto	i1l772
  5535                           	
  5536  0DCF                     i1l773:	
  5537                           	
  5538  0DCF                     i1l772:	
  5539  0DCF  1283               	bcf	status, 5	;RP0=0, select bank0
  5540  0DD0  1303               	bcf	status, 6	;RP1=0, select bank0
  5541  0DD1  1E0C               	btfss	(100/8),(100)&7
  5542  0DD2  2DD4               	goto	u355_21
  5543  0DD3  2DD5               	goto	u355_20
  5544  0DD4                     u355_21:
  5545  0DD4  2DCF               	goto	i1l772
  5546  0DD5                     u355_20:
  5547  0DD5  2DD6               	goto	i1l10847
  5548                           	
  5549  0DD6                     i1l774:	
  5550                           	line	86
  5551                           	
  5552  0DD6                     i1l10847:	
  5553                           ;Bluetooth.c: 86: TXREG = Byte;
  5554  0DD6  0870               	movf	(i1writeByte@Byte),w
  5555  0DD7  0099               	movwf	(25)	;volatile
  5556                           	line	87
  5557                           	
  5558  0DD8                     i1l775:	
  5559  0DD8  0008               	return
  5560                           	opt stack 0
  5561                           GLOBAL	__end_ofi1_writeByte
  5562  0DD9                     	__end_ofi1_writeByte:
  5563 ;; =============== function i1_writeByte ends ============
  5564                           
  5565                           	signat	i1_writeByte,88
  5566                           	global	_writeCommands
  5567                           psect	text1102,local,class=CODE,delta=2
  5568                           global __ptext1102
  5569  07FF                     __ptext1102:
  5570                           
  5571 ;; *************** function _writeCommands *****************
  5572 ;; Defined at:
  5573 ;;		line 85 in file "Command.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;		None
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;		None
  5578 ;; Return value:  Size  Location     Type
  5579 ;;		None               void
  5580 ;; Registers used:
  5581 ;;		None
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5587 ;;      Params:         0       0       0       0       0
  5588 ;;      Locals:         0       0       0       0       0
  5589 ;;      Temps:          0       0       0       0       0
  5590 ;;      Totals:         0       0       0       0       0
  5591 ;;Total ram usage:        0 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_getPacket
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           psect	text1102
  5600                           	file	"Command.c"
  5601                           	line	85
  5602                           	global	__size_of_writeCommands
  5603  0001                     	__size_of_writeCommands	equ	__end_of_writeCommands-_writeCommands
  5604                           	
  5605  07FF                     _writeCommands:	
  5606                           	opt	stack 3
  5607                           ; Regs used in _writeCommands: []
  5608                           	line	89
  5609                           	
  5610  07FF                     i1l4792:	
  5611  07FF  0008               	return
  5612                           	opt stack 0
  5613                           GLOBAL	__end_of_writeCommands
  5614  0800                     	__end_of_writeCommands:
  5615 ;; =============== function _writeCommands ends ============
  5616                           
  5617                           	signat	_writeCommands,88
  5618                           	global	_eeprom_read
  5619                           psect	text1103,local,class=CODE,delta=2
  5620                           global __ptext1103
  5621  0E2B                     __ptext1103:
  5622                           
  5623 ;; *************** function _eeprom_read *****************
  5624 ;; Defined at:
  5625 ;;		line 7 in file "eeread.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  addr            1    wreg     unsigned char 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  addr            1    1[COMMON] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      unsigned char 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5639 ;;      Params:         0       0       0       0       0
  5640 ;;      Locals:         1       0       0       0       0
  5641 ;;      Temps:          1       0       0       0       0
  5642 ;;      Totals:         2       0       0       0       0
  5643 ;;Total ram usage:        2 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_checkEven
  5649 ;;		_checkLength
  5650 ;;		_checkDataFrames
  5651 ;;		_parsePacket
  5652 ;;		_checkStartByte
  5653 ;;		_checkRWByte
  5654 ;;		_checkCMDByte
  5655 ;;		_checkCS
  5656 ;;		_addDataToCheckSum
  5657 ;;		_getPacket
  5658 ;;		_readCommands
  5659 ;;		_displayPacket
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           psect	text1103
  5663                           	file	"C:\Microchip\HiTech\PICC\9.83\sources\eeread.c"
  5664                           	line	7
  5665                           	global	__size_of_eeprom_read
  5666  001F                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
  5667                           	
  5668  0E2B                     _eeprom_read:	
  5669                           	opt	stack 2
  5670                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5671                           ;eeprom_read@addr stored from wreg
  5672                           	line	9
  5673  0E2B  00F1               	movwf	(eeprom_read@addr)
  5674                           	line	8
  5675                           	
  5676  0E2C                     i1l6986:	
  5677                           	line	9
  5678                           # 9 "C:\Microchip\HiTech\PICC\9.83\sources\eeread.c"
  5679  0E2C  0064               clrwdt ;#
  5680                           psect	text1103
  5681                           	line	10
  5682  0E2D  1683               	bsf	status, 5	;RP0=1, select bank3
  5683  0E2E  1703               	bsf	status, 6	;RP1=1, select bank3
  5684  0E2F  188C               	btfsc	(3169/8)^0180h,(3169)&7
  5685  0E30  2E32               	goto	u290_21
  5686  0E31  2E33               	goto	u290_20
  5687  0E32                     u290_21:
  5688  0E32  2E2C               	goto	i1l6986
  5689  0E33                     u290_20:
  5690  0E33  2E34               	goto	i1l10251
  5691                           	
  5692  0E34                     i1l6987:	
  5693                           	line	11
  5694                           	
  5695  0E34                     i1l10251:	
  5696  0E34  0871               	movf	(eeprom_read@addr),w
  5697  0E35  1283               	bcf	status, 5	;RP0=0, select bank2
  5698  0E36  1703               	bsf	status, 6	;RP1=1, select bank2
  5699  0E37  008D               	movwf	(269)^0100h	;volatile
  5700  0E38  303F               	movlw	(03Fh)
  5701  0E39  00F0               	movwf	(??_eeprom_read+0)+0
  5702  0E3A  0870               	movf	(??_eeprom_read+0)+0,w
  5703  0E3B  1683               	bsf	status, 5	;RP0=1, select bank3
  5704  0E3C  1703               	bsf	status, 6	;RP1=1, select bank3
  5705  0E3D  058C               	andwf	(396)^0180h,f	;volatile
  5706  0E3E  140C               	bsf	(3168/8)^0180h,(3168)&7
  5707  0E3F  1003               	clrc
  5708  0E40  180C               	btfsc	(3168/8)^0180h,(3168)&7
  5709  0E41  1403               	setc
  5710  0E42  3000               	movlw	0
  5711  0E43  1803               	skipnc
  5712  0E44  3001               	movlw	1
  5713                           
  5714  0E45  1283               	bcf	status, 5	;RP0=0, select bank2
  5715  0E46  1703               	bsf	status, 6	;RP1=1, select bank2
  5716  0E47  080C               	movf	(268)^0100h,w	;volatile
  5717  0E48  2E49               	goto	i1l6988
  5718                           	
  5719  0E49                     i1l10253:	
  5720                           	line	12
  5721                           	
  5722  0E49                     i1l6988:	
  5723  0E49  0008               	return
  5724                           	opt stack 0
  5725                           GLOBAL	__end_of_eeprom_read
  5726  0E4A                     	__end_of_eeprom_read:
  5727 ;; =============== function _eeprom_read ends ============
  5728                           
  5729                           	signat	_eeprom_read,4217
  5730                           	global	_makeNibble
  5731                           psect	text1104,local,class=CODE,delta=2
  5732                           global __ptext1104
  5733  0DE5                     __ptext1104:
  5734                           
  5735 ;; *************** function _makeNibble *****************
  5736 ;; Defined at:
  5737 ;;		line 202 in file "Bluetooth.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  tempNib         1    wreg     unsigned char 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  tempNib         1    0[COMMON] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      unsigned char 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5751 ;;      Params:         0       0       0       0       0
  5752 ;;      Locals:         1       0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0
  5754 ;;      Totals:         1       0       0       0       0
  5755 ;;Total ram usage:        1 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_makeHexByte
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           psect	text1104
  5764                           	file	"Bluetooth.c"
  5765                           	line	202
  5766                           	global	__size_of_makeNibble
  5767  000F                     	__size_of_makeNibble	equ	__end_of_makeNibble-_makeNibble
  5768                           	
  5769  0DE5                     _makeNibble:	
  5770                           	opt	stack 1
  5771                           ; Regs used in _makeNibble: [wreg+status,2+status,0]
  5772                           ;makeNibble@tempNib stored from wreg
  5773  0DE5  00F0               	movwf	(makeNibble@tempNib)
  5774                           	line	203
  5775                           	
  5776  0DE6                     i1l10221:	
  5777                           ;Bluetooth.c: 203: if(tempNib>='A'){
  5778  0DE6  3041               	movlw	(041h)
  5779  0DE7  0270               	subwf	(makeNibble@tempNib),w
  5780  0DE8  1C03               	skipc
  5781  0DE9  2DEB               	goto	u287_21
  5782  0DEA  2DEC               	goto	u287_20
  5783  0DEB                     u287_21:
  5784  0DEB  2DF0               	goto	i1l10227
  5785  0DEC                     u287_20:
  5786                           	line	204
  5787                           	
  5788  0DEC                     i1l10223:	
  5789                           ;Bluetooth.c: 204: return ((tempNib - (unsigned char)'A')+10);
  5790  0DEC  0870               	movf	(makeNibble@tempNib),w
  5791  0DED  3EC9               	addlw	0C9h
  5792  0DEE  2DF3               	goto	i1l801
  5793                           	
  5794  0DEF                     i1l10225:	
  5795  0DEF  2DF3               	goto	i1l801
  5796                           	line	205
  5797                           	
  5798  0DF0                     i1l800:	
  5799                           	line	206
  5800                           	
  5801  0DF0                     i1l10227:	
  5802                           ;Bluetooth.c: 205: }
  5803                           ;Bluetooth.c: 206: return (tempNib - '0');
  5804  0DF0  0870               	movf	(makeNibble@tempNib),w
  5805  0DF1  3ED0               	addlw	0D0h
  5806  0DF2  2DF3               	goto	i1l801
  5807                           	
  5808  0DF3                     i1l10229:	
  5809                           	line	207
  5810                           	
  5811  0DF3                     i1l801:	
  5812  0DF3  0008               	return
  5813                           	opt stack 0
  5814                           GLOBAL	__end_of_makeNibble
  5815  0DF4                     	__end_of_makeNibble:
  5816 ;; =============== function _makeNibble ends ============
  5817                           
  5818                           	signat	_makeNibble,4217
  5819                           	global	_readByte
  5820                           psect	text1105,local,class=CODE,delta=2
  5821                           global __ptext1105
  5822  0DF4                     __ptext1105:
  5823                           
  5824 ;; *************** function _readByte *****************
  5825 ;; Defined at:
  5826 ;;		line 97 in file "Bluetooth.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;		None
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;		None
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  1    wreg      unsigned char 
  5833 ;; Registers used:
  5834 ;;		wreg
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5840 ;;      Params:         0       0       0       0       0
  5841 ;;      Locals:         0       0       0       0       0
  5842 ;;      Temps:          0       0       0       0       0
  5843 ;;      Totals:         0       0       0       0       0
  5844 ;;Total ram usage:        0 bytes
  5845 ;; Hardware stack levels used:    1
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_readString
  5850 ;;		_echoBack
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           psect	text1105
  5854                           	file	"Bluetooth.c"
  5855                           	line	97
  5856                           	global	__size_of_readByte
  5857  0012                     	__size_of_readByte	equ	__end_of_readByte-_readByte
  5858                           	
  5859  0DF4                     _readByte:	
  5860                           	opt	stack 2
  5861                           ; Regs used in _readByte: [wreg]
  5862                           	line	102
  5863                           	
  5864  0DF4                     i1l10165:	
  5865                           ;Bluetooth.c: 102: while(!RCIF){
  5866  0DF4  2DFC               	goto	i1l778
  5867                           	
  5868  0DF5                     i1l779:	
  5869                           	line	103
  5870                           ;Bluetooth.c: 103: if(OERR){
  5871  0DF5  1C98               	btfss	(193/8),(193)&7
  5872  0DF6  2DF8               	goto	u280_21
  5873  0DF7  2DF9               	goto	u280_20
  5874  0DF8                     u280_21:
  5875  0DF8  2DFC               	goto	i1l778
  5876  0DF9                     u280_20:
  5877                           	line	104
  5878                           	
  5879  0DF9                     i1l10167:	
  5880                           ;Bluetooth.c: 104: CREN = 0;
  5881  0DF9  1218               	bcf	(196/8),(196)&7
  5882                           	line	105
  5883                           ;Bluetooth.c: 105: CREN = 1;
  5884  0DFA  1618               	bsf	(196/8),(196)&7
  5885  0DFB  2DFC               	goto	i1l778
  5886                           	line	106
  5887                           	
  5888  0DFC                     i1l780:	
  5889                           	line	107
  5890                           	
  5891  0DFC                     i1l778:	
  5892                           	line	102
  5893  0DFC  1283               	bcf	status, 5	;RP0=0, select bank0
  5894  0DFD  1303               	bcf	status, 6	;RP1=0, select bank0
  5895  0DFE  1E8C               	btfss	(101/8),(101)&7
  5896  0DFF  2E01               	goto	u281_21
  5897  0E00  2E02               	goto	u281_20
  5898  0E01                     u281_21:
  5899  0E01  2DF5               	goto	i1l779
  5900  0E02                     u281_20:
  5901  0E02  2E03               	goto	i1l10169
  5902                           	
  5903  0E03                     i1l781:	
  5904                           	line	116
  5905                           	
  5906  0E03                     i1l10169:	
  5907                           ;Bluetooth.c: 106: }
  5908                           ;Bluetooth.c: 107: }
  5909                           ;Bluetooth.c: 116: return RCREG;
  5910  0E03  081A               	movf	(26),w	;volatile
  5911  0E04  2E05               	goto	i1l782
  5912                           	
  5913  0E05                     i1l10171:	
  5914                           	line	119
  5915                           	
  5916  0E05                     i1l782:	
  5917  0E05  0008               	return
  5918                           	opt stack 0
  5919                           GLOBAL	__end_of_readByte
  5920  0E06                     	__end_of_readByte:
  5921 ;; =============== function _readByte ends ============
  5922                           
  5923                           	signat	_readByte,89
  5924                           psect	text1106,local,class=CODE,delta=2
  5925                           global __ptext1106
  5926  0000                     __ptext1106:
  5927                           	global	btemp
  5928  007E                     	btemp set 07Eh
  5929                           
  5930                           	DABS	1,126,2	;btemp
  5931                           	global	wtemp0
  5932  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Dec 15 21:06:53 2013

                         pc 0002                          _RD 0C60                          _WR 0C61  
                        fsr 0004                 _userEndByte 0564                         l772 0DDD  
                       l773 0DDD                         l774 0DE2                         l790 04DE  
                       l775 0DE4                         l791 04E4                         l769 0E17  
                       l788 04CB                         l789 04B6                         _GIE 005F  
                       _RB1 0031                         _RD0 0040                         _RD1 0041  
                       _RD2 0042                         _RD4 0044                         _RD5 0045  
                       _RD6 0046                         _RD7 0047                         _isr 0EB8  
                       fsr0 0004                         indf 0000         __end_ofi1_writeByte 0DD9  
          ?_checkDataFrames 0072                        l4000 075C                        l2411 05CD  
                      l2405 0EEF                        l2406 0EEF                        l2407 0EF4  
                      l2423 07CF                        l2408 0F07                        l3191 0DB9  
                      l3188 0DCC                        l7610 0799                        l7603 0762  
                      l7604 0763                        ?_isr 0070                        l7605 0763  
                      l3997 074A                        l7606 076A                        l3998 075B  
                      l7607 0786                        l3999 075C                        l7608 0798  
                      l7609 0799                        l8290 0FCB                        l8287 0FA2  
                      l8288 0FA1                        l8289 0FAD                        _ADON 00F8  
                      _CREN 00C4                        u3250 0DE1                        u3251 0DE0  
                      u3260 0FAC                        u3261 0FAB                        u3270 0769  
                      u3271 0768                        u3280 0785                        u3600 0723  
                      u3281 0784                        u3290 0796                        u3291 0795  
                      u3617 0755                        u3627 0EE6                        _PEIE 005E  
                      u3580 04DD                        u3581 04DC                        u3590 0EF3  
                      u3591 0EF2                        u3585 04D9                        _RCIE 0465  
                      _RCIF 0065                        _OERR 00C1                        _WREN 0C62  
                      _TXIF 0064              ??_eeprom_write 0053      __end_of_checkStartByte 0632  
                      _main 0719               _startByteAddr 0559                        btemp 007E  
                      start 0012           _addDataToCheckSum 035F          ?_addDataToCheckSum 0070  
     makeHexByte@input_byte 0045                       ??_isr 004E                       l10601 077E  
                     l10611 078F                       l10603 0781                       l10613 0790  
                     l10605 0785                       l10615 0796                       l10607 078A  
                     l10609 078E                       l10571 0E0A                       l10573 0E14  
                     l10581 0DE2                       l10901 0731                       l10575 0E15  
                     l10591 0FA2                       l10911 074A                       l10903 0734  
                     l10577 0E16                       l10569 0E06                       l10593 0FAD  
                     l10913 074F                       l10905 0739                       l10579 0DDC  
                     l10595 0FCB                       l10907 073E                       l10589 0F9C  
                     l10597 076A                       l10909 0743                       l10599 0776  
                     l10783 0DB5                       l10871 04C2                       l10785 0DC2  
                     l10873 04CB                       l10881 0EEB                       l10875 04DE  
                     l10867 04B3                       l10883 0EF4                       l10891 079F  
                     l10869 04B6                       l10885 0F07                       l10877 0EDF  
                     l10893 07AC                       l10879 0EE2                       l10887 0567  
                     l10895 07BC                       l10889 079A                       l10897 0719  
                     l10899 0730                       ?_main 0070         ??_addDataToCheckSum 0042  
                     _EEADR 010D                       _CARRY 0018        __size_of_checkRWByte 006A  
                     i1l800 0DF0                       i1l801 0DF3                       i1l804 0E90  
                     i1l780 0DFC                       i1l772 0DCF                       i1l781 0E03  
                     i1l773 0DCF                       i1l782 0E05                       i1l774 0DD6  
                     i1l790 07F8                       i1l775 0DD8                       i1l791 07FE  
                     i1l778 0DFC                       i1l794 06F9                       i1l779 0DF5  
                     i1l795 06DE                       i1l796 0708                       i1l788 07E7  
                     i1l797 0718                       i1l789 07D4                       _RCREG 001A  
                     _RCSTA 0018                       _SPBRG 0099                       _PORTD 0008  
           __end_of_checkCS 1000        __size_of_checkLength 002F                       _TRISA 0085  
                     _TRISB 0086                       _TRISD 0088                       _TXREG 0019  
                     _TXSTA 0098                 _writeString 04B0             __end_of_getTemp 07D0  
           __end_of_initADC 0DCD             i1writeByte@Byte 0070                       _tempC 055A  
                     _tempF 055B                       pclath 000A                       status 0003  
           ?_checkStartByte 0042                       wtemp0 007E   __end_of_addDataToCheckSum 03D6  
              ?_parsePacket 0070            __end_ofi1_strlen 0F99                __end_of_main 075F  
     __size_of_checkCMDByte 0070               ?_readCommands 0070                      ??_main 00D2  
                i1strlen@cp 0079                 i1_writeByte 0DCD       __end_ofi1_writeString 07FF  
             _userStartByte 0565                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D                _writeByteVal 0566  
                    i1l1602 0626                      i1l1603 0631                      i1l4003 06CA  
                    i1l1612 043A                      i1l1620 067D                      i1l4004 06C3  
                    i1l1613 0445                      i1l1621 067C                      i1l4005 06C9  
                    i1l1606 04A4                      i1l1622 0682                      i1l4006 06CA  
                    i1l4007 06CD                      i1l1608 0469                      i1l1616 0FF6  
                    i1l1609 04AF                      i1l1617 0FFF                      i1l1625 03C3  
                    i1l1626 038E                      i1l1627 03D5                      i1l1628 03D5  
                    i1l1581 0EAE                      i1l1582 0EB7                      i1l1590 035E  
                    i1l1591 0355                      i1l1592 0354                      i1l1585 0F2D  
                    i1l1586 0F36                      i1l1595 02C4                      i1l1596 02AF  
                    i1l1589 0309                      i1l1597 0279                      i1l1598 02C3  
                    i1l1599 02C4                      i1l4780 018F                      i1l4781 003B  
                    i1l4782 0054                      i1l3990 0ECB                      i1l4783 006D  
                    i1l3991 0ED1                      i1l4792 07FF                      i1l4784 0092  
                    i1l3992 0ED2                      i1l4785 00AB                      i1l7610 0F67  
                    i1l4778 016A                      i1l4786 00C4                      i1l7603 0F38  
                    i1l4787 00E3                      i1l4779 0016                      i1l7604 0F39  
                    i1l4788 0162                      i1l7605 0F39                      i1l4789 018F  
                    i1l3989 0ED2                      i1l7606 0F40                      i1l7607 0F54  
                    i1l7608 0F66                      i1l7609 0F67                      i1l8290 0F98  
                    i1l8287 0F6F                      u320_20 0F64                      i1l8288 0F6E  
                    u320_21 0F63                      i1l8289 0F7A                      i1l6986 0E2C  
                    i1l6987 0E34                      i1l6988 0E49                      u330_20 0EA2  
                    u330_21 0EA1                      u331_20 0F21                      u331_21 0F20  
                    u332_20 02D6                      u340_20 0457                      u332_21 02D5  
                    u340_21 0456                      u333_20 02FC                      u341_20 0468  
                    u309_20 03D4                      u333_21 02FB                      u341_21 0467  
                    u309_21 03D3                      u318_20 0F3F                      u342_20 03FF  
                    u350_20 0EBC                      u318_21 0F3E                      u342_21 03FE  
                    u350_21 0EBB                      u334_25 0319                      u319_20 0F53  
                    u335_20 0348                      u343_20 0FEA                      u351_20 0EC2  
                    u319_21 0F52                      u335_21 0347                      u343_21 0FE9  
                    u351_21 0EC1                      u335_25 0344                      u280_20 0DF9  
                    u336_20 01A0                      u344_20 063F                      u352_20 0EC8  
                    u280_21 0DF8                      u336_21 019F                      u344_21 063E  
                    u352_21 0EC7                      u281_20 0E02                      u337_20 01AB  
                    u345_20 064C                      u353_20 06AC                      u281_21 0E01  
                    u337_21 01AA                      u345_21 064B                      u353_21 06AB  
                    u290_20 0E33                      u338_20 02C2                      u346_20 0659  
                    u354_20 06BD                      u290_21 0E32                      u338_21 02C1  
                    u346_21 0658                      u354_21 06BC                      u355_20 0DD5  
                    u283_20 0707                      u339_20 05EB                      u347_20 0664  
                    u355_21 0DD4                      u283_21 0706                      u339_21 05EA  
                    u347_21 0663                      u356_20 07F7                      u348_20 0674  
                    u356_21 07F6                      u348_21 0673                      u356_25 07F3  
                    u357_20 0F79                      u357_21 0F78                      u287_20 0DEC  
                    u287_21 0DEB                      u288_25 0E79                      _TRISD0 0440  
                    _TRISD2 0442                      _TRISD4 0444                      _TRISC6 043E  
                    _TRISD5 0445                      _TRISC7 043F                      _TRISD6 0446  
                    _TRISD7 0447                _checkCMDByte 03D6        __size_of_eeprom_read 001F  
      __size_of_makeHexByte 0025                      _maxCmd 0553            __end_of_initTemp 05CE  
          __end_of_readByte 0E06                   ??_checkCS 0074              ??_readCommands 007E  
          __end_of_readTemp 0F08        __end_of_eeprom_write 079A     __size_of_validatePacket 0051  
                 ??_getTemp 0056       readString@readStorage 0044                      clrloop 0DBB  
                    _strlen 0F99                   ??_initADC 0052                 readString@i 0045  
                    saved_w 007E      __size_of_writeCommands 0001           makeHexByte@nibOne 0044  
         makeHexByte@nibTwo 007D             eeprom_read@addr 0071  __size_of_addDataToCheckSum 0077  
            __pcstackCOMMON 0070                __pidataBANK0 0E4A          __size_of_checkEven 0027  
        __size_of_getPacket 004B           eeprom_write@value 0052                   ?i1_strlen 0070  
                _csByteAddr 0548                  __pbssBANK1 00A0          __size_of_initUSART 0012  
   __size_ofi1_eeprom_write 0031              _calcCSByteAddr 0546                  __pmaintext 0719  
      __size_of_parsePacket 0135               _writeCommands 07FF                  __pintentry 0004  
                __ptext1100 0F37                  __ptext1101 0DCD                  __ptext1102 07FF  
                __ptext1103 0E2B                  __ptext1104 0DE5                  __ptext1105 0DF4  
                __ptext1106 0000                  __ptext1080 0F99                  __ptext1081 0DD9  
                __ptext1073 079A                  __ptext1090 0FCC                  __ptext1082 0E06  
                __ptext1074 0567                  __ptext1091 03D6                  __ptext1083 0EB8  
                __ptext1075 0EDF                  __ptext1092 0446                  __ptext1084 0683  
                __ptext1076 04B0                  __ptext1093 05CE                  __ptext1085 0015  
                __ptext1077 0DC2                  __ptext1094 02C5                  __ptext1086 0632  
                __ptext1078 0DB5                  __ptext1095 0F08                  __ptext1087 0190  
                __ptext1079 075F                  __ptext1096 0E91                  __ptext1088 07D0  
                __ptext1097 0E6C                  __ptext1089 035F                  __ptext1098 06CE  
                __ptext1099 0F68                     ?_strlen 0052                     i1l10221 0DE6  
                   i1l10223 0DEC                     i1l10231 0E6F                     i1l10225 0DEF  
                   i1l10233 0E8E                     i1l10401 03BC                     i1l10171 0E05  
                   i1l10227 0DF0                     i1l10251 0E34                     i1l10235 0E90  
                   i1l10403 03C3                     i1l10165 0DF4                     i1l10229 0DF3  
                   i1l10253 0E49                     i1l10501 0F53                     i1l10167 0DF9  
                   i1l10511 0F64                     i1l10503 0F58                     i1l10191 06DE  
                   i1l10169 0E03                     i1l10505 0F5C                     i1l10193 06E8  
                   i1l10507 0F5D                     i1l10195 06EE                     i1l10187 06D1  
                   i1l10509 0F5E                     i1l10197 06F9                     i1l10189 06D3  
                   i1l10621 0EA8                     i1l10701 062C                     i1l10199 0708  
                   i1l10623 0EAD                     i1l10631 0F08                     i1l10703 0631  
                   i1l10711 046F                     i1l10625 0EAE                     i1l10617 0E91  
                   i1l10641 0F33                     i1l10633 0F21                     i1l10721 04AF  
                   i1l10713 049C                     i1l10705 0446                     i1l10801 069F  
                   i1l10627 0EB4                     i1l10619 0EA2                     i1l10643 0F36  
                   i1l10635 0F27                     i1l10651 0302                     i1l10715 04A3  
                   i1l10707 0457                     i1l10731 0439                     i1l10723 03D6  
                   i1l10395 035F                     i1l10811 0016                     i1l10803 06AC  
                   i1l10493 0F40                     i1l10629 0EB7                     i1l10637 0F2C  
                   i1l10661 034E                     i1l10653 0307                     i1l10645 02C5  
                   i1l10717 04A4                     i1l10709 0469                     i1l10725 03FF  
                   i1l10733 043A                     i1l10741 0FEA                     i1l10397 038C  
                   i1l10821 00AB                     i1l10813 003B                     i1l10805 06BD  
                   i1l10495 0F46                     i1l10639 0F2D                     i1l10663 0353  
                   i1l10655 0308                     i1l10647 02D6                     i1l10719 04AA  
                   i1l10735 0440                     i1l10727 042C                     i1l10751 0FFF  
                   i1l10743 0FF0                     i1l10399 038E                     i1l10671 0193  
                   i1l10831 00E3                     i1l10823 00C4                     i1l10815 0054  
                   i1l10807 06C3                     i1l10497 0F4C                     i1l10665 0355  
                   i1l10649 02FC                     i1l10657 0309                     i1l10737 0445  
                   i1l10729 0432                     i1l10745 0FF5                     i1l10681 0279  
                   i1l10673 0195                     i1l10761 0664                     i1l10753 0632  
                   i1l10841 0169                     i1l10833 014F                     i1l10825 00D0  
                   i1l10817 006D                     i1l10809 0015                     i1l10499 0F4F  
                   i1l10667 035B                     i1l10659 0348                     i1l10691 05EB  
                   i1l10747 0FF6                     i1l10739 0FCC                     i1l10851 07D4  
                   i1l10683 02A2                     i1l10675 01A0                     i1l10763 0674  
                   i1l10755 063F                     i1l10835 0155                     i1l10827 00D6  
                   i1l10819 0092                     i1l10843 016A                     i1l10845 0DCE  
                   i1l10861 0F6F                     i1l10669 035E                     i1l10693 05F1  
                   i1l10749 0FFC                     i1l10853 07E0                     i1l10685 02AA  
                   i1l10677 01AB                     i1l10765 067B                     i1l10757 064C  
                   i1l10837 015B                     i1l10829 00DC                     i1l10847 0DD6  
                   i1l10863 0F7A                     i1l10695 061E                     i1l10855 07E7  
                   i1l10687 02AF                     i1l10679 0275                     i1l10759 0659  
                   i1l10767 067D                     i1l10839 0162                     i1l10791 0EC2  
                   i1l10865 0F98                     i1l10697 0625                     i1l10689 05CE  
                   i1l10857 07F8                     i1l10849 07D1                     i1l10769 0682  
                   i1l10793 0EC8                     i1l10859 0F69                     i1l10699 0626  
                   i1l10795 0ECB                     i1l10787 0EB8                     i1l10797 0683  
                   i1l10789 0EBC                     i1l10799 0689                ?_writeString 0070  
                ??i1_strlen 0072                  _makeNibble 0DE5            ??_checkStartByte 0044  
         __end_of_checkEven 0EB8        __end_of_readCommands 0190                   ?_initTemp 0070  
                 ?_readByte 0070                   ?_readTemp 0052          __size_of_writeByte 000C  
  __size_of_checkDataFrames 009A           __end_of_getPacket 06CE       __size_of_eeprom_write 003B  
            ?_writeCommands 0070               ??_checkRWByte 0044                     _checkCS 0FCC  
                _readString 06CE               ??_checkLength 0074              _validatePacket 0632  
                _humStartHi 054E           __end_of_initUSART 0E18                  _humStartLo 054F  
                   _getTemp 079A                ?i1_writeByte 0070                     _initADC 0DC2  
           __size_of_strlen 0033                     _member1 0527                     _member2 0506  
                   _member3 051A                __size_of_isr 0027        end_of_initialization 04FB  
     parsePacket@dataPacket 004D                  ??_initTemp 0055                  ??_readByte 0070  
                   init_ram 0E1C                  _selectTemp 0DB5                  ??_readTemp 0054  
              _eeprom_write 075F                readString@ch 0047              main@testString 00D6  
                _tempHiAddr 055C                  _rwByteAddr 0558                  _tempLoAddr 055D  
             _dataBytesAddr 0549      __end_of_validatePacket 0683                     strlen@s 005A  
         __end_of_writeByte 0DE5         __end_of_checkRWByte 04B0         __end_of_checkLength 0F37  
               ?_makeNibble 0070                writeString@i 005E               ??_eeprom_read 0070  
                 _RXLenAddr 0545              i1_eeprom_write 0F37             ??_writeCommands 0070  
             ??_makeHexByte 0042      __size_ofi1_writeString 002F             ?_validatePacket 0046  
         ??_checkDataFrames 0074                 ?_readString 0070              __end_of_strlen 0FCC  
       start_initialization 04E5       __size_of_readCommands 017B                 __end_of_isr 0EDF  
      __size_of_writeString 0035                parsePacket@i 004C                   i1strlen@s 0078  
         __size_ofi1_strlen 0031                 ?_selectTemp 0070      __end_ofi1_eeprom_write 0F68  
            i1writeString@i 007C         __end_of_eeprom_read 0E4A         __size_of_makeNibble 000F  
               __pdataBANK0 0020                 _checkRWByte 0446                 _cmdByteAddr 0547  
       __end_of_makeHexByte 0E91                 _checkLength 0F08                _readCommands 0015  
                  ??_strlen 0054        __size_ofi1_writeByte 000C               __pcstackBANK0 0042  
             __pcstackBANK1 00D2               i1_writeString 07D0            eeprom_write@addr 0054  
       __size_of_readString 004B             ?i1_eeprom_write 007A                   _checkEven 0E91  
               _endByteAddr 054A               ??_parsePacket 0046           __size_of_initTemp 0067  
         __size_of_readByte 0012           __size_of_readTemp 0029         i1eeprom_write@value 007A  
                 _classTerm 0533                   _getPacket 0683                    ?_checkCS 0072  
                 _noDataLen 0556                   __pstrings 0500                    ?_getTemp 0070  
                  ?_initADC 0070         __size_of_selectTemp 0005                   _humHiAddr 054C  
            ?i1_writeString 0070                   _initUSART 0E06                   _humLoAddr 054D  
   i1writeString@userString 007B                   _readError 0029           interrupt_function 0004  
                ?_checkEven 0072                 _eeprom_read 0E2B               ?_checkCMDByte 0042  
               _makeHexByte 0E6C                    _GO_nDONE 00FA                  ?_getPacket 0070  
                 main@F1176 0020                 _lenByteAddr 0552         __end_of_parsePacket 02C5  
               __stringbase 0505                  ?_initUSART 0070                ??_makeNibble 0070  
                  i1_strlen 0F68                   _writeByte 0DD9             _checkDataFrames 02C5  
            ??_checkCMDByte 0044            ??_validatePacket 007E     __size_of_checkStartByte 0064  
                 init_fetch 0E18          __end_of_makeNibble 0DF4                 _humValHAddr 0550  
               _humValLAddr 0551                 _readByteVal 0557                ??_readString 0042  
               _newLineChar 0555                 _minSizeByte 0554            __size_of_checkCS 0034  
           ??i1_writeString 007A            __size_of_getTemp 0036            __size_of_initADC 000B  
        i1eeprom_write@addr 007C                    _classNum 053D                  ?_writeByte 0070  
                  _arrStore 00A0       writeString@userString 005D                _tempValHAddr 0561  
              _tempValLAddr 0562                ??_selectTemp 0052                    _initTemp 0567  
                  _readByte 0DF4                    _readTemp 0EDF               __size_of_main 0046  
               ??_checkEven 0074          __end_of_readString 0719                    _groupNum 054B  
               _parsePacket 0190                    clear_ram 0DBA                _tempUnitAddr 0560  
     __end_of_writeCommands 0800                 ??_getPacket 007E                ?_checkRWByte 0042  
              ?_checkLength 0072      parsePacket@dataCounter 004A               ??_writeString 005C  
        addDataToCheckSum@i 007D          __end_of_selectTemp 0DBA                 ??_initUSART 0052  
   __end_of_checkDataFrames 035F            ??i1_eeprom_write 007B                    intlevel1 0000  
                 stringcode 0500           makeNibble@tempNib 0070          getTemp@tempReading 0057  
               _tempStartHi 055E                 _tempStartLo 055F               ??i1_writeByte 0070  
             writeByte@Byte 0052                    strlen@cp 005B        __end_of_checkCMDByte 0446  
                  stringdir 0500                    stringtab 0500                 ??_writeByte 0052  
               _timeoutByte 0563         __end_of_writeString 04E5               ?_eeprom_write 0052  
              ?_eeprom_read 0070              _checkStartByte 05CE                ?_makeHexByte 007D  
