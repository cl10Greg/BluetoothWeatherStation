

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Dec 13 12:52:47 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 30 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 30 "main.c"
    45  2007  FF3A               	dw 0xFFFB & 0xFF7F & 0xFFBF & 0xFFFE & 0xFFFF ;#
    46                           	FNCALL	_main,_initUSART
    47                           	FNCALL	_main,_initADC
    48                           	FNCALL	_main,_writeString
    49                           	FNCALL	_main,_getPacket
    50                           	FNCALL	_getPacket,_eeprom_write
    51                           	FNCALL	_getPacket,_readString
    52                           	FNCALL	_getPacket,_eeprom_read
    53                           	FNCALL	_getPacket,_writeByte
    54                           	FNCALL	_getPacket,_parsePacket
    55                           	FNCALL	_getPacket,_validatePacket
    56                           	FNCALL	_validatePacket,_checkStartByte
    57                           	FNCALL	_validatePacket,_checkRWByte
    58                           	FNCALL	_validatePacket,_checkCMDByte
    59                           	FNCALL	_validatePacket,_checkDataFrames
    60                           	FNCALL	_validatePacket,_addDataToCheckSum
    61                           	FNCALL	_validatePacket,_checkCS
    62                           	FNCALL	_parsePacket,_checkLength
    63                           	FNCALL	_parsePacket,_checkEven
    64                           	FNCALL	_parsePacket,_makeHexByte
    65                           	FNCALL	_parsePacket,_eeprom_write
    66                           	FNCALL	_parsePacket,_strlen
    67                           	FNCALL	_parsePacket,_eeprom_read
    68                           	FNCALL	_addDataToCheckSum,_eeprom_read
    69                           	FNCALL	_addDataToCheckSum,_eeprom_write
    70                           	FNCALL	_checkCS,_eeprom_read
    71                           	FNCALL	_checkCS,_writeByte
    72                           	FNCALL	_checkCMDByte,_eeprom_read
    73                           	FNCALL	_checkCMDByte,_eeprom_write
    74                           	FNCALL	_checkCMDByte,_writeByte
    75                           	FNCALL	_checkRWByte,_eeprom_read
    76                           	FNCALL	_checkRWByte,_writeByte
    77                           	FNCALL	_checkRWByte,_eeprom_write
    78                           	FNCALL	_checkStartByte,_eeprom_read
    79                           	FNCALL	_checkStartByte,_writeByte
    80                           	FNCALL	_checkStartByte,_eeprom_write
    81                           	FNCALL	_checkDataFrames,_eeprom_read
    82                           	FNCALL	_checkDataFrames,_writeByte
    83                           	FNCALL	_checkLength,_eeprom_read
    84                           	FNCALL	_checkLength,_writeByte
    85                           	FNCALL	_checkEven,_eeprom_read
    86                           	FNCALL	_checkEven,_writeByte
    87                           	FNCALL	_makeHexByte,_makeNibble
    88                           	FNCALL	_readString,_readByte
    89                           	FNCALL	_readString,_eeprom_write
    90                           	FNCALL	_writeString,_writeByte
    91                           	FNCALL	_writeString,_strlen
    92                           	FNROOT	_main
    93                           	global	main@F1146
    94                           psect	idataBANK1,class=CODE,space=0,delta=2
    95                           global __pidataBANK1
    96  0175                     __pidataBANK1:
    97                           	file	"main.c"
    98                           	line	44
    99                           
   100                           ;initializer for main@F1146
   101  0175  3457               	retlw	057h
   102  0176  3465               	retlw	065h
   103  0177  346C               	retlw	06Ch
   104  0178  3463               	retlw	063h
   105  0179  346F               	retlw	06Fh
   106  017A  346D               	retlw	06Dh
   107  017B  3465               	retlw	065h
   108  017C  340A               	retlw	0Ah
   109  017D  3400               	retlw	0
   110                           	global	_member2
   111                           psect	strings,class=STRING,delta=2
   112                           global __pstrings
   113  0003                     __pstrings:
   114                           ;	global	stringdir,stringtab,__stringbase
   115  0003                     stringtab:
   116                           ;	String table - string pointers are 1 byte each
   117  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   118  0003  3000               movlw high(stringdir)
   119  0004  008A               movwf pclath
   120  0005  0804               movf fsr,w
   121  0006  0A84               incf fsr
   122  0007  0782               	addwf pc
   123  0008                     __stringbase:
   124  0008  3400               	retlw	0
   125                           psect	strings
   126                           	file	"userMacro.h"
   127                           	line	20
   128  0009                     _member2:
   129  0009  3444               	retlw	044h
   130  000A  3465               	retlw	065h
   131  000B  3465               	retlw	065h
   132  000C  3470               	retlw	070h
   133  000D  3461               	retlw	061h
   134  000E  346B               	retlw	06Bh
   135  000F  3420               	retlw	020h
   136  0010  3443               	retlw	043h
   137  0011  3468               	retlw	068h
   138  0012  3461               	retlw	061h
   139  0013  346E               	retlw	06Eh
   140  0014  3464               	retlw	064h
   141  0015  3472               	retlw	072h
   142  0016  3461               	retlw	061h
   143  0017  3473               	retlw	073h
   144  0018  3465               	retlw	065h
   145  0019  346B               	retlw	06Bh
   146  001A  3461               	retlw	061h
   147  001B  3472               	retlw	072h
   148  001C  3400               	retlw	0
   149                           	global	_member3
   150                           psect	strings
   151                           	file	"userMacro.h"
   152                           	line	21
   153  001D                     _member3:
   154  001D  3441               	retlw	041h
   155  001E  3470               	retlw	070h
   156  001F  3475               	retlw	075h
   157  0020  3472               	retlw	072h
   158  0021  3476               	retlw	076h
   159  0022  3465               	retlw	065h
   160  0023  3420               	retlw	020h
   161  0024  3442               	retlw	042h
   162  0025  3468               	retlw	068h
   163  0026  3469               	retlw	069h
   164  0027  3464               	retlw	064h
   165  0028  3465               	retlw	065h
   166  0029  3400               	retlw	0
   167                           	global	_member1
   168                           psect	strings
   169                           	file	"userMacro.h"
   170                           	line	19
   171  002A                     _member1:
   172  002A  3447               	retlw	047h
   173  002B  3472               	retlw	072h
   174  002C  3465               	retlw	065h
   175  002D  3467               	retlw	067h
   176  002E  3420               	retlw	020h
   177  002F  3447               	retlw	047h
   178  0030  3469               	retlw	069h
   179  0031  3472               	retlw	072h
   180  0032  3461               	retlw	061h
   181  0033  3472               	retlw	072h
   182  0034  3464               	retlw	064h
   183  0035  3400               	retlw	0
   184                           	global	_classTerm
   185                           psect	strings
   186                           	file	"userMacro.h"
   187                           	line	23
   188  0036                     _classTerm:
   189  0036  3446               	retlw	046h
   190  0037  3461               	retlw	061h
   191  0038  346C               	retlw	06Ch
   192  0039  346C               	retlw	06Ch
   193  003A  3420               	retlw	020h
   194  003B  3432               	retlw	032h
   195  003C  3430               	retlw	030h
   196  003D  3431               	retlw	031h
   197  003E  3433               	retlw	033h
   198  003F  3400               	retlw	0
   199                           	global	_classNum
   200                           psect	strings
   201                           	file	"userMacro.h"
   202                           	line	22
   203  0040                     _classNum:
   204  0040  3445               	retlw	045h
   205  0041  3443               	retlw	043h
   206  0042  3445               	retlw	045h
   207  0043  3435               	retlw	035h
   208  0044  3436               	retlw	036h
   209  0045  3432               	retlw	032h
   210  0046  3430               	retlw	030h
   211  0047  3400               	retlw	0
   212                           	global	_RXLenAddr
   213                           psect	strings
   214                           	file	"userMacro.h"
   215                           	line	33
   216  0048                     _RXLenAddr:
   217  0048  3400               	retlw	0
   218                           	global	_calcCSByteAddr
   219                           psect	strings
   220                           	file	"userMacro.h"
   221                           	line	41
   222  0049                     _calcCSByteAddr:
   223  0049  3430               	retlw	030h
   224                           	global	_cmdByteAddr
   225                           psect	strings
   226                           	file	"userMacro.h"
   227                           	line	36
   228  004A                     _cmdByteAddr:
   229  004A  3403               	retlw	03h
   230                           	global	_csByteAddr
   231                           psect	strings
   232                           	file	"userMacro.h"
   233                           	line	38
   234  004B                     _csByteAddr:
   235  004B  3405               	retlw	05h
   236                           	global	_dataBytesAddr
   237                           psect	strings
   238                           	file	"userMacro.h"
   239                           	line	40
   240  004C                     _dataBytesAddr:
   241  004C  3407               	retlw	07h
   242                           	global	_endByteAddr
   243                           psect	strings
   244                           	file	"userMacro.h"
   245                           	line	39
   246  004D                     _endByteAddr:
   247  004D  3406               	retlw	06h
   248                           	global	_groupNum
   249                           psect	strings
   250                           	file	"userMacro.h"
   251                           	line	24
   252  004E                     _groupNum:
   253  004E  3432               	retlw	032h
   254                           	global	_lenByteAddr
   255                           psect	strings
   256                           	file	"userMacro.h"
   257                           	line	37
   258  004F                     _lenByteAddr:
   259  004F  3404               	retlw	04h
   260                           	global	_maxCmd
   261                           psect	strings
   262                           	file	"userMacro.h"
   263                           	line	31
   264  0050                     _maxCmd:
   265  0050  340E               	retlw	0Eh
   266                           	global	_minSizeByte
   267                           psect	strings
   268                           	file	"userMacro.h"
   269                           	line	29
   270  0051                     _minSizeByte:
   271  0051  340A               	retlw	0Ah
   272                           	global	_newLineChar
   273                           psect	strings
   274                           	file	"userMacro.h"
   275                           	line	28
   276  0052                     _newLineChar:
   277  0052  340A               	retlw	0Ah
   278                           	global	_noDataLen
   279                           psect	strings
   280                           	file	"userMacro.h"
   281                           	line	30
   282  0053                     _noDataLen:
   283  0053  340A               	retlw	0Ah
   284                           	global	_rwByteAddr
   285                           psect	strings
   286                           	file	"userMacro.h"
   287                           	line	35
   288  0054                     _rwByteAddr:
   289  0054  3402               	retlw	02h
   290                           	global	_startByteAddr
   291                           psect	strings
   292                           	file	"userMacro.h"
   293                           	line	34
   294  0055                     _startByteAddr:
   295  0055  3401               	retlw	01h
   296                           	global	_userEndByte
   297                           psect	strings
   298                           	file	"userMacro.h"
   299                           	line	27
   300  0056                     _userEndByte:
   301  0056  340A               	retlw	0Ah
   302                           	global	_userStartByte
   303                           psect	strings
   304                           	file	"userMacro.h"
   305                           	line	26
   306  0057                     _userStartByte:
   307  0057  34AA               	retlw	0AAh
   308                           	global	_member2
   309                           	global	_member3
   310                           	global	_member1
   311                           	global	_classTerm
   312                           	global	_classNum
   313                           	global	_RXLenAddr
   314                           	global	_calcCSByteAddr
   315                           	global	_cmdByteAddr
   316                           	global	_csByteAddr
   317                           	global	_dataBytesAddr
   318                           	global	_endByteAddr
   319                           	global	_groupNum
   320                           	global	_lenByteAddr
   321                           	global	_maxCmd
   322                           	global	_minSizeByte
   323                           	global	_newLineChar
   324                           	global	_noDataLen
   325                           	global	_rwByteAddr
   326                           	global	_startByteAddr
   327                           	global	_userEndByte
   328                           	global	_userStartByte
   329                           	global	getPacket@F1148
   330                           	global	_ADCON0
   331  001F                     _ADCON0	set	31
   332                           	global	_ADRESH
   333  001E                     _ADRESH	set	30
   334                           	global	_RCREG
   335  001A                     _RCREG	set	26
   336                           	global	_RCSTA
   337  0018                     _RCSTA	set	24
   338                           	global	_TXREG
   339  0019                     _TXREG	set	25
   340                           	global	_ADON
   341  00F8                     _ADON	set	248
   342                           	global	_CARRY
   343  0018                     _CARRY	set	24
   344                           	global	_GIE
   345  005F                     _GIE	set	95
   346                           	global	_GO_nDONE
   347  00FA                     _GO_nDONE	set	250
   348                           	global	_RCIF
   349  0065                     _RCIF	set	101
   350                           	global	_TXIF
   351  0064                     _TXIF	set	100
   352                           	global	_ADCON1
   353  009F                     _ADCON1	set	159
   354                           	global	_ADRESL
   355  009E                     _ADRESL	set	158
   356                           	global	_SPBRG
   357  0099                     _SPBRG	set	153
   358                           	global	_TRISA
   359  0085                     _TRISA	set	133
   360                           	global	_TXSTA
   361  0098                     _TXSTA	set	152
   362                           	global	_TRISC6
   363  043E                     _TRISC6	set	1086
   364                           	global	_TRISC7
   365  043F                     _TRISC7	set	1087
   366                           	global	_EEADR
   367  010D                     _EEADR	set	269
   368                           	global	_EEDATA
   369  010C                     _EEDATA	set	268
   370                           	global	_EECON1
   371  018C                     _EECON1	set	396
   372                           	global	_EECON2
   373  018D                     _EECON2	set	397
   374                           	global	_RD
   375  0C60                     _RD	set	3168
   376                           	global	_WR
   377  0C61                     _WR	set	3169
   378                           	global	_WREN
   379  0C62                     _WREN	set	3170
   380                           	file	"C:\Users\ggirard\AppData\Local\Temp\s7uc."
   381                           	line	#
   382                           psect cinit,class=CODE,delta=2
   383                           global start_initialization
   384  01D1                     start_initialization:
   385                           
   386                           psect	bssBANK1,class=BANK1,space=1
   387                           global __pbssBANK1
   388  00A0                     __pbssBANK1:
   389  00A0                     getPacket@F1148:
   390  00A0                            ds      50
   391                           
   392                           psect	dataBANK1,class=BANK1,space=1
   393                           global __pdataBANK1
   394  00D2                     __pdataBANK1:
   395                           	file	"main.c"
   396                           	line	44
   397  00D2                     main@F1146:
   398  00D2                            ds      9
   399                           
   400                           psect clrtext,class=CODE,delta=2
   401                           global clear_ram
   402                           ;	Called with FSR containing the base address, and
   403                           ;	W with the last address+1
   404  016D                     clear_ram:
   405  016D  0064               	clrwdt			;clear the watchdog before getting into this loop
   406  016E                     clrloop:
   407  016E  0180               	clrf	indf		;clear RAM location pointed to by FSR
   408  016F  0A84               	incf	fsr,f		;increment pointer
   409  0170  0604               	xorwf	fsr,w		;XOR with final address
   410  0171  1903               	btfsc	status,2	;have we reached the end yet?
   411  0172  3400               	retlw	0		;all done for this memory range, return
   412  0173  0604               	xorwf	fsr,w		;XOR again to restore value
   413  0174  296E               	goto	clrloop		;do the next byte
   414                           
   415                           ; Clear objects allocated to BANK1
   416                           psect cinit,class=CODE,delta=2
   417  01D1  1383               	bcf	status, 7	;select IRP bank0
   418  01D2  30A0               	movlw	low(__pbssBANK1)
   419  01D3  0084               	movwf	fsr
   420  01D4  30D2               	movlw	low((__pbssBANK1)+032h)
   421  01D5  120A  118A  216D   	fcall	clear_ram
              120A  118A         
   422                           global btemp
   423                           psect inittext,class=CODE,delta=2
   424                           global init_fetch,btemp
   425                           ;	Called with low address in FSR and high address in W
   426  01BE                     init_fetch:
   427  01BE  087E               	movf btemp,w
   428  01BF  008A               	movwf pclath
   429  01C0  087F               	movf btemp+1,w
   430  01C1  0082               	movwf pc
   431                           global init_ram
   432                           ;Called with:
   433                           ;	high address of idata address in btemp 
   434                           ;	low address of idata address in btemp+1 
   435                           ;	low address of data in FSR
   436                           ;	high address + 1 of data in btemp-1
   437  01C2                     init_ram:
   438  01C2  120A  118A  21BE   	fcall init_fetch
              120A  118A         
   439  01C7  0080               	movwf indf,f
   440  01C8  0A84               	incf fsr,f
   441  01C9  0804               	movf fsr,w
   442  01CA  067D               	xorwf btemp-1,w
   443  01CB  1903               	btfsc status,2
   444  01CC  3400               	retlw 0
   445  01CD  0AFF               	incf btemp+1,f
   446  01CE  1903               	btfsc status,2
   447  01CF  0AFE               	incf btemp,f
   448  01D0  29C2               	goto init_ram
   449                           ; Initialize objects allocated to BANK1
   450                           psect cinit,class=CODE,delta=2
   451                           global init_ram, __pidataBANK1
   452  01DA  30DB               	movlw low(__pdataBANK1+9)
   453  01DB  00FD               	movwf btemp-1,f
   454  01DC  3001               	movlw high(__pidataBANK1)
   455  01DD  00FE               	movwf btemp,f
   456  01DE  3075               	movlw low(__pidataBANK1)
   457  01DF  00FF               	movwf btemp+1,f
   458  01E0  30D2               	movlw low(__pdataBANK1)
   459  01E1  0084               	movwf fsr,f
   460  01E2  120A  118A  21C2   	fcall init_ram
              120A  118A         
   461                           psect cinit,class=CODE,delta=2
   462                           global end_of_initialization
   463                           
   464                           ;End of C runtime variable initialization code
   465                           
   466  01E7                     end_of_initialization:
   467  01E7  0183               clrf status
   468  01E8  120A  118A  2B4A   ljmp _main	;jump to C main() function
   469                           psect	cstackCOMMON,class=COMMON,space=1
   470                           global __pcstackCOMMON
   471  0070                     __pcstackCOMMON:
   472                           	global	??_eeprom_read
   473  0070                     ??_eeprom_read:	; 0 bytes @ 0x0
   474                           	global	?_addDataToCheckSum
   475  0070                     ?_addDataToCheckSum:	; 0 bytes @ 0x0
   476                           	global	?_getPacket
   477  0070                     ?_getPacket:	; 0 bytes @ 0x0
   478                           	global	?_initUSART
   479  0070                     ?_initUSART:	; 0 bytes @ 0x0
   480                           	global	??_initUSART
   481  0070                     ??_initUSART:	; 0 bytes @ 0x0
   482                           	global	?_writeByte
   483  0070                     ?_writeByte:	; 0 bytes @ 0x0
   484                           	global	??_writeByte
   485  0070                     ??_writeByte:	; 0 bytes @ 0x0
   486                           	global	??_readByte
   487  0070                     ??_readByte:	; 0 bytes @ 0x0
   488                           	global	?_writeString
   489  0070                     ?_writeString:	; 0 bytes @ 0x0
   490                           	global	?_readString
   491  0070                     ?_readString:	; 0 bytes @ 0x0
   492                           	global	??_makeNibble
   493  0070                     ??_makeNibble:	; 0 bytes @ 0x0
   494                           	global	?_parsePacket
   495  0070                     ?_parsePacket:	; 0 bytes @ 0x0
   496                           	global	?_initADC
   497  0070                     ?_initADC:	; 0 bytes @ 0x0
   498                           	global	??_initADC
   499  0070                     ??_initADC:	; 0 bytes @ 0x0
   500                           	global	?_eeprom_read
   501  0070                     ?_eeprom_read:	; 1 bytes @ 0x0
   502                           	global	?_readByte
   503  0070                     ?_readByte:	; 1 bytes @ 0x0
   504                           	global	?_makeNibble
   505  0070                     ?_makeNibble:	; 1 bytes @ 0x0
   506                           	global	?_strlen
   507  0070                     ?_strlen:	; 2 bytes @ 0x0
   508                           	global	?_main
   509  0070                     ?_main:	; 2 bytes @ 0x0
   510                           	global	writeByte@Byte
   511  0070                     writeByte@Byte:	; 1 bytes @ 0x0
   512                           	global	makeNibble@tempNib
   513  0070                     makeNibble@tempNib:	; 1 bytes @ 0x0
   514  0070                     	ds	1
   515                           	global	eeprom_read@addr
   516  0071                     eeprom_read@addr:	; 1 bytes @ 0x1
   517  0071                     	ds	1
   518                           	global	??_strlen
   519  0072                     ??_strlen:	; 0 bytes @ 0x2
   520                           	global	?_checkEven
   521  0072                     ?_checkEven:	; 2 bytes @ 0x2
   522                           	global	?_checkLength
   523  0072                     ?_checkLength:	; 2 bytes @ 0x2
   524                           	global	?_checkDataFrames
   525  0072                     ?_checkDataFrames:	; 2 bytes @ 0x2
   526                           	global	?_checkCS
   527  0072                     ?_checkCS:	; 2 bytes @ 0x2
   528  0072                     	ds	2
   529                           	global	??_checkEven
   530  0074                     ??_checkEven:	; 0 bytes @ 0x4
   531                           	global	??_checkLength
   532  0074                     ??_checkLength:	; 0 bytes @ 0x4
   533                           	global	??_checkDataFrames
   534  0074                     ??_checkDataFrames:	; 0 bytes @ 0x4
   535                           	global	??_checkCS
   536  0074                     ??_checkCS:	; 0 bytes @ 0x4
   537  0074                     	ds	4
   538                           	global	strlen@s
   539  0078                     strlen@s:	; 1 bytes @ 0x8
   540  0078                     	ds	1
   541                           	global	strlen@cp
   542  0079                     strlen@cp:	; 1 bytes @ 0x9
   543  0079                     	ds	1
   544                           	global	??_writeString
   545  007A                     ??_writeString:	; 0 bytes @ 0xA
   546                           	global	?_eeprom_write
   547  007A                     ?_eeprom_write:	; 1 bytes @ 0xA
   548                           	global	eeprom_write@value
   549  007A                     eeprom_write@value:	; 1 bytes @ 0xA
   550  007A                     	ds	1
   551                           	global	??_eeprom_write
   552  007B                     ??_eeprom_write:	; 0 bytes @ 0xB
   553                           	global	writeString@userString
   554  007B                     writeString@userString:	; 1 bytes @ 0xB
   555  007B                     	ds	1
   556                           	global	eeprom_write@addr
   557  007C                     eeprom_write@addr:	; 1 bytes @ 0xC
   558                           	global	writeString@i
   559  007C                     writeString@i:	; 2 bytes @ 0xC
   560  007C                     	ds	1
   561                           	global	?_makeHexByte
   562  007D                     ?_makeHexByte:	; 1 bytes @ 0xD
   563                           	global	makeHexByte@nibTwo
   564  007D                     makeHexByte@nibTwo:	; 1 bytes @ 0xD
   565                           	global	addDataToCheckSum@i
   566  007D                     addDataToCheckSum@i:	; 1 bytes @ 0xD
   567  007D                     	ds	1
   568                           	global	??_validatePacket
   569  007E                     ??_validatePacket:	; 0 bytes @ 0xE
   570                           psect	cstackBANK0,class=BANK0,space=1
   571                           global __pcstackBANK0
   572  0020                     __pcstackBANK0:
   573                           	global	??_addDataToCheckSum
   574  0020                     ??_addDataToCheckSum:	; 0 bytes @ 0x0
   575                           	global	??_readString
   576  0020                     ??_readString:	; 0 bytes @ 0x0
   577                           	global	??_makeHexByte
   578  0020                     ??_makeHexByte:	; 0 bytes @ 0x0
   579                           	global	?_checkStartByte
   580  0020                     ?_checkStartByte:	; 2 bytes @ 0x0
   581                           	global	?_checkRWByte
   582  0020                     ?_checkRWByte:	; 2 bytes @ 0x0
   583                           	global	?_checkCMDByte
   584  0020                     ?_checkCMDByte:	; 2 bytes @ 0x0
   585  0020                     	ds	2
   586                           	global	??_checkStartByte
   587  0022                     ??_checkStartByte:	; 0 bytes @ 0x2
   588                           	global	??_checkRWByte
   589  0022                     ??_checkRWByte:	; 0 bytes @ 0x2
   590                           	global	??_checkCMDByte
   591  0022                     ??_checkCMDByte:	; 0 bytes @ 0x2
   592                           	global	readString@readStorage
   593  0022                     readString@readStorage:	; 1 bytes @ 0x2
   594                           	global	makeHexByte@nibOne
   595  0022                     makeHexByte@nibOne:	; 1 bytes @ 0x2
   596  0022                     	ds	1
   597                           	global	makeHexByte@input_byte
   598  0023                     makeHexByte@input_byte:	; 1 bytes @ 0x3
   599                           	global	readString@i
   600  0023                     readString@i:	; 2 bytes @ 0x3
   601  0023                     	ds	1
   602                           	global	??_parsePacket
   603  0024                     ??_parsePacket:	; 0 bytes @ 0x4
   604                           	global	?_validatePacket
   605  0024                     ?_validatePacket:	; 2 bytes @ 0x4
   606  0024                     	ds	1
   607                           	global	readString@ch
   608  0025                     readString@ch:	; 1 bytes @ 0x5
   609  0025                     	ds	3
   610                           	global	parsePacket@dataCounter
   611  0028                     parsePacket@dataCounter:	; 2 bytes @ 0x8
   612  0028                     	ds	2
   613                           	global	parsePacket@i
   614  002A                     parsePacket@i:	; 1 bytes @ 0xA
   615  002A                     	ds	1
   616                           	global	parsePacket@dataPacket
   617  002B                     parsePacket@dataPacket:	; 1 bytes @ 0xB
   618  002B                     	ds	1
   619                           	global	??_getPacket
   620  002C                     ??_getPacket:	; 0 bytes @ 0xC
   621  002C                     	ds	4
   622                           	global	getPacket@arrStore
   623  0030                     getPacket@arrStore:	; 50 bytes @ 0x10
   624  0030                     	ds	50
   625                           	global	??_main
   626  0062                     ??_main:	; 0 bytes @ 0x42
   627  0062                     	ds	4
   628                           	global	main@testString
   629  0066                     main@testString:	; 9 bytes @ 0x46
   630  0066                     	ds	9
   631 ;;Data sizes: Strings 0, constant 79, data 9, bss 50, persistent 0 stack 0
   632 ;;Auto spaces:   Size  Autos    Used
   633 ;; COMMON          14     14      14
   634 ;; BANK0           80     79      79
   635 ;; BANK1           80      0      59
   636 ;; BANK3           96      0       0
   637 ;; BANK2           96      0       0
   638                           
   639 ;;
   640 ;; Pointer list with targets:
   641                           
   642 ;; ?_strlen	unsigned int  size(1) Largest target is 50
   643 ;;		 -> getPacket@arrStore(BANK0[50]), main@testString(BANK0[9]), 
   644 ;;
   645 ;; strlen@s	PTR const unsigned char  size(1) Largest target is 50
   646 ;;		 -> getPacket@arrStore(BANK0[50]), main@testString(BANK0[9]), 
   647 ;;
   648 ;; strlen@cp	PTR const unsigned char  size(1) Largest target is 50
   649 ;;		 -> getPacket@arrStore(BANK0[50]), main@testString(BANK0[9]), 
   650 ;;
   651 ;; parsePacket@dataPacket	PTR unsigned char  size(1) Largest target is 50
   652 ;;		 -> getPacket@arrStore(BANK0[50]), 
   653 ;;
   654 ;; readString@readStorage	PTR unsigned char  size(1) Largest target is 50
   655 ;;		 -> getPacket@arrStore(BANK0[50]), 
   656 ;;
   657 ;; writeString@userString	PTR unsigned char  size(1) Largest target is 9
   658 ;;		 -> main@testString(BANK0[9]), 
   659 ;;
   660                           
   661                           
   662 ;;
   663 ;; Critical Paths under _main in COMMON
   664 ;;
   665 ;;   _main->_writeString
   666 ;;   _validatePacket->_addDataToCheckSum
   667 ;;   _parsePacket->_makeHexByte
   668 ;;   _addDataToCheckSum->_eeprom_write
   669 ;;   _checkCS->_eeprom_read
   670 ;;   _checkCMDByte->_eeprom_write
   671 ;;   _checkRWByte->_eeprom_write
   672 ;;   _checkStartByte->_eeprom_write
   673 ;;   _checkDataFrames->_eeprom_read
   674 ;;   _checkLength->_eeprom_read
   675 ;;   _checkEven->_eeprom_read
   676 ;;   _makeHexByte->_eeprom_write
   677 ;;   _readString->_eeprom_write
   678 ;;   _writeString->_strlen
   679 ;;   _eeprom_write->_strlen
   680 ;;
   681 ;; Critical Paths under _main in BANK0
   682 ;;
   683 ;;   _main->_getPacket
   684 ;;   _getPacket->_parsePacket
   685 ;;   _validatePacket->_checkStartByte
   686 ;;   _validatePacket->_checkRWByte
   687 ;;   _validatePacket->_checkCMDByte
   688 ;;   _parsePacket->_makeHexByte
   689 ;;
   690 ;; Critical Paths under _main in BANK1
   691 ;;
   692 ;;   None.
   693 ;;
   694 ;; Critical Paths under _main in BANK3
   695 ;;
   696 ;;   None.
   697 ;;
   698 ;; Critical Paths under _main in BANK2
   699 ;;
   700 ;;   None.
   701                           
   702 ;;
   703 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   704 ;;
   705                           
   706 ;;
   707 ;;Call Graph Tables:
   708 ;;
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (0) _main                                                13    13      0    1837
   713 ;;                                             66 BANK0     13    13      0
   714 ;;                          _initUSART
   715 ;;                            _initADC
   716 ;;                        _writeString
   717 ;;                          _getPacket
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (1) _getPacket                                           54    54      0    1589
   720 ;;                                             12 BANK0     54    54      0
   721 ;;                       _eeprom_write
   722 ;;                         _readString
   723 ;;                        _eeprom_read
   724 ;;                          _writeByte
   725 ;;                        _parsePacket
   726 ;;                     _validatePacket
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (2) _validatePacket                                       2     0      2     488
   729 ;;                                              4 BANK0      2     0      2
   730 ;;                     _checkStartByte
   731 ;;                        _checkRWByte
   732 ;;                       _checkCMDByte
   733 ;;                    _checkDataFrames
   734 ;;                  _addDataToCheckSum
   735 ;;                            _checkCS
   736 ;; ---------------------------------------------------------------------------------
   737 ;; (2) _parsePacket                                          8     8      0     783
   738 ;;                                              4 BANK0      8     8      0
   739 ;;                        _checkLength
   740 ;;                          _checkEven
   741 ;;                        _makeHexByte
   742 ;;                       _eeprom_write
   743 ;;                             _strlen
   744 ;;                        _eeprom_read
   745 ;; ---------------------------------------------------------------------------------
   746 ;; (3) _addDataToCheckSum                                    3     3      0     118
   747 ;;                                             13 COMMON     1     1      0
   748 ;;                                              0 BANK0      2     2      0
   749 ;;                        _eeprom_read
   750 ;;                       _eeprom_write
   751 ;; ---------------------------------------------------------------------------------
   752 ;; (3) _checkCS                                              3     1      2      44
   753 ;;                                              2 COMMON     3     1      2
   754 ;;                        _eeprom_read
   755 ;;                          _writeByte
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (3) _checkCMDByte                                         4     2      2      94
   758 ;;                                              0 BANK0      4     2      2
   759 ;;                        _eeprom_read
   760 ;;                       _eeprom_write
   761 ;;                          _writeByte
   762 ;; ---------------------------------------------------------------------------------
   763 ;; (3) _checkRWByte                                          4     2      2      94
   764 ;;                                              0 BANK0      4     2      2
   765 ;;                        _eeprom_read
   766 ;;                          _writeByte
   767 ;;                       _eeprom_write
   768 ;; ---------------------------------------------------------------------------------
   769 ;; (3) _checkStartByte                                       4     2      2      94
   770 ;;                                              0 BANK0      4     2      2
   771 ;;                        _eeprom_read
   772 ;;                          _writeByte
   773 ;;                       _eeprom_write
   774 ;; ---------------------------------------------------------------------------------
   775 ;; (3) _checkDataFrames                                      8     6      2      44
   776 ;;                                              2 COMMON     8     6      2
   777 ;;                        _eeprom_read
   778 ;;                          _writeByte
   779 ;; ---------------------------------------------------------------------------------
   780 ;; (3) _checkLength                                          3     1      2      44
   781 ;;                                              2 COMMON     3     1      2
   782 ;;                        _eeprom_read
   783 ;;                          _writeByte
   784 ;; ---------------------------------------------------------------------------------
   785 ;; (3) _checkEven                                            3     1      2      44
   786 ;;                                              2 COMMON     3     1      2
   787 ;;                        _eeprom_read
   788 ;;                          _writeByte
   789 ;; ---------------------------------------------------------------------------------
   790 ;; (3) _makeHexByte                                          5     4      1     134
   791 ;;                                             13 COMMON     1     0      1
   792 ;;                                              0 BANK0      4     4      0
   793 ;;                         _makeNibble
   794 ;;                       _eeprom_write (ARG)
   795 ;;                             _strlen (ARG)
   796 ;; ---------------------------------------------------------------------------------
   797 ;; (2) _readString                                           6     6      0     164
   798 ;;                                              0 BANK0      6     6      0
   799 ;;                           _readByte
   800 ;;                       _eeprom_write
   801 ;; ---------------------------------------------------------------------------------
   802 ;; (1) _writeString                                          4     4      0     223
   803 ;;                                             10 COMMON     4     4      0
   804 ;;                          _writeByte
   805 ;;                             _strlen
   806 ;; ---------------------------------------------------------------------------------
   807 ;; (1) _initADC                                              0     0      0       0
   808 ;; ---------------------------------------------------------------------------------
   809 ;; (4) _eeprom_read                                          2     2      0      22
   810 ;;                                              0 COMMON     2     2      0
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (4) _makeNibble                                           1     1      0      66
   813 ;;                                              0 COMMON     1     1      0
   814 ;; ---------------------------------------------------------------------------------
   815 ;; (4) _eeprom_write                                         3     2      1      50
   816 ;;                                             10 COMMON     3     2      1
   817 ;;                         _makeNibble (ARG)
   818 ;;                             _strlen (ARG)
   819 ;;                        _eeprom_read (ARG)
   820 ;; ---------------------------------------------------------------------------------
   821 ;; (3) _strlen                                              10     8      2      89
   822 ;;                                              0 COMMON    10     8      2
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (3) _readByte                                             0     0      0       0
   825 ;; ---------------------------------------------------------------------------------
   826 ;; (4) _writeByte                                            1     1      0      22
   827 ;;                                              0 COMMON     1     1      0
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (1) _initUSART                                            0     0      0       0
   830 ;; ---------------------------------------------------------------------------------
   831 ;; Estimated maximum stack depth 4
   832 ;; ---------------------------------------------------------------------------------
   833                           
   834 ;; Call Graph Graphs:
   835                           
   836 ;; _main (ROOT)
   837 ;;   _initUSART
   838 ;;   _initADC
   839 ;;   _writeString
   840 ;;     _writeByte
   841 ;;     _strlen
   842 ;;   _getPacket
   843 ;;     _eeprom_write
   844 ;;       _makeNibble (ARG)
   845 ;;       _strlen (ARG)
   846 ;;       _eeprom_read (ARG)
   847 ;;     _readString
   848 ;;       _readByte
   849 ;;       _eeprom_write
   850 ;;         _makeNibble (ARG)
   851 ;;         _strlen (ARG)
   852 ;;         _eeprom_read (ARG)
   853 ;;     _eeprom_read
   854 ;;     _writeByte
   855 ;;     _parsePacket
   856 ;;       _checkLength
   857 ;;         _eeprom_read
   858 ;;         _writeByte
   859 ;;       _checkEven
   860 ;;         _eeprom_read
   861 ;;         _writeByte
   862 ;;       _makeHexByte
   863 ;;         _makeNibble
   864 ;;         _eeprom_write (ARG)
   865 ;;           _makeNibble (ARG)
   866 ;;           _strlen (ARG)
   867 ;;           _eeprom_read (ARG)
   868 ;;         _strlen (ARG)
   869 ;;       _eeprom_write
   870 ;;         _makeNibble (ARG)
   871 ;;         _strlen (ARG)
   872 ;;         _eeprom_read (ARG)
   873 ;;       _strlen
   874 ;;       _eeprom_read
   875 ;;     _validatePacket
   876 ;;       _checkStartByte
   877 ;;         _eeprom_read
   878 ;;         _writeByte
   879 ;;         _eeprom_write
   880 ;;           _makeNibble (ARG)
   881 ;;           _strlen (ARG)
   882 ;;           _eeprom_read (ARG)
   883 ;;       _checkRWByte
   884 ;;         _eeprom_read
   885 ;;         _writeByte
   886 ;;         _eeprom_write
   887 ;;           _makeNibble (ARG)
   888 ;;           _strlen (ARG)
   889 ;;           _eeprom_read (ARG)
   890 ;;       _checkCMDByte
   891 ;;         _eeprom_read
   892 ;;         _eeprom_write
   893 ;;           _makeNibble (ARG)
   894 ;;           _strlen (ARG)
   895 ;;           _eeprom_read (ARG)
   896 ;;         _writeByte
   897 ;;       _checkDataFrames
   898 ;;         _eeprom_read
   899 ;;         _writeByte
   900 ;;       _addDataToCheckSum
   901 ;;         _eeprom_read
   902 ;;         _eeprom_write
   903 ;;           _makeNibble (ARG)
   904 ;;           _strlen (ARG)
   905 ;;           _eeprom_read (ARG)
   906 ;;       _checkCS
   907 ;;         _eeprom_read
   908 ;;         _writeByte
   909 ;;
   910                           
   911 ;; Address spaces:
   912                           
   913 ;;Name               Size   Autos  Total    Cost      Usage
   914 ;;BANK3               60      0       0       9        0.0%
   915 ;;BITBANK3            60      0       0       8        0.0%
   916 ;;SFR3                 0      0       0       4        0.0%
   917 ;;BITSFR3              0      0       0       4        0.0%
   918 ;;BANK2               60      0       0      11        0.0%
   919 ;;BITBANK2            60      0       0      10        0.0%
   920 ;;SFR2                 0      0       0       5        0.0%
   921 ;;BITSFR2              0      0       0       5        0.0%
   922 ;;SFR1                 0      0       0       2        0.0%
   923 ;;BITSFR1              0      0       0       2        0.0%
   924 ;;BANK1               50      0      3B       7       73.8%
   925 ;;BITBANK1            50      0       0       6        0.0%
   926 ;;CODE                 0      0       0       0        0.0%
   927 ;;DATA                 0      0      9C      12        0.0%
   928 ;;ABS                  0      0      98       3        0.0%
   929 ;;NULL                 0      0       0       0        0.0%
   930 ;;STACK                0      0       4       2        0.0%
   931 ;;BANK0               50     4F      4F       5       98.8%
   932 ;;BITBANK0            50      0       0       4        0.0%
   933 ;;SFR0                 0      0       0       1        0.0%
   934 ;;BITSFR0              0      0       0       1        0.0%
   935 ;;COMMON               E      E       E       1      100.0%
   936 ;;BITCOMMON            E      0       0       0        0.0%
   937 ;;EEDATA             100      0       0       0        0.0%
   938                           
   939                           	global	_main
   940                           psect	maintext,global,class=CODE,delta=2
   941                           global __pmaintext
   942  034A                     __pmaintext:
   943                           
   944 ;; *************** function _main *****************
   945 ;; Defined at:
   946 ;;		line 43 in file "main.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  testString      9   70[BANK0 ] unsigned char [9]
   951 ;; Return value:  Size  Location     Type
   952 ;;                  2  3768[COMMON] int 
   953 ;; Registers used:
   954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 17F/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   960 ;;      Params:         0       0       0       0       0
   961 ;;      Locals:         0       9       0       0       0
   962 ;;      Temps:          0       4       0       0       0
   963 ;;      Totals:         0      13       0       0       0
   964 ;;Total ram usage:       13 bytes
   965 ;; Hardware stack levels required when called:    4
   966 ;; This function calls:
   967 ;;		_initUSART
   968 ;;		_initADC
   969 ;;		_writeString
   970 ;;		_getPacket
   971 ;; This function is called by:
   972 ;;		Startup code after reset
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           psect	maintext
   976                           	file	"main.c"
   977                           	line	43
   978                           	global	__size_of_main
   979  0039                     	__size_of_main	equ	__end_of_main-_main
   980                           	
   981  034A                     _main:	
   982                           	opt	stack 4
   983                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   984                           	line	44
   985                           	
   986  034A                     l7530:	
   987                           ;main.c: 44: char testString[] = "Welcome\n";
   988  034A  3066               	movlw	(main@testString)&0ffh
   989  034B  0084               	movwf	fsr0
   990  034C  30D2               	movlw	low(main@F1146)
   991  034D  1283               	bcf	status, 5	;RP0=0, select bank0
   992  034E  1303               	bcf	status, 6	;RP1=0, select bank0
   993  034F  00E2               	movwf	(??_main+0)+0
   994  0350  0804               	movf	fsr0,w
   995  0351  00E3               	movwf	((??_main+0)+0+1)
   996  0352  3009               	movlw	9
   997  0353  00E4               	movwf	((??_main+0)+0+2)
   998  0354                     u2930:
   999  0354  0862               	movf	(??_main+0)+0,w
  1000  0355  0084               	movwf	fsr0
  1001  0356  1383               	bcf	status, 7	;select IRP bank1
  1002                           	
  1003  0357  0800               	movf	indf,w
  1004  0358  00E5               	movwf	((??_main+0)+0+3)
  1005  0359  0AE2               	incf	(??_main+0)+0,f
  1006  035A  0863               	movf	((??_main+0)+0+1),w
  1007  035B  0084               	movwf	fsr0
  1008                           	
  1009  035C  0865               	movf	((??_main+0)+0+3),w
  1010  035D  0080               	movwf	indf
  1011  035E  0AE3               	incf	((??_main+0)+0+1),f
  1012  035F  0BE4               	decfsz	((??_main+0)+0+2),f
  1013  0360  2B54               	goto	u2930
  1014                           	line	48
  1015                           	
  1016  0361                     l7532:	
  1017                           ;main.c: 48: initUSART();
  1018  0361  120A  118A  21A0   	fcall	_initUSART
              120A  118A         
  1019                           	line	50
  1020                           	
  1021  0366                     l7534:	
  1022                           ;main.c: 50: initADC();
  1023  0366  120A  118A  2189   	fcall	_initADC
              120A  118A         
  1024                           	line	55
  1025                           	
  1026  036B                     l7536:	
  1027                           ;main.c: 55: writeString(testString);
  1028  036B  3066               	movlw	(main@testString)&0ffh
  1029  036C  120A  118A  2256   	fcall	_writeString
              120A  118A         
  1030  0371  2B72               	goto	l7538
  1031                           	line	59
  1032                           ;main.c: 59: while(1){
  1033                           	
  1034  0372                     l3771:	
  1035                           	line	71
  1036                           	
  1037  0372                     l7538:	
  1038                           ;main.c: 71: if(RCIF){
  1039  0372  1283               	bcf	status, 5	;RP0=0, select bank0
  1040  0373  1303               	bcf	status, 6	;RP1=0, select bank0
  1041  0374  1E8C               	btfss	(101/8),(101)&7
  1042  0375  2B77               	goto	u2941
  1043  0376  2B78               	goto	u2940
  1044  0377                     u2941:
  1045  0377  2B72               	goto	l7538
  1046  0378                     u2940:
  1047                           	line	72
  1048                           	
  1049  0378                     l7540:	
  1050                           ;main.c: 72: getPacket();
  1051  0378  120A  118A  241F   	fcall	_getPacket
              120A  118A         
  1052  037D  2B72               	goto	l7538
  1053                           	line	73
  1054                           	
  1055  037E                     l3772:	
  1056  037E  2B72               	goto	l7538
  1057                           	line	74
  1058                           	
  1059  037F                     l3773:	
  1060                           	line	59
  1061  037F  2B72               	goto	l7538
  1062                           	
  1063  0380                     l3774:	
  1064                           	line	79
  1065                           ;main.c: 73: }
  1066                           ;main.c: 74: }
  1067                           ;main.c: 78: return 0;
  1068                           ;	Return value of _main is never used
  1069                           	
  1070  0380                     l3775:	
  1071                           	global	start
  1072  0380  120A  118A  2800   	ljmp	start
  1073                           	opt stack 0
  1074                           GLOBAL	__end_of_main
  1075  0383                     	__end_of_main:
  1076 ;; =============== function _main ends ============
  1077                           
  1078                           	signat	_main,90
  1079                           	global	_getPacket
  1080                           psect	text495,local,class=CODE,delta=2
  1081                           global __ptext495
  1082  041F                     __ptext495:
  1083                           
  1084 ;; *************** function _getPacket *****************
  1085 ;; Defined at:
  1086 ;;		line 81 in file "main.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  arrStore       50   16[BANK0 ] unsigned char [50]
  1091 ;; Return value:  Size  Location     Type
  1092 ;;		None               void
  1093 ;; Registers used:
  1094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1100 ;;      Params:         0       0       0       0       0
  1101 ;;      Locals:         0      50       0       0       0
  1102 ;;      Temps:          0       4       0       0       0
  1103 ;;      Totals:         0      54       0       0       0
  1104 ;;Total ram usage:       54 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    3
  1107 ;; This function calls:
  1108 ;;		_eeprom_write
  1109 ;;		_readString
  1110 ;;		_eeprom_read
  1111 ;;		_writeByte
  1112 ;;		_parsePacket
  1113 ;;		_validatePacket
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           psect	text495
  1119                           	file	"main.c"
  1120                           	line	81
  1121                           	global	__size_of_getPacket
  1122  005D                     	__size_of_getPacket	equ	__end_of_getPacket-_getPacket
  1123                           	
  1124  041F                     _getPacket:	
  1125                           	opt	stack 4
  1126                           ; Regs used in _getPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1127                           	line	83
  1128                           	
  1129  041F                     l7514:	
  1130                           ;main.c: 83: eeprom_write(calcCSByteAddr,0x00);
  1131  041F  01FA               	clrf	(?_eeprom_write)
  1132  0420  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1133  0421  0084               	movwf	fsr0
  1134  0422  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1135  0427  120A  118A  22E5   	fcall	_eeprom_write
              120A  118A         
  1136                           	line	86
  1137                           	
  1138  042C                     l7516:	
  1139                           ;main.c: 86: char arrStore[50] = {0};
  1140  042C  3030               	movlw	(getPacket@arrStore)&0ffh
  1141  042D  0084               	movwf	fsr0
  1142  042E  30A0               	movlw	low(getPacket@F1148)
  1143  042F  1283               	bcf	status, 5	;RP0=0, select bank0
  1144  0430  1303               	bcf	status, 6	;RP1=0, select bank0
  1145  0431  00AC               	movwf	(??_getPacket+0)+0
  1146  0432  0804               	movf	fsr0,w
  1147  0433  00AD               	movwf	((??_getPacket+0)+0+1)
  1148  0434  3032               	movlw	50
  1149  0435  00AE               	movwf	((??_getPacket+0)+0+2)
  1150  0436                     u2910:
  1151  0436  082C               	movf	(??_getPacket+0)+0,w
  1152  0437  0084               	movwf	fsr0
  1153  0438  1383               	bcf	status, 7	;select IRP bank1
  1154                           	
  1155  0439  0800               	movf	indf,w
  1156  043A  00AF               	movwf	((??_getPacket+0)+0+3)
  1157  043B  0AAC               	incf	(??_getPacket+0)+0,f
  1158  043C  082D               	movf	((??_getPacket+0)+0+1),w
  1159  043D  0084               	movwf	fsr0
  1160                           	
  1161  043E  082F               	movf	((??_getPacket+0)+0+3),w
  1162  043F  0080               	movwf	indf
  1163  0440  0AAD               	incf	((??_getPacket+0)+0+1),f
  1164  0441  0BAE               	decfsz	((??_getPacket+0)+0+2),f
  1165  0442  2C36               	goto	u2910
  1166                           	line	89
  1167                           	
  1168  0443                     l7518:	
  1169                           ;main.c: 89: readString(arrStore);
  1170  0443  3030               	movlw	(getPacket@arrStore)&0ffh
  1171  0444  120A  118A  2383   	fcall	_readString
              120A  118A         
  1172                           	line	100
  1173                           	
  1174  0449                     l7520:	
  1175                           ;main.c: 100: writeByte(eeprom_read(RXLenAddr));
  1176  0449  3040               	movlw	(_RXLenAddr-__stringbase)
  1177  044A  0084               	movwf	fsr0
  1178  044B  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1179  0450  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  1180  0455  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  1181                           	line	103
  1182                           	
  1183  045A                     l7522:	
  1184                           ;main.c: 103: parsePacket(arrStore);
  1185  045A  3030               	movlw	(getPacket@arrStore)&0ffh
  1186  045B  120A  118A  26CB   	fcall	_parsePacket
              120A  118A         
  1187                           	line	107
  1188                           	
  1189  0460                     l7524:	
  1190                           ;main.c: 107: if(validatePacket()){
  1191  0460  120A  118A  23CE   	fcall	_validatePacket
              120A  118A         
  1192  0465  1283               	bcf	status, 5	;RP0=0, select bank0
  1193  0466  1303               	bcf	status, 6	;RP1=0, select bank0
  1194  0467  0825               	movf	(1+(?_validatePacket)),w
  1195  0468  0424               	iorwf	(0+(?_validatePacket)),w
  1196  0469  1903               	skipnz
  1197  046A  2C6C               	goto	u2921
  1198  046B  2C6D               	goto	u2920
  1199  046C                     u2921:
  1200  046C  2C74               	goto	l7528
  1201  046D                     u2920:
  1202                           	line	108
  1203                           	
  1204  046D                     l7526:	
  1205                           ;main.c: 108: writeByte('V');
  1206  046D  3056               	movlw	(056h)
  1207  046E  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  1208                           	line	113
  1209                           ;main.c: 113: }else{
  1210  0473  2C7B               	goto	l3782
  1211                           	
  1212  0474                     l3780:	
  1213                           	line	115
  1214                           	
  1215  0474                     l7528:	
  1216                           ;main.c: 115: writeByte('N');
  1217  0474  304E               	movlw	(04Eh)
  1218  0475  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  1219  047A  2C7B               	goto	l3782
  1220                           	line	116
  1221                           	
  1222  047B                     l3781:	
  1223                           	line	119
  1224                           	
  1225  047B                     l3782:	
  1226  047B  0008               	return
  1227                           	opt stack 0
  1228                           GLOBAL	__end_of_getPacket
  1229  047C                     	__end_of_getPacket:
  1230 ;; =============== function _getPacket ends ============
  1231                           
  1232                           	signat	_getPacket,88
  1233                           	global	_validatePacket
  1234                           psect	text496,local,class=CODE,delta=2
  1235                           global __ptext496
  1236  03CE                     __ptext496:
  1237                           
  1238 ;; *************** function _validatePacket *****************
  1239 ;; Defined at:
  1240 ;;		line 236 in file "Packet.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  2    4[BANK0 ] int 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1254 ;;      Params:         0       2       0       0       0
  1255 ;;      Locals:         0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0
  1257 ;;      Totals:         0       2       0       0       0
  1258 ;;Total ram usage:        2 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    2
  1261 ;; This function calls:
  1262 ;;		_checkStartByte
  1263 ;;		_checkRWByte
  1264 ;;		_checkCMDByte
  1265 ;;		_checkDataFrames
  1266 ;;		_addDataToCheckSum
  1267 ;;		_checkCS
  1268 ;; This function is called by:
  1269 ;;		_getPacket
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           psect	text496
  1273                           	file	"Packet.c"
  1274                           	line	236
  1275                           	global	__size_of_validatePacket
  1276  0051                     	__size_of_validatePacket	equ	__end_of_validatePacket-_validatePacket
  1277                           	
  1278  03CE                     _validatePacket:	
  1279                           	opt	stack 4
  1280                           ; Regs used in _validatePacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1281                           	line	238
  1282                           	
  1283  03CE                     l7496:	
  1284                           ;Packet.c: 238: if(checkStartByte() && checkRWByte() && checkCMDByte() && checkDataFrame
                                 s()){
  1285  03CE  120A  118A  247C   	fcall	_checkStartByte
              120A  118A         
  1286  03D3  1283               	bcf	status, 5	;RP0=0, select bank0
  1287  03D4  1303               	bcf	status, 6	;RP1=0, select bank0
  1288  03D5  0821               	movf	(1+(?_checkStartByte)),w
  1289  03D6  0420               	iorwf	(0+(?_checkStartByte)),w
  1290  03D7  1903               	skipnz
  1291  03D8  2BDA               	goto	u2861
  1292  03D9  2BDB               	goto	u2860
  1293  03DA                     u2861:
  1294  03DA  2C19               	goto	l7510
  1295  03DB                     u2860:
  1296                           	
  1297  03DB                     l7498:	
  1298  03DB  120A  118A  24E0   	fcall	_checkRWByte
              120A  118A         
  1299  03E0  1283               	bcf	status, 5	;RP0=0, select bank0
  1300  03E1  1303               	bcf	status, 6	;RP1=0, select bank0
  1301  03E2  0821               	movf	(1+(?_checkRWByte)),w
  1302  03E3  0420               	iorwf	(0+(?_checkRWByte)),w
  1303  03E4  1903               	skipnz
  1304  03E5  2BE7               	goto	u2871
  1305  03E6  2BE8               	goto	u2870
  1306  03E7                     u2871:
  1307  03E7  2C19               	goto	l7510
  1308  03E8                     u2870:
  1309                           	
  1310  03E8                     l7500:	
  1311  03E8  120A  118A  254A   	fcall	_checkCMDByte
              120A  118A         
  1312  03ED  1283               	bcf	status, 5	;RP0=0, select bank0
  1313  03EE  1303               	bcf	status, 6	;RP1=0, select bank0
  1314  03EF  0821               	movf	(1+(?_checkCMDByte)),w
  1315  03F0  0420               	iorwf	(0+(?_checkCMDByte)),w
  1316  03F1  1903               	skipnz
  1317  03F2  2BF4               	goto	u2881
  1318  03F3  2BF5               	goto	u2880
  1319  03F4                     u2881:
  1320  03F4  2C19               	goto	l7510
  1321  03F5                     u2880:
  1322                           	
  1323  03F5                     l7502:	
  1324  03F5  120A  118A  2631   	fcall	_checkDataFrames
              120A  118A         
  1325  03FA  0873               	movf	(1+(?_checkDataFrames)),w
  1326  03FB  0472               	iorwf	(0+(?_checkDataFrames)),w
  1327  03FC  1903               	skipnz
  1328  03FD  2BFF               	goto	u2891
  1329  03FE  2C00               	goto	u2890
  1330  03FF                     u2891:
  1331  03FF  2C19               	goto	l7510
  1332  0400                     u2890:
  1333                           	line	240
  1334                           	
  1335  0400                     l7504:	
  1336                           ;Packet.c: 240: addDataToCheckSum();
  1337  0400  120A  118A  25BA   	fcall	_addDataToCheckSum
              120A  118A         
  1338                           	line	242
  1339                           ;Packet.c: 242: if(checkCS())
  1340  0405  120A  118A  2316   	fcall	_checkCS
              120A  118A         
  1341  040A  0873               	movf	(1+(?_checkCS)),w
  1342  040B  0472               	iorwf	(0+(?_checkCS)),w
  1343  040C  1903               	skipnz
  1344  040D  2C0F               	goto	u2901
  1345  040E  2C10               	goto	u2900
  1346  040F                     u2901:
  1347  040F  2C19               	goto	l7510
  1348  0410                     u2900:
  1349                           	line	244
  1350                           	
  1351  0410                     l7506:	
  1352                           ;Packet.c: 244: return 1;
  1353  0410  3001               	movlw	low(01h)
  1354  0411  1283               	bcf	status, 5	;RP0=0, select bank0
  1355  0412  1303               	bcf	status, 6	;RP1=0, select bank0
  1356  0413  00A4               	movwf	(?_validatePacket)
  1357  0414  3000               	movlw	high(01h)
  1358  0415  00A5               	movwf	((?_validatePacket))+1
  1359  0416  2C1E               	goto	l1545
  1360                           	
  1361  0417                     l7508:	
  1362  0417  2C1E               	goto	l1545
  1363                           	
  1364  0418                     l1544:	
  1365  0418  2C19               	goto	l7510
  1366                           	line	245
  1367                           	
  1368  0419                     l1543:	
  1369                           	line	247
  1370                           	
  1371  0419                     l7510:	
  1372                           ;Packet.c: 245: }
  1373                           ;Packet.c: 247: return 0;
  1374  0419  1283               	bcf	status, 5	;RP0=0, select bank0
  1375  041A  1303               	bcf	status, 6	;RP1=0, select bank0
  1376  041B  01A4               	clrf	(?_validatePacket)
  1377  041C  01A5               	clrf	(?_validatePacket+1)
  1378  041D  2C1E               	goto	l1545
  1379                           	
  1380  041E                     l7512:	
  1381                           	line	249
  1382                           	
  1383  041E                     l1545:	
  1384  041E  0008               	return
  1385                           	opt stack 0
  1386                           GLOBAL	__end_of_validatePacket
  1387  041F                     	__end_of_validatePacket:
  1388 ;; =============== function _validatePacket ends ============
  1389                           
  1390                           	signat	_validatePacket,90
  1391                           	global	_parsePacket
  1392                           psect	text497,local,class=CODE,delta=2
  1393                           global __ptext497
  1394  06CB                     __ptext497:
  1395                           
  1396 ;; *************** function _parsePacket *****************
  1397 ;; Defined at:
  1398 ;;		line 114 in file "Packet.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  dataPacket      1    wreg     PTR unsigned char 
  1401 ;;		 -> getPacket@arrStore(50), 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  dataPacket      1   11[BANK0 ] PTR unsigned char 
  1404 ;;		 -> getPacket@arrStore(50), 
  1405 ;;  i               1   10[BANK0 ] unsigned char 
  1406 ;;  dataCounter     2    8[BANK0 ] int 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;		None               void
  1409 ;; Registers used:
  1410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         0       0       0       0       0
  1417 ;;      Locals:         0       4       0       0       0
  1418 ;;      Temps:          0       4       0       0       0
  1419 ;;      Totals:         0       8       0       0       0
  1420 ;;Total ram usage:        8 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    2
  1423 ;; This function calls:
  1424 ;;		_checkLength
  1425 ;;		_checkEven
  1426 ;;		_makeHexByte
  1427 ;;		_eeprom_write
  1428 ;;		_strlen
  1429 ;;		_eeprom_read
  1430 ;; This function is called by:
  1431 ;;		_getPacket
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           psect	text497
  1435                           	file	"Packet.c"
  1436                           	line	114
  1437                           	global	__size_of_parsePacket
  1438  0135                     	__size_of_parsePacket	equ	__end_of_parsePacket-_parsePacket
  1439                           	
  1440  06CB                     _parsePacket:	
  1441                           	opt	stack 4
  1442                           ; Regs used in _parsePacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1443                           ;parsePacket@dataPacket stored from wreg
  1444                           	line	116
  1445  06CB  1283               	bcf	status, 5	;RP0=0, select bank0
  1446  06CC  1303               	bcf	status, 6	;RP1=0, select bank0
  1447  06CD  00AB               	movwf	(parsePacket@dataPacket)
  1448                           	
  1449  06CE                     l7478:	
  1450                           ;Packet.c: 116: int dataCounter = 0;
  1451  06CE  01A8               	clrf	(parsePacket@dataCounter)
  1452  06CF  01A9               	clrf	(parsePacket@dataCounter+1)
  1453                           	line	119
  1454                           	
  1455  06D0                     l7480:	
  1456                           ;Packet.c: 119: if (checkLength() && checkEven()) {
  1457  06D0  120A  118A  2285   	fcall	_checkLength
              120A  118A         
  1458  06D5  0873               	movf	(1+(?_checkLength)),w
  1459  06D6  0472               	iorwf	(0+(?_checkLength)),w
  1460  06D7  1903               	skipnz
  1461  06D8  2EDA               	goto	u2831
  1462  06D9  2EDB               	goto	u2830
  1463  06DA                     u2831:
  1464  06DA  2FFF               	goto	l1522
  1465  06DB                     u2830:
  1466                           	
  1467  06DB                     l7482:	
  1468  06DB  120A  118A  222F   	fcall	_checkEven
              120A  118A         
  1469  06E0  0873               	movf	(1+(?_checkEven)),w
  1470  06E1  0472               	iorwf	(0+(?_checkEven)),w
  1471  06E2  1903               	skipnz
  1472  06E3  2EE5               	goto	u2841
  1473  06E4  2EE6               	goto	u2840
  1474  06E5                     u2841:
  1475  06E5  2FFF               	goto	l1522
  1476  06E6                     u2840:
  1477                           	line	122
  1478                           	
  1479  06E6                     l7484:	
  1480                           ;Packet.c: 122: eeprom_write(startByteAddr, makeHexByte(dataPacket[0], dataPacket[1]));
  1481  06E6  1283               	bcf	status, 5	;RP0=0, select bank0
  1482  06E7  1303               	bcf	status, 6	;RP1=0, select bank0
  1483  06E8  082B               	movf	(parsePacket@dataPacket),w
  1484  06E9  3E01               	addlw	01h
  1485  06EA  0084               	movwf	fsr0
  1486  06EB  1383               	bcf	status, 7	;select IRP bank0
  1487  06EC  0800               	movf	indf,w
  1488  06ED  00A4               	movwf	(??_parsePacket+0)+0
  1489  06EE  0824               	movf	(??_parsePacket+0)+0,w
  1490  06EF  00FD               	movwf	(?_makeHexByte)
  1491  06F0  082B               	movf	(parsePacket@dataPacket),w
  1492  06F1  0084               	movwf	fsr0
  1493  06F2  0800               	movf	indf,w
  1494  06F3  120A  118A  220A   	fcall	_makeHexByte
              120A  118A         
  1495  06F8  1283               	bcf	status, 5	;RP0=0, select bank0
  1496  06F9  1303               	bcf	status, 6	;RP1=0, select bank0
  1497  06FA  00A5               	movwf	(??_parsePacket+1)+0
  1498  06FB  0825               	movf	(??_parsePacket+1)+0,w
  1499  06FC  00FA               	movwf	(?_eeprom_write)
  1500  06FD  304D               	movlw	(_startByteAddr-__stringbase)
  1501  06FE  0084               	movwf	fsr0
  1502  06FF  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1503  0704  120A  118A  22E5   	fcall	_eeprom_write
              120A  118A         
  1504                           	line	124
  1505                           ;Packet.c: 124: eeprom_write(rwByteAddr, makeHexByte(dataPacket[2], dataPacket[3]));
  1506  0709  1283               	bcf	status, 5	;RP0=0, select bank0
  1507  070A  1303               	bcf	status, 6	;RP1=0, select bank0
  1508  070B  082B               	movf	(parsePacket@dataPacket),w
  1509  070C  3E03               	addlw	03h
  1510  070D  0084               	movwf	fsr0
  1511  070E  1383               	bcf	status, 7	;select IRP bank0
  1512  070F  0800               	movf	indf,w
  1513  0710  00A4               	movwf	(??_parsePacket+0)+0
  1514  0711  0824               	movf	(??_parsePacket+0)+0,w
  1515  0712  00FD               	movwf	(?_makeHexByte)
  1516  0713  082B               	movf	(parsePacket@dataPacket),w
  1517  0714  3E02               	addlw	02h
  1518  0715  0084               	movwf	fsr0
  1519  0716  0800               	movf	indf,w
  1520  0717  120A  118A  220A   	fcall	_makeHexByte
              120A  118A         
  1521  071C  1283               	bcf	status, 5	;RP0=0, select bank0
  1522  071D  1303               	bcf	status, 6	;RP1=0, select bank0
  1523  071E  00A5               	movwf	(??_parsePacket+1)+0
  1524  071F  0825               	movf	(??_parsePacket+1)+0,w
  1525  0720  00FA               	movwf	(?_eeprom_write)
  1526  0721  304C               	movlw	(_rwByteAddr-__stringbase)
  1527  0722  0084               	movwf	fsr0
  1528  0723  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1529  0728  120A  118A  22E5   	fcall	_eeprom_write
              120A  118A         
  1530                           	line	126
  1531                           ;Packet.c: 126: eeprom_write(cmdByteAddr, makeHexByte(dataPacket[4], dataPacket[5]));
  1532  072D  1283               	bcf	status, 5	;RP0=0, select bank0
  1533  072E  1303               	bcf	status, 6	;RP1=0, select bank0
  1534  072F  082B               	movf	(parsePacket@dataPacket),w
  1535  0730  3E05               	addlw	05h
  1536  0731  0084               	movwf	fsr0
  1537  0732  1383               	bcf	status, 7	;select IRP bank0
  1538  0733  0800               	movf	indf,w
  1539  0734  00A4               	movwf	(??_parsePacket+0)+0
  1540  0735  0824               	movf	(??_parsePacket+0)+0,w
  1541  0736  00FD               	movwf	(?_makeHexByte)
  1542  0737  082B               	movf	(parsePacket@dataPacket),w
  1543  0738  3E04               	addlw	04h
  1544  0739  0084               	movwf	fsr0
  1545  073A  0800               	movf	indf,w
  1546  073B  120A  118A  220A   	fcall	_makeHexByte
              120A  118A         
  1547  0740  1283               	bcf	status, 5	;RP0=0, select bank0
  1548  0741  1303               	bcf	status, 6	;RP1=0, select bank0
  1549  0742  00A5               	movwf	(??_parsePacket+1)+0
  1550  0743  0825               	movf	(??_parsePacket+1)+0,w
  1551  0744  00FA               	movwf	(?_eeprom_write)
  1552  0745  3042               	movlw	(_cmdByteAddr-__stringbase)
  1553  0746  0084               	movwf	fsr0
  1554  0747  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1555  074C  120A  118A  22E5   	fcall	_eeprom_write
              120A  118A         
  1556                           	line	128
  1557                           ;Packet.c: 128: eeprom_write(lenByteAddr, makeHexByte(dataPacket[6], dataPacket[7]));
  1558  0751  1283               	bcf	status, 5	;RP0=0, select bank0
  1559  0752  1303               	bcf	status, 6	;RP1=0, select bank0
  1560  0753  082B               	movf	(parsePacket@dataPacket),w
  1561  0754  3E07               	addlw	07h
  1562  0755  0084               	movwf	fsr0
  1563  0756  1383               	bcf	status, 7	;select IRP bank0
  1564  0757  0800               	movf	indf,w
  1565  0758  00A4               	movwf	(??_parsePacket+0)+0
  1566  0759  0824               	movf	(??_parsePacket+0)+0,w
  1567  075A  00FD               	movwf	(?_makeHexByte)
  1568  075B  082B               	movf	(parsePacket@dataPacket),w
  1569  075C  3E06               	addlw	06h
  1570  075D  0084               	movwf	fsr0
  1571  075E  0800               	movf	indf,w
  1572  075F  120A  118A  220A   	fcall	_makeHexByte
              120A  118A         
  1573  0764  1283               	bcf	status, 5	;RP0=0, select bank0
  1574  0765  1303               	bcf	status, 6	;RP1=0, select bank0
  1575  0766  00A5               	movwf	(??_parsePacket+1)+0
  1576  0767  0825               	movf	(??_parsePacket+1)+0,w
  1577  0768  00FA               	movwf	(?_eeprom_write)
  1578  0769  3047               	movlw	(_lenByteAddr-__stringbase)
  1579  076A  0084               	movwf	fsr0
  1580  076B  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1581  0770  120A  118A  22E5   	fcall	_eeprom_write
              120A  118A         
  1582                           	line	130
  1583                           ;Packet.c: 130: eeprom_write(csByteAddr, makeHexByte(dataPacket[strlen(dataPacket) - 2],
                                  dataPacket[strlen(dataPacket) - 1]));
  1584  0775  1283               	bcf	status, 5	;RP0=0, select bank0
  1585  0776  1303               	bcf	status, 6	;RP1=0, select bank0
  1586  0777  082B               	movf	(parsePacket@dataPacket),w
  1587  0778  120A  118A  22B4   	fcall	_strlen
              120A  118A         
  1588  077D  0870               	movf	(0+(?_strlen)),w
  1589  077E  3EFF               	addlw	0FFh
  1590  077F  1283               	bcf	status, 5	;RP0=0, select bank0
  1591  0780  1303               	bcf	status, 6	;RP1=0, select bank0
  1592  0781  072B               	addwf	(parsePacket@dataPacket),w
  1593  0782  00A4               	movwf	(??_parsePacket+0)+0
  1594  0783  0824               	movf	0+(??_parsePacket+0)+0,w
  1595  0784  0084               	movwf	fsr0
  1596  0785  1383               	bcf	status, 7	;select IRP bank0
  1597  0786  0800               	movf	indf,w
  1598  0787  00A5               	movwf	(??_parsePacket+1)+0
  1599  0788  0825               	movf	(??_parsePacket+1)+0,w
  1600  0789  00FD               	movwf	(?_makeHexByte)
  1601  078A  082B               	movf	(parsePacket@dataPacket),w
  1602  078B  120A  118A  22B4   	fcall	_strlen
              120A  118A         
  1603  0790  0870               	movf	(0+(?_strlen)),w
  1604  0791  3EFE               	addlw	0FEh
  1605  0792  1283               	bcf	status, 5	;RP0=0, select bank0
  1606  0793  1303               	bcf	status, 6	;RP1=0, select bank0
  1607  0794  072B               	addwf	(parsePacket@dataPacket),w
  1608  0795  00A6               	movwf	(??_parsePacket+2)+0
  1609  0796  0826               	movf	0+(??_parsePacket+2)+0,w
  1610  0797  0084               	movwf	fsr0
  1611  0798  1383               	bcf	status, 7	;select IRP bank0
  1612  0799  0800               	movf	indf,w
  1613  079A  120A  118A  220A   	fcall	_makeHexByte
              120A  118A         
  1614  079F  1283               	bcf	status, 5	;RP0=0, select bank0
  1615  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
  1616  07A1  00A7               	movwf	(??_parsePacket+3)+0
  1617  07A2  0827               	movf	(??_parsePacket+3)+0,w
  1618  07A3  00FA               	movwf	(?_eeprom_write)
  1619  07A4  3043               	movlw	(_csByteAddr-__stringbase)
  1620  07A5  0084               	movwf	fsr0
  1621  07A6  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1622  07AB  120A  118A  22E5   	fcall	_eeprom_write
              120A  118A         
  1623                           	line	133
  1624                           	
  1625  07B0                     l7486:	
  1626                           ;Packet.c: 133: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  1627  07B0  1283               	bcf	status, 5	;RP0=0, select bank0
  1628  07B1  1303               	bcf	status, 6	;RP1=0, select bank0
  1629  07B2  01AA               	clrf	(parsePacket@i)
  1630  07B3  2FEA               	goto	l7494
  1631                           	
  1632  07B4                     l1520:	
  1633                           	line	134
  1634                           	
  1635  07B4                     l7488:	
  1636                           ;Packet.c: 134: eeprom_write(dataBytesAddr+i, makeHexByte(dataPacket[8 + dataCounter], d
                                 ataPacket[9 + dataCounter]));
  1637  07B4  0828               	movf	(parsePacket@dataCounter),w
  1638  07B5  3E09               	addlw	09h
  1639  07B6  072B               	addwf	(parsePacket@dataPacket),w
  1640  07B7  00A4               	movwf	(??_parsePacket+0)+0
  1641  07B8  0824               	movf	0+(??_parsePacket+0)+0,w
  1642  07B9  0084               	movwf	fsr0
  1643  07BA  1383               	bcf	status, 7	;select IRP bank0
  1644  07BB  0800               	movf	indf,w
  1645  07BC  00A5               	movwf	(??_parsePacket+1)+0
  1646  07BD  0825               	movf	(??_parsePacket+1)+0,w
  1647  07BE  00FD               	movwf	(?_makeHexByte)
  1648  07BF  0828               	movf	(parsePacket@dataCounter),w
  1649  07C0  3E08               	addlw	08h
  1650  07C1  072B               	addwf	(parsePacket@dataPacket),w
  1651  07C2  00A6               	movwf	(??_parsePacket+2)+0
  1652  07C3  0826               	movf	0+(??_parsePacket+2)+0,w
  1653  07C4  0084               	movwf	fsr0
  1654  07C5  0800               	movf	indf,w
  1655  07C6  120A  118A  220A   	fcall	_makeHexByte
              120A  118A         
  1656  07CB  1283               	bcf	status, 5	;RP0=0, select bank0
  1657  07CC  1303               	bcf	status, 6	;RP1=0, select bank0
  1658  07CD  00A7               	movwf	(??_parsePacket+3)+0
  1659  07CE  0827               	movf	(??_parsePacket+3)+0,w
  1660  07CF  00FA               	movwf	(?_eeprom_write)
  1661  07D0  3044               	movlw	(_dataBytesAddr-__stringbase)
  1662  07D1  0084               	movwf	fsr0
  1663  07D2  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1664  07D7  072A               	addwf	(parsePacket@i),w
  1665  07D8  120A  118A  22E5   	fcall	_eeprom_write
              120A  118A         
  1666                           	line	135
  1667                           	
  1668  07DD                     l7490:	
  1669                           ;Packet.c: 135: dataCounter += 2;
  1670  07DD  3002               	movlw	low(02h)
  1671  07DE  1283               	bcf	status, 5	;RP0=0, select bank0
  1672  07DF  1303               	bcf	status, 6	;RP1=0, select bank0
  1673  07E0  07A8               	addwf	(parsePacket@dataCounter),f
  1674  07E1  1803               	skipnc
  1675  07E2  0AA9               	incf	(parsePacket@dataCounter+1),f
  1676  07E3  3000               	movlw	high(02h)
  1677  07E4  07A9               	addwf	(parsePacket@dataCounter+1),f
  1678                           	line	133
  1679                           	
  1680  07E5                     l7492:	
  1681  07E5  3001               	movlw	(01h)
  1682  07E6  00A4               	movwf	(??_parsePacket+0)+0
  1683  07E7  0824               	movf	(??_parsePacket+0)+0,w
  1684  07E8  07AA               	addwf	(parsePacket@i),f
  1685  07E9  2FEA               	goto	l7494
  1686                           	
  1687  07EA                     l1519:	
  1688                           	
  1689  07EA                     l7494:	
  1690  07EA  3047               	movlw	(_lenByteAddr-__stringbase)
  1691  07EB  0084               	movwf	fsr0
  1692  07EC  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1693  07F1  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  1694  07F6  1283               	bcf	status, 5	;RP0=0, select bank0
  1695  07F7  1303               	bcf	status, 6	;RP1=0, select bank0
  1696  07F8  022A               	subwf	(parsePacket@i),w
  1697  07F9  1C03               	skipc
  1698  07FA  2FFC               	goto	u2851
  1699  07FB  2FFD               	goto	u2850
  1700  07FC                     u2851:
  1701  07FC  2FB4               	goto	l7488
  1702  07FD                     u2850:
  1703  07FD  2FFF               	goto	l1522
  1704                           	
  1705  07FE                     l1521:	
  1706  07FE  2FFF               	goto	l1522
  1707                           	line	137
  1708                           	
  1709  07FF                     l1518:	
  1710                           	line	138
  1711                           	
  1712  07FF                     l1522:	
  1713  07FF  0008               	return
  1714                           	opt stack 0
  1715                           GLOBAL	__end_of_parsePacket
  1716  0800                     	__end_of_parsePacket:
  1717 ;; =============== function _parsePacket ends ============
  1718                           
  1719                           	signat	_parsePacket,4216
  1720                           	global	_addDataToCheckSum
  1721                           psect	text498,local,class=CODE,delta=2
  1722                           global __ptext498
  1723  05BA                     __ptext498:
  1724                           
  1725 ;; *************** function _addDataToCheckSum *****************
  1726 ;; Defined at:
  1727 ;;		line 258 in file "Packet.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;		None
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  i               1   13[COMMON] unsigned char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;		None               void
  1734 ;; Registers used:
  1735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         0       0       0       0       0
  1742 ;;      Locals:         1       0       0       0       0
  1743 ;;      Temps:          0       2       0       0       0
  1744 ;;      Totals:         1       2       0       0       0
  1745 ;;Total ram usage:        3 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    1
  1748 ;; This function calls:
  1749 ;;		_eeprom_read
  1750 ;;		_eeprom_write
  1751 ;; This function is called by:
  1752 ;;		_validatePacket
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           psect	text498
  1756                           	file	"Packet.c"
  1757                           	line	258
  1758                           	global	__size_of_addDataToCheckSum
  1759  0077                     	__size_of_addDataToCheckSum	equ	__end_of_addDataToCheckSum-_addDataToCheckSum
  1760                           	
  1761  05BA                     _addDataToCheckSum:	
  1762                           	opt	stack 4
  1763                           ; Regs used in _addDataToCheckSum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1764                           	line	260
  1765                           	
  1766  05BA                     l7468:	
  1767                           ;Packet.c: 260: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(lenB
                                 yteAddr));
  1768  05BA  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1769  05BB  0084               	movwf	fsr0
  1770  05BC  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1771  05C1  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  1772  05C6  1283               	bcf	status, 5	;RP0=0, select bank0
  1773  05C7  1303               	bcf	status, 6	;RP1=0, select bank0
  1774  05C8  00A0               	movwf	(??_addDataToCheckSum+0)+0
  1775  05C9  3047               	movlw	(_lenByteAddr-__stringbase)
  1776  05CA  0084               	movwf	fsr0
  1777  05CB  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1778  05D0  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  1779  05D5  1283               	bcf	status, 5	;RP0=0, select bank0
  1780  05D6  1303               	bcf	status, 6	;RP1=0, select bank0
  1781  05D7  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  1782  05D8  00A1               	movwf	(??_addDataToCheckSum+1)+0
  1783  05D9  0821               	movf	(??_addDataToCheckSum+1)+0,w
  1784  05DA  00FA               	movwf	(?_eeprom_write)
  1785  05DB  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1786  05DC  0084               	movwf	fsr0
  1787  05DD  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1788  05E2  120A  118A  22E5   	fcall	_eeprom_write
              120A  118A         
  1789                           	line	263
  1790                           	
  1791  05E7                     l7470:	
  1792                           ;Packet.c: 263: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  1793  05E7  01FD               	clrf	(addDataToCheckSum@i)
  1794  05E8  2E1E               	goto	l7476
  1795                           	
  1796  05E9                     l1549:	
  1797                           	line	265
  1798                           	
  1799  05E9                     l7472:	
  1800                           ;Packet.c: 265: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(data
                                 BytesAddr+i));
  1801  05E9  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1802  05EA  0084               	movwf	fsr0
  1803  05EB  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1804  05F0  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  1805  05F5  1283               	bcf	status, 5	;RP0=0, select bank0
  1806  05F6  1303               	bcf	status, 6	;RP1=0, select bank0
  1807  05F7  00A0               	movwf	(??_addDataToCheckSum+0)+0
  1808  05F8  3044               	movlw	(_dataBytesAddr-__stringbase)
  1809  05F9  0084               	movwf	fsr0
  1810  05FA  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1811  05FF  077D               	addwf	(addDataToCheckSum@i),w
  1812  0600  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  1813  0605  1283               	bcf	status, 5	;RP0=0, select bank0
  1814  0606  1303               	bcf	status, 6	;RP1=0, select bank0
  1815  0607  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  1816  0608  00A1               	movwf	(??_addDataToCheckSum+1)+0
  1817  0609  0821               	movf	(??_addDataToCheckSum+1)+0,w
  1818  060A  00FA               	movwf	(?_eeprom_write)
  1819  060B  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1820  060C  0084               	movwf	fsr0
  1821  060D  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1822  0612  120A  118A  22E5   	fcall	_eeprom_write
              120A  118A         
  1823                           	line	263
  1824                           	
  1825  0617                     l7474:	
  1826  0617  3001               	movlw	(01h)
  1827  0618  1283               	bcf	status, 5	;RP0=0, select bank0
  1828  0619  1303               	bcf	status, 6	;RP1=0, select bank0
  1829  061A  00A0               	movwf	(??_addDataToCheckSum+0)+0
  1830  061B  0820               	movf	(??_addDataToCheckSum+0)+0,w
  1831  061C  07FD               	addwf	(addDataToCheckSum@i),f
  1832  061D  2E1E               	goto	l7476
  1833                           	
  1834  061E                     l1548:	
  1835                           	
  1836  061E                     l7476:	
  1837  061E  3047               	movlw	(_lenByteAddr-__stringbase)
  1838  061F  0084               	movwf	fsr0
  1839  0620  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1840  0625  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  1841  062A  027D               	subwf	(addDataToCheckSum@i),w
  1842  062B  1C03               	skipc
  1843  062C  2E2E               	goto	u2821
  1844  062D  2E2F               	goto	u2820
  1845  062E                     u2821:
  1846  062E  2DE9               	goto	l7472
  1847  062F                     u2820:
  1848  062F  2E30               	goto	l1551
  1849                           	
  1850  0630                     l1550:	
  1851                           	line	267
  1852                           	
  1853  0630                     l1551:	
  1854  0630  0008               	return
  1855                           	opt stack 0
  1856                           GLOBAL	__end_of_addDataToCheckSum
  1857  0631                     	__end_of_addDataToCheckSum:
  1858 ;; =============== function _addDataToCheckSum ends ============
  1859                           
  1860                           	signat	_addDataToCheckSum,88
  1861                           	global	_checkCS
  1862                           psect	text499,local,class=CODE,delta=2
  1863                           global __ptext499
  1864  0316                     __ptext499:
  1865                           
  1866 ;; *************** function _checkCS *****************
  1867 ;; Defined at:
  1868 ;;		line 216 in file "Packet.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  2    2[COMMON] int 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1882 ;;      Params:         2       0       0       0       0
  1883 ;;      Locals:         0       0       0       0       0
  1884 ;;      Temps:          1       0       0       0       0
  1885 ;;      Totals:         3       0       0       0       0
  1886 ;;Total ram usage:        3 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    1
  1889 ;; This function calls:
  1890 ;;		_eeprom_read
  1891 ;;		_writeByte
  1892 ;; This function is called by:
  1893 ;;		_validatePacket
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           psect	text499
  1897                           	file	"Packet.c"
  1898                           	line	216
  1899                           	global	__size_of_checkCS
  1900  0034                     	__size_of_checkCS	equ	__end_of_checkCS-_checkCS
  1901                           	
  1902  0316                     _checkCS:	
  1903                           	opt	stack 4
  1904                           ; Regs used in _checkCS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1905                           	line	218
  1906                           	
  1907  0316                     l7454:	
  1908                           ;Packet.c: 218: if(eeprom_read(csByteAddr) == eeprom_read(calcCSByteAddr)){
  1909  0316  3041               	movlw	(_calcCSByteAddr-__stringbase)
  1910  0317  0084               	movwf	fsr0
  1911  0318  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1912  031D  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  1913  0322  00F4               	movwf	(??_checkCS+0)+0
  1914  0323  3043               	movlw	(_csByteAddr-__stringbase)
  1915  0324  0084               	movwf	fsr0
  1916  0325  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1917  032A  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  1918  032F  0674               	xorwf	0+(??_checkCS+0)+0,w
  1919  0330  1D03               	skipz
  1920  0331  2B33               	goto	u2811
  1921  0332  2B34               	goto	u2810
  1922  0333                     u2811:
  1923  0333  2B40               	goto	l7462
  1924  0334                     u2810:
  1925                           	line	220
  1926                           	
  1927  0334                     l7456:	
  1928                           ;Packet.c: 220: writeByte('Y');
  1929  0334  3059               	movlw	(059h)
  1930  0335  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  1931                           	line	221
  1932                           	
  1933  033A                     l7458:	
  1934                           ;Packet.c: 221: return 1;
  1935  033A  3001               	movlw	low(01h)
  1936  033B  00F2               	movwf	(?_checkCS)
  1937  033C  3000               	movlw	high(01h)
  1938  033D  00F3               	movwf	((?_checkCS))+1
  1939  033E  2B49               	goto	l1540
  1940                           	
  1941  033F                     l7460:	
  1942  033F  2B49               	goto	l1540
  1943                           	line	222
  1944                           	
  1945  0340                     l1539:	
  1946                           	line	224
  1947                           	
  1948  0340                     l7462:	
  1949                           ;Packet.c: 222: }
  1950                           ;Packet.c: 224: writeByte('N');
  1951  0340  304E               	movlw	(04Eh)
  1952  0341  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  1953                           	line	225
  1954                           	
  1955  0346                     l7464:	
  1956                           ;Packet.c: 225: return 0;
  1957  0346  01F2               	clrf	(?_checkCS)
  1958  0347  01F3               	clrf	(?_checkCS+1)
  1959  0348  2B49               	goto	l1540
  1960                           	
  1961  0349                     l7466:	
  1962                           	line	226
  1963                           	
  1964  0349                     l1540:	
  1965  0349  0008               	return
  1966                           	opt stack 0
  1967                           GLOBAL	__end_of_checkCS
  1968  034A                     	__end_of_checkCS:
  1969 ;; =============== function _checkCS ends ============
  1970                           
  1971                           	signat	_checkCS,90
  1972                           	global	_checkCMDByte
  1973                           psect	text500,local,class=CODE,delta=2
  1974                           global __ptext500
  1975  054A                     __ptext500:
  1976                           
  1977 ;; *************** function _checkCMDByte *****************
  1978 ;; Defined at:
  1979 ;;		line 193 in file "Packet.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  2    0[BANK0 ] int 
  1986 ;; Registers used:
  1987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1993 ;;      Params:         0       2       0       0       0
  1994 ;;      Locals:         0       0       0       0       0
  1995 ;;      Temps:          0       2       0       0       0
  1996 ;;      Totals:         0       4       0       0       0
  1997 ;;Total ram usage:        4 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; Hardware stack levels required when called:    1
  2000 ;; This function calls:
  2001 ;;		_eeprom_read
  2002 ;;		_eeprom_write
  2003 ;;		_writeByte
  2004 ;; This function is called by:
  2005 ;;		_validatePacket
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           psect	text500
  2009                           	file	"Packet.c"
  2010                           	line	193
  2011                           	global	__size_of_checkCMDByte
  2012  0070                     	__size_of_checkCMDByte	equ	__end_of_checkCMDByte-_checkCMDByte
  2013                           	
  2014  054A                     _checkCMDByte:	
  2015                           	opt	stack 4
  2016                           ; Regs used in _checkCMDByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2017                           	line	195
  2018                           	
  2019  054A                     l7438:	
  2020                           ;Packet.c: 195: if(eeprom_read(cmdByteAddr) >= 0 && eeprom_read(cmdByteAddr) <= maxCmd){
  2021  054A  3042               	movlw	(_cmdByteAddr-__stringbase)
  2022  054B  0084               	movwf	fsr0
  2023  054C  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2024  0551  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2025  0556  3042               	movlw	(_cmdByteAddr-__stringbase)
  2026  0557  0084               	movwf	fsr0
  2027  0558  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2028  055D  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2029  0562  1283               	bcf	status, 5	;RP0=0, select bank0
  2030  0563  1303               	bcf	status, 6	;RP1=0, select bank0
  2031  0564  00A2               	movwf	(??_checkCMDByte+0)+0
  2032  0565  3048               	movlw	(_maxCmd-__stringbase)
  2033  0566  0084               	movwf	fsr0
  2034  0567  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2035  056C  00A3               	movwf	(??_checkCMDByte+1)+0
  2036  056D  0822               	movf	0+(??_checkCMDByte+0)+0,w
  2037  056E  0223               	subwf	(??_checkCMDByte+1)+0,w
  2038  056F  1C03               	skipc
  2039  0570  2D72               	goto	u2801
  2040  0571  2D73               	goto	u2800
  2041  0572                     u2801:
  2042  0572  2DAE               	goto	l7448
  2043  0573                     u2800:
  2044                           	line	197
  2045                           	
  2046  0573                     l7440:	
  2047                           ;Packet.c: 197: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(cmdB
                                 yteAddr));
  2048  0573  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2049  0574  0084               	movwf	fsr0
  2050  0575  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2051  057A  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2052  057F  1283               	bcf	status, 5	;RP0=0, select bank0
  2053  0580  1303               	bcf	status, 6	;RP1=0, select bank0
  2054  0581  00A2               	movwf	(??_checkCMDByte+0)+0
  2055  0582  3042               	movlw	(_cmdByteAddr-__stringbase)
  2056  0583  0084               	movwf	fsr0
  2057  0584  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2058  0589  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2059  058E  1283               	bcf	status, 5	;RP0=0, select bank0
  2060  058F  1303               	bcf	status, 6	;RP1=0, select bank0
  2061  0590  0722               	addwf	0+(??_checkCMDByte+0)+0,w
  2062  0591  00A3               	movwf	(??_checkCMDByte+1)+0
  2063  0592  0823               	movf	(??_checkCMDByte+1)+0,w
  2064  0593  00FA               	movwf	(?_eeprom_write)
  2065  0594  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2066  0595  0084               	movwf	fsr0
  2067  0596  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2068  059B  120A  118A  22E5   	fcall	_eeprom_write
              120A  118A         
  2069                           	line	199
  2070                           	
  2071  05A0                     l7442:	
  2072                           ;Packet.c: 199: writeByte('C');
  2073  05A0  3043               	movlw	(043h)
  2074  05A1  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  2075                           	line	200
  2076                           	
  2077  05A6                     l7444:	
  2078                           ;Packet.c: 200: return 1;
  2079  05A6  3001               	movlw	low(01h)
  2080  05A7  1283               	bcf	status, 5	;RP0=0, select bank0
  2081  05A8  1303               	bcf	status, 6	;RP1=0, select bank0
  2082  05A9  00A0               	movwf	(?_checkCMDByte)
  2083  05AA  3000               	movlw	high(01h)
  2084  05AB  00A1               	movwf	((?_checkCMDByte))+1
  2085  05AC  2DB9               	goto	l1536
  2086                           	
  2087  05AD                     l7446:	
  2088  05AD  2DB9               	goto	l1536
  2089                           	line	201
  2090                           	
  2091  05AE                     l1535:	
  2092                           	line	203
  2093                           	
  2094  05AE                     l7448:	
  2095                           ;Packet.c: 201: }
  2096                           ;Packet.c: 203: writeByte('N');
  2097  05AE  304E               	movlw	(04Eh)
  2098  05AF  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  2099                           	line	204
  2100                           	
  2101  05B4                     l7450:	
  2102                           ;Packet.c: 204: return 0;
  2103  05B4  1283               	bcf	status, 5	;RP0=0, select bank0
  2104  05B5  1303               	bcf	status, 6	;RP1=0, select bank0
  2105  05B6  01A0               	clrf	(?_checkCMDByte)
  2106  05B7  01A1               	clrf	(?_checkCMDByte+1)
  2107  05B8  2DB9               	goto	l1536
  2108                           	
  2109  05B9                     l7452:	
  2110                           	line	205
  2111                           	
  2112  05B9                     l1536:	
  2113  05B9  0008               	return
  2114                           	opt stack 0
  2115                           GLOBAL	__end_of_checkCMDByte
  2116  05BA                     	__end_of_checkCMDByte:
  2117 ;; =============== function _checkCMDByte ends ============
  2118                           
  2119                           	signat	_checkCMDByte,90
  2120                           	global	_checkRWByte
  2121                           psect	text501,local,class=CODE,delta=2
  2122                           global __ptext501
  2123  04E0                     __ptext501:
  2124                           
  2125 ;; *************** function _checkRWByte *****************
  2126 ;; Defined at:
  2127 ;;		line 171 in file "Packet.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  2    0[BANK0 ] int 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         0       2       0       0       0
  2142 ;;      Locals:         0       0       0       0       0
  2143 ;;      Temps:          0       2       0       0       0
  2144 ;;      Totals:         0       4       0       0       0
  2145 ;;Total ram usage:        4 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    1
  2148 ;; This function calls:
  2149 ;;		_eeprom_read
  2150 ;;		_writeByte
  2151 ;;		_eeprom_write
  2152 ;; This function is called by:
  2153 ;;		_validatePacket
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           psect	text501
  2157                           	file	"Packet.c"
  2158                           	line	171
  2159                           	global	__size_of_checkRWByte
  2160  006A                     	__size_of_checkRWByte	equ	__end_of_checkRWByte-_checkRWByte
  2161                           	
  2162  04E0                     _checkRWByte:	
  2163                           	opt	stack 4
  2164                           ; Regs used in _checkRWByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2165                           	line	174
  2166                           	
  2167  04E0                     l7420:	
  2168                           ;Packet.c: 174: if(eeprom_read(rwByteAddr) == 0 || eeprom_read(rwByteAddr) == 1){
  2169  04E0  304C               	movlw	(_rwByteAddr-__stringbase)
  2170  04E1  0084               	movwf	fsr0
  2171  04E2  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2172  04E7  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2173  04EC  3A00               	xorlw	0
  2174  04ED  1903               	skipnz
  2175  04EE  2CF0               	goto	u2781
  2176  04EF  2CF1               	goto	u2780
  2177  04F0                     u2781:
  2178  04F0  2D03               	goto	l7424
  2179  04F1                     u2780:
  2180                           	
  2181  04F1                     l7422:	
  2182  04F1  304C               	movlw	(_rwByteAddr-__stringbase)
  2183  04F2  0084               	movwf	fsr0
  2184  04F3  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2185  04F8  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2186  04FD  3A01               	xorlw	01h
  2187  04FE  1D03               	skipz
  2188  04FF  2D01               	goto	u2791
  2189  0500  2D02               	goto	u2790
  2190  0501                     u2791:
  2191  0501  2D3E               	goto	l7432
  2192  0502                     u2790:
  2193  0502  2D03               	goto	l7424
  2194                           	
  2195  0503                     l1531:	
  2196                           	line	176
  2197                           	
  2198  0503                     l7424:	
  2199                           ;Packet.c: 176: writeByte('R');
  2200  0503  3052               	movlw	(052h)
  2201  0504  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  2202                           	line	178
  2203                           	
  2204  0509                     l7426:	
  2205                           ;Packet.c: 178: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(rwBy
                                 teAddr));
  2206  0509  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2207  050A  0084               	movwf	fsr0
  2208  050B  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2209  0510  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2210  0515  1283               	bcf	status, 5	;RP0=0, select bank0
  2211  0516  1303               	bcf	status, 6	;RP1=0, select bank0
  2212  0517  00A2               	movwf	(??_checkRWByte+0)+0
  2213  0518  304C               	movlw	(_rwByteAddr-__stringbase)
  2214  0519  0084               	movwf	fsr0
  2215  051A  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2216  051F  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2217  0524  1283               	bcf	status, 5	;RP0=0, select bank0
  2218  0525  1303               	bcf	status, 6	;RP1=0, select bank0
  2219  0526  0722               	addwf	0+(??_checkRWByte+0)+0,w
  2220  0527  00A3               	movwf	(??_checkRWByte+1)+0
  2221  0528  0823               	movf	(??_checkRWByte+1)+0,w
  2222  0529  00FA               	movwf	(?_eeprom_write)
  2223  052A  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2224  052B  0084               	movwf	fsr0
  2225  052C  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2226  0531  120A  118A  22E5   	fcall	_eeprom_write
              120A  118A         
  2227                           	line	179
  2228                           	
  2229  0536                     l7428:	
  2230                           ;Packet.c: 179: return 1;
  2231  0536  3001               	movlw	low(01h)
  2232  0537  1283               	bcf	status, 5	;RP0=0, select bank0
  2233  0538  1303               	bcf	status, 6	;RP1=0, select bank0
  2234  0539  00A0               	movwf	(?_checkRWByte)
  2235  053A  3000               	movlw	high(01h)
  2236  053B  00A1               	movwf	((?_checkRWByte))+1
  2237  053C  2D49               	goto	l1532
  2238                           	
  2239  053D                     l7430:	
  2240  053D  2D49               	goto	l1532
  2241                           	line	180
  2242                           	
  2243  053E                     l1529:	
  2244                           	line	182
  2245                           	
  2246  053E                     l7432:	
  2247                           ;Packet.c: 180: }
  2248                           ;Packet.c: 182: writeByte('N');
  2249  053E  304E               	movlw	(04Eh)
  2250  053F  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  2251                           	line	183
  2252                           	
  2253  0544                     l7434:	
  2254                           ;Packet.c: 183: return 0;
  2255  0544  1283               	bcf	status, 5	;RP0=0, select bank0
  2256  0545  1303               	bcf	status, 6	;RP1=0, select bank0
  2257  0546  01A0               	clrf	(?_checkRWByte)
  2258  0547  01A1               	clrf	(?_checkRWByte+1)
  2259  0548  2D49               	goto	l1532
  2260                           	
  2261  0549                     l7436:	
  2262                           	line	184
  2263                           	
  2264  0549                     l1532:	
  2265  0549  0008               	return
  2266                           	opt stack 0
  2267                           GLOBAL	__end_of_checkRWByte
  2268  054A                     	__end_of_checkRWByte:
  2269 ;; =============== function _checkRWByte ends ============
  2270                           
  2271                           	signat	_checkRWByte,90
  2272                           	global	_checkStartByte
  2273                           psect	text502,local,class=CODE,delta=2
  2274                           global __ptext502
  2275  047C                     __ptext502:
  2276                           
  2277 ;; *************** function _checkStartByte *****************
  2278 ;; Defined at:
  2279 ;;		line 148 in file "Packet.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  2    0[BANK0 ] int 
  2286 ;; Registers used:
  2287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2293 ;;      Params:         0       2       0       0       0
  2294 ;;      Locals:         0       0       0       0       0
  2295 ;;      Temps:          0       2       0       0       0
  2296 ;;      Totals:         0       4       0       0       0
  2297 ;;Total ram usage:        4 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    1
  2300 ;; This function calls:
  2301 ;;		_eeprom_read
  2302 ;;		_writeByte
  2303 ;;		_eeprom_write
  2304 ;; This function is called by:
  2305 ;;		_validatePacket
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           psect	text502
  2309                           	file	"Packet.c"
  2310                           	line	148
  2311                           	global	__size_of_checkStartByte
  2312  0064                     	__size_of_checkStartByte	equ	__end_of_checkStartByte-_checkStartByte
  2313                           	
  2314  047C                     _checkStartByte:	
  2315                           	opt	stack 4
  2316                           ; Regs used in _checkStartByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2317                           	line	151
  2318                           	
  2319  047C                     l7404:	
  2320                           ;Packet.c: 151: if (eeprom_read(startByteAddr) == userStartByte) {
  2321  047C  304F               	movlw	(_userStartByte-__stringbase)
  2322  047D  0084               	movwf	fsr0
  2323  047E  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2324  0483  1283               	bcf	status, 5	;RP0=0, select bank0
  2325  0484  1303               	bcf	status, 6	;RP1=0, select bank0
  2326  0485  00A2               	movwf	(??_checkStartByte+0)+0
  2327  0486  304D               	movlw	(_startByteAddr-__stringbase)
  2328  0487  0084               	movwf	fsr0
  2329  0488  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2330  048D  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2331  0492  1283               	bcf	status, 5	;RP0=0, select bank0
  2332  0493  1303               	bcf	status, 6	;RP1=0, select bank0
  2333  0494  0622               	xorwf	(??_checkStartByte+0)+0,w
  2334  0495  1D03               	skipz
  2335  0496  2C98               	goto	u2771
  2336  0497  2C99               	goto	u2770
  2337  0498                     u2771:
  2338  0498  2CD4               	goto	l7414
  2339  0499                     u2770:
  2340                           	line	153
  2341                           	
  2342  0499                     l7406:	
  2343                           ;Packet.c: 153: writeByte('S');
  2344  0499  3053               	movlw	(053h)
  2345  049A  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  2346                           	line	155
  2347                           	
  2348  049F                     l7408:	
  2349                           ;Packet.c: 155: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(star
                                 tByteAddr));
  2350  049F  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2351  04A0  0084               	movwf	fsr0
  2352  04A1  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2353  04A6  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2354  04AB  1283               	bcf	status, 5	;RP0=0, select bank0
  2355  04AC  1303               	bcf	status, 6	;RP1=0, select bank0
  2356  04AD  00A2               	movwf	(??_checkStartByte+0)+0
  2357  04AE  304D               	movlw	(_startByteAddr-__stringbase)
  2358  04AF  0084               	movwf	fsr0
  2359  04B0  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2360  04B5  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2361  04BA  1283               	bcf	status, 5	;RP0=0, select bank0
  2362  04BB  1303               	bcf	status, 6	;RP1=0, select bank0
  2363  04BC  0722               	addwf	0+(??_checkStartByte+0)+0,w
  2364  04BD  00A3               	movwf	(??_checkStartByte+1)+0
  2365  04BE  0823               	movf	(??_checkStartByte+1)+0,w
  2366  04BF  00FA               	movwf	(?_eeprom_write)
  2367  04C0  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2368  04C1  0084               	movwf	fsr0
  2369  04C2  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2370  04C7  120A  118A  22E5   	fcall	_eeprom_write
              120A  118A         
  2371                           	line	156
  2372                           	
  2373  04CC                     l7410:	
  2374                           ;Packet.c: 156: return 1;
  2375  04CC  3001               	movlw	low(01h)
  2376  04CD  1283               	bcf	status, 5	;RP0=0, select bank0
  2377  04CE  1303               	bcf	status, 6	;RP1=0, select bank0
  2378  04CF  00A0               	movwf	(?_checkStartByte)
  2379  04D0  3000               	movlw	high(01h)
  2380  04D1  00A1               	movwf	((?_checkStartByte))+1
  2381  04D2  2CDF               	goto	l1526
  2382                           	
  2383  04D3                     l7412:	
  2384  04D3  2CDF               	goto	l1526
  2385                           	line	157
  2386                           	
  2387  04D4                     l1525:	
  2388                           	line	159
  2389                           	
  2390  04D4                     l7414:	
  2391                           ;Packet.c: 157: }
  2392                           ;Packet.c: 159: writeByte('N');
  2393  04D4  304E               	movlw	(04Eh)
  2394  04D5  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  2395                           	line	160
  2396                           	
  2397  04DA                     l7416:	
  2398                           ;Packet.c: 160: return 0;
  2399  04DA  1283               	bcf	status, 5	;RP0=0, select bank0
  2400  04DB  1303               	bcf	status, 6	;RP1=0, select bank0
  2401  04DC  01A0               	clrf	(?_checkStartByte)
  2402  04DD  01A1               	clrf	(?_checkStartByte+1)
  2403  04DE  2CDF               	goto	l1526
  2404                           	
  2405  04DF                     l7418:	
  2406                           	line	161
  2407                           	
  2408  04DF                     l1526:	
  2409  04DF  0008               	return
  2410                           	opt stack 0
  2411                           GLOBAL	__end_of_checkStartByte
  2412  04E0                     	__end_of_checkStartByte:
  2413 ;; =============== function _checkStartByte ends ============
  2414                           
  2415                           	signat	_checkStartByte,90
  2416                           	global	_checkDataFrames
  2417                           psect	text503,local,class=CODE,delta=2
  2418                           global __ptext503
  2419  0631                     __ptext503:
  2420                           
  2421 ;; *************** function _checkDataFrames *****************
  2422 ;; Defined at:
  2423 ;;		line 85 in file "Packet.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  2    2[COMMON] int 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2437 ;;      Params:         2       0       0       0       0
  2438 ;;      Locals:         0       0       0       0       0
  2439 ;;      Temps:          6       0       0       0       0
  2440 ;;      Totals:         8       0       0       0       0
  2441 ;;Total ram usage:        8 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    1
  2444 ;; This function calls:
  2445 ;;		_eeprom_read
  2446 ;;		_writeByte
  2447 ;; This function is called by:
  2448 ;;		_validatePacket
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           psect	text503
  2452                           	file	"Packet.c"
  2453                           	line	85
  2454                           	global	__size_of_checkDataFrames
  2455  009A                     	__size_of_checkDataFrames	equ	__end_of_checkDataFrames-_checkDataFrames
  2456                           	
  2457  0631                     _checkDataFrames:	
  2458                           	opt	stack 4
  2459                           ; Regs used in _checkDataFrames: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2460                           	line	87
  2461                           	
  2462  0631                     l7378:	
  2463                           ;Packet.c: 87: if(eeprom_read(lenByteAddr) == 0 && (eeprom_read(RXLenAddr)-noDataLen) ==
                                  0){
  2464  0631  3047               	movlw	(_lenByteAddr-__stringbase)
  2465  0632  0084               	movwf	fsr0
  2466  0633  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2467  0638  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2468  063D  3800               	iorlw	0
  2469  063E  1D03               	skipz
  2470  063F  2E41               	goto	u2731
  2471  0640  2E42               	goto	u2730
  2472  0641                     u2731:
  2473  0641  2E75               	goto	l7390
  2474  0642                     u2730:
  2475                           	
  2476  0642                     l7380:	
  2477  0642  304B               	movlw	(_noDataLen-__stringbase)
  2478  0643  0084               	movwf	fsr0
  2479  0644  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2480  0649  00F4               	movwf	(??_checkDataFrames+0)+0
  2481  064A  01F5               	clrf	(??_checkDataFrames+0)+0+1
  2482  064B  09F4               	comf	(??_checkDataFrames+0)+0,f
  2483  064C  09F5               	comf	(??_checkDataFrames+0)+1,f
  2484  064D  0AF4               	incf	(??_checkDataFrames+0)+0,f
  2485  064E  1903               	skipnz
  2486  064F  0AF5               	incf	(??_checkDataFrames+0)+1,f
  2487  0650  3040               	movlw	(_RXLenAddr-__stringbase)
  2488  0651  0084               	movwf	fsr0
  2489  0652  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2490  0657  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2491  065C  0774               	addwf	0+(??_checkDataFrames+0)+0,w
  2492  065D  00F6               	movwf	(??_checkDataFrames+2)+0
  2493  065E  0875               	movf	1+(??_checkDataFrames+0)+0,w
  2494  065F  1803               	skipnc
  2495  0660  0A75               	incf	1+(??_checkDataFrames+0)+0,w
  2496  0661  00F7               	movwf	((??_checkDataFrames+2)+0)+1
  2497  0662  0877               	movf	1+(??_checkDataFrames+2)+0,w
  2498  0663  0476               	iorwf	0+(??_checkDataFrames+2)+0,w
  2499  0664  1D03               	skipz
  2500  0665  2E67               	goto	u2741
  2501  0666  2E68               	goto	u2740
  2502  0667                     u2741:
  2503  0667  2E75               	goto	l7390
  2504  0668                     u2740:
  2505                           	line	89
  2506                           	
  2507  0668                     l7382:	
  2508                           ;Packet.c: 89: writeByte('D');
  2509  0668  3044               	movlw	(044h)
  2510  0669  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  2511                           	line	90
  2512                           	
  2513  066E                     l7384:	
  2514                           ;Packet.c: 90: return 1;
  2515  066E  3001               	movlw	low(01h)
  2516  066F  00F2               	movwf	(?_checkDataFrames)
  2517  0670  3000               	movlw	high(01h)
  2518  0671  00F3               	movwf	((?_checkDataFrames))+1
  2519  0672  2ECA               	goto	l1513
  2520                           	
  2521  0673                     l7386:	
  2522  0673  2ECA               	goto	l1513
  2523                           	line	94
  2524                           	
  2525  0674                     l7388:	
  2526                           ;Packet.c: 94: }else if((eeprom_read(RXLenAddr) - noDataLen) == (eeprom_read(lenByteAddr
                                 )*2)){
  2527  0674  2EC1               	goto	l7398
  2528                           	
  2529  0675                     l1512:	
  2530                           	
  2531  0675                     l7390:	
  2532  0675  3047               	movlw	(_lenByteAddr-__stringbase)
  2533  0676  0084               	movwf	fsr0
  2534  0677  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2535  067C  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2536  0681  00F4               	movwf	(??_checkDataFrames+0)+0
  2537  0682  01F5               	clrf	(??_checkDataFrames+0)+0+1
  2538  0683  3001               	movlw	01h
  2539  0684  00FF               	movwf	btemp+1
  2540  0685                     u2755:
  2541  0685  1003               	clrc
  2542  0686  0DF4               	rlf	(??_checkDataFrames+0)+0,f
  2543  0687  0DF5               	rlf	(??_checkDataFrames+0)+1,f
  2544  0688  0BFF               	decfsz	btemp+1,f
  2545  0689  2E85               	goto	u2755
  2546  068A  304B               	movlw	(_noDataLen-__stringbase)
  2547  068B  0084               	movwf	fsr0
  2548  068C  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2549  0691  00F6               	movwf	(??_checkDataFrames+2)+0
  2550  0692  01F7               	clrf	(??_checkDataFrames+2)+0+1
  2551  0693  09F6               	comf	(??_checkDataFrames+2)+0,f
  2552  0694  09F7               	comf	(??_checkDataFrames+2)+1,f
  2553  0695  0AF6               	incf	(??_checkDataFrames+2)+0,f
  2554  0696  1903               	skipnz
  2555  0697  0AF7               	incf	(??_checkDataFrames+2)+1,f
  2556  0698  3040               	movlw	(_RXLenAddr-__stringbase)
  2557  0699  0084               	movwf	fsr0
  2558  069A  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2559  069F  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2560  06A4  0776               	addwf	0+(??_checkDataFrames+2)+0,w
  2561  06A5  00F8               	movwf	(??_checkDataFrames+4)+0
  2562  06A6  0877               	movf	1+(??_checkDataFrames+2)+0,w
  2563  06A7  1803               	skipnc
  2564  06A8  0A77               	incf	1+(??_checkDataFrames+2)+0,w
  2565  06A9  00F9               	movwf	((??_checkDataFrames+4)+0)+1
  2566  06AA  0875               	movf	1+(??_checkDataFrames+0)+0,w
  2567  06AB  0679               	xorwf	1+(??_checkDataFrames+4)+0,w
  2568  06AC  1D03               	skipz
  2569  06AD  2EB0               	goto	u2765
  2570  06AE  0874               	movf	0+(??_checkDataFrames+0)+0,w
  2571  06AF  0678               	xorwf	0+(??_checkDataFrames+4)+0,w
  2572  06B0                     u2765:
  2573                           
  2574  06B0  1D03               	skipz
  2575  06B1  2EB3               	goto	u2761
  2576  06B2  2EB4               	goto	u2760
  2577  06B3                     u2761:
  2578  06B3  2EC1               	goto	l7398
  2579  06B4                     u2760:
  2580                           	line	96
  2581                           	
  2582  06B4                     l7392:	
  2583                           ;Packet.c: 96: writeByte('D');
  2584  06B4  3044               	movlw	(044h)
  2585  06B5  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  2586                           	line	97
  2587                           	
  2588  06BA                     l7394:	
  2589                           ;Packet.c: 97: return 1;
  2590  06BA  3001               	movlw	low(01h)
  2591  06BB  00F2               	movwf	(?_checkDataFrames)
  2592  06BC  3000               	movlw	high(01h)
  2593  06BD  00F3               	movwf	((?_checkDataFrames))+1
  2594  06BE  2ECA               	goto	l1513
  2595                           	
  2596  06BF                     l7396:	
  2597  06BF  2ECA               	goto	l1513
  2598                           	line	98
  2599                           	
  2600  06C0                     l1515:	
  2601  06C0  2EC1               	goto	l7398
  2602                           	line	101
  2603                           	
  2604  06C1                     l1514:	
  2605                           	
  2606  06C1                     l7398:	
  2607                           ;Packet.c: 98: }
  2608                           ;Packet.c: 101: writeByte('N');
  2609  06C1  304E               	movlw	(04Eh)
  2610  06C2  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  2611                           	line	102
  2612                           	
  2613  06C7                     l7400:	
  2614                           ;Packet.c: 102: return 0;
  2615  06C7  01F2               	clrf	(?_checkDataFrames)
  2616  06C8  01F3               	clrf	(?_checkDataFrames+1)
  2617  06C9  2ECA               	goto	l1513
  2618                           	
  2619  06CA                     l7402:	
  2620                           	line	103
  2621                           	
  2622  06CA                     l1513:	
  2623  06CA  0008               	return
  2624                           	opt stack 0
  2625                           GLOBAL	__end_of_checkDataFrames
  2626  06CB                     	__end_of_checkDataFrames:
  2627 ;; =============== function _checkDataFrames ends ============
  2628                           
  2629                           	signat	_checkDataFrames,90
  2630                           	global	_checkLength
  2631                           psect	text504,local,class=CODE,delta=2
  2632                           global __ptext504
  2633  0285                     __ptext504:
  2634                           
  2635 ;; *************** function _checkLength *****************
  2636 ;; Defined at:
  2637 ;;		line 64 in file "Packet.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  2    2[COMMON] int 
  2644 ;; Registers used:
  2645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2651 ;;      Params:         2       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0
  2653 ;;      Temps:          1       0       0       0       0
  2654 ;;      Totals:         3       0       0       0       0
  2655 ;;Total ram usage:        3 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    1
  2658 ;; This function calls:
  2659 ;;		_eeprom_read
  2660 ;;		_writeByte
  2661 ;; This function is called by:
  2662 ;;		_parsePacket
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           psect	text504
  2666                           	file	"Packet.c"
  2667                           	line	64
  2668                           	global	__size_of_checkLength
  2669  002F                     	__size_of_checkLength	equ	__end_of_checkLength-_checkLength
  2670                           	
  2671  0285                     _checkLength:	
  2672                           	opt	stack 4
  2673                           ; Regs used in _checkLength: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2674                           	line	67
  2675                           	
  2676  0285                     l7364:	
  2677                           ;Packet.c: 67: if (eeprom_read(RXLenAddr) >= minSizeByte) {
  2678  0285  3040               	movlw	(_RXLenAddr-__stringbase)
  2679  0286  0084               	movwf	fsr0
  2680  0287  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2681  028C  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2682  0291  00F4               	movwf	(??_checkLength+0)+0
  2683  0292  3049               	movlw	(_minSizeByte-__stringbase)
  2684  0293  0084               	movwf	fsr0
  2685  0294  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2686  0299  0274               	subwf	0+(??_checkLength+0)+0,w
  2687  029A  1C03               	skipc
  2688  029B  2A9D               	goto	u2721
  2689  029C  2A9E               	goto	u2720
  2690  029D                     u2721:
  2691  029D  2AAA               	goto	l7372
  2692  029E                     u2720:
  2693                           	line	69
  2694                           	
  2695  029E                     l7366:	
  2696                           ;Packet.c: 69: writeByte('L');
  2697  029E  304C               	movlw	(04Ch)
  2698  029F  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  2699                           	line	70
  2700                           	
  2701  02A4                     l7368:	
  2702                           ;Packet.c: 70: return 1;
  2703  02A4  3001               	movlw	low(01h)
  2704  02A5  00F2               	movwf	(?_checkLength)
  2705  02A6  3000               	movlw	high(01h)
  2706  02A7  00F3               	movwf	((?_checkLength))+1
  2707  02A8  2AB3               	goto	l1509
  2708                           	
  2709  02A9                     l7370:	
  2710  02A9  2AB3               	goto	l1509
  2711                           	line	71
  2712                           	
  2713  02AA                     l1508:	
  2714                           	line	73
  2715                           	
  2716  02AA                     l7372:	
  2717                           ;Packet.c: 71: }
  2718                           ;Packet.c: 73: writeByte('N');
  2719  02AA  304E               	movlw	(04Eh)
  2720  02AB  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  2721                           	line	74
  2722                           	
  2723  02B0                     l7374:	
  2724                           ;Packet.c: 74: return 0;
  2725  02B0  01F2               	clrf	(?_checkLength)
  2726  02B1  01F3               	clrf	(?_checkLength+1)
  2727  02B2  2AB3               	goto	l1509
  2728                           	
  2729  02B3                     l7376:	
  2730                           	line	75
  2731                           	
  2732  02B3                     l1509:	
  2733  02B3  0008               	return
  2734                           	opt stack 0
  2735                           GLOBAL	__end_of_checkLength
  2736  02B4                     	__end_of_checkLength:
  2737 ;; =============== function _checkLength ends ============
  2738                           
  2739                           	signat	_checkLength,90
  2740                           	global	_checkEven
  2741                           psect	text505,local,class=CODE,delta=2
  2742                           global __ptext505
  2743  022F                     __ptext505:
  2744                           
  2745 ;; *************** function _checkEven *****************
  2746 ;; Defined at:
  2747 ;;		line 42 in file "Packet.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  2    2[COMMON] int 
  2754 ;; Registers used:
  2755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2761 ;;      Params:         2       0       0       0       0
  2762 ;;      Locals:         0       0       0       0       0
  2763 ;;      Temps:          1       0       0       0       0
  2764 ;;      Totals:         3       0       0       0       0
  2765 ;;Total ram usage:        3 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    1
  2768 ;; This function calls:
  2769 ;;		_eeprom_read
  2770 ;;		_writeByte
  2771 ;; This function is called by:
  2772 ;;		_parsePacket
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           psect	text505
  2776                           	file	"Packet.c"
  2777                           	line	42
  2778                           	global	__size_of_checkEven
  2779  0027                     	__size_of_checkEven	equ	__end_of_checkEven-_checkEven
  2780                           	
  2781  022F                     _checkEven:	
  2782                           	opt	stack 4
  2783                           ; Regs used in _checkEven: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2784                           	line	45
  2785                           	
  2786  022F                     l7350:	
  2787                           ;Packet.c: 45: if (eeprom_read(RXLenAddr) % 2 == 0) {
  2788  022F  3040               	movlw	(_RXLenAddr-__stringbase)
  2789  0230  0084               	movwf	fsr0
  2790  0231  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2791  0236  120A  118A  21EB   	fcall	_eeprom_read
              120A  118A         
  2792  023B  00F4               	movwf	(??_checkEven+0)+0
  2793  023C  1874               	btfsc	0+(??_checkEven+0)+0,(0)&7
  2794  023D  2A3F               	goto	u2711
  2795  023E  2A40               	goto	u2710
  2796  023F                     u2711:
  2797  023F  2A4C               	goto	l7358
  2798  0240                     u2710:
  2799                           	line	47
  2800                           	
  2801  0240                     l7352:	
  2802                           ;Packet.c: 47: writeByte('E');
  2803  0240  3045               	movlw	(045h)
  2804  0241  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  2805                           	line	48
  2806                           	
  2807  0246                     l7354:	
  2808                           ;Packet.c: 48: return 1;
  2809  0246  3001               	movlw	low(01h)
  2810  0247  00F2               	movwf	(?_checkEven)
  2811  0248  3000               	movlw	high(01h)
  2812  0249  00F3               	movwf	((?_checkEven))+1
  2813  024A  2A55               	goto	l1505
  2814                           	
  2815  024B                     l7356:	
  2816  024B  2A55               	goto	l1505
  2817                           	line	49
  2818                           	
  2819  024C                     l1504:	
  2820                           	line	51
  2821                           	
  2822  024C                     l7358:	
  2823                           ;Packet.c: 49: }
  2824                           ;Packet.c: 51: writeByte('N');
  2825  024C  304E               	movlw	(04Eh)
  2826  024D  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  2827                           	line	52
  2828                           	
  2829  0252                     l7360:	
  2830                           ;Packet.c: 52: return 0;
  2831  0252  01F2               	clrf	(?_checkEven)
  2832  0253  01F3               	clrf	(?_checkEven+1)
  2833  0254  2A55               	goto	l1505
  2834                           	
  2835  0255                     l7362:	
  2836                           	line	53
  2837                           	
  2838  0255                     l1505:	
  2839  0255  0008               	return
  2840                           	opt stack 0
  2841                           GLOBAL	__end_of_checkEven
  2842  0256                     	__end_of_checkEven:
  2843 ;; =============== function _checkEven ends ============
  2844                           
  2845                           	signat	_checkEven,90
  2846                           	global	_makeHexByte
  2847                           psect	text506,local,class=CODE,delta=2
  2848                           global __ptext506
  2849  020A                     __ptext506:
  2850                           
  2851 ;; *************** function _makeHexByte *****************
  2852 ;; Defined at:
  2853 ;;		line 195 in file "Bluetooth.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  nibOne          1    wreg     unsigned char 
  2856 ;;  nibTwo          1   13[COMMON] unsigned char 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  nibOne          1    2[BANK0 ] unsigned char 
  2859 ;;  input_byte      1    3[BANK0 ] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      unsigned char 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0, pclath, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         1       0       0       0       0
  2870 ;;      Locals:         0       2       0       0       0
  2871 ;;      Temps:          0       2       0       0       0
  2872 ;;      Totals:         1       4       0       0       0
  2873 ;;Total ram usage:        5 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    1
  2876 ;; This function calls:
  2877 ;;		_makeNibble
  2878 ;; This function is called by:
  2879 ;;		_parsePacket
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           psect	text506
  2883                           	file	"Bluetooth.c"
  2884                           	line	195
  2885                           	global	__size_of_makeHexByte
  2886  0025                     	__size_of_makeHexByte	equ	__end_of_makeHexByte-_makeHexByte
  2887                           	
  2888  020A                     _makeHexByte:	
  2889                           	opt	stack 4
  2890                           ; Regs used in _makeHexByte: [wreg+status,2+status,0+pclath+cstack]
  2891                           ;makeHexByte@nibOne stored from wreg
  2892                           	line	197
  2893  020A  1283               	bcf	status, 5	;RP0=0, select bank0
  2894  020B  1303               	bcf	status, 6	;RP1=0, select bank0
  2895  020C  00A2               	movwf	(makeHexByte@nibOne)
  2896                           	
  2897  020D                     l7344:	
  2898                           ;Bluetooth.c: 196: unsigned char input_byte;
  2899                           ;Bluetooth.c: 197: input_byte = (makeNibble(nibOne)<<4);
  2900  020D  0822               	movf	(makeHexByte@nibOne),w
  2901  020E  120A  118A  21AF   	fcall	_makeNibble
              120A  118A         
  2902  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  2903  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  2904  0215  00A0               	movwf	(??_makeHexByte+0)+0
  2905  0216  3003               	movlw	(04h)-1
  2906  0217                     u2705:
  2907  0217  1003               	clrc
  2908  0218  0DA0               	rlf	(??_makeHexByte+0)+0,f
  2909  0219  3EFF               	addlw	-1
  2910  021A  1D03               	skipz
  2911  021B  2A17               	goto	u2705
  2912  021C  1003               	clrc
  2913  021D  0D20               	rlf	(??_makeHexByte+0)+0,w
  2914  021E  00A1               	movwf	(??_makeHexByte+1)+0
  2915  021F  0821               	movf	(??_makeHexByte+1)+0,w
  2916  0220  00A3               	movwf	(makeHexByte@input_byte)
  2917                           	line	198
  2918                           ;Bluetooth.c: 198: input_byte|= makeNibble(nibTwo);
  2919  0221  087D               	movf	(makeHexByte@nibTwo),w
  2920  0222  120A  118A  21AF   	fcall	_makeNibble
              120A  118A         
  2921  0227  1283               	bcf	status, 5	;RP0=0, select bank0
  2922  0228  1303               	bcf	status, 6	;RP1=0, select bank0
  2923  0229  00A0               	movwf	(??_makeHexByte+0)+0
  2924  022A  0820               	movf	(??_makeHexByte+0)+0,w
  2925  022B  04A3               	iorwf	(makeHexByte@input_byte),f
  2926                           	line	199
  2927                           	
  2928  022C                     l7346:	
  2929                           ;Bluetooth.c: 199: return input_byte;
  2930  022C  0823               	movf	(makeHexByte@input_byte),w
  2931  022D  2A2E               	goto	l765
  2932                           	
  2933  022E                     l7348:	
  2934                           	line	200
  2935                           	
  2936  022E                     l765:	
  2937  022E  0008               	return
  2938                           	opt stack 0
  2939                           GLOBAL	__end_of_makeHexByte
  2940  022F                     	__end_of_makeHexByte:
  2941 ;; =============== function _makeHexByte ends ============
  2942                           
  2943                           	signat	_makeHexByte,8313
  2944                           	global	_readString
  2945                           psect	text507,local,class=CODE,delta=2
  2946                           global __ptext507
  2947  0383                     __ptext507:
  2948                           
  2949 ;; *************** function _readString *****************
  2950 ;; Defined at:
  2951 ;;		line 147 in file "Bluetooth.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  readStorage     1    wreg     PTR unsigned char 
  2954 ;;		 -> getPacket@arrStore(50), 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  readStorage     1    2[BANK0 ] PTR unsigned char 
  2957 ;;		 -> getPacket@arrStore(50), 
  2958 ;;  i               2    3[BANK0 ] unsigned int 
  2959 ;;  ch              1    5[BANK0 ] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;		None               void
  2962 ;; Registers used:
  2963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2969 ;;      Params:         0       0       0       0       0
  2970 ;;      Locals:         0       4       0       0       0
  2971 ;;      Temps:          0       2       0       0       0
  2972 ;;      Totals:         0       6       0       0       0
  2973 ;;Total ram usage:        6 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    1
  2976 ;; This function calls:
  2977 ;;		_readByte
  2978 ;;		_eeprom_write
  2979 ;; This function is called by:
  2980 ;;		_getPacket
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           psect	text507
  2984                           	file	"Bluetooth.c"
  2985                           	line	147
  2986                           	global	__size_of_readString
  2987  004B                     	__size_of_readString	equ	__end_of_readString-_readString
  2988                           	
  2989  0383                     _readString:	
  2990                           	opt	stack 5
  2991                           ; Regs used in _readString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2992                           ;readString@readStorage stored from wreg
  2993                           	line	149
  2994  0383  1283               	bcf	status, 5	;RP0=0, select bank0
  2995  0384  1303               	bcf	status, 6	;RP1=0, select bank0
  2996  0385  00A2               	movwf	(readString@readStorage)
  2997                           	
  2998  0386                     l7330:	
  2999                           ;Bluetooth.c: 149: unsigned int i = 0;
  3000  0386  01A3               	clrf	(readString@i)
  3001  0387  01A4               	clrf	(readString@i+1)
  3002                           	line	154
  3003                           	
  3004  0388                     l7332:	
  3005                           ;Bluetooth.c: 151: unsigned char ch;
  3006                           ;Bluetooth.c: 154: ch = readByte();
  3007  0388  120A  118A  217E   	fcall	_readByte
              120A  118A         
  3008  038D  1283               	bcf	status, 5	;RP0=0, select bank0
  3009  038E  1303               	bcf	status, 6	;RP1=0, select bank0
  3010  038F  00A0               	movwf	(??_readString+0)+0
  3011  0390  0820               	movf	(??_readString+0)+0,w
  3012  0391  00A5               	movwf	(readString@ch)
  3013                           	line	156
  3014                           ;Bluetooth.c: 156: while(ch != userEndByte)
  3015  0392  2BAE               	goto	l7340
  3016                           	
  3017  0393                     l756:	
  3018                           	line	159
  3019                           	
  3020  0393                     l7334:	
  3021                           ;Bluetooth.c: 157: {
  3022                           ;Bluetooth.c: 159: readStorage[i] = ch;
  3023  0393  0825               	movf	(readString@ch),w
  3024  0394  00A0               	movwf	(??_readString+0)+0
  3025  0395  0823               	movf	(readString@i),w
  3026  0396  0722               	addwf	(readString@readStorage),w
  3027  0397  00A1               	movwf	(??_readString+1)+0
  3028  0398  0821               	movf	0+(??_readString+1)+0,w
  3029  0399  0084               	movwf	fsr0
  3030  039A  0820               	movf	(??_readString+0)+0,w
  3031  039B  1383               	bcf	status, 7	;select IRP bank0
  3032  039C  0080               	movwf	indf
  3033                           	line	161
  3034                           	
  3035  039D                     l7336:	
  3036                           ;Bluetooth.c: 161: i++;
  3037  039D  3001               	movlw	low(01h)
  3038  039E  07A3               	addwf	(readString@i),f
  3039  039F  1803               	skipnc
  3040  03A0  0AA4               	incf	(readString@i+1),f
  3041  03A1  3000               	movlw	high(01h)
  3042  03A2  07A4               	addwf	(readString@i+1),f
  3043                           	line	163
  3044                           	
  3045  03A3                     l7338:	
  3046                           ;Bluetooth.c: 163: ch = readByte();
  3047  03A3  120A  118A  217E   	fcall	_readByte
              120A  118A         
  3048  03A8  1283               	bcf	status, 5	;RP0=0, select bank0
  3049  03A9  1303               	bcf	status, 6	;RP1=0, select bank0
  3050  03AA  00A0               	movwf	(??_readString+0)+0
  3051  03AB  0820               	movf	(??_readString+0)+0,w
  3052  03AC  00A5               	movwf	(readString@ch)
  3053  03AD  2BAE               	goto	l7340
  3054                           	line	164
  3055                           	
  3056  03AE                     l755:	
  3057                           	line	156
  3058                           	
  3059  03AE                     l7340:	
  3060  03AE  304E               	movlw	(_userEndByte-__stringbase)
  3061  03AF  0084               	movwf	fsr0
  3062  03B0  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3063  03B5  00A0               	movwf	(??_readString+0)+0
  3064  03B6  0825               	movf	(readString@ch),w
  3065  03B7  0620               	xorwf	(??_readString+0)+0,w
  3066  03B8  1D03               	skipz
  3067  03B9  2BBB               	goto	u2691
  3068  03BA  2BBC               	goto	u2690
  3069  03BB                     u2691:
  3070  03BB  2B93               	goto	l7334
  3071  03BC                     u2690:
  3072  03BC  2BBD               	goto	l7342
  3073                           	
  3074  03BD                     l757:	
  3075                           	line	167
  3076                           	
  3077  03BD                     l7342:	
  3078                           ;Bluetooth.c: 164: }
  3079                           ;Bluetooth.c: 167: eeprom_write(RXLenAddr,i);
  3080  03BD  0823               	movf	(readString@i),w
  3081  03BE  00A0               	movwf	(??_readString+0)+0
  3082  03BF  0820               	movf	(??_readString+0)+0,w
  3083  03C0  00FA               	movwf	(?_eeprom_write)
  3084  03C1  3040               	movlw	(_RXLenAddr-__stringbase)
  3085  03C2  0084               	movwf	fsr0
  3086  03C3  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3087  03C8  120A  118A  22E5   	fcall	_eeprom_write
              120A  118A         
  3088                           	line	168
  3089                           	
  3090  03CD                     l758:	
  3091  03CD  0008               	return
  3092                           	opt stack 0
  3093                           GLOBAL	__end_of_readString
  3094  03CE                     	__end_of_readString:
  3095 ;; =============== function _readString ends ============
  3096                           
  3097                           	signat	_readString,4216
  3098                           	global	_writeString
  3099                           psect	text508,local,class=CODE,delta=2
  3100                           global __ptext508
  3101  0256                     __ptext508:
  3102                           
  3103 ;; *************** function _writeString *****************
  3104 ;; Defined at:
  3105 ;;		line 125 in file "Bluetooth.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  userString      1    wreg     PTR unsigned char 
  3108 ;;		 -> main@testString(9), 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  userString      1   11[COMMON] PTR unsigned char 
  3111 ;;		 -> main@testString(9), 
  3112 ;;  i               2   12[COMMON] unsigned int 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;		None               void
  3115 ;; Registers used:
  3116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       0       0       0       0
  3123 ;;      Locals:         3       0       0       0       0
  3124 ;;      Temps:          1       0       0       0       0
  3125 ;;      Totals:         4       0       0       0       0
  3126 ;;Total ram usage:        4 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    1
  3129 ;; This function calls:
  3130 ;;		_writeByte
  3131 ;;		_strlen
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           psect	text508
  3137                           	file	"Bluetooth.c"
  3138                           	line	125
  3139                           	global	__size_of_writeString
  3140  002F                     	__size_of_writeString	equ	__end_of_writeString-_writeString
  3141                           	
  3142  0256                     _writeString:	
  3143                           	opt	stack 6
  3144                           ; Regs used in _writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3145                           ;writeString@userString stored from wreg
  3146                           	line	129
  3147  0256  00FB               	movwf	(writeString@userString)
  3148                           	
  3149  0257                     l7320:	
  3150                           ;Bluetooth.c: 127: unsigned int i;
  3151                           ;Bluetooth.c: 129: for(i = 0;i<strlen(userString);i++){
  3152  0257  01FC               	clrf	(writeString@i)
  3153  0258  01FD               	clrf	(writeString@i+1)
  3154  0259  2A6D               	goto	l7326
  3155                           	
  3156  025A                     l750:	
  3157                           	line	130
  3158                           	
  3159  025A                     l7322:	
  3160                           ;Bluetooth.c: 130: writeByte(userString[i]);
  3161  025A  087C               	movf	(writeString@i),w
  3162  025B  077B               	addwf	(writeString@userString),w
  3163  025C  00FA               	movwf	(??_writeString+0)+0
  3164  025D  087A               	movf	0+(??_writeString+0)+0,w
  3165  025E  0084               	movwf	fsr0
  3166  025F  1383               	bcf	status, 7	;select IRP bank0
  3167  0260  0800               	movf	indf,w
  3168  0261  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  3169                           	line	129
  3170                           	
  3171  0266                     l7324:	
  3172  0266  3001               	movlw	low(01h)
  3173  0267  07FC               	addwf	(writeString@i),f
  3174  0268  1803               	skipnc
  3175  0269  0AFD               	incf	(writeString@i+1),f
  3176  026A  3000               	movlw	high(01h)
  3177  026B  07FD               	addwf	(writeString@i+1),f
  3178  026C  2A6D               	goto	l7326
  3179                           	
  3180  026D                     l749:	
  3181                           	
  3182  026D                     l7326:	
  3183  026D  087B               	movf	(writeString@userString),w
  3184  026E  120A  118A  22B4   	fcall	_strlen
              120A  118A         
  3185  0273  0871               	movf	(1+(?_strlen)),w
  3186  0274  027D               	subwf	(writeString@i+1),w
  3187  0275  1D03               	skipz
  3188  0276  2A79               	goto	u2685
  3189  0277  0870               	movf	(0+(?_strlen)),w
  3190  0278  027C               	subwf	(writeString@i),w
  3191  0279                     u2685:
  3192  0279  1C03               	skipc
  3193  027A  2A7C               	goto	u2681
  3194  027B  2A7D               	goto	u2680
  3195  027C                     u2681:
  3196  027C  2A5A               	goto	l7322
  3197  027D                     u2680:
  3198  027D  2A7E               	goto	l7328
  3199                           	
  3200  027E                     l751:	
  3201                           	line	133
  3202                           	
  3203  027E                     l7328:	
  3204                           ;Bluetooth.c: 131: }
  3205                           ;Bluetooth.c: 133: writeByte((unsigned char)i);
  3206  027E  087C               	movf	(writeString@i),w
  3207  027F  120A  118A  2194   	fcall	_writeByte
              120A  118A         
  3208                           	line	135
  3209                           	
  3210  0284                     l752:	
  3211  0284  0008               	return
  3212                           	opt stack 0
  3213                           GLOBAL	__end_of_writeString
  3214  0285                     	__end_of_writeString:
  3215 ;; =============== function _writeString ends ============
  3216                           
  3217                           	signat	_writeString,4216
  3218                           	global	_initADC
  3219                           psect	text509,local,class=CODE,delta=2
  3220                           global __ptext509
  3221  0189                     __ptext509:
  3222                           
  3223 ;; *************** function _initADC *****************
  3224 ;; Defined at:
  3225 ;;		line 7 in file "customADC.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;		None               void
  3232 ;; Registers used:
  3233 ;;		wreg
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3239 ;;      Params:         0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0
  3242 ;;      Totals:         0       0       0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_main
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           psect	text509
  3252                           	file	"customADC.c"
  3253                           	line	7
  3254                           	global	__size_of_initADC
  3255  000B                     	__size_of_initADC	equ	__end_of_initADC-_initADC
  3256                           	
  3257  0189                     _initADC:	
  3258                           	opt	stack 7
  3259                           ; Regs used in _initADC: [wreg]
  3260                           	line	8
  3261                           	
  3262  0189                     l7318:	
  3263                           ;customADC.c: 8: TRISA = 0x03;
  3264  0189  3003               	movlw	(03h)
  3265  018A  1683               	bsf	status, 5	;RP0=1, select bank1
  3266  018B  1303               	bcf	status, 6	;RP1=0, select bank1
  3267  018C  0085               	movwf	(133)^080h	;volatile
  3268                           	line	22
  3269                           ;customADC.c: 22: ADCON1 = 0x80;
  3270  018D  3080               	movlw	(080h)
  3271  018E  009F               	movwf	(159)^080h	;volatile
  3272                           	line	39
  3273                           ;customADC.c: 39: ADCON0 = 0x80;
  3274  018F  3080               	movlw	(080h)
  3275  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  3276  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  3277  0192  009F               	movwf	(31)	;volatile
  3278                           	line	40
  3279                           	
  3280  0193                     l3016:	
  3281  0193  0008               	return
  3282                           	opt stack 0
  3283                           GLOBAL	__end_of_initADC
  3284  0194                     	__end_of_initADC:
  3285 ;; =============== function _initADC ends ============
  3286                           
  3287                           	signat	_initADC,88
  3288                           	global	_eeprom_read
  3289                           psect	text510,local,class=CODE,delta=2
  3290                           global __ptext510
  3291  01EB                     __ptext510:
  3292                           
  3293 ;; *************** function _eeprom_read *****************
  3294 ;; Defined at:
  3295 ;;		line 7 in file "eeread.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  addr            1    wreg     unsigned char 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  addr            1    1[COMMON] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      unsigned char 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3309 ;;      Params:         0       0       0       0       0
  3310 ;;      Locals:         1       0       0       0       0
  3311 ;;      Temps:          1       0       0       0       0
  3312 ;;      Totals:         2       0       0       0       0
  3313 ;;Total ram usage:        2 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_checkEven
  3319 ;;		_checkLength
  3320 ;;		_checkDataFrames
  3321 ;;		_parsePacket
  3322 ;;		_checkStartByte
  3323 ;;		_checkRWByte
  3324 ;;		_checkCMDByte
  3325 ;;		_checkCS
  3326 ;;		_addDataToCheckSum
  3327 ;;		_getPacket
  3328 ;;		_displayPacket
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           psect	text510
  3332                           	file	"C:\Microchip\Hitech\sources\eeread.c"
  3333                           	line	7
  3334                           	global	__size_of_eeprom_read
  3335  001F                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
  3336                           	
  3337  01EB                     _eeprom_read:	
  3338                           	opt	stack 4
  3339                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3340                           ;eeprom_read@addr stored from wreg
  3341                           	line	9
  3342  01EB  00F1               	movwf	(eeprom_read@addr)
  3343                           	line	8
  3344                           	
  3345  01EC                     l4397:	
  3346                           	line	9
  3347                           # 9 "C:\Microchip\Hitech\sources\eeread.c"
  3348  01EC  0064               clrwdt ;#
  3349                           psect	text510
  3350                           	line	10
  3351  01ED  1683               	bsf	status, 5	;RP0=1, select bank3
  3352  01EE  1703               	bsf	status, 6	;RP1=1, select bank3
  3353  01EF  188C               	btfsc	(3169/8)^0180h,(3169)&7
  3354  01F0  29F2               	goto	u2661
  3355  01F1  29F3               	goto	u2660
  3356  01F2                     u2661:
  3357  01F2  29EC               	goto	l4397
  3358  01F3                     u2660:
  3359  01F3  29F4               	goto	l7302
  3360                           	
  3361  01F4                     l4398:	
  3362                           	line	11
  3363                           	
  3364  01F4                     l7302:	
  3365  01F4  0871               	movf	(eeprom_read@addr),w
  3366  01F5  1283               	bcf	status, 5	;RP0=0, select bank2
  3367  01F6  1703               	bsf	status, 6	;RP1=1, select bank2
  3368  01F7  008D               	movwf	(269)^0100h	;volatile
  3369  01F8  303F               	movlw	(03Fh)
  3370  01F9  00F0               	movwf	(??_eeprom_read+0)+0
  3371  01FA  0870               	movf	(??_eeprom_read+0)+0,w
  3372  01FB  1683               	bsf	status, 5	;RP0=1, select bank3
  3373  01FC  1703               	bsf	status, 6	;RP1=1, select bank3
  3374  01FD  058C               	andwf	(396)^0180h,f	;volatile
  3375  01FE  140C               	bsf	(3168/8)^0180h,(3168)&7
  3376  01FF  1003               	clrc
  3377  0200  180C               	btfsc	(3168/8)^0180h,(3168)&7
  3378  0201  1403               	setc
  3379  0202  3000               	movlw	0
  3380  0203  1803               	skipnc
  3381  0204  3001               	movlw	1
  3382                           
  3383  0205  1283               	bcf	status, 5	;RP0=0, select bank2
  3384  0206  1703               	bsf	status, 6	;RP1=1, select bank2
  3385  0207  080C               	movf	(268)^0100h,w	;volatile
  3386  0208  2A09               	goto	l4399
  3387                           	
  3388  0209                     l7304:	
  3389                           	line	12
  3390                           	
  3391  0209                     l4399:	
  3392  0209  0008               	return
  3393                           	opt stack 0
  3394                           GLOBAL	__end_of_eeprom_read
  3395  020A                     	__end_of_eeprom_read:
  3396 ;; =============== function _eeprom_read ends ============
  3397                           
  3398                           	signat	_eeprom_read,4217
  3399                           	global	_makeNibble
  3400                           psect	text511,local,class=CODE,delta=2
  3401                           global __ptext511
  3402  01AF                     __ptext511:
  3403                           
  3404 ;; *************** function _makeNibble *****************
  3405 ;; Defined at:
  3406 ;;		line 179 in file "Bluetooth.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  tempNib         1    wreg     unsigned char 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  tempNib         1    0[COMMON] unsigned char 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      unsigned char 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3420 ;;      Params:         0       0       0       0       0
  3421 ;;      Locals:         1       0       0       0       0
  3422 ;;      Temps:          0       0       0       0       0
  3423 ;;      Totals:         1       0       0       0       0
  3424 ;;Total ram usage:        1 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_makeHexByte
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           psect	text511
  3433                           	file	"Bluetooth.c"
  3434                           	line	179
  3435                           	global	__size_of_makeNibble
  3436  000F                     	__size_of_makeNibble	equ	__end_of_makeNibble-_makeNibble
  3437                           	
  3438  01AF                     _makeNibble:	
  3439                           	opt	stack 4
  3440                           ; Regs used in _makeNibble: [wreg+status,2+status,0]
  3441                           ;makeNibble@tempNib stored from wreg
  3442  01AF  00F0               	movwf	(makeNibble@tempNib)
  3443                           	line	180
  3444                           	
  3445  01B0                     l7292:	
  3446                           ;Bluetooth.c: 180: if(tempNib>='A'){
  3447  01B0  3041               	movlw	(041h)
  3448  01B1  0270               	subwf	(makeNibble@tempNib),w
  3449  01B2  1C03               	skipc
  3450  01B3  29B5               	goto	u2651
  3451  01B4  29B6               	goto	u2650
  3452  01B5                     u2651:
  3453  01B5  29BA               	goto	l7298
  3454  01B6                     u2650:
  3455                           	line	181
  3456                           	
  3457  01B6                     l7294:	
  3458                           ;Bluetooth.c: 181: return ((tempNib - (unsigned char)'A')+10);
  3459  01B6  0870               	movf	(makeNibble@tempNib),w
  3460  01B7  3EC9               	addlw	0C9h
  3461  01B8  29BD               	goto	l762
  3462                           	
  3463  01B9                     l7296:	
  3464  01B9  29BD               	goto	l762
  3465                           	line	182
  3466                           	
  3467  01BA                     l761:	
  3468                           	line	183
  3469                           	
  3470  01BA                     l7298:	
  3471                           ;Bluetooth.c: 182: }
  3472                           ;Bluetooth.c: 183: return (tempNib - '0');
  3473  01BA  0870               	movf	(makeNibble@tempNib),w
  3474  01BB  3ED0               	addlw	0D0h
  3475  01BC  29BD               	goto	l762
  3476                           	
  3477  01BD                     l7300:	
  3478                           	line	184
  3479                           	
  3480  01BD                     l762:	
  3481  01BD  0008               	return
  3482                           	opt stack 0
  3483                           GLOBAL	__end_of_makeNibble
  3484  01BE                     	__end_of_makeNibble:
  3485 ;; =============== function _makeNibble ends ============
  3486                           
  3487                           	signat	_makeNibble,4217
  3488                           	global	_eeprom_write
  3489                           psect	text512,local,class=CODE,delta=2
  3490                           global __ptext512
  3491  02E5                     __ptext512:
  3492                           
  3493 ;; *************** function _eeprom_write *****************
  3494 ;; Defined at:
  3495 ;;		line 7 in file "C:\Microchip\Hitech\sources\eewrite.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  addr            1    wreg     unsigned char 
  3498 ;;  value           1   10[COMMON] unsigned char 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  addr            1   12[COMMON] unsigned char 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      unsigned char 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3510 ;;      Params:         1       0       0       0       0
  3511 ;;      Locals:         1       0       0       0       0
  3512 ;;      Temps:          1       0       0       0       0
  3513 ;;      Totals:         3       0       0       0       0
  3514 ;;Total ram usage:        3 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_readString
  3520 ;;		_parsePacket
  3521 ;;		_checkStartByte
  3522 ;;		_checkRWByte
  3523 ;;		_checkCMDByte
  3524 ;;		_addDataToCheckSum
  3525 ;;		_getPacket
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           psect	text512
  3529                           	file	"C:\Microchip\Hitech\sources\eewrite.c"
  3530                           	line	7
  3531                           	global	__size_of_eeprom_write
  3532  0031                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
  3533                           	
  3534  02E5                     _eeprom_write:	
  3535                           	opt	stack 4
  3536                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  3537                           ;eeprom_write@addr stored from wreg
  3538  02E5  00FC               	movwf	(eeprom_write@addr)
  3539                           	line	8
  3540                           	
  3541  02E6                     l5014:	
  3542  02E6  2AE7               	goto	l5015
  3543                           	
  3544  02E7                     l5016:	
  3545                           	
  3546  02E7                     l5015:	
  3547  02E7  1683               	bsf	status, 5	;RP0=1, select bank3
  3548  02E8  1703               	bsf	status, 6	;RP1=1, select bank3
  3549  02E9  188C               	btfsc	(3169/8)^0180h,(3169)&7
  3550  02EA  2AEC               	goto	u2621
  3551  02EB  2AED               	goto	u2620
  3552  02EC                     u2621:
  3553  02EC  2AE7               	goto	l5015
  3554  02ED                     u2620:
  3555  02ED  2AEE               	goto	l7272
  3556                           	
  3557  02EE                     l5017:	
  3558                           	
  3559  02EE                     l7272:	
  3560  02EE  087C               	movf	(eeprom_write@addr),w
  3561  02EF  1283               	bcf	status, 5	;RP0=0, select bank2
  3562  02F0  1703               	bsf	status, 6	;RP1=1, select bank2
  3563  02F1  008D               	movwf	(269)^0100h	;volatile
  3564  02F2  087A               	movf	(eeprom_write@value),w
  3565  02F3  008C               	movwf	(268)^0100h	;volatile
  3566                           	
  3567  02F4                     l7274:	
  3568  02F4  303F               	movlw	(03Fh)
  3569  02F5  00FB               	movwf	(??_eeprom_write+0)+0
  3570  02F6  087B               	movf	(??_eeprom_write+0)+0,w
  3571  02F7  1683               	bsf	status, 5	;RP0=1, select bank3
  3572  02F8  1703               	bsf	status, 6	;RP1=1, select bank3
  3573  02F9  058C               	andwf	(396)^0180h,f	;volatile
  3574                           	
  3575  02FA                     l7276:	
  3576  02FA  1283               	bcf	status, 5	;RP0=0, select bank0
  3577  02FB  1303               	bcf	status, 6	;RP1=0, select bank0
  3578  02FC  1003               	bcf	(24/8),(24)&7
  3579                           	
  3580  02FD                     l7278:	
  3581  02FD  1F8B               	btfss	(95/8),(95)&7
  3582  02FE  2B00               	goto	u2631
  3583  02FF  2B01               	goto	u2630
  3584  0300                     u2631:
  3585  0300  2B02               	goto	l5018
  3586  0301                     u2630:
  3587                           	
  3588  0301                     l7280:	
  3589  0301  1403               	bsf	(24/8),(24)&7
  3590                           	
  3591  0302                     l5018:	
  3592  0302  138B               	bcf	(95/8),(95)&7
  3593  0303  1683               	bsf	status, 5	;RP0=1, select bank3
  3594  0304  1703               	bsf	status, 6	;RP1=1, select bank3
  3595  0305  150C               	bsf	(3170/8)^0180h,(3170)&7
  3596                           	
  3597  0306                     l7282:	
  3598  0306  3055               	movlw	(055h)
  3599  0307  008D               	movwf	(397)^0180h	;volatile
  3600  0308  30AA               	movlw	(0AAh)
  3601  0309  008D               	movwf	(397)^0180h	;volatile
  3602                           	
  3603  030A                     l7284:	
  3604  030A  148C               	bsf	(3169/8)^0180h,(3169)&7
  3605                           	
  3606  030B                     l7286:	
  3607  030B  110C               	bcf	(3170/8)^0180h,(3170)&7
  3608                           	
  3609  030C                     l7288:	
  3610  030C  1283               	bcf	status, 5	;RP0=0, select bank0
  3611  030D  1303               	bcf	status, 6	;RP1=0, select bank0
  3612  030E  1C03               	btfss	(24/8),(24)&7
  3613  030F  2B11               	goto	u2641
  3614  0310  2B12               	goto	u2640
  3615  0311                     u2641:
  3616  0311  2B15               	goto	l5021
  3617  0312                     u2640:
  3618                           	
  3619  0312                     l7290:	
  3620  0312  178B               	bsf	(95/8),(95)&7
  3621  0313  2B15               	goto	l5021
  3622                           	
  3623  0314                     l5019:	
  3624  0314  2B15               	goto	l5021
  3625                           	
  3626  0315                     l5020:	
  3627                           	line	10
  3628                           ;	Return value of _eeprom_write is never used
  3629                           	
  3630  0315                     l5021:	
  3631  0315  0008               	return
  3632                           	opt stack 0
  3633                           GLOBAL	__end_of_eeprom_write
  3634  0316                     	__end_of_eeprom_write:
  3635 ;; =============== function _eeprom_write ends ============
  3636                           
  3637                           	signat	_eeprom_write,8313
  3638                           	global	_strlen
  3639                           psect	text513,local,class=CODE,delta=2
  3640                           global __ptext513
  3641  02B4                     __ptext513:
  3642                           
  3643 ;; *************** function _strlen *****************
  3644 ;; Defined at:
  3645 ;;		line 5 in file "C:\Microchip\Hitech\sources\strlen.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  s               1    wreg     PTR const unsigned char 
  3648 ;;		 -> getPacket@arrStore(50), main@testString(9), 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  s               1    8[COMMON] PTR const unsigned char 
  3651 ;;		 -> getPacket@arrStore(50), main@testString(9), 
  3652 ;;  cp              1    9[COMMON] PTR const unsigned char 
  3653 ;;		 -> getPacket@arrStore(50), main@testString(9), 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  2    0[COMMON] unsigned int 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3663 ;;      Params:         2       0       0       0       0
  3664 ;;      Locals:         2       0       0       0       0
  3665 ;;      Temps:          6       0       0       0       0
  3666 ;;      Totals:        10       0       0       0       0
  3667 ;;Total ram usage:       10 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_writeString
  3673 ;;		_parsePacket
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           psect	text513
  3677                           	file	"C:\Microchip\Hitech\sources\strlen.c"
  3678                           	line	5
  3679                           	global	__size_of_strlen
  3680  0031                     	__size_of_strlen	equ	__end_of_strlen-_strlen
  3681                           	
  3682  02B4                     _strlen:	
  3683                           	opt	stack 5
  3684                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  3685                           ;strlen@s stored from wreg
  3686                           	line	8
  3687  02B4  00F8               	movwf	(strlen@s)
  3688                           	
  3689  02B5                     l7264:	
  3690  02B5  0878               	movf	(strlen@s),w
  3691  02B6  00F2               	movwf	(??_strlen+0)+0
  3692  02B7  0872               	movf	(??_strlen+0)+0,w
  3693  02B8  00F9               	movwf	(strlen@cp)
  3694                           	line	9
  3695  02B9  2ABB               	goto	l7266
  3696                           	
  3697  02BA                     l5699:	
  3698                           	line	10
  3699  02BA  2ABB               	goto	l7266
  3700                           	
  3701  02BB                     l5698:	
  3702                           	line	9
  3703                           	
  3704  02BB                     l7266:	
  3705  02BB  0879               	movf	(strlen@cp),w
  3706  02BC  0084               	movwf	fsr0
  3707  02BD  3001               	movlw	01h
  3708  02BE  07F9               	addwf	(strlen@cp),f
  3709  02BF  1383               	bcf	status, 7	;select IRP bank0
  3710  02C0  0880               	movf	indf,f
  3711  02C1  1D03               	skipz
  3712  02C2  2AC4               	goto	u2611
  3713  02C3  2AC5               	goto	u2610
  3714  02C4                     u2611:
  3715  02C4  2ABB               	goto	l7266
  3716  02C5                     u2610:
  3717  02C5  2AC6               	goto	l7268
  3718                           	
  3719  02C6                     l5700:	
  3720                           	line	11
  3721                           	
  3722  02C6                     l7268:	
  3723  02C6  0878               	movf	(strlen@s),w
  3724  02C7  00F2               	movwf	(??_strlen+0)+0
  3725  02C8  3000               	movlw	((0x0/2))
  3726  02C9  00F3               	movwf	(??_strlen+0)+0+1
  3727  02CA  09F2               	comf	(??_strlen+0)+0,f
  3728  02CB  09F3               	comf	(??_strlen+0)+1,f
  3729  02CC  0AF2               	incf	(??_strlen+0)+0,f
  3730  02CD  1903               	skipnz
  3731  02CE  0AF3               	incf	(??_strlen+0)+1,f
  3732  02CF  0879               	movf	(strlen@cp),w
  3733  02D0  00F4               	movwf	(??_strlen+2)+0
  3734  02D1  3000               	movlw	((0x0/2))
  3735  02D2  00F5               	movwf	(??_strlen+2)+0+1
  3736  02D3  0872               	movf	0+(??_strlen+0)+0,w
  3737  02D4  0774               	addwf	0+(??_strlen+2)+0,w
  3738  02D5  00F6               	movwf	(??_strlen+4)+0
  3739  02D6  0873               	movf	1+(??_strlen+0)+0,w
  3740  02D7  1803               	skipnc
  3741  02D8  0A73               	incf	1+(??_strlen+0)+0,w
  3742  02D9  0775               	addwf	1+(??_strlen+2)+0,w
  3743  02DA  00F7               	movwf	1+(??_strlen+4)+0
  3744  02DB  0876               	movf	0+(??_strlen+4)+0,w
  3745  02DC  3EFF               	addlw	low(-1)
  3746  02DD  00F0               	movwf	(?_strlen)
  3747  02DE  0877               	movf	1+(??_strlen+4)+0,w
  3748  02DF  1803               	skipnc
  3749  02E0  3E01               	addlw	1
  3750  02E1  3EFF               	addlw	high(-1)
  3751  02E2  00F1               	movwf	1+(?_strlen)
  3752  02E3  2AE4               	goto	l5701
  3753                           	
  3754  02E4                     l7270:	
  3755                           	line	12
  3756                           	
  3757  02E4                     l5701:	
  3758  02E4  0008               	return
  3759                           	opt stack 0
  3760                           GLOBAL	__end_of_strlen
  3761  02E5                     	__end_of_strlen:
  3762 ;; =============== function _strlen ends ============
  3763                           
  3764                           	signat	_strlen,4218
  3765                           	global	_readByte
  3766                           psect	text514,local,class=CODE,delta=2
  3767                           global __ptext514
  3768  017E                     __ptext514:
  3769                           
  3770 ;; *************** function _readByte *****************
  3771 ;; Defined at:
  3772 ;;		line 86 in file "Bluetooth.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;		None
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      unsigned char 
  3779 ;; Registers used:
  3780 ;;		wreg
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3786 ;;      Params:         0       0       0       0       0
  3787 ;;      Locals:         0       0       0       0       0
  3788 ;;      Temps:          0       0       0       0       0
  3789 ;;      Totals:         0       0       0       0       0
  3790 ;;Total ram usage:        0 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_readString
  3796 ;;		_echoBack
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           psect	text514
  3800                           	file	"Bluetooth.c"
  3801                           	line	86
  3802                           	global	__size_of_readByte
  3803  000B                     	__size_of_readByte	equ	__end_of_readByte-_readByte
  3804                           	
  3805  017E                     _readByte:	
  3806                           	opt	stack 5
  3807                           ; Regs used in _readByte: [wreg]
  3808                           	line	90
  3809                           	
  3810  017E                     l7252:	
  3811                           ;Bluetooth.c: 90: while(!RCIF);
  3812  017E  297F               	goto	l740
  3813                           	
  3814  017F                     l741:	
  3815                           	
  3816  017F                     l740:	
  3817  017F  1283               	bcf	status, 5	;RP0=0, select bank0
  3818  0180  1303               	bcf	status, 6	;RP1=0, select bank0
  3819  0181  1E8C               	btfss	(101/8),(101)&7
  3820  0182  2984               	goto	u2601
  3821  0183  2985               	goto	u2600
  3822  0184                     u2601:
  3823  0184  297F               	goto	l740
  3824  0185                     u2600:
  3825  0185  2986               	goto	l7254
  3826                           	
  3827  0186                     l742:	
  3828                           	line	93
  3829                           	
  3830  0186                     l7254:	
  3831                           ;Bluetooth.c: 93: return RCREG;
  3832  0186  081A               	movf	(26),w	;volatile
  3833  0187  2988               	goto	l743
  3834                           	
  3835  0188                     l7256:	
  3836                           	line	94
  3837                           	
  3838  0188                     l743:	
  3839  0188  0008               	return
  3840                           	opt stack 0
  3841                           GLOBAL	__end_of_readByte
  3842  0189                     	__end_of_readByte:
  3843 ;; =============== function _readByte ends ============
  3844                           
  3845                           	signat	_readByte,89
  3846                           	global	_writeByte
  3847                           psect	text515,local,class=CODE,delta=2
  3848                           global __ptext515
  3849  0194                     __ptext515:
  3850                           
  3851 ;; *************** function _writeByte *****************
  3852 ;; Defined at:
  3853 ;;		line 68 in file "Bluetooth.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  Byte            1    wreg     unsigned char 
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  Byte            1    0[COMMON] unsigned char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;		None               void
  3860 ;; Registers used:
  3861 ;;		wreg
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3867 ;;      Params:         0       0       0       0       0
  3868 ;;      Locals:         1       0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0
  3870 ;;      Totals:         1       0       0       0       0
  3871 ;;Total ram usage:        1 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_writeString
  3877 ;;		_checkEven
  3878 ;;		_checkLength
  3879 ;;		_checkDataFrames
  3880 ;;		_checkStartByte
  3881 ;;		_checkRWByte
  3882 ;;		_checkCMDByte
  3883 ;;		_checkCS
  3884 ;;		_getPacket
  3885 ;;		_echoBack
  3886 ;;		_displayPacket
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           psect	text515
  3890                           	file	"Bluetooth.c"
  3891                           	line	68
  3892                           	global	__size_of_writeByte
  3893  000C                     	__size_of_writeByte	equ	__end_of_writeByte-_writeByte
  3894                           	
  3895  0194                     _writeByte:	
  3896                           	opt	stack 4
  3897                           ; Regs used in _writeByte: [wreg]
  3898                           ;writeByte@Byte stored from wreg
  3899  0194  00F0               	movwf	(writeByte@Byte)
  3900                           	line	72
  3901                           	
  3902  0195                     l7248:	
  3903                           ;Bluetooth.c: 72: while(!TXIF);
  3904  0195  2996               	goto	l734
  3905                           	
  3906  0196                     l735:	
  3907                           	
  3908  0196                     l734:	
  3909  0196  1283               	bcf	status, 5	;RP0=0, select bank0
  3910  0197  1303               	bcf	status, 6	;RP1=0, select bank0
  3911  0198  1E0C               	btfss	(100/8),(100)&7
  3912  0199  299B               	goto	u2591
  3913  019A  299C               	goto	u2590
  3914  019B                     u2591:
  3915  019B  2996               	goto	l734
  3916  019C                     u2590:
  3917  019C  299D               	goto	l7250
  3918                           	
  3919  019D                     l736:	
  3920                           	line	75
  3921                           	
  3922  019D                     l7250:	
  3923                           ;Bluetooth.c: 75: TXREG = Byte;
  3924  019D  0870               	movf	(writeByte@Byte),w
  3925  019E  0099               	movwf	(25)	;volatile
  3926                           	line	76
  3927                           	
  3928  019F                     l737:	
  3929  019F  0008               	return
  3930                           	opt stack 0
  3931                           GLOBAL	__end_of_writeByte
  3932  01A0                     	__end_of_writeByte:
  3933 ;; =============== function _writeByte ends ============
  3934                           
  3935                           	signat	_writeByte,4216
  3936                           	global	_initUSART
  3937                           psect	text516,local,class=CODE,delta=2
  3938                           global __ptext516
  3939  01A0                     __ptext516:
  3940                           
  3941 ;; *************** function _initUSART *****************
  3942 ;; Defined at:
  3943 ;;		line 17 in file "Bluetooth.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;		None               void
  3950 ;; Registers used:
  3951 ;;		wreg
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3957 ;;      Params:         0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0
  3960 ;;      Totals:         0       0       0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; This function calls:
  3964 ;;		Nothing
  3965 ;; This function is called by:
  3966 ;;		_main
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           psect	text516
  3970                           	file	"Bluetooth.c"
  3971                           	line	17
  3972                           	global	__size_of_initUSART
  3973  000F                     	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  3974                           	
  3975  01A0                     _initUSART:	
  3976                           	opt	stack 7
  3977                           ; Regs used in _initUSART: [wreg]
  3978                           	line	19
  3979                           	
  3980  01A0                     l7244:	
  3981                           ;Bluetooth.c: 19: TRISC6 = 0;
  3982  01A0  1683               	bsf	status, 5	;RP0=1, select bank1
  3983  01A1  1303               	bcf	status, 6	;RP1=0, select bank1
  3984  01A2  1307               	bcf	(1086/8)^080h,(1086)&7
  3985                           	line	22
  3986                           ;Bluetooth.c: 22: TRISC7 = 1;
  3987  01A3  1787               	bsf	(1087/8)^080h,(1087)&7
  3988                           	line	35
  3989                           	
  3990  01A4                     l7246:	
  3991                           ;Bluetooth.c: 35: RCSTA = 0x90;
  3992  01A4  3090               	movlw	(090h)
  3993  01A5  1283               	bcf	status, 5	;RP0=0, select bank0
  3994  01A6  1303               	bcf	status, 6	;RP1=0, select bank0
  3995  01A7  0098               	movwf	(24)	;volatile
  3996                           	line	49
  3997                           ;Bluetooth.c: 49: TXSTA = 0x24;
  3998  01A8  3024               	movlw	(024h)
  3999  01A9  1683               	bsf	status, 5	;RP0=1, select bank1
  4000  01AA  1303               	bcf	status, 6	;RP1=0, select bank1
  4001  01AB  0098               	movwf	(152)^080h	;volatile
  4002                           	line	57
  4003                           ;Bluetooth.c: 57: SPBRG = 129;
  4004  01AC  3081               	movlw	(081h)
  4005  01AD  0099               	movwf	(153)^080h	;volatile
  4006                           	line	58
  4007                           	
  4008  01AE                     l731:	
  4009  01AE  0008               	return
  4010                           	opt stack 0
  4011                           GLOBAL	__end_of_initUSART
  4012  01AF                     	__end_of_initUSART:
  4013 ;; =============== function _initUSART ends ============
  4014                           
  4015                           	signat	_initUSART,88
  4016                           psect	text517,local,class=CODE,delta=2
  4017                           global __ptext517
  4018  0000                     __ptext517:
  4019                           	global	btemp
  4020  007E                     	btemp set 07Eh
  4021                           
  4022                           	DABS	1,126,2	;btemp
  4023                           	global	wtemp0
  4024  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Dec 13 12:52:47 2013

                         pc 0002                          _RD 0C60                          _WR 0C61  
                        fsr 0004                 _userEndByte 0056                         l731 01AE  
                       l740 017F                         l741 017F                         l734 0196  
                       l742 0186                         l750 025A                         l735 0196  
                       l743 0188                         l751 027E                         l736 019D  
                       l752 0284                         l737 019F                         l761 01BA  
                       l762 01BD                         l755 03AE                         l756 0393  
                       l749 026D                         l757 03BD                         l765 022E  
                       l758 03CD                         _GIE 005F                         fsr0 0004  
                       indf 0000            ?_checkDataFrames 0072                        l3016 0193  
                      l1504 024C                        l1512 0675                        l1520 07B4  
                      l1505 0255                        l1513 06CA                        l1521 07FE  
                      l1514 06C1                        l1522 07FF                        l1515 06C0  
                      l1531 0503                        l1508 02AA                        l1532 0549  
                      l1540 0349                        l1509 02B3                        l1525 04D4  
                      l1526 04DF                        l1550 0630                        l1518 07FF  
                      l1535 05AE                        l1551 0630                        l1519 07EA  
                      l1543 0419                        l1536 05B9                        l1544 0418  
                      l1529 053E                        l1545 041E                        l1539 0340  
                      l5020 0315                        l1548 061E                        l5021 0315  
                      l1549 05E9                        l5014 02E6                        l5015 02E7  
                      l5016 02E7                        l5017 02EE                        l5018 0302  
                      l5019 0314                        l3771 0372                        l5700 02C6  
                      l7300 01BD                        l3780 0474                        l3772 037E  
                      l5701 02E4                        l4397 01EC                        l3781 047B  
                      l3773 037F                        l4398 01F4                        l7302 01F4  
                      l3782 047B                        l3774 0380                        l4399 0209  
                      l3775 0380                        l7304 0209                        l7320 0257  
                      l7400 06C7                        l7250 019D                        l7322 025A  
                      l7330 0386                        l7402 06CA                        l7410 04CC  
                      l7244 01A0                        l7252 017E                        l7324 0266  
                      l7340 03AE                        l7332 0388                        l7412 04D3  
                      l7404 047C                        l7420 04E0                        l7500 03E8  
                      l7246 01A4                        l7254 0186                        l7270 02E4  
                      l7318 0189                        l7326 026D                        l7342 03BD  
                      l7334 0393                        l7350 022F                        l7406 0499  
                      l7414 04D4                        l7430 053D                        l7422 04F1  
                      l7502 03F5                        l7510 0419                        l7248 0195  
                      l7256 0188                        l7264 02B5                        l7280 0301  
                      l7272 02EE                        l7328 027E                        l7336 039D  
                      l7344 020D                        l7360 0252                        l7352 0240  
                      l7416 04DA                        l7408 049F                        l7432 053E  
                      l7424 0503                        l7440 0573                        l7512 041E  
                      l7504 0400                        l7520 0449                        l7266 02BB  
                      l7290 0312                        l7282 0306                        l7274 02F4  
                      l7338 03A3                        l7346 022C                        l7362 0255  
                      l7354 0246                        l7370 02A9                        l7418 04DF  
                      l7434 0544                        l7426 0509                        l7450 05B4  
                      l7442 05A0                        l7506 0410                        l7522 045A  
                      l7514 041F                        l7530 034A                        l7268 02C6  
                      l7284 030A                        l7276 02FA                        l7292 01B0  
                      l7348 022E                        l7356 024B                        l7372 02AA  
                      l7364 0285                        l7380 0642                        l7436 0549  
                      l7428 0536                        l7452 05B9                        l7444 05A6  
                      l7460 033F                        l7508 0417                        l7524 0460  
                      l7516 042C                        l7540 0378                        l7532 0361  
                      l7286 030B                        l7278 02FD                        l7294 01B6  
                      l7358 024C                        l7374 02B0                        l7366 029E  
                      l7382 0668                        l7390 0675                        l7446 05AD  
                      l7438 054A                        l7462 0340                        l7454 0316  
                      l7470 05E7                        l7526 046D                        l7518 0443  
                      l7534 0366                        l7288 030C                        l7296 01B9  
                      l7376 02B3                        l7368 02A4                        l7392 06B4  
                      l7384 066E                        l7448 05AE                        l7464 0346  
                      l7456 0334                        l7472 05E9                        l7480 06D0  
                      l7528 0474                        l7536 036B                        l5698 02BB  
                      l7298 01BA                        l7394 06BA                        l7386 0673  
                      l7378 0631                        l7466 0349                        l7458 033A  
                      l7474 0617                        l7490 07DD                        l7482 06DB  
                      l7538 0372                        l5699 02BA                        l7396 06BF  
                      l7388 0674                        l7476 061E                        l7468 05BA  
                      l7492 07E5                        l7484 06E6                        l7398 06C1  
                      l7494 07EA                        l7486 07B0                        l7478 06CE  
                      l7488 07B4                        l7496 03CE                        l7498 03DB  
                      _ADON 00F8                        u2600 0185                        u2601 0184  
                      u2610 02C5                        u2611 02C4                        u2620 02ED  
                      u2621 02EC                        u2630 0301                        u2710 0240  
                      u2631 0300                        u2711 023F                        u2640 0312  
                      u2720 029E                        u2800 0573                        u2641 0311  
                      u2705 0217                        u2721 029D                        u2801 0572  
                      u2650 01B6                        u2730 0642                        u2810 0334  
                      u2651 01B5                        u2731 0641                        u2811 0333  
                      u2660 01F3                        u2740 0668                        u2820 062F  
                      u2900 0410                        u2661 01F2                        u2741 0667  
                      u2821 062E                        u2901 040F                        u2590 019C  
                      u2830 06DB                        u2910 0436                        u2591 019B  
                      u2831 06DA                        u2680 027D                        u2760 06B4  
                      u2840 06E6                        u2920 046D                        u2681 027C  
                      u2761 06B3                        u2841 06E5                        u2921 046C  
                      u2690 03BC                        u2770 0499                        u2850 07FD  
                      u2930 0354                        u2691 03BB                        u2755 0685  
                      u2771 0498                        u2851 07FC                        u2780 04F1  
                      u2860 03DB                        u2940 0378                        u2685 0279  
                      u2765 06B0                        u2781 04F0                        u2861 03DA  
                      u2941 0377                        u2790 0502                        u2870 03E8  
                      u2791 0501                        u2871 03E7                        u2880 03F5  
                      u2881 03F4                        u2890 0400                        u2891 03FF  
                      _RCIF 0065                        _WREN 0C62                        _TXIF 0064  
            ??_eeprom_write 007B      __end_of_checkStartByte 04E0                        _main 034A  
             _startByteAddr 0055                        btemp 007E                        start 0000  
         _addDataToCheckSum 05BA          ?_addDataToCheckSum 0070       makeHexByte@input_byte 0023  
                     ?_main 0070         ??_addDataToCheckSum 0020                       _EEADR 010D  
                     _CARRY 0018        __size_of_checkRWByte 006A                       _RCREG 001A  
                     _RCSTA 0018                       _SPBRG 0099             __end_of_checkCS 034A  
      __size_of_checkLength 002F                       _TRISA 0085                       _TXREG 0019  
                     _TXSTA 0098                 _writeString 0256             __end_of_initADC 0194  
                     pclath 000A                       status 0003             ?_checkStartByte 0020  
                     wtemp0 007E   __end_of_addDataToCheckSum 0631                ?_parsePacket 0070  
              __end_of_main 0383       __size_of_checkCMDByte 0070                      ??_main 0062  
             _userStartByte 0057                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D                      _TRISC6 043E  
                    _TRISC7 043F                _checkCMDByte 054A        __size_of_eeprom_read 001F  
      __size_of_makeHexByte 0025                      _maxCmd 0050            __end_of_readByte 0189  
                 ??_checkCS 0074        __end_of_eeprom_write 0316     __size_of_validatePacket 0051  
     readString@readStorage 0022                      clrloop 016E                      _strlen 02B4  
                 ??_initADC 0070                 readString@i 0023           makeHexByte@nibOne 0022  
         makeHexByte@nibTwo 007D             eeprom_read@addr 0071  __size_of_addDataToCheckSum 0077  
            __pcstackCOMMON 0070                __pidataBANK1 0175          __size_of_checkEven 0027  
        __size_of_getPacket 005D           eeprom_write@value 007A                  _csByteAddr 004B  
                __pbssBANK1 00A0          __size_of_initUSART 000F              _calcCSByteAddr 0049  
                __pmaintext 034A        __size_of_parsePacket 0135                     ?_strlen 0070  
              ?_writeString 0070                  _makeNibble 01AF            ??_checkStartByte 0022  
         __end_of_checkEven 0256                   ?_readByte 0070          __size_of_writeByte 000C  
  __size_of_checkDataFrames 009A           __end_of_getPacket 047C       __size_of_eeprom_write 0031  
             ??_checkRWByte 0022                     _checkCS 0316                  _readString 0383  
             ??_checkLength 0074              _validatePacket 03CE           __end_of_initUSART 01AF  
                   _initADC 0189             __size_of_strlen 0031                     _member1 002A  
                   _member2 0009                     _member3 001D        end_of_initialization 01E7  
     parsePacket@dataPacket 002B                  ??_readByte 0070                     init_ram 01C2  
              _eeprom_write 02E5                readString@ch 0025              main@testString 0066  
                _rwByteAddr 0054               _dataBytesAddr 004C              getPacket@F1148 00A0  
    __end_of_validatePacket 041F                     strlen@s 0078           __end_of_writeByte 01A0  
       __end_of_checkRWByte 054A         __end_of_checkLength 02B4                 ?_makeNibble 0070  
              writeString@i 007C               ??_eeprom_read 0070                   _RXLenAddr 0048  
             ??_makeHexByte 0020             ?_validatePacket 0024           ??_checkDataFrames 0074  
               ?_readString 0070              __end_of_strlen 02E5         start_initialization 01D1  
      __size_of_writeString 002F                parsePacket@i 002A         __end_of_eeprom_read 020A  
       __size_of_makeNibble 000F                 __pdataBANK1 00D2                 _checkRWByte 04E0  
               _cmdByteAddr 004A         __end_of_makeHexByte 022F                 _checkLength 0285  
                  ??_strlen 0072               __pcstackBANK0 0020            eeprom_write@addr 007C  
       __size_of_readString 004B                   _checkEven 022F                 _endByteAddr 004D  
             ??_parsePacket 0024           __size_of_readByte 000B                   _classTerm 0036  
                 _getPacket 041F                   __ptext500 054A                   __ptext501 04E0  
                 __ptext510 01EB                   __ptext502 047C                   __ptext511 01AF  
                 __ptext503 0631                   __ptext512 02E5                   __ptext504 0285  
                 __ptext513 02B4                   __ptext505 022F                   __ptext514 017E  
                 __ptext506 020A                   __ptext515 0194                   __ptext507 0383  
                 __ptext516 01A0                   __ptext508 0256                   __ptext517 0000  
                 __ptext509 0189                   __ptext495 041F                   __ptext496 03CE  
                 __ptext497 06CB                   __ptext498 05BA                   __ptext499 0316  
                  ?_checkCS 0072                   _noDataLen 0053                   __pstrings 0003  
                  ?_initADC 0070                   _initUSART 01A0                  ?_checkEven 0072  
               _eeprom_read 01EB               ?_checkCMDByte 0020                 _makeHexByte 020A  
                  _GO_nDONE 00FA                  ?_getPacket 0070                   main@F1146 00D2  
               _lenByteAddr 004F         __end_of_parsePacket 0800                 __stringbase 0008  
                ?_initUSART 0070                ??_makeNibble 0070                   _writeByte 0194  
           _checkDataFrames 0631              ??_checkCMDByte 0022            ??_validatePacket 007E  
   __size_of_checkStartByte 0064                   init_fetch 01BE          __end_of_makeNibble 01BE  
              ??_readString 0020                 _newLineChar 0052                 _minSizeByte 0051  
          __size_of_checkCS 0034            __size_of_initADC 000B                    _classNum 0040  
                ?_writeByte 0070       writeString@userString 007B                    _readByte 017E  
             __size_of_main 0039                 ??_checkEven 0074          __end_of_readString 03CE  
                  _groupNum 004E                 _parsePacket 06CB                    clear_ram 016D  
               ??_getPacket 002C                ?_checkRWByte 0020                ?_checkLength 0072  
    parsePacket@dataCounter 0028               ??_writeString 007A          addDataToCheckSum@i 007D  
               ??_initUSART 0070     __end_of_checkDataFrames 06CB                   stringcode 0003  
         makeNibble@tempNib 0070           getPacket@arrStore 0030               writeByte@Byte 0070  
                  strlen@cp 0079        __end_of_checkCMDByte 05BA                    stringdir 0003  
                  stringtab 0003                 ??_writeByte 0070         __end_of_writeString 0285  
             ?_eeprom_write 007A                ?_eeprom_read 0070              _checkStartByte 047C  
              ?_makeHexByte 007D  
