

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sat Dec 14 16:41:44 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 31 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 31 "main.c"
    45  2007  FF3A               	dw 0xFFFB & 0xFF7F & 0xFFBF & 0xFFFE & 0xFFFF ;#
    46                           	FNCALL	_main,_initUSART
    47                           	FNCALL	_main,_initADC
    48                           	FNCALL	_main,_initTemp
    49                           	FNCALL	_main,_writeString
    50                           	FNCALL	_main,_getTemp
    51                           	FNCALL	_getTemp,_selectTemp
    52                           	FNCALL	_getTemp,_readTemp
    53                           	FNCALL	_getTemp,_eeprom_write
    54                           	FNCALL	_initTemp,_eeprom_write
    55                           	FNCALL	_writeString,_writeByte
    56                           	FNCALL	_writeString,_strlen
    57                           	FNROOT	_main
    58                           	FNCALL	_isr,_getPacket
    59                           	FNCALL	_getPacket,i1_eeprom_write
    60                           	FNCALL	_getPacket,_readString
    61                           	FNCALL	_getPacket,_eeprom_read
    62                           	FNCALL	_getPacket,i1_writeByte
    63                           	FNCALL	_getPacket,_parsePacket
    64                           	FNCALL	_getPacket,_validatePacket
    65                           	FNCALL	_getPacket,_readCommands
    66                           	FNCALL	_getPacket,_writeCommands
    67                           	FNCALL	_readCommands,i1_writeByte
    68                           	FNCALL	_readCommands,i1_writeString
    69                           	FNCALL	_readCommands,_eeprom_read
    70                           	FNCALL	_validatePacket,_checkStartByte
    71                           	FNCALL	_validatePacket,_checkRWByte
    72                           	FNCALL	_validatePacket,_checkCMDByte
    73                           	FNCALL	_validatePacket,_checkDataFrames
    74                           	FNCALL	_validatePacket,_addDataToCheckSum
    75                           	FNCALL	_validatePacket,_checkCS
    76                           	FNCALL	_parsePacket,_checkLength
    77                           	FNCALL	_parsePacket,_checkEven
    78                           	FNCALL	_parsePacket,_makeHexByte
    79                           	FNCALL	_parsePacket,i1_eeprom_write
    80                           	FNCALL	_parsePacket,i1_strlen
    81                           	FNCALL	_parsePacket,_eeprom_read
    82                           	FNCALL	i1_writeString,i1_writeByte
    83                           	FNCALL	i1_writeString,i1_strlen
    84                           	FNCALL	_addDataToCheckSum,_eeprom_read
    85                           	FNCALL	_addDataToCheckSum,i1_eeprom_write
    86                           	FNCALL	_checkCS,_eeprom_read
    87                           	FNCALL	_checkCS,i1_writeByte
    88                           	FNCALL	_checkCMDByte,_eeprom_read
    89                           	FNCALL	_checkCMDByte,i1_eeprom_write
    90                           	FNCALL	_checkCMDByte,i1_writeByte
    91                           	FNCALL	_checkRWByte,_eeprom_read
    92                           	FNCALL	_checkRWByte,i1_writeByte
    93                           	FNCALL	_checkRWByte,i1_eeprom_write
    94                           	FNCALL	_checkStartByte,_eeprom_read
    95                           	FNCALL	_checkStartByte,i1_writeByte
    96                           	FNCALL	_checkStartByte,i1_eeprom_write
    97                           	FNCALL	_checkDataFrames,_eeprom_read
    98                           	FNCALL	_checkDataFrames,i1_writeByte
    99                           	FNCALL	_checkLength,_eeprom_read
   100                           	FNCALL	_checkLength,i1_writeByte
   101                           	FNCALL	_checkEven,_eeprom_read
   102                           	FNCALL	_checkEven,i1_writeByte
   103                           	FNCALL	_makeHexByte,_makeNibble
   104                           	FNCALL	_readString,_readByte
   105                           	FNCALL	_readString,i1_writeByte
   106                           	FNCALL	_readString,i1_eeprom_write
   107                           	FNCALL	intlevel1,_isr
   108                           	global	intlevel1
   109                           	FNROOT	intlevel1
   110                           	global	main@F1175
   111                           psect	idataBANK1,class=CODE,space=0,delta=2
   112                           global __pidataBANK1
   113  0D80                     __pidataBANK1:
   114                           	file	"main.c"
   115                           	line	51
   116                           
   117                           ;initializer for main@F1175
   118  0D80  3457               	retlw	057h
   119  0D81  3465               	retlw	065h
   120  0D82  346C               	retlw	06Ch
   121  0D83  3463               	retlw	063h
   122  0D84  346F               	retlw	06Fh
   123  0D85  346D               	retlw	06Dh
   124  0D86  3465               	retlw	065h
   125  0D87  340A               	retlw	0Ah
   126  0D88  3400               	retlw	0
   127                           	global	_member2
   128                           psect	strings,class=STRING,delta=2
   129                           global __pstrings
   130  0359                     __pstrings:
   131                           ;	global	stringdir,stringtab,__stringbase
   132  0359                     stringtab:
   133                           ;	String table - string pointers are 1 byte each
   134  0359  1BFF               	btfsc	(btemp+1),7
   135  035A  2B63               	ljmp	stringcode
   136  035B  1383               	bcf	status,7
   137  035C  187F               	btfsc	(btemp+1),0
   138  035D  1783               	bsf	status,7
   139  035E  0800               	movf	indf,w
   140  035F  0A84               	incf fsr
   141  0360  1903               skipnz
   142  0361  0AFF               incf btemp+1
   143  0362  0008               	return
   144  0363                     stringcode:stringdir:
      + 0363                     stringdir:	
   145  0363  3003               movlw high(stringdir)
   146  0364  008A               movwf pclath
   147  0365  0804               movf fsr,w
   148  0366  0A84               incf fsr
   149  0367  0782               	addwf pc
   150  0368                     __stringbase:
   151  0368  3400               	retlw	0
   152                           psect	strings
   153                           	file	"userMacro.h"
   154                           	line	20
   155  0369                     _member2:
   156  0369  3444               	retlw	044h
   157  036A  3465               	retlw	065h
   158  036B  3465               	retlw	065h
   159  036C  3470               	retlw	070h
   160  036D  3461               	retlw	061h
   161  036E  346B               	retlw	06Bh
   162  036F  3420               	retlw	020h
   163  0370  3443               	retlw	043h
   164  0371  3468               	retlw	068h
   165  0372  3461               	retlw	061h
   166  0373  346E               	retlw	06Eh
   167  0374  3464               	retlw	064h
   168  0375  3472               	retlw	072h
   169  0376  3461               	retlw	061h
   170  0377  3473               	retlw	073h
   171  0378  3465               	retlw	065h
   172  0379  346B               	retlw	06Bh
   173  037A  3461               	retlw	061h
   174  037B  3472               	retlw	072h
   175  037C  3400               	retlw	0
   176                           	global	_member3
   177                           psect	strings
   178                           	file	"userMacro.h"
   179                           	line	21
   180  037D                     _member3:
   181  037D  3441               	retlw	041h
   182  037E  3470               	retlw	070h
   183  037F  3475               	retlw	075h
   184  0380  3472               	retlw	072h
   185  0381  3476               	retlw	076h
   186  0382  3465               	retlw	065h
   187  0383  3420               	retlw	020h
   188  0384  3442               	retlw	042h
   189  0385  3468               	retlw	068h
   190  0386  3469               	retlw	069h
   191  0387  3464               	retlw	064h
   192  0388  3465               	retlw	065h
   193  0389  3400               	retlw	0
   194                           	global	_member1
   195                           psect	strings
   196                           	file	"userMacro.h"
   197                           	line	19
   198  038A                     _member1:
   199  038A  3447               	retlw	047h
   200  038B  3472               	retlw	072h
   201  038C  3465               	retlw	065h
   202  038D  3467               	retlw	067h
   203  038E  3420               	retlw	020h
   204  038F  3447               	retlw	047h
   205  0390  3469               	retlw	069h
   206  0391  3472               	retlw	072h
   207  0392  3461               	retlw	061h
   208  0393  3472               	retlw	072h
   209  0394  3464               	retlw	064h
   210  0395  3400               	retlw	0
   211                           	global	_classTerm
   212                           psect	strings
   213                           	file	"userMacro.h"
   214                           	line	23
   215  0396                     _classTerm:
   216  0396  3446               	retlw	046h
   217  0397  3461               	retlw	061h
   218  0398  346C               	retlw	06Ch
   219  0399  346C               	retlw	06Ch
   220  039A  3420               	retlw	020h
   221  039B  3432               	retlw	032h
   222  039C  3430               	retlw	030h
   223  039D  3431               	retlw	031h
   224  039E  3433               	retlw	033h
   225  039F  3400               	retlw	0
   226                           	global	_classNum
   227                           psect	strings
   228                           	file	"userMacro.h"
   229                           	line	22
   230  03A0                     _classNum:
   231  03A0  3445               	retlw	045h
   232  03A1  3443               	retlw	043h
   233  03A2  3445               	retlw	045h
   234  03A3  3435               	retlw	035h
   235  03A4  3436               	retlw	036h
   236  03A5  3432               	retlw	032h
   237  03A6  3430               	retlw	030h
   238  03A7  3400               	retlw	0
   239                           	global	_RXLenAddr
   240                           psect	strings
   241                           	file	"userMacro.h"
   242                           	line	50
   243  03A8                     _RXLenAddr:
   244  03A8  3400               	retlw	0
   245                           	global	_calcCSByteAddr
   246                           psect	strings
   247                           	file	"userMacro.h"
   248                           	line	66
   249  03A9                     _calcCSByteAddr:
   250  03A9  3430               	retlw	030h
   251                           	global	_cmdByteAddr
   252                           psect	strings
   253                           	file	"userMacro.h"
   254                           	line	56
   255  03AA                     _cmdByteAddr:
   256  03AA  3403               	retlw	03h
   257                           	global	_csByteAddr
   258                           psect	strings
   259                           	file	"userMacro.h"
   260                           	line	60
   261  03AB                     _csByteAddr:
   262  03AB  3405               	retlw	05h
   263                           	global	_dataBytesAddr
   264                           psect	strings
   265                           	file	"userMacro.h"
   266                           	line	64
   267  03AC                     _dataBytesAddr:
   268  03AC  3407               	retlw	07h
   269                           	global	_endByteAddr
   270                           psect	strings
   271                           	file	"userMacro.h"
   272                           	line	62
   273  03AD                     _endByteAddr:
   274  03AD  3406               	retlw	06h
   275                           	global	_groupNum
   276                           psect	strings
   277                           	file	"userMacro.h"
   278                           	line	24
   279  03AE                     _groupNum:
   280  03AE  3432               	retlw	032h
   281                           	global	_humHiAddr
   282                           psect	strings
   283                           	file	"userMacro.h"
   284                           	line	96
   285  03AF                     _humHiAddr:
   286  03AF  3484               	retlw	084h
   287                           	global	_humLoAddr
   288                           psect	strings
   289                           	file	"userMacro.h"
   290                           	line	98
   291  03B0                     _humLoAddr:
   292  03B0  3486               	retlw	086h
   293                           	global	_humStartHi
   294                           psect	strings
   295                           	file	"userMacro.h"
   296                           	line	102
   297  03B1                     _humStartHi:
   298  03B1  3450               	retlw	050h
   299                           	global	_humStartLo
   300                           psect	strings
   301                           	file	"userMacro.h"
   302                           	line	104
   303  03B2                     _humStartLo:
   304  03B2  340A               	retlw	0Ah
   305                           	global	_humValHAddr
   306                           psect	strings
   307                           	file	"userMacro.h"
   308                           	line	92
   309  03B3                     _humValHAddr:
   310  03B3  3480               	retlw	080h
   311                           	global	_humValLAddr
   312                           psect	strings
   313                           	file	"userMacro.h"
   314                           	line	94
   315  03B4                     _humValLAddr:
   316  03B4  3482               	retlw	082h
   317                           	global	_lenByteAddr
   318                           psect	strings
   319                           	file	"userMacro.h"
   320                           	line	58
   321  03B5                     _lenByteAddr:
   322  03B5  3404               	retlw	04h
   323                           	global	_maxCmd
   324                           psect	strings
   325                           	file	"userMacro.h"
   326                           	line	40
   327  03B6                     _maxCmd:
   328  03B6  340E               	retlw	0Eh
   329                           	global	_minSizeByte
   330                           psect	strings
   331                           	file	"userMacro.h"
   332                           	line	36
   333  03B7                     _minSizeByte:
   334  03B7  340A               	retlw	0Ah
   335                           	global	_newLineChar
   336                           psect	strings
   337                           	file	"userMacro.h"
   338                           	line	34
   339  03B8                     _newLineChar:
   340  03B8  340A               	retlw	0Ah
   341                           	global	_noDataLen
   342                           psect	strings
   343                           	file	"userMacro.h"
   344                           	line	38
   345  03B9                     _noDataLen:
   346  03B9  340A               	retlw	0Ah
   347                           	global	_readByteVal
   348                           psect	strings
   349                           	file	"userMacro.h"
   350                           	line	42
   351  03BA                     _readByteVal:
   352  03BA  3400               	retlw	0
   353                           	global	_rwByteAddr
   354                           psect	strings
   355                           	file	"userMacro.h"
   356                           	line	54
   357  03BB                     _rwByteAddr:
   358  03BB  3402               	retlw	02h
   359                           	global	_startByteAddr
   360                           psect	strings
   361                           	file	"userMacro.h"
   362                           	line	52
   363  03BC                     _startByteAddr:
   364  03BC  3401               	retlw	01h
   365                           	global	_tempC
   366                           psect	strings
   367                           	file	"userMacro.h"
   368                           	line	86
   369  03BD                     _tempC:
   370  03BD  3400               	retlw	0
   371                           	global	_tempF
   372                           psect	strings
   373                           	file	"userMacro.h"
   374                           	line	88
   375  03BE                     _tempF:
   376  03BE  3410               	retlw	010h
   377                           	global	_tempHiAddr
   378                           psect	strings
   379                           	file	"userMacro.h"
   380                           	line	74
   381  03BF                     _tempHiAddr:
   382  03BF  3462               	retlw	062h
   383                           	global	_tempLoAddr
   384                           psect	strings
   385                           	file	"userMacro.h"
   386                           	line	76
   387  03C0                     _tempLoAddr:
   388  03C0  3464               	retlw	064h
   389                           	global	_tempStartHi
   390                           psect	strings
   391                           	file	"userMacro.h"
   392                           	line	82
   393  03C1                     _tempStartHi:
   394  03C1  3464               	retlw	064h
   395                           	global	_tempStartLo
   396                           psect	strings
   397                           	file	"userMacro.h"
   398                           	line	84
   399  03C2                     _tempStartLo:
   400  03C2  34A0               	retlw	0A0h
   401                           	global	_tempUnitAddr
   402                           psect	strings
   403                           	file	"userMacro.h"
   404                           	line	78
   405  03C3                     _tempUnitAddr:
   406  03C3  3466               	retlw	066h
   407                           	global	_tempValHAddr
   408                           psect	strings
   409                           	file	"userMacro.h"
   410                           	line	70
   411  03C4                     _tempValHAddr:
   412  03C4  3460               	retlw	060h
   413                           	global	_tempValLAddr
   414                           psect	strings
   415                           	file	"userMacro.h"
   416                           	line	72
   417  03C5                     _tempValLAddr:
   418  03C5  3461               	retlw	061h
   419                           	global	_timeoutByte
   420                           psect	strings
   421                           	file	"userMacro.h"
   422                           	line	46
   423  03C6                     _timeoutByte:
   424  03C6  34FF               	retlw	0FFh
   425                           	global	_userEndByte
   426                           psect	strings
   427                           	file	"userMacro.h"
   428                           	line	32
   429  03C7                     _userEndByte:
   430  03C7  340A               	retlw	0Ah
   431                           	global	_userStartByte
   432                           psect	strings
   433                           	file	"userMacro.h"
   434                           	line	30
   435  03C8                     _userStartByte:
   436  03C8  34AA               	retlw	0AAh
   437                           	global	_writeByteVal
   438                           psect	strings
   439                           	file	"userMacro.h"
   440                           	line	44
   441  03C9                     _writeByteVal:
   442  03C9  3401               	retlw	01h
   443                           	global	_readError
   444                           psect	strings
   445                           	file	"userMacro.h"
   446                           	line	26
   447  03CA                     _readError:
   448  03CA  344E               	retlw	04Eh
   449  03CB  346F               	retlw	06Fh
   450  03CC  3474               	retlw	074h
   451  03CD  3420               	retlw	020h
   452  03CE  3461               	retlw	061h
   453  03CF  3420               	retlw	020h
   454  03D0  3476               	retlw	076h
   455  03D1  3461               	retlw	061h
   456  03D2  346C               	retlw	06Ch
   457  03D3  3469               	retlw	069h
   458  03D4  3464               	retlw	064h
   459  03D5  3420               	retlw	020h
   460  03D6  3472               	retlw	072h
   461  03D7  3465               	retlw	065h
   462  03D8  3461               	retlw	061h
   463  03D9  3464               	retlw	064h
   464  03DA  3420               	retlw	020h
   465  03DB  3463               	retlw	063h
   466  03DC  346F               	retlw	06Fh
   467  03DD  346D               	retlw	06Dh
   468  03DE  346D               	retlw	06Dh
   469  03DF  3461               	retlw	061h
   470  03E0  346E               	retlw	06Eh
   471  03E1  3464               	retlw	064h
   472  03E2  3400               	retlw	0
   473                           	global	_member2
   474                           	global	_member3
   475                           	global	_member1
   476                           	global	_classTerm
   477                           	global	_classNum
   478                           	global	_RXLenAddr
   479                           	global	_calcCSByteAddr
   480                           	global	_cmdByteAddr
   481                           	global	_csByteAddr
   482                           	global	_dataBytesAddr
   483                           	global	_endByteAddr
   484                           	global	_groupNum
   485                           	global	_humHiAddr
   486                           	global	_humLoAddr
   487                           	global	_humStartHi
   488                           	global	_humStartLo
   489                           	global	_humValHAddr
   490                           	global	_humValLAddr
   491                           	global	_lenByteAddr
   492                           	global	_maxCmd
   493                           	global	_minSizeByte
   494                           	global	_newLineChar
   495                           	global	_noDataLen
   496                           	global	_readByteVal
   497                           	global	_rwByteAddr
   498                           	global	_startByteAddr
   499                           	global	_tempC
   500                           	global	_tempF
   501                           	global	_tempHiAddr
   502                           	global	_tempLoAddr
   503                           	global	_tempStartHi
   504                           	global	_tempStartLo
   505                           	global	_tempUnitAddr
   506                           	global	_tempValHAddr
   507                           	global	_tempValLAddr
   508                           	global	_timeoutByte
   509                           	global	_userEndByte
   510                           	global	_userStartByte
   511                           	global	_writeByteVal
   512                           	global	_readError
   513                           	global	getPacket@F1178
   514                           	global	_ADCON0
   515  001F                     _ADCON0	set	31
   516                           	global	_ADRESH
   517  001E                     _ADRESH	set	30
   518                           	global	_RCREG
   519  001A                     _RCREG	set	26
   520                           	global	_RCSTA
   521  0018                     _RCSTA	set	24
   522                           	global	_TXREG
   523  0019                     _TXREG	set	25
   524                           	global	_ADON
   525  00F8                     _ADON	set	248
   526                           	global	_CARRY
   527  0018                     _CARRY	set	24
   528                           	global	_GIE
   529  005F                     _GIE	set	95
   530                           	global	_GO_nDONE
   531  00FA                     _GO_nDONE	set	250
   532                           	global	_PEIE
   533  005E                     _PEIE	set	94
   534                           	global	_RCIF
   535  0065                     _RCIF	set	101
   536                           	global	_TXIF
   537  0064                     _TXIF	set	100
   538                           	global	_ADCON1
   539  009F                     _ADCON1	set	159
   540                           	global	_ADRESL
   541  009E                     _ADRESL	set	158
   542                           	global	_SPBRG
   543  0099                     _SPBRG	set	153
   544                           	global	_TRISA
   545  0085                     _TRISA	set	133
   546                           	global	_TXSTA
   547  0098                     _TXSTA	set	152
   548                           	global	_RCIE
   549  0465                     _RCIE	set	1125
   550                           	global	_TRISC6
   551  043E                     _TRISC6	set	1086
   552                           	global	_TRISC7
   553  043F                     _TRISC7	set	1087
   554                           	global	_EEADR
   555  010D                     _EEADR	set	269
   556                           	global	_EEDATA
   557  010C                     _EEDATA	set	268
   558                           	global	_EECON1
   559  018C                     _EECON1	set	396
   560                           	global	_EECON2
   561  018D                     _EECON2	set	397
   562                           	global	_RD
   563  0C60                     _RD	set	3168
   564                           	global	_WR
   565  0C61                     _WR	set	3169
   566                           	global	_WREN
   567  0C62                     _WREN	set	3170
   568                           	file	"C:\Users\GREGLA~1\AppData\Local\Temp\saao."
   569                           	line	#
   570                           psect cinit,class=CODE,delta=2
   571                           global start_initialization
   572  0DF0                     start_initialization:
   573                           
   574                           psect	dataBANK1,class=BANK1,space=1
   575                           global __pdataBANK1
   576  00B9                     __pdataBANK1:
   577                           	file	"main.c"
   578                           	line	51
   579  00B9                     main@F1175:
   580  00B9                            ds      9
   581                           
   582                           psect	bssBANK3,class=BANK3,space=1
   583                           global __pbssBANK3
   584  0190                     __pbssBANK3:
   585  0190                     getPacket@F1178:
   586  0190                            ds      50
   587                           
   588                           psect clrtext,class=CODE,delta=2
   589                           global clear_ram
   590                           ;	Called with FSR containing the base address, and
   591                           ;	W with the last address+1
   592  0D78                     clear_ram:
   593  0D78  0064               	clrwdt			;clear the watchdog before getting into this loop
   594  0D79                     clrloop:
   595  0D79  0180               	clrf	indf		;clear RAM location pointed to by FSR
   596  0D7A  0A84               	incf	fsr,f		;increment pointer
   597  0D7B  0604               	xorwf	fsr,w		;XOR with final address
   598  0D7C  1903               	btfsc	status,2	;have we reached the end yet?
   599  0D7D  3400               	retlw	0		;all done for this memory range, return
   600  0D7E  0604               	xorwf	fsr,w		;XOR again to restore value
   601  0D7F  2D79               	goto	clrloop		;do the next byte
   602                           
   603                           ; Clear objects allocated to BANK3
   604                           psect cinit,class=CODE,delta=2
   605  0DF0  1783               	bsf	status, 7	;select IRP bank2
   606  0DF1  3090               	movlw	low(__pbssBANK3)
   607  0DF2  0084               	movwf	fsr
   608  0DF3  30C2               	movlw	low((__pbssBANK3)+032h)
   609  0DF4  120A  158A  2578   	fcall	clear_ram
              120A  158A         
   610                           global btemp
   611                           psect inittext,class=CODE,delta=2
   612                           global init_fetch,btemp
   613                           ;	Called with low address in FSR and high address in W
   614  0DDD                     init_fetch:
   615  0DDD  087E               	movf btemp,w
   616  0DDE  008A               	movwf pclath
   617  0DDF  087F               	movf btemp+1,w
   618  0DE0  0082               	movwf pc
   619                           global init_ram
   620                           ;Called with:
   621                           ;	high address of idata address in btemp 
   622                           ;	low address of idata address in btemp+1 
   623                           ;	low address of data in FSR
   624                           ;	high address + 1 of data in btemp-1
   625  0DE1                     init_ram:
   626  0DE1  120A  158A  25DD   	fcall init_fetch
              120A  158A         
   627  0DE6  0080               	movwf indf,f
   628  0DE7  0A84               	incf fsr,f
   629  0DE8  0804               	movf fsr,w
   630  0DE9  067D               	xorwf btemp-1,w
   631  0DEA  1903               	btfsc status,2
   632  0DEB  3400               	retlw 0
   633  0DEC  0AFF               	incf btemp+1,f
   634  0DED  1903               	btfsc status,2
   635  0DEE  0AFE               	incf btemp,f
   636  0DEF  2DE1               	goto init_ram
   637                           ; Initialize objects allocated to BANK1
   638                           psect cinit,class=CODE,delta=2
   639                           global init_ram, __pidataBANK1
   640  0DF9  1383               	bcf	status, 7	;select IRP bank0
   641  0DFA  30C2               	movlw low(__pdataBANK1+9)
   642  0DFB  00FD               	movwf btemp-1,f
   643  0DFC  300D               	movlw high(__pidataBANK1)
   644  0DFD  00FE               	movwf btemp,f
   645  0DFE  3080               	movlw low(__pidataBANK1)
   646  0DFF  00FF               	movwf btemp+1,f
   647  0E00  30B9               	movlw low(__pdataBANK1)
   648  0E01  0084               	movwf fsr,f
   649  0E02  120A  158A  25E1   	fcall init_ram
              120A  158A         
   650                           psect cinit,class=CODE,delta=2
   651                           global end_of_initialization
   652                           
   653                           ;End of C runtime variable initialization code
   654                           
   655  0E07                     end_of_initialization:
   656  0E07  0183               clrf status
   657  0E08  120A  118A  2EFE   ljmp _main	;jump to C main() function
   658                           psect	cstackBANK1,class=BANK1,space=1
   659                           global __pcstackBANK1
   660  00A0                     __pcstackBANK1:
   661                           	global	??_selectTemp
   662  00A0                     ??_selectTemp:	; 0 bytes @ 0x0
   663                           	global	??_initUSART
   664  00A0                     ??_initUSART:	; 0 bytes @ 0x0
   665                           	global	??_writeByte
   666  00A0                     ??_writeByte:	; 0 bytes @ 0x0
   667                           	global	??_initADC
   668  00A0                     ??_initADC:	; 0 bytes @ 0x0
   669                           	global	?_eeprom_write
   670  00A0                     ?_eeprom_write:	; 1 bytes @ 0x0
   671                           	global	?_strlen
   672  00A0                     ?_strlen:	; 2 bytes @ 0x0
   673                           	global	?_readTemp
   674  00A0                     ?_readTemp:	; 2 bytes @ 0x0
   675                           	global	writeByte@Byte
   676  00A0                     writeByte@Byte:	; 1 bytes @ 0x0
   677                           	global	eeprom_write@value
   678  00A0                     eeprom_write@value:	; 1 bytes @ 0x0
   679                           	global	strlen@s
   680  00A0                     strlen@s:	; 2 bytes @ 0x0
   681  00A0                     	ds	1
   682                           	global	??_eeprom_write
   683  00A1                     ??_eeprom_write:	; 0 bytes @ 0x1
   684  00A1                     	ds	1
   685                           	global	??_strlen
   686  00A2                     ??_strlen:	; 0 bytes @ 0x2
   687                           	global	??_readTemp
   688  00A2                     ??_readTemp:	; 0 bytes @ 0x2
   689                           	global	eeprom_write@addr
   690  00A2                     eeprom_write@addr:	; 1 bytes @ 0x2
   691  00A2                     	ds	1
   692                           	global	??_initTemp
   693  00A3                     ??_initTemp:	; 0 bytes @ 0x3
   694  00A3                     	ds	1
   695                           	global	??_getTemp
   696  00A4                     ??_getTemp:	; 0 bytes @ 0x4
   697  00A4                     	ds	1
   698                           	global	getTemp@tempReading
   699  00A5                     getTemp@tempReading:	; 2 bytes @ 0x5
   700  00A5                     	ds	1
   701                           	global	strlen@cp
   702  00A6                     strlen@cp:	; 2 bytes @ 0x6
   703  00A6                     	ds	2
   704                           	global	?_writeString
   705  00A8                     ?_writeString:	; 0 bytes @ 0x8
   706                           	global	writeString@userString
   707  00A8                     writeString@userString:	; 2 bytes @ 0x8
   708  00A8                     	ds	2
   709                           	global	??_writeString
   710  00AA                     ??_writeString:	; 0 bytes @ 0xA
   711                           	global	writeString@i
   712  00AA                     writeString@i:	; 2 bytes @ 0xA
   713  00AA                     	ds	2
   714                           	global	??_main
   715  00AC                     ??_main:	; 0 bytes @ 0xC
   716  00AC                     	ds	4
   717                           	global	main@testString
   718  00B0                     main@testString:	; 9 bytes @ 0x10
   719  00B0                     	ds	9
   720                           psect	cstackCOMMON,class=COMMON,space=1
   721                           global __pcstackCOMMON
   722  0070                     __pcstackCOMMON:
   723                           	global	??_eeprom_read
   724  0070                     ??_eeprom_read:	; 0 bytes @ 0x0
   725                           	global	?_addDataToCheckSum
   726  0070                     ?_addDataToCheckSum:	; 0 bytes @ 0x0
   727                           	global	?_selectTemp
   728  0070                     ?_selectTemp:	; 0 bytes @ 0x0
   729                           	global	?_getPacket
   730  0070                     ?_getPacket:	; 0 bytes @ 0x0
   731                           	global	?_readCommands
   732  0070                     ?_readCommands:	; 0 bytes @ 0x0
   733                           	global	?_writeCommands
   734  0070                     ?_writeCommands:	; 0 bytes @ 0x0
   735                           	global	??_writeCommands
   736  0070                     ??_writeCommands:	; 0 bytes @ 0x0
   737                           	global	?_initUSART
   738  0070                     ?_initUSART:	; 0 bytes @ 0x0
   739                           	global	?_writeByte
   740  0070                     ?_writeByte:	; 0 bytes @ 0x0
   741                           	global	??_readByte
   742  0070                     ??_readByte:	; 0 bytes @ 0x0
   743                           	global	?_readString
   744  0070                     ?_readString:	; 0 bytes @ 0x0
   745                           	global	??_makeNibble
   746  0070                     ??_makeNibble:	; 0 bytes @ 0x0
   747                           	global	?_parsePacket
   748  0070                     ?_parsePacket:	; 0 bytes @ 0x0
   749                           	global	?_initTemp
   750  0070                     ?_initTemp:	; 0 bytes @ 0x0
   751                           	global	?_getTemp
   752  0070                     ?_getTemp:	; 0 bytes @ 0x0
   753                           	global	?_initADC
   754  0070                     ?_initADC:	; 0 bytes @ 0x0
   755                           	global	?_isr
   756  0070                     ?_isr:	; 0 bytes @ 0x0
   757                           	global	?i1_writeByte
   758  0070                     ?i1_writeByte:	; 0 bytes @ 0x0
   759                           	global	??i1_writeByte
   760  0070                     ??i1_writeByte:	; 0 bytes @ 0x0
   761                           	global	?i1_writeString
   762  0070                     ?i1_writeString:	; 0 bytes @ 0x0
   763                           	global	?_eeprom_read
   764  0070                     ?_eeprom_read:	; 1 bytes @ 0x0
   765                           	global	?_readByte
   766  0070                     ?_readByte:	; 1 bytes @ 0x0
   767                           	global	?_makeNibble
   768  0070                     ?_makeNibble:	; 1 bytes @ 0x0
   769                           	global	?_main
   770  0070                     ?_main:	; 2 bytes @ 0x0
   771                           	global	?i1_strlen
   772  0070                     ?i1_strlen:	; 2 bytes @ 0x0
   773                           	global	makeNibble@tempNib
   774  0070                     makeNibble@tempNib:	; 1 bytes @ 0x0
   775                           	global	i1writeByte@Byte
   776  0070                     i1writeByte@Byte:	; 1 bytes @ 0x0
   777                           	global	i1strlen@s
   778  0070                     i1strlen@s:	; 2 bytes @ 0x0
   779  0070                     	ds	1
   780                           	global	eeprom_read@addr
   781  0071                     eeprom_read@addr:	; 1 bytes @ 0x1
   782  0071                     	ds	1
   783                           	global	??i1_strlen
   784  0072                     ??i1_strlen:	; 0 bytes @ 0x2
   785                           	global	?_checkEven
   786  0072                     ?_checkEven:	; 2 bytes @ 0x2
   787                           	global	?_checkLength
   788  0072                     ?_checkLength:	; 2 bytes @ 0x2
   789                           	global	?_checkDataFrames
   790  0072                     ?_checkDataFrames:	; 2 bytes @ 0x2
   791                           	global	?_checkCS
   792  0072                     ?_checkCS:	; 2 bytes @ 0x2
   793  0072                     	ds	2
   794                           	global	??_checkEven
   795  0074                     ??_checkEven:	; 0 bytes @ 0x4
   796                           	global	??_checkLength
   797  0074                     ??_checkLength:	; 0 bytes @ 0x4
   798                           	global	??_checkDataFrames
   799  0074                     ??_checkDataFrames:	; 0 bytes @ 0x4
   800                           	global	??_checkCS
   801  0074                     ??_checkCS:	; 0 bytes @ 0x4
   802  0074                     	ds	2
   803                           	global	i1strlen@cp
   804  0076                     i1strlen@cp:	; 2 bytes @ 0x6
   805  0076                     	ds	2
   806                           	global	??i1_writeString
   807  0078                     ??i1_writeString:	; 0 bytes @ 0x8
   808                           	global	?i1_eeprom_write
   809  0078                     ?i1_eeprom_write:	; 1 bytes @ 0x8
   810                           	global	i1writeString@userString
   811  0078                     i1writeString@userString:	; 1 bytes @ 0x8
   812                           	global	i1eeprom_write@value
   813  0078                     i1eeprom_write@value:	; 1 bytes @ 0x8
   814  0078                     	ds	1
   815                           	global	??i1_eeprom_write
   816  0079                     ??i1_eeprom_write:	; 0 bytes @ 0x9
   817                           	global	i1writeString@i
   818  0079                     i1writeString@i:	; 2 bytes @ 0x9
   819  0079                     	ds	1
   820                           	global	i1eeprom_write@addr
   821  007A                     i1eeprom_write@addr:	; 1 bytes @ 0xA
   822  007A                     	ds	1
   823                           	global	??_addDataToCheckSum
   824  007B                     ??_addDataToCheckSum:	; 0 bytes @ 0xB
   825                           	global	??_readCommands
   826  007B                     ??_readCommands:	; 0 bytes @ 0xB
   827                           	global	??_readString
   828  007B                     ??_readString:	; 0 bytes @ 0xB
   829                           	global	?_makeHexByte
   830  007B                     ?_makeHexByte:	; 1 bytes @ 0xB
   831                           	global	?_checkStartByte
   832  007B                     ?_checkStartByte:	; 2 bytes @ 0xB
   833                           	global	?_checkRWByte
   834  007B                     ?_checkRWByte:	; 2 bytes @ 0xB
   835                           	global	?_checkCMDByte
   836  007B                     ?_checkCMDByte:	; 2 bytes @ 0xB
   837                           	global	makeHexByte@nibTwo
   838  007B                     makeHexByte@nibTwo:	; 1 bytes @ 0xB
   839  007B                     	ds	1
   840                           	global	??_makeHexByte
   841  007C                     ??_makeHexByte:	; 0 bytes @ 0xC
   842  007C                     	ds	1
   843                           	global	addDataToCheckSum@i
   844  007D                     addDataToCheckSum@i:	; 1 bytes @ 0xD
   845  007D                     	ds	1
   846                           	global	??_validatePacket
   847  007E                     ??_validatePacket:	; 0 bytes @ 0xE
   848                           psect	cstackBANK0,class=BANK0,space=1
   849                           global __pcstackBANK0
   850  0020                     __pcstackBANK0:
   851                           	global	??_checkStartByte
   852  0020                     ??_checkStartByte:	; 0 bytes @ 0x0
   853                           	global	??_checkRWByte
   854  0020                     ??_checkRWByte:	; 0 bytes @ 0x0
   855                           	global	??_checkCMDByte
   856  0020                     ??_checkCMDByte:	; 0 bytes @ 0x0
   857                           	global	readString@readStorage
   858  0020                     readString@readStorage:	; 1 bytes @ 0x0
   859                           	global	makeHexByte@nibOne
   860  0020                     makeHexByte@nibOne:	; 1 bytes @ 0x0
   861  0020                     	ds	1
   862                           	global	makeHexByte@input_byte
   863  0021                     makeHexByte@input_byte:	; 1 bytes @ 0x1
   864                           	global	readString@i
   865  0021                     readString@i:	; 2 bytes @ 0x1
   866  0021                     	ds	1
   867                           	global	??_parsePacket
   868  0022                     ??_parsePacket:	; 0 bytes @ 0x2
   869                           	global	?_validatePacket
   870  0022                     ?_validatePacket:	; 2 bytes @ 0x2
   871  0022                     	ds	1
   872                           	global	readString@ch
   873  0023                     readString@ch:	; 1 bytes @ 0x3
   874  0023                     	ds	3
   875                           	global	parsePacket@dataCounter
   876  0026                     parsePacket@dataCounter:	; 2 bytes @ 0x6
   877  0026                     	ds	2
   878                           	global	parsePacket@i
   879  0028                     parsePacket@i:	; 1 bytes @ 0x8
   880  0028                     	ds	1
   881                           	global	parsePacket@dataPacket
   882  0029                     parsePacket@dataPacket:	; 1 bytes @ 0x9
   883  0029                     	ds	1
   884                           	global	??_getPacket
   885  002A                     ??_getPacket:	; 0 bytes @ 0xA
   886  002A                     	ds	4
   887                           	global	getPacket@arrStore
   888  002E                     getPacket@arrStore:	; 50 bytes @ 0xE
   889  002E                     	ds	50
   890                           	global	??_isr
   891  0060                     ??_isr:	; 0 bytes @ 0x40
   892  0060                     	ds	4
   893 ;;Data sizes: Strings 0, constant 122, data 9, bss 50, persistent 0 stack 0
   894 ;;Auto spaces:   Size  Autos    Used
   895 ;; COMMON          14     14      14
   896 ;; BANK0           80     68      68
   897 ;; BANK1           80     25      34
   898 ;; BANK3           96      0      50
   899 ;; BANK2           96      0       0
   900                           
   901 ;;
   902 ;; Pointer list with targets:
   903                           
   904 ;; i1writeString@userString	PTR unsigned char  size(1) Largest target is 25
   905 ;;		 -> readError(CODE[25]), 
   906 ;;
   907 ;; ?i1_strlen	unsigned int  size(2) Largest target is 50
   908 ;;		 -> readError(CODE[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   909 ;;
   910 ;; i1strlen@s	PTR const unsigned char  size(2) Largest target is 50
   911 ;;		 -> readError(CODE[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   912 ;;
   913 ;; ?_readTemp	unsigned int  size(1) Largest target is 0
   914 ;;
   915 ;; ?_strlen	unsigned int  size(2) Largest target is 50
   916 ;;		 -> readError(CODE[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   917 ;;
   918 ;; strlen@s	PTR const unsigned char  size(2) Largest target is 50
   919 ;;		 -> readError(CODE[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   920 ;;
   921 ;; strlen@cp	PTR const unsigned char  size(2) Largest target is 50
   922 ;;		 -> readError(CODE[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   923 ;;
   924 ;; parsePacket@dataPacket	PTR unsigned char  size(1) Largest target is 50
   925 ;;		 -> getPacket@arrStore(BANK0[50]), 
   926 ;;
   927 ;; readString@readStorage	PTR unsigned char  size(1) Largest target is 50
   928 ;;		 -> getPacket@arrStore(BANK0[50]), 
   929 ;;
   930 ;; writeString@userString	PTR unsigned char  size(2) Largest target is 25
   931 ;;		 -> readError(CODE[25]), main@testString(BANK1[9]), 
   932 ;;
   933                           
   934                           
   935 ;;
   936 ;; Critical Paths under _main in COMMON
   937 ;;
   938 ;;   None.
   939 ;;
   940 ;; Critical Paths under _isr in COMMON
   941 ;;
   942 ;;   _readCommands->i1_writeString
   943 ;;   _validatePacket->_addDataToCheckSum
   944 ;;   _parsePacket->_makeHexByte
   945 ;;   i1_writeString->i1_strlen
   946 ;;   _addDataToCheckSum->i1_eeprom_write
   947 ;;   _checkCS->_eeprom_read
   948 ;;   _checkCMDByte->i1_eeprom_write
   949 ;;   _checkRWByte->i1_eeprom_write
   950 ;;   _checkStartByte->i1_eeprom_write
   951 ;;   _checkDataFrames->_eeprom_read
   952 ;;   _checkLength->_eeprom_read
   953 ;;   _checkEven->_eeprom_read
   954 ;;   _makeHexByte->i1_eeprom_write
   955 ;;   _readString->i1_eeprom_write
   956 ;;   i1_eeprom_write->i1_strlen
   957 ;;
   958 ;; Critical Paths under _main in BANK0
   959 ;;
   960 ;;   None.
   961 ;;
   962 ;; Critical Paths under _isr in BANK0
   963 ;;
   964 ;;   _isr->_getPacket
   965 ;;   _getPacket->_parsePacket
   966 ;;   _validatePacket->_checkStartByte
   967 ;;   _validatePacket->_checkRWByte
   968 ;;   _validatePacket->_checkCMDByte
   969 ;;   _parsePacket->_makeHexByte
   970 ;;
   971 ;; Critical Paths under _main in BANK1
   972 ;;
   973 ;;   _main->_writeString
   974 ;;   _getTemp->_readTemp
   975 ;;   _initTemp->_eeprom_write
   976 ;;   _writeString->_strlen
   977 ;;
   978 ;; Critical Paths under _isr in BANK1
   979 ;;
   980 ;;   None.
   981 ;;
   982 ;; Critical Paths under _main in BANK3
   983 ;;
   984 ;;   None.
   985 ;;
   986 ;; Critical Paths under _isr in BANK3
   987 ;;
   988 ;;   None.
   989 ;;
   990 ;; Critical Paths under _main in BANK2
   991 ;;
   992 ;;   None.
   993 ;;
   994 ;; Critical Paths under _isr in BANK2
   995 ;;
   996 ;;   None.
   997                           
   998 ;;
   999 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1000 ;;
  1001                           
  1002 ;;
  1003 ;;Call Graph Tables:
  1004 ;;
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1007 ;; ---------------------------------------------------------------------------------
  1008 ;; (0) _main                                                13    13      0     505
  1009 ;;                                             12 BANK1     13    13      0
  1010 ;;                          _initUSART
  1011 ;;                            _initADC
  1012 ;;                           _initTemp
  1013 ;;                        _writeString
  1014 ;;                            _getTemp
  1015 ;; ---------------------------------------------------------------------------------
  1016 ;; (1) _getTemp                                              3     3      0      95
  1017 ;;                                              4 BANK1      3     3      0
  1018 ;;                         _selectTemp
  1019 ;;                           _readTemp
  1020 ;;                       _eeprom_write
  1021 ;; ---------------------------------------------------------------------------------
  1022 ;; (1) _initTemp                                             1     1      0      50
  1023 ;;                                              3 BANK1      1     1      0
  1024 ;;                       _eeprom_write
  1025 ;; ---------------------------------------------------------------------------------
  1026 ;; (2) _readTemp                                             4     2      2       0
  1027 ;;                                              0 BANK1      4     2      2
  1028 ;; ---------------------------------------------------------------------------------
  1029 ;; (1) _writeString                                          4     2      2     310
  1030 ;;                                              8 BANK1      4     2      2
  1031 ;;                          _writeByte
  1032 ;;                             _strlen
  1033 ;; ---------------------------------------------------------------------------------
  1034 ;; (1) _initADC                                              0     0      0       0
  1035 ;; ---------------------------------------------------------------------------------
  1036 ;; (2) _selectTemp                                           0     0      0       0
  1037 ;; ---------------------------------------------------------------------------------
  1038 ;; (2) _eeprom_write                                         3     2      1      50
  1039 ;;                                              0 BANK1      3     2      1
  1040 ;; ---------------------------------------------------------------------------------
  1041 ;; (2) _strlen                                               8     6      2     127
  1042 ;;                                              0 BANK1      8     6      2
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (2) _writeByte                                            1     1      0      22
  1045 ;;                                              0 BANK1      1     1      0
  1046 ;; ---------------------------------------------------------------------------------
  1047 ;; (1) _initUSART                                            0     0      0       0
  1048 ;; ---------------------------------------------------------------------------------
  1049 ;; Estimated maximum stack depth 2
  1050 ;; ---------------------------------------------------------------------------------
  1051 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1052 ;; ---------------------------------------------------------------------------------
  1053 ;; (3) _isr                                                  4     4      0    4032
  1054 ;;                                             64 BANK0      4     4      0
  1055 ;;                          _getPacket
  1056 ;; ---------------------------------------------------------------------------------
  1057 ;; (4) _getPacket                                           54    54      0    4032
  1058 ;;                                             10 BANK0     54    54      0
  1059 ;;                     i1_eeprom_write
  1060 ;;                         _readString
  1061 ;;                        _eeprom_read
  1062 ;;                        i1_writeByte
  1063 ;;                        _parsePacket
  1064 ;;                     _validatePacket
  1065 ;;                       _readCommands
  1066 ;;                      _writeCommands
  1067 ;; ---------------------------------------------------------------------------------
  1068 ;; (5) _readCommands                                         0     0      0     831
  1069 ;;                        i1_writeByte
  1070 ;;                      i1_writeString
  1071 ;;                        _eeprom_read
  1072 ;; ---------------------------------------------------------------------------------
  1073 ;; (5) _validatePacket                                       2     0      2    1215
  1074 ;;                                              2 BANK0      2     0      2
  1075 ;;                     _checkStartByte
  1076 ;;                        _checkRWByte
  1077 ;;                       _checkCMDByte
  1078 ;;                    _checkDataFrames
  1079 ;;                  _addDataToCheckSum
  1080 ;;                            _checkCS
  1081 ;; ---------------------------------------------------------------------------------
  1082 ;; (5) _parsePacket                                          8     8      0    1208
  1083 ;;                                              2 BANK0      8     8      0
  1084 ;;                        _checkLength
  1085 ;;                          _checkEven
  1086 ;;                        _makeHexByte
  1087 ;;                     i1_eeprom_write
  1088 ;;                           i1_strlen
  1089 ;;                        _eeprom_read
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (6) i1_writeString                                        3     3      0     736
  1092 ;;                                              8 COMMON     3     3      0
  1093 ;;                        i1_writeByte
  1094 ;;                           i1_strlen
  1095 ;; ---------------------------------------------------------------------------------
  1096 ;; (6) _addDataToCheckSum                                    3     3      0     236
  1097 ;;                                             11 COMMON     3     3      0
  1098 ;;                        _eeprom_read
  1099 ;;                     i1_eeprom_write
  1100 ;; ---------------------------------------------------------------------------------
  1101 ;; (6) _checkCS                                              3     1      2      95
  1102 ;;                                              2 COMMON     3     1      2
  1103 ;;                        _eeprom_read
  1104 ;;                        i1_writeByte
  1105 ;; ---------------------------------------------------------------------------------
  1106 ;; (6) _checkCMDByte                                         4     2      2     263
  1107 ;;                                             11 COMMON     2     0      2
  1108 ;;                                              0 BANK0      2     2      0
  1109 ;;                        _eeprom_read
  1110 ;;                     i1_eeprom_write
  1111 ;;                        i1_writeByte
  1112 ;; ---------------------------------------------------------------------------------
  1113 ;; (6) _checkRWByte                                          4     2      2     263
  1114 ;;                                             11 COMMON     2     0      2
  1115 ;;                                              0 BANK0      2     2      0
  1116 ;;                        _eeprom_read
  1117 ;;                        i1_writeByte
  1118 ;;                     i1_eeprom_write
  1119 ;; ---------------------------------------------------------------------------------
  1120 ;; (6) _checkStartByte                                       4     2      2     263
  1121 ;;                                             11 COMMON     2     0      2
  1122 ;;                                              0 BANK0      2     2      0
  1123 ;;                        _eeprom_read
  1124 ;;                        i1_writeByte
  1125 ;;                     i1_eeprom_write
  1126 ;; ---------------------------------------------------------------------------------
  1127 ;; (6) _checkDataFrames                                      8     6      2      95
  1128 ;;                                              2 COMMON     8     6      2
  1129 ;;                        _eeprom_read
  1130 ;;                        i1_writeByte
  1131 ;; ---------------------------------------------------------------------------------
  1132 ;; (6) _checkLength                                          3     1      2      95
  1133 ;;                                              2 COMMON     3     1      2
  1134 ;;                        _eeprom_read
  1135 ;;                        i1_writeByte
  1136 ;; ---------------------------------------------------------------------------------
  1137 ;; (6) _checkEven                                            3     1      2      95
  1138 ;;                                              2 COMMON     3     1      2
  1139 ;;                        _eeprom_read
  1140 ;;                        i1_writeByte
  1141 ;; ---------------------------------------------------------------------------------
  1142 ;; (6) _makeHexByte                                          5     4      1     134
  1143 ;;                                             11 COMMON     3     2      1
  1144 ;;                                              0 BANK0      2     2      0
  1145 ;;                         _makeNibble
  1146 ;;                     i1_eeprom_write (ARG)
  1147 ;;                           i1_strlen (ARG)
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; (5) _readString                                           6     6      0     399
  1150 ;;                                             11 COMMON     2     2      0
  1151 ;;                                              0 BANK0      4     4      0
  1152 ;;                           _readByte
  1153 ;;                        i1_writeByte
  1154 ;;                     i1_eeprom_write
  1155 ;; ---------------------------------------------------------------------------------
  1156 ;; (8) i1_strlen                                             8     6      2     294
  1157 ;;                                              0 COMMON     8     6      2
  1158 ;; ---------------------------------------------------------------------------------
  1159 ;; (7) i1_eeprom_write                                       3     2      1     168
  1160 ;;                                              8 COMMON     3     2      1
  1161 ;;                         _makeNibble (ARG)
  1162 ;;                           i1_strlen (ARG)
  1163 ;;                        _eeprom_read (ARG)
  1164 ;; ---------------------------------------------------------------------------------
  1165 ;; (7) i1_writeByte                                          1     1      0      73
  1166 ;;                                              0 COMMON     1     1      0
  1167 ;; ---------------------------------------------------------------------------------
  1168 ;; (5) _writeCommands                                        0     0      0       0
  1169 ;; ---------------------------------------------------------------------------------
  1170 ;; (6) _eeprom_read                                          2     2      0      22
  1171 ;;                                              0 COMMON     2     2      0
  1172 ;; ---------------------------------------------------------------------------------
  1173 ;; (7) _makeNibble                                           1     1      0      66
  1174 ;;                                              0 COMMON     1     1      0
  1175 ;; ---------------------------------------------------------------------------------
  1176 ;; (6) _readByte                                             0     0      0       0
  1177 ;; ---------------------------------------------------------------------------------
  1178 ;; Estimated maximum stack depth 8
  1179 ;; ---------------------------------------------------------------------------------
  1180                           
  1181 ;; Call Graph Graphs:
  1182                           
  1183 ;; _main (ROOT)
  1184 ;;   _initUSART
  1185 ;;   _initADC
  1186 ;;   _initTemp
  1187 ;;     _eeprom_write
  1188 ;;   _writeString
  1189 ;;     _writeByte
  1190 ;;     _strlen
  1191 ;;   _getTemp
  1192 ;;     _selectTemp
  1193 ;;     _readTemp
  1194 ;;     _eeprom_write
  1195 ;;
  1196 ;; _isr (ROOT)
  1197 ;;   _getPacket
  1198 ;;     i1_eeprom_write
  1199 ;;       _makeNibble (ARG)
  1200 ;;       i1_strlen (ARG)
  1201 ;;       _eeprom_read (ARG)
  1202 ;;     _readString
  1203 ;;       _readByte
  1204 ;;       i1_writeByte
  1205 ;;       i1_eeprom_write
  1206 ;;         _makeNibble (ARG)
  1207 ;;         i1_strlen (ARG)
  1208 ;;         _eeprom_read (ARG)
  1209 ;;     _eeprom_read
  1210 ;;     i1_writeByte
  1211 ;;     _parsePacket
  1212 ;;       _checkLength
  1213 ;;         _eeprom_read
  1214 ;;         i1_writeByte
  1215 ;;       _checkEven
  1216 ;;         _eeprom_read
  1217 ;;         i1_writeByte
  1218 ;;       _makeHexByte
  1219 ;;         _makeNibble
  1220 ;;         i1_eeprom_write (ARG)
  1221 ;;           _makeNibble (ARG)
  1222 ;;           i1_strlen (ARG)
  1223 ;;           _eeprom_read (ARG)
  1224 ;;         i1_strlen (ARG)
  1225 ;;       i1_eeprom_write
  1226 ;;         _makeNibble (ARG)
  1227 ;;         i1_strlen (ARG)
  1228 ;;         _eeprom_read (ARG)
  1229 ;;       i1_strlen
  1230 ;;       _eeprom_read
  1231 ;;     _validatePacket
  1232 ;;       _checkStartByte
  1233 ;;         _eeprom_read
  1234 ;;         i1_writeByte
  1235 ;;         i1_eeprom_write
  1236 ;;           _makeNibble (ARG)
  1237 ;;           i1_strlen (ARG)
  1238 ;;           _eeprom_read (ARG)
  1239 ;;       _checkRWByte
  1240 ;;         _eeprom_read
  1241 ;;         i1_writeByte
  1242 ;;         i1_eeprom_write
  1243 ;;           _makeNibble (ARG)
  1244 ;;           i1_strlen (ARG)
  1245 ;;           _eeprom_read (ARG)
  1246 ;;       _checkCMDByte
  1247 ;;         _eeprom_read
  1248 ;;         i1_eeprom_write
  1249 ;;           _makeNibble (ARG)
  1250 ;;           i1_strlen (ARG)
  1251 ;;           _eeprom_read (ARG)
  1252 ;;         i1_writeByte
  1253 ;;       _checkDataFrames
  1254 ;;         _eeprom_read
  1255 ;;         i1_writeByte
  1256 ;;       _addDataToCheckSum
  1257 ;;         _eeprom_read
  1258 ;;         i1_eeprom_write
  1259 ;;           _makeNibble (ARG)
  1260 ;;           i1_strlen (ARG)
  1261 ;;           _eeprom_read (ARG)
  1262 ;;       _checkCS
  1263 ;;         _eeprom_read
  1264 ;;         i1_writeByte
  1265 ;;     _readCommands
  1266 ;;       i1_writeByte
  1267 ;;       i1_writeString
  1268 ;;         i1_writeByte
  1269 ;;         i1_strlen
  1270 ;;       _eeprom_read
  1271 ;;     _writeCommands
  1272 ;;
  1273                           
  1274 ;; Address spaces:
  1275                           
  1276 ;;Name               Size   Autos  Total    Cost      Usage
  1277 ;;BANK3               60      0      32       9       52.1%
  1278 ;;BITBANK3            60      0       0       8        0.0%
  1279 ;;SFR3                 0      0       0       4        0.0%
  1280 ;;BITSFR3              0      0       0       4        0.0%
  1281 ;;BANK2               60      0       0      11        0.0%
  1282 ;;BITBANK2            60      0       0      10        0.0%
  1283 ;;SFR2                 0      0       0       5        0.0%
  1284 ;;BITSFR2              0      0       0       5        0.0%
  1285 ;;SFR1                 0      0       0       2        0.0%
  1286 ;;BITSFR1              0      0       0       2        0.0%
  1287 ;;BANK1               50     19      22       7       42.5%
  1288 ;;BITBANK1            50      0       0       6        0.0%
  1289 ;;CODE                 0      0       0       0        0.0%
  1290 ;;DATA                 0      0      B4      12        0.0%
  1291 ;;ABS                  0      0      A6       3        0.0%
  1292 ;;NULL                 0      0       0       0        0.0%
  1293 ;;STACK                0      0       E       2        0.0%
  1294 ;;BANK0               50     44      44       5       85.0%
  1295 ;;BITBANK0            50      0       0       4        0.0%
  1296 ;;SFR0                 0      0       0       1        0.0%
  1297 ;;BITSFR0              0      0       0       1        0.0%
  1298 ;;COMMON               E      E       E       1      100.0%
  1299 ;;BITCOMMON            E      0       0       0        0.0%
  1300 ;;EEDATA             100      0       0       0        0.0%
  1301                           
  1302                           	global	_main
  1303                           psect	maintext,global,class=CODE,delta=2
  1304                           global __pmaintext
  1305  06FE                     __pmaintext:
  1306                           
  1307 ;; *************** function _main *****************
  1308 ;; Defined at:
  1309 ;;		line 50 in file "main.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  testString      9   16[BANK1 ] unsigned char [9]
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  2  3991[COMMON] int 
  1316 ;; Registers used:
  1317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 17F/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1323 ;;      Params:         0       0       0       0       0
  1324 ;;      Locals:         0       0       9       0       0
  1325 ;;      Temps:          0       0       4       0       0
  1326 ;;      Totals:         0       0      13       0       0
  1327 ;;Total ram usage:       13 bytes
  1328 ;; Hardware stack levels required when called:    8
  1329 ;; This function calls:
  1330 ;;		_initUSART
  1331 ;;		_initADC
  1332 ;;		_initTemp
  1333 ;;		_writeString
  1334 ;;		_getTemp
  1335 ;; This function is called by:
  1336 ;;		Startup code after reset
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           psect	maintext
  1340                           	file	"main.c"
  1341                           	line	50
  1342                           	global	__size_of_main
  1343  0047                     	__size_of_main	equ	__end_of_main-_main
  1344                           	
  1345  06FE                     _main:	
  1346                           	opt	stack 0
  1347                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1348                           	line	51
  1349                           	
  1350  06FE                     l8831:	
  1351                           ;main.c: 51: char testString[] = "Welcome\n";
  1352  06FE  30B0               	movlw	(main@testString)&0ffh
  1353  06FF  0084               	movwf	fsr0
  1354  0700  30B9               	movlw	low(main@F1175)
  1355  0701  1683               	bsf	status, 5	;RP0=1, select bank1
  1356  0702  1303               	bcf	status, 6	;RP1=0, select bank1
  1357  0703  00AC               	movwf	(??_main+0)^080h+0
  1358  0704  0804               	movf	fsr0,w
  1359  0705  00AD               	movwf	((??_main+0)^080h+0+1)
  1360  0706  3009               	movlw	9
  1361  0707  00AE               	movwf	((??_main+0)^080h+0+2)
  1362  0708                     u3200:
  1363  0708  082C               	movf	(??_main+0)^080h+0,w
  1364  0709  0084               	movwf	fsr0
  1365  070A  1383               	bcf	status, 7	;select IRP bank1
  1366                           	
  1367  070B  0800               	movf	indf,w
  1368  070C  00AF               	movwf	((??_main+0)^080h+0+3)
  1369  070D  0AAC               	incf	(??_main+0)^080h+0,f
  1370  070E  082D               	movf	((??_main+0)^080h+0+1),w
  1371  070F  0084               	movwf	fsr0
  1372                           	
  1373  0710  082F               	movf	((??_main+0)^080h+0+3),w
  1374  0711  0080               	movwf	indf
  1375  0712  0AAD               	incf	((??_main+0)^080h+0+1),f
  1376  0713  0BAE               	decfsz	((??_main+0)^080h+0+2),f
  1377  0714  2F08               	goto	u3200
  1378                           	line	55
  1379                           	
  1380  0715                     l8833:	
  1381                           ;main.c: 55: initUSART();
  1382  0715  120A  158A  25CB   	fcall	_initUSART
              120A  118A         
  1383                           	line	57
  1384                           	
  1385  071A                     l8835:	
  1386                           ;main.c: 57: initADC();
  1387  071A  120A  158A  2594   	fcall	_initADC
              120A  118A         
  1388                           	line	60
  1389                           	
  1390  071F                     l8837:	
  1391                           ;main.c: 60: initTemp();
  1392  071F  120A  118A  252B   	fcall	_initTemp
              120A  118A         
  1393                           	line	63
  1394                           	
  1395  0724                     l8839:	
  1396                           ;main.c: 63: writeString(testString);
  1397  0724  30B0               	movlw	(main@testString&0ffh)
  1398  0725  1683               	bsf	status, 5	;RP0=1, select bank1
  1399  0726  1303               	bcf	status, 6	;RP1=0, select bank1
  1400  0727  00A8               	movwf	(?_writeString)^080h
  1401  0728  3000               	movlw	(0x1/2)
  1402  0729  00A9               	movwf	(?_writeString+1)^080h
  1403  072A  120A  118A  2789   	fcall	_writeString
              120A  118A         
  1404  072F  2F30               	goto	l8841
  1405                           	line	67
  1406                           ;main.c: 67: while(1){
  1407                           	
  1408  0730                     l3994:	
  1409                           	line	68
  1410                           	
  1411  0730                     l8841:	
  1412                           ;main.c: 68: getTemp();
  1413  0730  120A  118A  27C9   	fcall	_getTemp
              120A  118A         
  1414                           	line	69
  1415                           	
  1416  0735                     l8843:	
  1417                           ;main.c: 69: _delay((unsigned long)((10)*(20000000/4000.0)));
  1418                           	opt asmopt_off
  1419  0735  3041               movlw	65
  1420  0736  1683               	bsf	status, 5	;RP0=1, select bank1
  1421  0737  1303               	bcf	status, 6	;RP1=0, select bank1
  1422  0738  00AD               movwf	((??_main+0)^080h+0+1),f
  1423  0739  30EE               	movlw	238
  1424  073A  00AC               movwf	((??_main+0)^080h+0),f
  1425  073B                     u3357:
  1426  073B  0BAC               	decfsz	((??_main+0)^080h+0),f
  1427  073C  2F3B               	goto	u3357
  1428  073D  0BAD               	decfsz	((??_main+0)^080h+0+1),f
  1429  073E  2F3B               	goto	u3357
  1430  073F  0064               	clrwdt
  1431                           opt asmopt_on
  1432                           
  1433  0740  2F30               	goto	l8841
  1434                           	line	70
  1435                           	
  1436  0741                     l3995:	
  1437                           	line	67
  1438  0741  2F30               	goto	l8841
  1439                           	
  1440  0742                     l3996:	
  1441                           	line	75
  1442                           ;main.c: 70: }
  1443                           ;main.c: 74: return 0;
  1444                           ;	Return value of _main is never used
  1445                           	
  1446  0742                     l3997:	
  1447                           	global	start
  1448  0742  120A  118A  2812   	ljmp	start
  1449                           	opt stack 0
  1450                           GLOBAL	__end_of_main
  1451  0745                     	__end_of_main:
  1452 ;; =============== function _main ends ============
  1453                           
  1454                           	signat	_main,90
  1455                           	global	_getTemp
  1456                           psect	text1272,local,class=CODE,delta=2
  1457                           global __ptext1272
  1458  07C9                     __ptext1272:
  1459                           
  1460 ;; *************** function _getTemp *****************
  1461 ;; Defined at:
  1462 ;;		line 45 in file "Temperature.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  tempReading     2    5[BANK1 ] unsigned int 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;		None               void
  1469 ;; Registers used:
  1470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1476 ;;      Params:         0       0       0       0       0
  1477 ;;      Locals:         0       0       2       0       0
  1478 ;;      Temps:          0       0       1       0       0
  1479 ;;      Totals:         0       0       3       0       0
  1480 ;;Total ram usage:        3 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    7
  1483 ;; This function calls:
  1484 ;;		_selectTemp
  1485 ;;		_readTemp
  1486 ;;		_eeprom_write
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           psect	text1272
  1492                           	file	"Temperature.c"
  1493                           	line	45
  1494                           	global	__size_of_getTemp
  1495  0036                     	__size_of_getTemp	equ	__end_of_getTemp-_getTemp
  1496                           	
  1497  07C9                     _getTemp:	
  1498 ;; using string table level
  1499                           	opt	stack 1
  1500                           ; Regs used in _getTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1501                           	line	48
  1502                           	
  1503  07C9                     l8791:	
  1504                           ;Temperature.c: 46: unsigned int tempReading;
  1505                           ;Temperature.c: 48: selectTemp();
  1506  07C9  120A  158A  2573   	fcall	_selectTemp
              120A  118A         
  1507                           	line	50
  1508                           	
  1509  07CE                     l8793:	
  1510                           ;Temperature.c: 50: tempReading = readTemp();
  1511  07CE  120A  158A  2693   	fcall	_readTemp
              120A  118A         
  1512  07D3  1683               	bsf	status, 5	;RP0=1, select bank1
  1513  07D4  1303               	bcf	status, 6	;RP1=0, select bank1
  1514  07D5  0821               	movf	(1+(?_readTemp))^080h,w
  1515  07D6  01A6               	clrf	(getTemp@tempReading+1)^080h
  1516  07D7  07A6               	addwf	(getTemp@tempReading+1)^080h
  1517  07D8  0820               	movf	(0+(?_readTemp))^080h,w
  1518  07D9  01A5               	clrf	(getTemp@tempReading)^080h
  1519  07DA  07A5               	addwf	(getTemp@tempReading)^080h
  1520                           
  1521                           	line	52
  1522                           	
  1523  07DB                     l8795:	
  1524                           ;Temperature.c: 52: eeprom_write(tempValLAddr,tempReading);
  1525  07DB  0825               	movf	(getTemp@tempReading)^080h,w
  1526  07DC  00A4               	movwf	(??_getTemp+0)^080h+0
  1527  07DD  0824               	movf	(??_getTemp+0)^080h+0,w
  1528  07DE  00A0               	movwf	(?_eeprom_write)^080h
  1529  07DF  305D               	movlw	(_tempValLAddr-__stringbase)
  1530  07E0  0084               	movwf	fsr0
  1531  07E1  120A  118A  2363   	fcall	stringdir
              120A  118A         
  1532  07E6  120A  158A  27C5   	fcall	_eeprom_write
              120A  118A         
  1533                           	line	54
  1534                           	
  1535  07EB                     l8797:	
  1536                           ;Temperature.c: 54: eeprom_write(tempValHAddr+1,tempReading>>8);
  1537  07EB  1683               	bsf	status, 5	;RP0=1, select bank1
  1538  07EC  1303               	bcf	status, 6	;RP1=0, select bank1
  1539  07ED  0826               	movf	(getTemp@tempReading+1)^080h,w
  1540  07EE  00A4               	movwf	(??_getTemp+0)^080h+0
  1541  07EF  0824               	movf	(??_getTemp+0)^080h+0,w
  1542  07F0  00A0               	movwf	(?_eeprom_write)^080h
  1543  07F1  305C               	movlw	(_tempValHAddr-__stringbase)
  1544  07F2  0084               	movwf	fsr0
  1545  07F3  120A  118A  2363   	fcall	stringdir
              120A  118A         
  1546  07F8  3E01               	addlw	01h
  1547  07F9  120A  158A  27C5   	fcall	_eeprom_write
              120A  118A         
  1548                           	line	55
  1549                           	
  1550  07FE                     l2422:	
  1551  07FE  0008               	return
  1552                           	opt stack 0
  1553                           GLOBAL	__end_of_getTemp
  1554  07FF                     	__end_of_getTemp:
  1555 ;; =============== function _getTemp ends ============
  1556                           
  1557                           	signat	_getTemp,88
  1558                           	global	_initTemp
  1559                           psect	text1273,local,class=CODE,delta=2
  1560                           global __ptext1273
  1561  052B                     __ptext1273:
  1562                           
  1563 ;; *************** function _initTemp *****************
  1564 ;; Defined at:
  1565 ;;		line 24 in file "Temperature.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;		None               void
  1572 ;; Registers used:
  1573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1579 ;;      Params:         0       0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0
  1581 ;;      Temps:          0       0       1       0       0
  1582 ;;      Totals:         0       0       1       0       0
  1583 ;;Total ram usage:        1 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    7
  1586 ;; This function calls:
  1587 ;;		_eeprom_write
  1588 ;; This function is called by:
  1589 ;;		_main
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           psect	text1273
  1593                           	file	"Temperature.c"
  1594                           	line	24
  1595                           	global	__size_of_initTemp
  1596  0067                     	__size_of_initTemp	equ	__end_of_initTemp-_initTemp
  1597                           	
  1598  052B                     _initTemp:	
  1599 ;; using string table level
  1600                           	opt	stack 1
  1601                           ; Regs used in _initTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1602                           	line	26
  1603                           	
  1604  052B                     l8789:	
  1605                           ;Temperature.c: 26: eeprom_write(tempValHAddr,0x00);
  1606  052B  1683               	bsf	status, 5	;RP0=1, select bank1
  1607  052C  1303               	bcf	status, 6	;RP1=0, select bank1
  1608  052D  01A0               	clrf	(?_eeprom_write)^080h
  1609  052E  305C               	movlw	(_tempValHAddr-__stringbase)
  1610  052F  0084               	movwf	fsr0
  1611  0530  120A  118A  2363   	fcall	stringdir
              120A  118A         
  1612  0535  120A  158A  27C5   	fcall	_eeprom_write
              120A  118A         
  1613                           	line	27
  1614                           ;Temperature.c: 27: eeprom_write(tempValLAddr, 0x00);
  1615  053A  1683               	bsf	status, 5	;RP0=1, select bank1
  1616  053B  1303               	bcf	status, 6	;RP1=0, select bank1
  1617  053C  01A0               	clrf	(?_eeprom_write)^080h
  1618  053D  305D               	movlw	(_tempValLAddr-__stringbase)
  1619  053E  0084               	movwf	fsr0
  1620  053F  120A  118A  2363   	fcall	stringdir
              120A  118A         
  1621  0544  120A  158A  27C5   	fcall	_eeprom_write
              120A  118A         
  1622                           	line	28
  1623                           ;Temperature.c: 28: eeprom_write(tempHiAddr, tempStartHi);
  1624  0549  3059               	movlw	(_tempStartHi-__stringbase)
  1625  054A  0084               	movwf	fsr0
  1626  054B  120A  118A  2363   	fcall	stringdir
              120A  118A         
  1627  0550  1683               	bsf	status, 5	;RP0=1, select bank1
  1628  0551  1303               	bcf	status, 6	;RP1=0, select bank1
  1629  0552  00A3               	movwf	(??_initTemp+0)^080h+0
  1630  0553  0823               	movf	(??_initTemp+0)^080h+0,w
  1631  0554  00A0               	movwf	(?_eeprom_write)^080h
  1632  0555  3057               	movlw	(_tempHiAddr-__stringbase)
  1633  0556  0084               	movwf	fsr0
  1634  0557  120A  118A  2363   	fcall	stringdir
              120A  118A         
  1635  055C  120A  158A  27C5   	fcall	_eeprom_write
              120A  118A         
  1636                           	line	29
  1637                           ;Temperature.c: 29: eeprom_write(tempLoAddr, tempStartLo);
  1638  0561  305A               	movlw	(_tempStartLo-__stringbase)
  1639  0562  0084               	movwf	fsr0
  1640  0563  120A  118A  2363   	fcall	stringdir
              120A  118A         
  1641  0568  1683               	bsf	status, 5	;RP0=1, select bank1
  1642  0569  1303               	bcf	status, 6	;RP1=0, select bank1
  1643  056A  00A3               	movwf	(??_initTemp+0)^080h+0
  1644  056B  0823               	movf	(??_initTemp+0)^080h+0,w
  1645  056C  00A0               	movwf	(?_eeprom_write)^080h
  1646  056D  3058               	movlw	(_tempLoAddr-__stringbase)
  1647  056E  0084               	movwf	fsr0
  1648  056F  120A  118A  2363   	fcall	stringdir
              120A  118A         
  1649  0574  120A  158A  27C5   	fcall	_eeprom_write
              120A  118A         
  1650                           	line	30
  1651                           ;Temperature.c: 30: eeprom_write(tempUnitAddr, tempC);
  1652  0579  3055               	movlw	(_tempC-__stringbase)
  1653  057A  0084               	movwf	fsr0
  1654  057B  120A  118A  2363   	fcall	stringdir
              120A  118A         
  1655  0580  1683               	bsf	status, 5	;RP0=1, select bank1
  1656  0581  1303               	bcf	status, 6	;RP1=0, select bank1
  1657  0582  00A3               	movwf	(??_initTemp+0)^080h+0
  1658  0583  0823               	movf	(??_initTemp+0)^080h+0,w
  1659  0584  00A0               	movwf	(?_eeprom_write)^080h
  1660  0585  305B               	movlw	(_tempUnitAddr-__stringbase)
  1661  0586  0084               	movwf	fsr0
  1662  0587  120A  118A  2363   	fcall	stringdir
              120A  118A         
  1663  058C  120A  158A  27C5   	fcall	_eeprom_write
              120A  118A         
  1664                           	line	31
  1665                           	
  1666  0591                     l2410:	
  1667  0591  0008               	return
  1668                           	opt stack 0
  1669                           GLOBAL	__end_of_initTemp
  1670  0592                     	__end_of_initTemp:
  1671 ;; =============== function _initTemp ends ============
  1672                           
  1673                           	signat	_initTemp,88
  1674                           	global	_readTemp
  1675                           psect	text1274,local,class=CODE,delta=2
  1676                           global __ptext1274
  1677  0E93                     __ptext1274:
  1678                           
  1679 ;; *************** function _readTemp *****************
  1680 ;; Defined at:
  1681 ;;		line 7 in file "Temperature.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  2    0[BANK1 ] unsigned int 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0, btemp+1
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1695 ;;      Params:         0       0       2       0       0
  1696 ;;      Locals:         0       0       0       0       0
  1697 ;;      Temps:          0       0       2       0       0
  1698 ;;      Totals:         0       0       4       0       0
  1699 ;;Total ram usage:        4 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    6
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_getTemp
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           psect	text1274
  1709                           	file	"Temperature.c"
  1710                           	line	7
  1711                           	global	__size_of_readTemp
  1712  0029                     	__size_of_readTemp	equ	__end_of_readTemp-_readTemp
  1713                           	
  1714  0E93                     _readTemp:	
  1715                           	opt	stack 0
  1716                           ; Regs used in _readTemp: [wreg+status,2+status,0+btemp+1]
  1717                           	line	9
  1718                           	
  1719  0E93                     l8779:	
  1720                           ;Temperature.c: 9: ADON = 1;
  1721  0E93  1283               	bcf	status, 5	;RP0=0, select bank0
  1722  0E94  1303               	bcf	status, 6	;RP1=0, select bank0
  1723  0E95  141F               	bsf	(248/8),(248)&7
  1724                           	line	13
  1725                           	
  1726  0E96                     l8781:	
  1727                           ;Temperature.c: 13: _delay((unsigned long)((10)*(20000000/4000.0)));
  1728                           	opt asmopt_off
  1729  0E96  3041               movlw	65
  1730  0E97  1683               	bsf	status, 5	;RP0=1, select bank1
  1731  0E98  1303               	bcf	status, 6	;RP1=0, select bank1
  1732  0E99  00A3               movwf	((??_readTemp+0)^080h+0+1),f
  1733  0E9A  30EE               	movlw	238
  1734  0E9B  00A2               movwf	((??_readTemp+0)^080h+0),f
  1735  0E9C                     u3367:
  1736  0E9C  0BA2               	decfsz	((??_readTemp+0)^080h+0),f
  1737  0E9D  2E9C               	goto	u3367
  1738  0E9E  0BA3               	decfsz	((??_readTemp+0)^080h+0+1),f
  1739  0E9F  2E9C               	goto	u3367
  1740  0EA0  0064               	clrwdt
  1741                           opt asmopt_on
  1742                           
  1743                           	line	15
  1744                           	
  1745  0EA1                     l8783:	
  1746                           ;Temperature.c: 15: GO_nDONE = 1;
  1747  0EA1  1283               	bcf	status, 5	;RP0=0, select bank0
  1748  0EA2  1303               	bcf	status, 6	;RP1=0, select bank0
  1749  0EA3  151F               	bsf	(250/8),(250)&7
  1750                           	line	18
  1751                           ;Temperature.c: 18: while(GO_nDONE);
  1752  0EA4  2EA5               	goto	l2404
  1753                           	
  1754  0EA5                     l2405:	
  1755                           	
  1756  0EA5                     l2404:	
  1757  0EA5  191F               	btfsc	(250/8),(250)&7
  1758  0EA6  2EA8               	goto	u3161
  1759  0EA7  2EA9               	goto	u3160
  1760  0EA8                     u3161:
  1761  0EA8  2EA5               	goto	l2404
  1762  0EA9                     u3160:
  1763  0EA9  2EAA               	goto	l8785
  1764                           	
  1765  0EAA                     l2406:	
  1766                           	line	21
  1767                           	
  1768  0EAA                     l8785:	
  1769                           ;Temperature.c: 21: return ((ADRESH<<8)+ADRESL);
  1770  0EAA  081E               	movf	(30),w	;volatile
  1771  0EAB  1683               	bsf	status, 5	;RP0=1, select bank1
  1772  0EAC  1303               	bcf	status, 6	;RP1=0, select bank1
  1773  0EAD  00A2               	movwf	(??_readTemp+0)^080h+0
  1774  0EAE  01A3               	clrf	(??_readTemp+0)^080h+0+1
  1775  0EAF  0822               	movf	(??_readTemp+0)^080h+0,w
  1776  0EB0  00A3               	movwf	(??_readTemp+0)^080h+1
  1777  0EB1  01A2               	clrf	(??_readTemp+0)^080h+0
  1778  0EB2  081E               	movf	(158)^080h,w	;volatile
  1779  0EB3  0722               	addwf	0+(??_readTemp+0)^080h+0,w
  1780  0EB4  00A0               	movwf	(?_readTemp)^080h
  1781  0EB5  3000               	movlw	0
  1782  0EB6  1803               	skipnc
  1783  0EB7  3001               	movlw	1
  1784  0EB8  0723               	addwf	1+(??_readTemp+0)^080h+0,w
  1785  0EB9  00A1               	movwf	1+(?_readTemp)^080h
  1786  0EBA  2EBB               	goto	l2407
  1787                           	
  1788  0EBB                     l8787:	
  1789                           	line	22
  1790                           	
  1791  0EBB                     l2407:	
  1792  0EBB  0008               	return
  1793                           	opt stack 0
  1794                           GLOBAL	__end_of_readTemp
  1795  0EBC                     	__end_of_readTemp:
  1796 ;; =============== function _readTemp ends ============
  1797                           
  1798                           	signat	_readTemp,90
  1799                           	global	_writeString
  1800                           psect	text1275,local,class=CODE,delta=2
  1801                           global __ptext1275
  1802  0789                     __ptext1275:
  1803                           
  1804 ;; *************** function _writeString *****************
  1805 ;; Defined at:
  1806 ;;		line 140 in file "Bluetooth.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  userString      2    8[BANK1 ] PTR unsigned char 
  1809 ;;		 -> readError(25), main@testString(9), 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  i               2   10[BANK1 ] unsigned int 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;		None               void
  1814 ;; Registers used:
  1815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1821 ;;      Params:         0       0       2       0       0
  1822 ;;      Locals:         0       0       2       0       0
  1823 ;;      Temps:          0       0       0       0       0
  1824 ;;      Totals:         0       0       4       0       0
  1825 ;;Total ram usage:        4 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    7
  1828 ;; This function calls:
  1829 ;;		_writeByte
  1830 ;;		_strlen
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           psect	text1275
  1836                           	file	"Bluetooth.c"
  1837                           	line	140
  1838                           	global	__size_of_writeString
  1839  0040                     	__size_of_writeString	equ	__end_of_writeString-_writeString
  1840                           	
  1841  0789                     _writeString:	
  1842 ;; using string table level
  1843                           	opt	stack 1
  1844                           ; Regs used in _writeString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1845                           	line	144
  1846                           	
  1847  0789                     l8821:	
  1848                           ;Bluetooth.c: 142: unsigned int i;
  1849                           ;Bluetooth.c: 144: for(i = 0;i<strlen(userString);i++){
  1850  0789  1683               	bsf	status, 5	;RP0=1, select bank1
  1851  078A  1303               	bcf	status, 6	;RP1=0, select bank1
  1852  078B  01AA               	clrf	(writeString@i)^080h
  1853  078C  01AB               	clrf	(writeString@i+1)^080h
  1854  078D  2FAA               	goto	l8827
  1855                           	
  1856  078E                     l788:	
  1857                           	line	145
  1858                           	
  1859  078E                     l8823:	
  1860                           ;Bluetooth.c: 145: writeByte(userString[i]);
  1861  078E  082A               	movf	(writeString@i)^080h,w
  1862  078F  0728               	addwf	(writeString@userString)^080h,w
  1863  0790  0084               	movwf	fsr0
  1864  0791  0829               	movf	(writeString@userString+1)^080h,w
  1865  0792  1803               	skipnc
  1866  0793  0A29               	incf	(writeString@userString+1)^080h,w
  1867  0794  1283               	bcf	status, 5	;RP0=0, select bank0
  1868  0795  1303               	bcf	status, 6	;RP1=0, select bank0
  1869  0796  00FF               	movwf	btemp+1
  1870  0797  120A  118A  2359   	fcall	stringtab
              120A  118A         
  1871  079C  120A  158A  25BA   	fcall	_writeByte
              120A  118A         
  1872                           	line	144
  1873                           	
  1874  07A1                     l8825:	
  1875  07A1  3001               	movlw	low(01h)
  1876  07A2  1683               	bsf	status, 5	;RP0=1, select bank1
  1877  07A3  1303               	bcf	status, 6	;RP1=0, select bank1
  1878  07A4  07AA               	addwf	(writeString@i)^080h,f
  1879  07A5  1803               	skipnc
  1880  07A6  0AAB               	incf	(writeString@i+1)^080h,f
  1881  07A7  3000               	movlw	high(01h)
  1882  07A8  07AB               	addwf	(writeString@i+1)^080h,f
  1883  07A9  2FAA               	goto	l8827
  1884                           	
  1885  07AA                     l787:	
  1886                           	
  1887  07AA                     l8827:	
  1888  07AA  0829               	movf	(writeString@userString+1)^080h,w
  1889  07AB  01A1               	clrf	(?_strlen+1)^080h
  1890  07AC  07A1               	addwf	(?_strlen+1)^080h
  1891  07AD  0828               	movf	(writeString@userString)^080h,w
  1892  07AE  01A0               	clrf	(?_strlen)^080h
  1893  07AF  07A0               	addwf	(?_strlen)^080h
  1894                           
  1895  07B0  120A  118A  2745   	fcall	_strlen
              120A  118A         
  1896  07B5  1683               	bsf	status, 5	;RP0=1, select bank1
  1897  07B6  1303               	bcf	status, 6	;RP1=0, select bank1
  1898  07B7  0821               	movf	(1+(?_strlen))^080h,w
  1899  07B8  022B               	subwf	(writeString@i+1)^080h,w
  1900  07B9  1D03               	skipz
  1901  07BA  2FBD               	goto	u3195
  1902  07BB  0820               	movf	(0+(?_strlen))^080h,w
  1903  07BC  022A               	subwf	(writeString@i)^080h,w
  1904  07BD                     u3195:
  1905  07BD  1C03               	skipc
  1906  07BE  2FC0               	goto	u3191
  1907  07BF  2FC1               	goto	u3190
  1908  07C0                     u3191:
  1909  07C0  2F8E               	goto	l8823
  1910  07C1                     u3190:
  1911  07C1  2FC2               	goto	l8829
  1912                           	
  1913  07C2                     l789:	
  1914                           	line	148
  1915                           	
  1916  07C2                     l8829:	
  1917                           ;Bluetooth.c: 146: }
  1918                           ;Bluetooth.c: 148: writeByte((unsigned char)i);
  1919  07C2  082A               	movf	(writeString@i)^080h,w
  1920  07C3  120A  158A  25BA   	fcall	_writeByte
              120A  118A         
  1921                           	line	150
  1922                           	
  1923  07C8                     l790:	
  1924  07C8  0008               	return
  1925                           	opt stack 0
  1926                           GLOBAL	__end_of_writeString
  1927  07C9                     	__end_of_writeString:
  1928 ;; =============== function _writeString ends ============
  1929                           
  1930                           	signat	_writeString,4216
  1931                           	global	_initADC
  1932                           psect	text1276,local,class=CODE,delta=2
  1933                           global __ptext1276
  1934  0D94                     __ptext1276:
  1935                           
  1936 ;; *************** function _initADC *****************
  1937 ;; Defined at:
  1938 ;;		line 7 in file "customADC.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;		None               void
  1945 ;; Registers used:
  1946 ;;		wreg
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1952 ;;      Params:         0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    6
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           psect	text1276
  1966                           	file	"customADC.c"
  1967                           	line	7
  1968                           	global	__size_of_initADC
  1969  000B                     	__size_of_initADC	equ	__end_of_initADC-_initADC
  1970                           	
  1971  0D94                     _initADC:	
  1972                           	opt	stack 1
  1973                           ; Regs used in _initADC: [wreg]
  1974                           	line	8
  1975                           	
  1976  0D94                     l8671:	
  1977                           ;customADC.c: 8: TRISA = 0x03;
  1978  0D94  3003               	movlw	(03h)
  1979  0D95  1683               	bsf	status, 5	;RP0=1, select bank1
  1980  0D96  1303               	bcf	status, 6	;RP1=0, select bank1
  1981  0D97  0085               	movwf	(133)^080h	;volatile
  1982                           	line	22
  1983                           ;customADC.c: 22: ADCON1 = 0x80;
  1984  0D98  3080               	movlw	(080h)
  1985  0D99  009F               	movwf	(159)^080h	;volatile
  1986                           	line	39
  1987                           ;customADC.c: 39: ADCON0 = 0x80;
  1988  0D9A  3080               	movlw	(080h)
  1989  0D9B  1283               	bcf	status, 5	;RP0=0, select bank0
  1990  0D9C  1303               	bcf	status, 6	;RP1=0, select bank0
  1991  0D9D  009F               	movwf	(31)	;volatile
  1992                           	line	40
  1993                           	
  1994  0D9E                     l3187:	
  1995  0D9E  0008               	return
  1996                           	opt stack 0
  1997                           GLOBAL	__end_of_initADC
  1998  0D9F                     	__end_of_initADC:
  1999 ;; =============== function _initADC ends ============
  2000                           
  2001                           	signat	_initADC,88
  2002                           	global	_selectTemp
  2003                           psect	text1277,local,class=CODE,delta=2
  2004                           global __ptext1277
  2005  0D73                     __ptext1277:
  2006                           
  2007 ;; *************** function _selectTemp *****************
  2008 ;; Defined at:
  2009 ;;		line 43 in file "customADC.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;		None               void
  2016 ;; Registers used:
  2017 ;;		wreg
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2023 ;;      Params:         0       0       0       0       0
  2024 ;;      Locals:         0       0       0       0       0
  2025 ;;      Temps:          0       0       0       0       0
  2026 ;;      Totals:         0       0       0       0       0
  2027 ;;Total ram usage:        0 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    6
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_getTemp
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           psect	text1277
  2037                           	file	"customADC.c"
  2038                           	line	43
  2039                           	global	__size_of_selectTemp
  2040  0005                     	__size_of_selectTemp	equ	__end_of_selectTemp-_selectTemp
  2041                           	
  2042  0D73                     _selectTemp:	
  2043                           	opt	stack 0
  2044                           ; Regs used in _selectTemp: [wreg]
  2045                           	line	44
  2046                           	
  2047  0D73                     l8669:	
  2048                           ;customADC.c: 44: ADCON0 = 0x80;
  2049  0D73  3080               	movlw	(080h)
  2050  0D74  1283               	bcf	status, 5	;RP0=0, select bank0
  2051  0D75  1303               	bcf	status, 6	;RP1=0, select bank0
  2052  0D76  009F               	movwf	(31)	;volatile
  2053                           	line	45
  2054                           	
  2055  0D77                     l3190:	
  2056  0D77  0008               	return
  2057                           	opt stack 0
  2058                           GLOBAL	__end_of_selectTemp
  2059  0D78                     	__end_of_selectTemp:
  2060 ;; =============== function _selectTemp ends ============
  2061                           
  2062                           	signat	_selectTemp,88
  2063                           	global	_eeprom_write
  2064                           psect	text1278,local,class=CODE,delta=2
  2065                           global __ptext1278
  2066  0FC5                     __ptext1278:
  2067                           
  2068 ;; *************** function _eeprom_write *****************
  2069 ;; Defined at:
  2070 ;;		line 7 in file "C:\Microchip\HiTech\sources\eewrite.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  addr            1    wreg     unsigned char 
  2073 ;;  value           1    0[BANK1 ] unsigned char 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  addr            1    2[BANK1 ] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      unsigned char 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       0       1       0       0
  2086 ;;      Locals:         0       0       1       0       0
  2087 ;;      Temps:          0       0       1       0       0
  2088 ;;      Totals:         0       0       3       0       0
  2089 ;;Total ram usage:        3 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    6
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_initTemp
  2096 ;;		_getTemp
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           psect	text1278
  2100                           	file	"C:\Microchip\HiTech\sources\eewrite.c"
  2101                           	line	7
  2102                           	global	__size_of_eeprom_write
  2103  003B                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
  2104                           	
  2105  0FC5                     _eeprom_write:	
  2106                           	opt	stack 0
  2107                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2108                           ;eeprom_write@addr stored from wreg
  2109  0FC5  1683               	bsf	status, 5	;RP0=1, select bank1
  2110  0FC6  1303               	bcf	status, 6	;RP1=0, select bank1
  2111  0FC7  00A2               	movwf	(eeprom_write@addr)^080h
  2112                           	line	8
  2113                           	
  2114  0FC8                     l6023:	
  2115  0FC8  2FC9               	goto	l6024
  2116                           	
  2117  0FC9                     l6025:	
  2118                           	
  2119  0FC9                     l6024:	
  2120  0FC9  1683               	bsf	status, 5	;RP0=1, select bank3
  2121  0FCA  1703               	bsf	status, 6	;RP1=1, select bank3
  2122  0FCB  188C               	btfsc	(3169/8)^0180h,(3169)&7
  2123  0FCC  2FCE               	goto	u2771
  2124  0FCD  2FCF               	goto	u2770
  2125  0FCE                     u2771:
  2126  0FCE  2FC9               	goto	l6024
  2127  0FCF                     u2770:
  2128  0FCF  2FD0               	goto	l8451
  2129                           	
  2130  0FD0                     l6026:	
  2131                           	
  2132  0FD0                     l8451:	
  2133  0FD0  1683               	bsf	status, 5	;RP0=1, select bank1
  2134  0FD1  1303               	bcf	status, 6	;RP1=0, select bank1
  2135  0FD2  0822               	movf	(eeprom_write@addr)^080h,w
  2136  0FD3  1283               	bcf	status, 5	;RP0=0, select bank2
  2137  0FD4  1703               	bsf	status, 6	;RP1=1, select bank2
  2138  0FD5  008D               	movwf	(269)^0100h	;volatile
  2139  0FD6  1683               	bsf	status, 5	;RP0=1, select bank1
  2140  0FD7  1303               	bcf	status, 6	;RP1=0, select bank1
  2141  0FD8  0820               	movf	(eeprom_write@value)^080h,w
  2142  0FD9  1283               	bcf	status, 5	;RP0=0, select bank2
  2143  0FDA  1703               	bsf	status, 6	;RP1=1, select bank2
  2144  0FDB  008C               	movwf	(268)^0100h	;volatile
  2145                           	
  2146  0FDC                     l8453:	
  2147  0FDC  303F               	movlw	(03Fh)
  2148  0FDD  1683               	bsf	status, 5	;RP0=1, select bank1
  2149  0FDE  1303               	bcf	status, 6	;RP1=0, select bank1
  2150  0FDF  00A1               	movwf	(??_eeprom_write+0)^080h+0
  2151  0FE0  0821               	movf	(??_eeprom_write+0)^080h+0,w
  2152  0FE1  1683               	bsf	status, 5	;RP0=1, select bank3
  2153  0FE2  1703               	bsf	status, 6	;RP1=1, select bank3
  2154  0FE3  058C               	andwf	(396)^0180h,f	;volatile
  2155                           	
  2156  0FE4                     l8455:	
  2157  0FE4  1283               	bcf	status, 5	;RP0=0, select bank0
  2158  0FE5  1303               	bcf	status, 6	;RP1=0, select bank0
  2159  0FE6  1003               	bcf	(24/8),(24)&7
  2160                           	
  2161  0FE7                     l8457:	
  2162  0FE7  1F8B               	btfss	(95/8),(95)&7
  2163  0FE8  2FEA               	goto	u2781
  2164  0FE9  2FEB               	goto	u2780
  2165  0FEA                     u2781:
  2166  0FEA  2FEC               	goto	l6027
  2167  0FEB                     u2780:
  2168                           	
  2169  0FEB                     l8459:	
  2170  0FEB  1403               	bsf	(24/8),(24)&7
  2171                           	
  2172  0FEC                     l6027:	
  2173  0FEC  138B               	bcf	(95/8),(95)&7
  2174  0FED  1683               	bsf	status, 5	;RP0=1, select bank3
  2175  0FEE  1703               	bsf	status, 6	;RP1=1, select bank3
  2176  0FEF  150C               	bsf	(3170/8)^0180h,(3170)&7
  2177                           	
  2178  0FF0                     l8461:	
  2179  0FF0  3055               	movlw	(055h)
  2180  0FF1  008D               	movwf	(397)^0180h	;volatile
  2181  0FF2  30AA               	movlw	(0AAh)
  2182  0FF3  008D               	movwf	(397)^0180h	;volatile
  2183                           	
  2184  0FF4                     l8463:	
  2185  0FF4  148C               	bsf	(3169/8)^0180h,(3169)&7
  2186                           	
  2187  0FF5                     l8465:	
  2188  0FF5  110C               	bcf	(3170/8)^0180h,(3170)&7
  2189                           	
  2190  0FF6                     l8467:	
  2191  0FF6  1283               	bcf	status, 5	;RP0=0, select bank0
  2192  0FF7  1303               	bcf	status, 6	;RP1=0, select bank0
  2193  0FF8  1C03               	btfss	(24/8),(24)&7
  2194  0FF9  2FFB               	goto	u2791
  2195  0FFA  2FFC               	goto	u2790
  2196  0FFB                     u2791:
  2197  0FFB  2FFF               	goto	l6030
  2198  0FFC                     u2790:
  2199                           	
  2200  0FFC                     l8469:	
  2201  0FFC  178B               	bsf	(95/8),(95)&7
  2202  0FFD  2FFF               	goto	l6030
  2203                           	
  2204  0FFE                     l6028:	
  2205  0FFE  2FFF               	goto	l6030
  2206                           	
  2207  0FFF                     l6029:	
  2208                           	line	10
  2209                           ;	Return value of _eeprom_write is never used
  2210                           	
  2211  0FFF                     l6030:	
  2212  0FFF  0008               	return
  2213                           	opt stack 0
  2214                           GLOBAL	__end_of_eeprom_write
  2215  1000                     	__end_of_eeprom_write:
  2216 ;; =============== function _eeprom_write ends ============
  2217                           
  2218                           	signat	_eeprom_write,8313
  2219                           	global	_strlen
  2220                           psect	text1279,local,class=CODE,delta=2
  2221                           global __ptext1279
  2222  0745                     __ptext1279:
  2223                           
  2224 ;; *************** function _strlen *****************
  2225 ;; Defined at:
  2226 ;;		line 5 in file "C:\Microchip\HiTech\sources\strlen.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  s               2    0[BANK1 ] PTR const unsigned char 
  2229 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  cp              2    6[BANK1 ] PTR const unsigned char 
  2232 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  2    0[BANK1 ] unsigned int 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2242 ;;      Params:         0       0       2       0       0
  2243 ;;      Locals:         0       0       2       0       0
  2244 ;;      Temps:          0       0       4       0       0
  2245 ;;      Totals:         0       0       8       0       0
  2246 ;;Total ram usage:        8 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    6
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_writeString
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           psect	text1279
  2256                           	file	"C:\Microchip\HiTech\sources\strlen.c"
  2257                           	line	5
  2258                           	global	__size_of_strlen
  2259  0044                     	__size_of_strlen	equ	__end_of_strlen-_strlen
  2260                           	
  2261  0745                     _strlen:	
  2262 ;; using string table level
  2263                           	opt	stack 1
  2264                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2265                           	line	8
  2266                           	
  2267  0745                     l8813:	
  2268  0745  1683               	bsf	status, 5	;RP0=1, select bank1
  2269  0746  1303               	bcf	status, 6	;RP1=0, select bank1
  2270  0747  0821               	movf	(strlen@s+1)^080h,w
  2271  0748  01A7               	clrf	(strlen@cp+1)^080h
  2272  0749  07A7               	addwf	(strlen@cp+1)^080h
  2273  074A  0820               	movf	(strlen@s)^080h,w
  2274  074B  01A6               	clrf	(strlen@cp)^080h
  2275  074C  07A6               	addwf	(strlen@cp)^080h
  2276                           
  2277                           	line	9
  2278  074D  2F4F               	goto	l8815
  2279                           	
  2280  074E                     l6708:	
  2281                           	line	10
  2282  074E  2F4F               	goto	l8815
  2283                           	
  2284  074F                     l6707:	
  2285                           	line	9
  2286                           	
  2287  074F                     l8815:	
  2288  074F  1683               	bsf	status, 5	;RP0=1, select bank1
  2289  0750  1303               	bcf	status, 6	;RP1=0, select bank1
  2290  0751  0827               	movf	(strlen@cp+1)^080h,w
  2291  0752  00A3               	movwf	(??_strlen+0)^080h+0+1
  2292  0753  0826               	movf	(strlen@cp)^080h,w
  2293  0754  00A2               	movwf	(??_strlen+0)^080h+0
  2294  0755  3001               	movlw	(01h)
  2295  0756  07A6               	addwf	(strlen@cp)^080h,f
  2296  0757  1803               	skipnc
  2297  0758  0AA7               	incf	(strlen@cp+1)^080h,f
  2298  0759  0823               	movf	1+(??_strlen+0)^080h+0,w
  2299  075A  1283               	bcf	status, 5	;RP0=0, select bank0
  2300  075B  1303               	bcf	status, 6	;RP1=0, select bank0
  2301  075C  00FF               	movwf	btemp+1
  2302  075D  1683               	bsf	status, 5	;RP0=1, select bank1
  2303  075E  1303               	bcf	status, 6	;RP1=0, select bank1
  2304  075F  0822               	movf	0+(??_strlen+0)^080h+0,w
  2305  0760  0084               	movwf	fsr0
  2306  0761  1283               	bcf	status, 5	;RP0=0, select bank0
  2307  0762  1303               	bcf	status, 6	;RP1=0, select bank0
  2308  0763  120A  118A  2359   	fcall	stringtab
              120A  118A         
  2309  0768  3800               	iorlw	0
  2310  0769  1D03               	skipz
  2311  076A  2F6C               	goto	u3181
  2312  076B  2F6D               	goto	u3180
  2313  076C                     u3181:
  2314  076C  2F4F               	goto	l8815
  2315  076D                     u3180:
  2316  076D  2F6E               	goto	l8817
  2317                           	
  2318  076E                     l6709:	
  2319                           	line	11
  2320                           	
  2321  076E                     l8817:	
  2322  076E  1683               	bsf	status, 5	;RP0=1, select bank1
  2323  076F  1303               	bcf	status, 6	;RP1=0, select bank1
  2324  0770  0920               	comf	(strlen@s)^080h,w
  2325  0771  00A2               	movwf	(??_strlen+0)^080h+0
  2326  0772  0921               	comf	(strlen@s+1)^080h,w
  2327  0773  00A3               	movwf	((??_strlen+0)^080h+0+1)
  2328  0774  0AA2               	incf	(??_strlen+0)^080h+0,f
  2329  0775  1903               	skipnz
  2330  0776  0AA3               	incf	((??_strlen+0)^080h+0+1),f
  2331  0777  0826               	movf	(strlen@cp)^080h,w
  2332  0778  0722               	addwf	0+(??_strlen+0)^080h+0,w
  2333  0779  00A4               	movwf	(??_strlen+2)^080h+0
  2334  077A  0827               	movf	(strlen@cp+1)^080h,w
  2335  077B  1803               	skipnc
  2336  077C  0A27               	incf	(strlen@cp+1)^080h,w
  2337  077D  0723               	addwf	1+(??_strlen+0)^080h+0,w
  2338  077E  00A5               	movwf	1+(??_strlen+2)^080h+0
  2339  077F  0824               	movf	0+(??_strlen+2)^080h+0,w
  2340  0780  3EFF               	addlw	low(-1)
  2341  0781  00A0               	movwf	(?_strlen)^080h
  2342  0782  0825               	movf	1+(??_strlen+2)^080h+0,w
  2343  0783  1803               	skipnc
  2344  0784  3E01               	addlw	1
  2345  0785  3EFF               	addlw	high(-1)
  2346  0786  00A1               	movwf	1+(?_strlen)^080h
  2347  0787  2F88               	goto	l6710
  2348                           	
  2349  0788                     l8819:	
  2350                           	line	12
  2351                           	
  2352  0788                     l6710:	
  2353  0788  0008               	return
  2354                           	opt stack 0
  2355                           GLOBAL	__end_of_strlen
  2356  0789                     	__end_of_strlen:
  2357 ;; =============== function _strlen ends ============
  2358                           
  2359                           	signat	_strlen,4218
  2360                           	global	_writeByte
  2361                           psect	text1280,local,class=CODE,delta=2
  2362                           global __ptext1280
  2363  0DBA                     __ptext1280:
  2364                           
  2365 ;; *************** function _writeByte *****************
  2366 ;; Defined at:
  2367 ;;		line 74 in file "Bluetooth.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  Byte            1    wreg     unsigned char 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  Byte            1    0[BANK1 ] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;		None               void
  2374 ;; Registers used:
  2375 ;;		wreg
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2381 ;;      Params:         0       0       0       0       0
  2382 ;;      Locals:         0       0       1       0       0
  2383 ;;      Temps:          0       0       0       0       0
  2384 ;;      Totals:         0       0       1       0       0
  2385 ;;Total ram usage:        1 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    6
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_writeString
  2392 ;;		_echoBack
  2393 ;;		_displayPacket
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           psect	text1280
  2397                           	file	"Bluetooth.c"
  2398                           	line	74
  2399                           	global	__size_of_writeByte
  2400  0011                     	__size_of_writeByte	equ	__end_of_writeByte-_writeByte
  2401                           	
  2402  0DBA                     _writeByte:	
  2403                           	opt	stack 0
  2404                           ; Regs used in _writeByte: [wreg]
  2405                           ;writeByte@Byte stored from wreg
  2406  0DBA  1683               	bsf	status, 5	;RP0=1, select bank1
  2407  0DBB  1303               	bcf	status, 6	;RP1=0, select bank1
  2408  0DBC  00A0               	movwf	(writeByte@Byte)^080h
  2409                           	line	78
  2410                           	
  2411  0DBD                     l8409:	
  2412                           ;Bluetooth.c: 78: while(!TXIF);
  2413  0DBD  2DBE               	goto	l772
  2414                           	
  2415  0DBE                     l773:	
  2416                           	
  2417  0DBE                     l772:	
  2418  0DBE  1283               	bcf	status, 5	;RP0=0, select bank0
  2419  0DBF  1E0C               	btfss	(100/8),(100)&7
  2420  0DC0  2DC2               	goto	u2731
  2421  0DC1  2DC3               	goto	u2730
  2422  0DC2                     u2731:
  2423  0DC2  2DBE               	goto	l772
  2424  0DC3                     u2730:
  2425  0DC3  2DC4               	goto	l8411
  2426                           	
  2427  0DC4                     l774:	
  2428                           	line	81
  2429                           	
  2430  0DC4                     l8411:	
  2431                           ;Bluetooth.c: 81: TXREG = Byte;
  2432  0DC4  1683               	bsf	status, 5	;RP0=1, select bank1
  2433  0DC5  1303               	bcf	status, 6	;RP1=0, select bank1
  2434  0DC6  0820               	movf	(writeByte@Byte)^080h,w
  2435  0DC7  1283               	bcf	status, 5	;RP0=0, select bank0
  2436  0DC8  1303               	bcf	status, 6	;RP1=0, select bank0
  2437  0DC9  0099               	movwf	(25)	;volatile
  2438                           	line	82
  2439                           	
  2440  0DCA                     l775:	
  2441  0DCA  0008               	return
  2442                           	opt stack 0
  2443                           GLOBAL	__end_of_writeByte
  2444  0DCB                     	__end_of_writeByte:
  2445 ;; =============== function _writeByte ends ============
  2446                           
  2447                           	signat	_writeByte,4216
  2448                           	global	_initUSART
  2449                           psect	text1281,local,class=CODE,delta=2
  2450                           global __ptext1281
  2451  0DCB                     __ptext1281:
  2452                           
  2453 ;; *************** function _initUSART *****************
  2454 ;; Defined at:
  2455 ;;		line 16 in file "Bluetooth.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;		None               void
  2462 ;; Registers used:
  2463 ;;		wreg
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0
  2472 ;;      Totals:         0       0       0       0       0
  2473 ;;Total ram usage:        0 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    6
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           psect	text1281
  2483                           	file	"Bluetooth.c"
  2484                           	line	16
  2485                           	global	__size_of_initUSART
  2486  0012                     	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  2487                           	
  2488  0DCB                     _initUSART:	
  2489                           	opt	stack 1
  2490                           ; Regs used in _initUSART: [wreg]
  2491                           	line	18
  2492                           	
  2493  0DCB                     l8399:	
  2494                           ;Bluetooth.c: 18: TRISC6 = 0;
  2495  0DCB  1683               	bsf	status, 5	;RP0=1, select bank1
  2496  0DCC  1303               	bcf	status, 6	;RP1=0, select bank1
  2497  0DCD  1307               	bcf	(1086/8)^080h,(1086)&7
  2498                           	line	21
  2499                           ;Bluetooth.c: 21: TRISC7 = 1;
  2500  0DCE  1787               	bsf	(1087/8)^080h,(1087)&7
  2501                           	line	34
  2502                           	
  2503  0DCF                     l8401:	
  2504                           ;Bluetooth.c: 34: RCSTA = 0x90;
  2505  0DCF  3090               	movlw	(090h)
  2506  0DD0  1283               	bcf	status, 5	;RP0=0, select bank0
  2507  0DD1  1303               	bcf	status, 6	;RP1=0, select bank0
  2508  0DD2  0098               	movwf	(24)	;volatile
  2509                           	line	48
  2510                           ;Bluetooth.c: 48: TXSTA = 0x24;
  2511  0DD3  3024               	movlw	(024h)
  2512  0DD4  1683               	bsf	status, 5	;RP0=1, select bank1
  2513  0DD5  1303               	bcf	status, 6	;RP1=0, select bank1
  2514  0DD6  0098               	movwf	(152)^080h	;volatile
  2515                           	line	56
  2516                           ;Bluetooth.c: 56: SPBRG = 129;
  2517  0DD7  3081               	movlw	(081h)
  2518  0DD8  0099               	movwf	(153)^080h	;volatile
  2519                           	line	58
  2520                           	
  2521  0DD9                     l8403:	
  2522                           ;Bluetooth.c: 58: GIE = 1;
  2523  0DD9  178B               	bsf	(95/8),(95)&7
  2524                           	line	60
  2525                           	
  2526  0DDA                     l8405:	
  2527                           ;Bluetooth.c: 60: PEIE = 1;
  2528  0DDA  170B               	bsf	(94/8),(94)&7
  2529                           	line	62
  2530                           	
  2531  0DDB                     l8407:	
  2532                           ;Bluetooth.c: 62: RCIE = 1;
  2533  0DDB  168C               	bsf	(1125/8)^080h,(1125)&7
  2534                           	line	64
  2535                           	
  2536  0DDC                     l769:	
  2537  0DDC  0008               	return
  2538                           	opt stack 0
  2539                           GLOBAL	__end_of_initUSART
  2540  0DDD                     	__end_of_initUSART:
  2541 ;; =============== function _initUSART ends ============
  2542                           
  2543                           	signat	_initUSART,88
  2544                           	global	_isr
  2545                           psect	text1282,local,class=CODE,delta=2
  2546                           global __ptext1282
  2547  0E0B                     __ptext1282:
  2548                           
  2549 ;; *************** function _isr *****************
  2550 ;; Defined at:
  2551 ;;		line 35 in file "main.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;		None
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;		None
  2556 ;; Return value:  Size  Location     Type
  2557 ;;		None               void
  2558 ;; Registers used:
  2559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2565 ;;      Params:         0       0       0       0       0
  2566 ;;      Locals:         0       0       0       0       0
  2567 ;;      Temps:          0       4       0       0       0
  2568 ;;      Totals:         0       4       0       0       0
  2569 ;;Total ram usage:        4 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    5
  2572 ;; This function calls:
  2573 ;;		_getPacket
  2574 ;; This function is called by:
  2575 ;;		Interrupt level 1
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           psect	text1282
  2579                           	file	"main.c"
  2580                           	line	35
  2581                           	global	__size_of_isr
  2582  001D                     	__size_of_isr	equ	__end_of_isr-_isr
  2583                           	
  2584  0E0B                     _isr:	
  2585                           	opt	stack 0
  2586                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2587                           psect	intentry,class=CODE,delta=2
  2588                           global __pintentry
  2589  0004                     __pintentry:
  2590                           global interrupt_function
  2591  0004                     interrupt_function:
  2592                           	global saved_w
  2593  007E                     	saved_w	set	btemp+0
  2594  0004  00FE               	movwf	saved_w
  2595  0005  0E03               	swapf	status,w
  2596  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  2597  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  2598  0008  00E0               	movwf	(??_isr+0)
  2599  0009  0804               	movf	fsr0,w
  2600  000A  00E1               	movwf	(??_isr+1)
  2601  000B  080A               	movf	pclath,w
  2602  000C  00E2               	movwf	(??_isr+2)
  2603  000D  087F               	movf	btemp+1,w
  2604  000E  00E3               	movwf	(??_isr+3)
  2605  000F  120A  158A  2E0B   	ljmp	_isr
  2606                           psect	text1282
  2607                           	line	36
  2608                           	
  2609  0E0B                     i1l8913:	
  2610                           ;main.c: 36: if(RCIF && RCIE){
  2611  0E0B  1E8C               	btfss	(101/8),(101)&7
  2612  0E0C  2E0E               	goto	u330_21
  2613  0E0D  2E0F               	goto	u330_20
  2614  0E0E                     u330_21:
  2615  0E0E  2E1B               	goto	i1l3989
  2616  0E0F                     u330_20:
  2617                           	
  2618  0E0F                     i1l8915:	
  2619  0E0F  1683               	bsf	status, 5	;RP0=1, select bank1
  2620  0E10  1303               	bcf	status, 6	;RP1=0, select bank1
  2621  0E11  1E8C               	btfss	(1125/8)^080h,(1125)&7
  2622  0E12  2E14               	goto	u331_21
  2623  0E13  2E15               	goto	u331_20
  2624  0E14                     u331_21:
  2625  0E14  2E1B               	goto	i1l3989
  2626  0E15                     u331_20:
  2627                           	line	37
  2628                           	
  2629  0E15                     i1l8917:	
  2630                           ;main.c: 37: getPacket();
  2631  0E15  120A  118A  23E3   	fcall	_getPacket
              120A  158A         
  2632  0E1A  2E1B               	goto	i1l3989
  2633                           	line	38
  2634                           	
  2635  0E1B                     i1l3988:	
  2636                           	line	39
  2637                           	
  2638  0E1B                     i1l3989:	
  2639  0E1B  1283               	bcf	status, 5	;RP0=0, select bank0
  2640  0E1C  1303               	bcf	status, 6	;RP1=0, select bank0
  2641  0E1D  0863               	movf	(??_isr+3),w
  2642  0E1E  00FF               	movwf	btemp+1
  2643  0E1F  0862               	movf	(??_isr+2),w
  2644  0E20  008A               	movwf	pclath
  2645  0E21  0861               	movf	(??_isr+1),w
  2646  0E22  0084               	movwf	fsr0
  2647  0E23  0E60               	swapf	(??_isr+0)^00h,w
  2648  0E24  0083               	movwf	status
  2649  0E25  0EFE               	swapf	saved_w,f
  2650  0E26  0E7E               	swapf	saved_w,w
  2651  0E27  0009               	retfie
  2652                           	opt stack 0
  2653                           GLOBAL	__end_of_isr
  2654  0E28                     	__end_of_isr:
  2655 ;; =============== function _isr ends ============
  2656                           
  2657                           	signat	_isr,88
  2658                           	global	_getPacket
  2659                           psect	text1283,local,class=CODE,delta=2
  2660                           global __ptext1283
  2661  03E3                     __ptext1283:
  2662                           
  2663 ;; *************** function _getPacket *****************
  2664 ;; Defined at:
  2665 ;;		line 77 in file "main.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;		None
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  arrStore       50   14[BANK0 ] unsigned char [50]
  2670 ;; Return value:  Size  Location     Type
  2671 ;;		None               void
  2672 ;; Registers used:
  2673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2679 ;;      Params:         0       0       0       0       0
  2680 ;;      Locals:         0      50       0       0       0
  2681 ;;      Temps:          0       4       0       0       0
  2682 ;;      Totals:         0      54       0       0       0
  2683 ;;Total ram usage:       54 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    4
  2686 ;; This function calls:
  2687 ;;		i1_eeprom_write
  2688 ;;		_readString
  2689 ;;		_eeprom_read
  2690 ;;		i1_writeByte
  2691 ;;		_parsePacket
  2692 ;;		_validatePacket
  2693 ;;		_readCommands
  2694 ;;		_writeCommands
  2695 ;; This function is called by:
  2696 ;;		_isr
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           psect	text1283
  2700                           	file	"main.c"
  2701                           	line	77
  2702                           	global	__size_of_getPacket
  2703  006F                     	__size_of_getPacket	equ	__end_of_getPacket-_getPacket
  2704                           	
  2705  03E3                     _getPacket:	
  2706 ;; using string table level
  2707                           	opt	stack 1
  2708                           ; Regs used in _getPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2709                           	line	79
  2710                           	
  2711  03E3                     i1l8919:	
  2712                           ;main.c: 79: eeprom_write(calcCSByteAddr,0x00);
  2713  03E3  01F8               	clrf	(?i1_eeprom_write)
  2714  03E4  3041               	movlw	(_calcCSByteAddr-__stringbase)
  2715  03E5  0084               	movwf	fsr0
  2716  03E6  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2717  03EB  120A  158A  26EB   	fcall	i1_eeprom_write
              120A  118A         
  2718                           	line	81
  2719                           	
  2720  03F0                     i1l8921:	
  2721                           ;main.c: 81: char arrStore[50] = {0};
  2722  03F0  302E               	movlw	(getPacket@arrStore)&0ffh
  2723  03F1  0084               	movwf	fsr0
  2724  03F2  3090               	movlw	low(getPacket@F1178)
  2725  03F3  1283               	bcf	status, 5	;RP0=0, select bank0
  2726  03F4  1303               	bcf	status, 6	;RP1=0, select bank0
  2727  03F5  00AA               	movwf	(??_getPacket+0)+0
  2728  03F6  0804               	movf	fsr0,w
  2729  03F7  00AB               	movwf	((??_getPacket+0)+0+1)
  2730  03F8  3032               	movlw	50
  2731  03F9  00AC               	movwf	((??_getPacket+0)+0+2)
  2732  03FA                     u332_20:
  2733  03FA  082A               	movf	(??_getPacket+0)+0,w
  2734  03FB  0084               	movwf	fsr0
  2735  03FC  1783               	bsf	status, 7	;select IRP bank3
  2736                           	
  2737  03FD  0800               	movf	indf,w
  2738  03FE  00AD               	movwf	((??_getPacket+0)+0+3)
  2739  03FF  0AAA               	incf	(??_getPacket+0)+0,f
  2740  0400  082B               	movf	((??_getPacket+0)+0+1),w
  2741  0401  0084               	movwf	fsr0
  2742  0402  1383               	bcf	status, 7	;select IRP bank0
  2743                           	
  2744  0403  082D               	movf	((??_getPacket+0)+0+3),w
  2745  0404  0080               	movwf	indf
  2746  0405  0AAB               	incf	((??_getPacket+0)+0+1),f
  2747  0406  0BAC               	decfsz	((??_getPacket+0)+0+2),f
  2748  0407  2BFA               	goto	u332_20
  2749                           	line	83
  2750                           	
  2751  0408                     i1l8923:	
  2752                           ;main.c: 83: readString(arrStore);
  2753  0408  302E               	movlw	(getPacket@arrStore)&0ffh
  2754  0409  120A  118A  2658   	fcall	_readString
              120A  118A         
  2755                           	line	93
  2756                           	
  2757  040E                     i1l8925:	
  2758                           ;main.c: 93: writeByte(eeprom_read(RXLenAddr));
  2759  040E  3040               	movlw	(_RXLenAddr-__stringbase)
  2760  040F  0084               	movwf	fsr0
  2761  0410  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2762  0415  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  2763  041A  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  2764                           	line	95
  2765                           	
  2766  041F                     i1l8927:	
  2767                           ;main.c: 95: parsePacket(arrStore);
  2768  041F  302E               	movlw	(getPacket@arrStore)&0ffh
  2769  0420  120A  118A  2184   	fcall	_parsePacket
              120A  118A         
  2770                           	line	98
  2771                           	
  2772  0425                     i1l8929:	
  2773                           ;main.c: 98: if(validatePacket()){
  2774  0425  120A  118A  26B3   	fcall	_validatePacket
              120A  118A         
  2775  042A  1283               	bcf	status, 5	;RP0=0, select bank0
  2776  042B  1303               	bcf	status, 6	;RP1=0, select bank0
  2777  042C  0823               	movf	(1+(?_validatePacket)),w
  2778  042D  0422               	iorwf	(0+(?_validatePacket)),w
  2779  042E  1903               	skipnz
  2780  042F  2C31               	goto	u333_21
  2781  0430  2C32               	goto	u333_20
  2782  0431                     u333_21:
  2783  0431  2C51               	goto	i1l4006
  2784  0432                     u333_20:
  2785                           	line	101
  2786                           	
  2787  0432                     i1l8931:	
  2788                           ;main.c: 101: if(eeprom_read(rwByteAddr) == 0){
  2789  0432  3053               	movlw	(_rwByteAddr-__stringbase)
  2790  0433  0084               	movwf	fsr0
  2791  0434  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2792  0439  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  2793  043E  3800               	iorlw	0
  2794  043F  1D03               	skipz
  2795  0440  2C42               	goto	u334_21
  2796  0441  2C43               	goto	u334_20
  2797  0442                     u334_21:
  2798  0442  2C49               	goto	i1l8935
  2799  0443                     u334_20:
  2800                           	line	102
  2801                           	
  2802  0443                     i1l8933:	
  2803                           ;main.c: 102: readCommands();
  2804  0443  120A  118A  2015   	fcall	_readCommands
              120A  118A         
  2805                           	line	103
  2806                           ;main.c: 103: }else{
  2807  0448  2C51               	goto	i1l4006
  2808                           	
  2809  0449                     i1l4003:	
  2810                           	line	104
  2811                           	
  2812  0449                     i1l8935:	
  2813                           ;main.c: 104: writeCommands();
  2814  0449  120A  118A  27FF   	fcall	_writeCommands
              120A  118A         
  2815  044E  2C51               	goto	i1l4006
  2816                           	line	105
  2817                           	
  2818  044F                     i1l4004:	
  2819                           	line	107
  2820                           ;main.c: 105: }
  2821                           ;main.c: 107: }else{
  2822  044F  2C51               	goto	i1l4006
  2823                           	
  2824  0450                     i1l4002:	
  2825  0450  2C51               	goto	i1l4006
  2826                           	line	110
  2827                           	
  2828  0451                     i1l4005:	
  2829                           	line	111
  2830                           	
  2831  0451                     i1l4006:	
  2832  0451  0008               	return
  2833                           	opt stack 0
  2834                           GLOBAL	__end_of_getPacket
  2835  0452                     	__end_of_getPacket:
  2836 ;; =============== function _getPacket ends ============
  2837                           
  2838                           	signat	_getPacket,88
  2839                           	global	_readCommands
  2840                           psect	text1284,local,class=CODE,delta=2
  2841                           global __ptext1284
  2842  0015                     __ptext1284:
  2843                           
  2844 ;; *************** function _readCommands *****************
  2845 ;; Defined at:
  2846 ;;		line 6 in file "Command.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;		None
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;		None
  2851 ;; Return value:  Size  Location     Type
  2852 ;;		None               void
  2853 ;; Registers used:
  2854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2860 ;;      Params:         0       0       0       0       0
  2861 ;;      Locals:         0       0       0       0       0
  2862 ;;      Temps:          0       0       0       0       0
  2863 ;;      Totals:         0       0       0       0       0
  2864 ;;Total ram usage:        0 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    3
  2867 ;; This function calls:
  2868 ;;		i1_writeByte
  2869 ;;		i1_writeString
  2870 ;;		_eeprom_read
  2871 ;; This function is called by:
  2872 ;;		_getPacket
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           psect	text1284
  2876                           	file	"Command.c"
  2877                           	line	6
  2878                           	global	__size_of_readCommands
  2879  016F                     	__size_of_readCommands	equ	__end_of_readCommands-_readCommands
  2880                           	
  2881  0015                     _readCommands:	
  2882 ;; using string table level
  2883                           	opt	stack 1
  2884                           ; Regs used in _readCommands: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2885                           	line	8
  2886                           	
  2887  0015                     i1l8697:	
  2888                           ;Command.c: 8: switch(eeprom_read(cmdByteAddr)){
  2889  0015  295E               	goto	i1l8725
  2890                           	line	10
  2891                           ;Command.c: 10: case 0:
  2892                           	
  2893  0016                     i1l4778:	
  2894                           	line	11
  2895                           	
  2896  0016                     i1l8699:	
  2897                           ;Command.c: 11: writeByte(userStartByte);
  2898  0016  3060               	movlw	(_userStartByte-__stringbase)
  2899  0017  0084               	movwf	fsr0
  2900  0018  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2901  001D  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  2902                           	line	12
  2903                           ;Command.c: 12: writeByte(tempValHAddr);
  2904  0022  305C               	movlw	(_tempValHAddr-__stringbase)
  2905  0023  0084               	movwf	fsr0
  2906  0024  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2907  0029  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  2908                           	line	13
  2909                           ;Command.c: 13: writeByte(tempValLAddr);
  2910  002E  305D               	movlw	(_tempValLAddr-__stringbase)
  2911  002F  0084               	movwf	fsr0
  2912  0030  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2913  0035  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  2914                           	line	14
  2915                           ;Command.c: 14: break;
  2916  003A  2983               	goto	i1l4788
  2917                           	line	16
  2918                           ;Command.c: 16: case 1:
  2919                           	
  2920  003B                     i1l4780:	
  2921                           	line	17
  2922                           	
  2923  003B                     i1l8701:	
  2924                           ;Command.c: 17: writeByte(userStartByte);
  2925  003B  3060               	movlw	(_userStartByte-__stringbase)
  2926  003C  0084               	movwf	fsr0
  2927  003D  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2928  0042  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  2929                           	line	18
  2930                           ;Command.c: 18: writeByte(tempHiAddr);
  2931  0047  3057               	movlw	(_tempHiAddr-__stringbase)
  2932  0048  0084               	movwf	fsr0
  2933  0049  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2934  004E  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  2935                           	line	19
  2936                           ;Command.c: 19: break;
  2937  0053  2983               	goto	i1l4788
  2938                           	line	21
  2939                           ;Command.c: 21: case 2:
  2940                           	
  2941  0054                     i1l4781:	
  2942                           	line	22
  2943                           	
  2944  0054                     i1l8703:	
  2945                           ;Command.c: 22: writeByte(userStartByte);
  2946  0054  3060               	movlw	(_userStartByte-__stringbase)
  2947  0055  0084               	movwf	fsr0
  2948  0056  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2949  005B  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  2950                           	line	23
  2951                           ;Command.c: 23: writeByte(tempLoAddr);
  2952  0060  3058               	movlw	(_tempLoAddr-__stringbase)
  2953  0061  0084               	movwf	fsr0
  2954  0062  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2955  0067  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  2956                           	line	24
  2957                           ;Command.c: 24: break;
  2958  006C  2983               	goto	i1l4788
  2959                           	line	26
  2960                           ;Command.c: 26: case 3:
  2961                           	
  2962  006D                     i1l4782:	
  2963                           	line	27
  2964                           	
  2965  006D                     i1l8705:	
  2966                           ;Command.c: 27: writeByte(userStartByte);
  2967  006D  3060               	movlw	(_userStartByte-__stringbase)
  2968  006E  0084               	movwf	fsr0
  2969  006F  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2970  0074  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  2971                           	line	28
  2972                           ;Command.c: 28: writeByte(humValHAddr);
  2973  0079  304B               	movlw	(_humValHAddr-__stringbase)
  2974  007A  0084               	movwf	fsr0
  2975  007B  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2976  0080  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  2977                           	line	29
  2978                           ;Command.c: 29: writeByte(humValLAddr);
  2979  0085  304C               	movlw	(_humValLAddr-__stringbase)
  2980  0086  0084               	movwf	fsr0
  2981  0087  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2982  008C  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  2983                           	line	30
  2984                           ;Command.c: 30: break;
  2985  0091  2983               	goto	i1l4788
  2986                           	line	32
  2987                           ;Command.c: 32: case 4:
  2988                           	
  2989  0092                     i1l4783:	
  2990                           	line	33
  2991                           	
  2992  0092                     i1l8707:	
  2993                           ;Command.c: 33: writeByte(userStartByte);
  2994  0092  3060               	movlw	(_userStartByte-__stringbase)
  2995  0093  0084               	movwf	fsr0
  2996  0094  120A  118A  2363   	fcall	stringdir
              120A  118A         
  2997  0099  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  2998                           	line	34
  2999                           ;Command.c: 34: writeByte(humHiAddr);
  3000  009E  3047               	movlw	(_humHiAddr-__stringbase)
  3001  009F  0084               	movwf	fsr0
  3002  00A0  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3003  00A5  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3004                           	line	35
  3005                           ;Command.c: 35: break;
  3006  00AA  2983               	goto	i1l4788
  3007                           	line	37
  3008                           ;Command.c: 37: case 5:
  3009                           	
  3010  00AB                     i1l4784:	
  3011                           	line	38
  3012                           	
  3013  00AB                     i1l8709:	
  3014                           ;Command.c: 38: writeByte(userStartByte);
  3015  00AB  3060               	movlw	(_userStartByte-__stringbase)
  3016  00AC  0084               	movwf	fsr0
  3017  00AD  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3018  00B2  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3019                           	line	39
  3020                           ;Command.c: 39: writeByte(humLoAddr);
  3021  00B7  3048               	movlw	(_humLoAddr-__stringbase)
  3022  00B8  0084               	movwf	fsr0
  3023  00B9  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3024  00BE  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3025                           	line	40
  3026                           ;Command.c: 40: break;
  3027  00C3  2983               	goto	i1l4788
  3028                           	line	42
  3029                           ;Command.c: 42: case 6:
  3030                           	
  3031  00C4                     i1l4785:	
  3032                           	line	43
  3033                           	
  3034  00C4                     i1l8711:	
  3035                           ;Command.c: 43: writeByte('R');
  3036  00C4  3052               	movlw	(052h)
  3037  00C5  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3038                           	line	44
  3039                           ;Command.c: 44: writeByte('T');
  3040  00CA  3054               	movlw	(054h)
  3041  00CB  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3042                           	line	45
  3043                           ;Command.c: 45: writeByte('C');
  3044  00D0  3043               	movlw	(043h)
  3045  00D1  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3046                           	line	46
  3047                           ;Command.c: 46: break;
  3048  00D6  2983               	goto	i1l4788
  3049                           	line	48
  3050                           ;Command.c: 48: case 7:
  3051                           	
  3052  00D7                     i1l4786:	
  3053                           	line	49
  3054                           	
  3055  00D7                     i1l8713:	
  3056                           ;Command.c: 49: writeByte(userStartByte);
  3057  00D7  3060               	movlw	(_userStartByte-__stringbase)
  3058  00D8  0084               	movwf	fsr0
  3059  00D9  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3060  00DE  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3061                           	line	50
  3062                           ;Command.c: 50: writeByte(tempValHAddr);
  3063  00E3  305C               	movlw	(_tempValHAddr-__stringbase)
  3064  00E4  0084               	movwf	fsr0
  3065  00E5  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3066  00EA  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3067                           	line	51
  3068                           ;Command.c: 51: writeByte(tempValLAddr);
  3069  00EF  305D               	movlw	(_tempValLAddr-__stringbase)
  3070  00F0  0084               	movwf	fsr0
  3071  00F1  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3072  00F6  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3073                           	line	52
  3074                           ;Command.c: 52: writeByte(tempHiAddr);
  3075  00FB  3057               	movlw	(_tempHiAddr-__stringbase)
  3076  00FC  0084               	movwf	fsr0
  3077  00FD  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3078  0102  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3079                           	line	53
  3080                           ;Command.c: 53: writeByte(tempLoAddr);
  3081  0107  3058               	movlw	(_tempLoAddr-__stringbase)
  3082  0108  0084               	movwf	fsr0
  3083  0109  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3084  010E  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3085                           	line	54
  3086                           ;Command.c: 54: writeByte(humValHAddr);
  3087  0113  304B               	movlw	(_humValHAddr-__stringbase)
  3088  0114  0084               	movwf	fsr0
  3089  0115  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3090  011A  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3091                           	line	55
  3092                           ;Command.c: 55: writeByte(humValLAddr);
  3093  011F  304C               	movlw	(_humValLAddr-__stringbase)
  3094  0120  0084               	movwf	fsr0
  3095  0121  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3096  0126  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3097                           	line	56
  3098                           ;Command.c: 56: writeByte(humHiAddr);
  3099  012B  3047               	movlw	(_humHiAddr-__stringbase)
  3100  012C  0084               	movwf	fsr0
  3101  012D  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3102  0132  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3103                           	line	57
  3104                           ;Command.c: 57: writeByte(humLoAddr);
  3105  0137  3048               	movlw	(_humLoAddr-__stringbase)
  3106  0138  0084               	movwf	fsr0
  3107  0139  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3108  013E  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3109                           	line	58
  3110                           	
  3111  0143                     i1l8715:	
  3112                           ;Command.c: 58: writeByte('R');
  3113  0143  3052               	movlw	(052h)
  3114  0144  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3115                           	line	59
  3116                           	
  3117  0149                     i1l8717:	
  3118                           ;Command.c: 59: writeByte('T');
  3119  0149  3054               	movlw	(054h)
  3120  014A  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3121                           	line	60
  3122                           	
  3123  014F                     i1l8719:	
  3124                           ;Command.c: 60: writeByte('C');
  3125  014F  3043               	movlw	(043h)
  3126  0150  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  3127                           	line	61
  3128                           ;Command.c: 61: break;
  3129  0155  2983               	goto	i1l4788
  3130                           	line	63
  3131                           ;Command.c: 63: default:
  3132                           	
  3133  0156                     i1l4787:	
  3134                           	line	64
  3135                           	
  3136  0156                     i1l8721:	
  3137                           ;Command.c: 64: writeString(readError);
  3138  0156  3062               	movlw	((_readError-__stringbase))&0ffh
  3139  0157  120A  158A  278A   	fcall	i1_writeString
              120A  118A         
  3140                           	line	65
  3141                           ;Command.c: 65: break;
  3142  015C  2983               	goto	i1l4788
  3143                           	line	66
  3144                           	
  3145  015D                     i1l8723:	
  3146                           ;Command.c: 66: }
  3147  015D  2983               	goto	i1l4788
  3148                           	line	8
  3149                           	
  3150  015E                     i1l4777:	
  3151                           	
  3152  015E                     i1l8725:	
  3153  015E  3042               	movlw	(_cmdByteAddr-__stringbase)
  3154  015F  0084               	movwf	fsr0
  3155  0160  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3156  0165  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  3157                           	; Switch size 1, requested type "space"
  3158                           ; Number of cases is 8, Range of values is 0 to 7
  3159                           ; switch strategies available:
  3160                           ; Name         Instructions Cycles
  3161                           ; simple_byte           25    13 (average)
  3162                           ; direct_byte           32     8 (fixed)
  3163                           ; jumptable            260     6 (fixed)
  3164                           ; rangetable            12     6 (fixed)
  3165                           ; spacedrange           22     9 (fixed)
  3166                           ; locatedrange           8     3 (fixed)
  3167                           ;	Chosen strategy is simple_byte
  3168                           
  3169                           	opt asmopt_off
  3170  016A  3A00               	xorlw	0^0	; case 0
  3171  016B  1903               	skipnz
  3172  016C  2816               	goto	i1l8699
  3173  016D  3A01               	xorlw	1^0	; case 1
  3174  016E  1903               	skipnz
  3175  016F  283B               	goto	i1l8701
  3176  0170  3A03               	xorlw	2^1	; case 2
  3177  0171  1903               	skipnz
  3178  0172  2854               	goto	i1l8703
  3179  0173  3A01               	xorlw	3^2	; case 3
  3180  0174  1903               	skipnz
  3181  0175  286D               	goto	i1l8705
  3182  0176  3A07               	xorlw	4^3	; case 4
  3183  0177  1903               	skipnz
  3184  0178  2892               	goto	i1l8707
  3185  0179  3A01               	xorlw	5^4	; case 5
  3186  017A  1903               	skipnz
  3187  017B  28AB               	goto	i1l8709
  3188  017C  3A03               	xorlw	6^5	; case 6
  3189  017D  1903               	skipnz
  3190  017E  28C4               	goto	i1l8711
  3191  017F  3A01               	xorlw	7^6	; case 7
  3192  0180  1903               	skipnz
  3193  0181  28D7               	goto	i1l8713
  3194  0182  2956               	goto	i1l8721
  3195                           	opt asmopt_on
  3196                           
  3197                           	line	66
  3198                           	
  3199  0183                     i1l4779:	
  3200                           	line	69
  3201                           	
  3202  0183                     i1l4788:	
  3203  0183  0008               	return
  3204                           	opt stack 0
  3205                           GLOBAL	__end_of_readCommands
  3206  0184                     	__end_of_readCommands:
  3207 ;; =============== function _readCommands ends ============
  3208                           
  3209                           	signat	_readCommands,88
  3210                           	global	_validatePacket
  3211                           psect	text1285,local,class=CODE,delta=2
  3212                           global __ptext1285
  3213  06B3                     __ptext1285:
  3214                           
  3215 ;; *************** function _validatePacket *****************
  3216 ;; Defined at:
  3217 ;;		line 236 in file "Packet.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;		None
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  2    2[BANK0 ] int 
  3224 ;; Registers used:
  3225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3231 ;;      Params:         0       2       0       0       0
  3232 ;;      Locals:         0       0       0       0       0
  3233 ;;      Temps:          0       0       0       0       0
  3234 ;;      Totals:         0       2       0       0       0
  3235 ;;Total ram usage:        2 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:    2
  3238 ;; This function calls:
  3239 ;;		_checkStartByte
  3240 ;;		_checkRWByte
  3241 ;;		_checkCMDByte
  3242 ;;		_checkDataFrames
  3243 ;;		_addDataToCheckSum
  3244 ;;		_checkCS
  3245 ;; This function is called by:
  3246 ;;		_getPacket
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           psect	text1285
  3250                           	file	"Packet.c"
  3251                           	line	236
  3252                           	global	__size_of_validatePacket
  3253  004B                     	__size_of_validatePacket	equ	__end_of_validatePacket-_validatePacket
  3254                           	
  3255  06B3                     _validatePacket:	
  3256                           	opt	stack 1
  3257                           ; Regs used in _validatePacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3258                           	line	238
  3259                           	
  3260  06B3                     i1l8895:	
  3261                           ;Packet.c: 238: if(checkStartByte() && checkRWByte() && checkCMDByte() && checkDataFrame
                                 s()){
  3262  06B3  120A  118A  25F8   	fcall	_checkStartByte
              120A  118A         
  3263  06B8  087C               	movf	(1+(?_checkStartByte)),w
  3264  06B9  047B               	iorwf	(0+(?_checkStartByte)),w
  3265  06BA  1903               	skipnz
  3266  06BB  2EBD               	goto	u325_21
  3267  06BC  2EBE               	goto	u325_20
  3268  06BD                     u325_21:
  3269  06BD  2EF8               	goto	i1l8909
  3270  06BE                     u325_20:
  3271                           	
  3272  06BE                     i1l8897:	
  3273  06BE  120A  118A  2592   	fcall	_checkRWByte
              120A  118A         
  3274  06C3  087C               	movf	(1+(?_checkRWByte)),w
  3275  06C4  047B               	iorwf	(0+(?_checkRWByte)),w
  3276  06C5  1903               	skipnz
  3277  06C6  2EC8               	goto	u326_21
  3278  06C7  2EC9               	goto	u326_20
  3279  06C8                     u326_21:
  3280  06C8  2EF8               	goto	i1l8909
  3281  06C9                     u326_20:
  3282                           	
  3283  06C9                     i1l8899:	
  3284  06C9  120A  118A  24BF   	fcall	_checkCMDByte
              120A  118A         
  3285  06CE  087C               	movf	(1+(?_checkCMDByte)),w
  3286  06CF  047B               	iorwf	(0+(?_checkCMDByte)),w
  3287  06D0  1903               	skipnz
  3288  06D1  2ED3               	goto	u327_21
  3289  06D2  2ED4               	goto	u327_20
  3290  06D3                     u327_21:
  3291  06D3  2EF8               	goto	i1l8909
  3292  06D4                     u327_20:
  3293                           	
  3294  06D4                     i1l8901:	
  3295  06D4  120A  118A  22BF   	fcall	_checkDataFrames
              120A  118A         
  3296  06D9  0873               	movf	(1+(?_checkDataFrames)),w
  3297  06DA  0472               	iorwf	(0+(?_checkDataFrames)),w
  3298  06DB  1903               	skipnz
  3299  06DC  2EDE               	goto	u328_21
  3300  06DD  2EDF               	goto	u328_20
  3301  06DE                     u328_21:
  3302  06DE  2EF8               	goto	i1l8909
  3303  06DF                     u328_20:
  3304                           	line	240
  3305                           	
  3306  06DF                     i1l8903:	
  3307                           ;Packet.c: 240: addDataToCheckSum();
  3308  06DF  120A  118A  2452   	fcall	_addDataToCheckSum
              120A  118A         
  3309                           	line	242
  3310                           ;Packet.c: 242: if(checkCS())
  3311  06E4  120A  158A  271C   	fcall	_checkCS
              120A  118A         
  3312  06E9  0873               	movf	(1+(?_checkCS)),w
  3313  06EA  0472               	iorwf	(0+(?_checkCS)),w
  3314  06EB  1903               	skipnz
  3315  06EC  2EEE               	goto	u329_21
  3316  06ED  2EEF               	goto	u329_20
  3317  06EE                     u329_21:
  3318  06EE  2EF8               	goto	i1l8909
  3319  06EF                     u329_20:
  3320                           	line	244
  3321                           	
  3322  06EF                     i1l8905:	
  3323                           ;Packet.c: 244: return 1;
  3324  06EF  3001               	movlw	low(01h)
  3325  06F0  1283               	bcf	status, 5	;RP0=0, select bank0
  3326  06F1  1303               	bcf	status, 6	;RP1=0, select bank0
  3327  06F2  00A2               	movwf	(?_validatePacket)
  3328  06F3  3000               	movlw	high(01h)
  3329  06F4  00A3               	movwf	((?_validatePacket))+1
  3330  06F5  2EFD               	goto	i1l1621
  3331                           	
  3332  06F6                     i1l8907:	
  3333  06F6  2EFD               	goto	i1l1621
  3334                           	
  3335  06F7                     i1l1620:	
  3336  06F7  2EF8               	goto	i1l8909
  3337                           	line	245
  3338                           	
  3339  06F8                     i1l1619:	
  3340                           	line	247
  3341                           	
  3342  06F8                     i1l8909:	
  3343                           ;Packet.c: 245: }
  3344                           ;Packet.c: 247: return 0;
  3345  06F8  1283               	bcf	status, 5	;RP0=0, select bank0
  3346  06F9  1303               	bcf	status, 6	;RP1=0, select bank0
  3347  06FA  01A2               	clrf	(?_validatePacket)
  3348  06FB  01A3               	clrf	(?_validatePacket+1)
  3349  06FC  2EFD               	goto	i1l1621
  3350                           	
  3351  06FD                     i1l8911:	
  3352                           	line	249
  3353                           	
  3354  06FD                     i1l1621:	
  3355  06FD  0008               	return
  3356                           	opt stack 0
  3357                           GLOBAL	__end_of_validatePacket
  3358  06FE                     	__end_of_validatePacket:
  3359 ;; =============== function _validatePacket ends ============
  3360                           
  3361                           	signat	_validatePacket,90
  3362                           	global	_parsePacket
  3363                           psect	text1286,local,class=CODE,delta=2
  3364                           global __ptext1286
  3365  0184                     __ptext1286:
  3366                           
  3367 ;; *************** function _parsePacket *****************
  3368 ;; Defined at:
  3369 ;;		line 114 in file "Packet.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  dataPacket      1    wreg     PTR unsigned char 
  3372 ;;		 -> getPacket@arrStore(50), 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  dataPacket      1    9[BANK0 ] PTR unsigned char 
  3375 ;;		 -> getPacket@arrStore(50), 
  3376 ;;  i               1    8[BANK0 ] unsigned char 
  3377 ;;  dataCounter     2    6[BANK0 ] int 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;		None               void
  3380 ;; Registers used:
  3381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3387 ;;      Params:         0       0       0       0       0
  3388 ;;      Locals:         0       4       0       0       0
  3389 ;;      Temps:          0       4       0       0       0
  3390 ;;      Totals:         0       8       0       0       0
  3391 ;;Total ram usage:        8 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    2
  3394 ;; This function calls:
  3395 ;;		_checkLength
  3396 ;;		_checkEven
  3397 ;;		_makeHexByte
  3398 ;;		i1_eeprom_write
  3399 ;;		i1_strlen
  3400 ;;		_eeprom_read
  3401 ;; This function is called by:
  3402 ;;		_getPacket
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           psect	text1286
  3406                           	file	"Packet.c"
  3407                           	line	114
  3408                           	global	__size_of_parsePacket
  3409  013B                     	__size_of_parsePacket	equ	__end_of_parsePacket-_parsePacket
  3410                           	
  3411  0184                     _parsePacket:	
  3412                           	opt	stack 1
  3413                           ; Regs used in _parsePacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3414                           ;parsePacket@dataPacket stored from wreg
  3415                           	line	116
  3416  0184  1283               	bcf	status, 5	;RP0=0, select bank0
  3417  0185  1303               	bcf	status, 6	;RP1=0, select bank0
  3418  0186  00A9               	movwf	(parsePacket@dataPacket)
  3419                           	
  3420  0187                     i1l8545:	
  3421                           ;Packet.c: 116: int dataCounter = 0;
  3422  0187  01A6               	clrf	(parsePacket@dataCounter)
  3423  0188  01A7               	clrf	(parsePacket@dataCounter+1)
  3424                           	line	119
  3425                           	
  3426  0189                     i1l8547:	
  3427                           ;Packet.c: 119: if (checkLength() && checkEven()) {
  3428  0189  120A  158A  26BC   	fcall	_checkLength
              120A  118A         
  3429  018E  0873               	movf	(1+(?_checkLength)),w
  3430  018F  0472               	iorwf	(0+(?_checkLength)),w
  3431  0190  1903               	skipnz
  3432  0191  2993               	goto	u289_21
  3433  0192  2994               	goto	u289_20
  3434  0193                     u289_21:
  3435  0193  2ABE               	goto	i1l1598
  3436  0194                     u289_20:
  3437                           	
  3438  0194                     i1l8549:	
  3439  0194  120A  158A  266C   	fcall	_checkEven
              120A  118A         
  3440  0199  0873               	movf	(1+(?_checkEven)),w
  3441  019A  0472               	iorwf	(0+(?_checkEven)),w
  3442  019B  1903               	skipnz
  3443  019C  299E               	goto	u290_21
  3444  019D  299F               	goto	u290_20
  3445  019E                     u290_21:
  3446  019E  2ABE               	goto	i1l1598
  3447  019F                     u290_20:
  3448                           	line	122
  3449                           	
  3450  019F                     i1l8551:	
  3451                           ;Packet.c: 122: eeprom_write(startByteAddr, makeHexByte(dataPacket[0], dataPacket[1]));
  3452  019F  1283               	bcf	status, 5	;RP0=0, select bank0
  3453  01A0  1303               	bcf	status, 6	;RP1=0, select bank0
  3454  01A1  0829               	movf	(parsePacket@dataPacket),w
  3455  01A2  3E01               	addlw	01h
  3456  01A3  0084               	movwf	fsr0
  3457  01A4  1383               	bcf	status, 7	;select IRP bank0
  3458  01A5  0800               	movf	indf,w
  3459  01A6  00A2               	movwf	(??_parsePacket+0)+0
  3460  01A7  0822               	movf	(??_parsePacket+0)+0,w
  3461  01A8  00FB               	movwf	(?_makeHexByte)
  3462  01A9  0829               	movf	(parsePacket@dataPacket),w
  3463  01AA  0084               	movwf	fsr0
  3464  01AB  0800               	movf	indf,w
  3465  01AC  120A  158A  2647   	fcall	_makeHexByte
              120A  118A         
  3466  01B1  1283               	bcf	status, 5	;RP0=0, select bank0
  3467  01B2  1303               	bcf	status, 6	;RP1=0, select bank0
  3468  01B3  00A3               	movwf	(??_parsePacket+1)+0
  3469  01B4  0823               	movf	(??_parsePacket+1)+0,w
  3470  01B5  00F8               	movwf	(?i1_eeprom_write)
  3471  01B6  3054               	movlw	(_startByteAddr-__stringbase)
  3472  01B7  0084               	movwf	fsr0
  3473  01B8  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3474  01BD  120A  158A  26EB   	fcall	i1_eeprom_write
              120A  118A         
  3475                           	line	124
  3476                           ;Packet.c: 124: eeprom_write(rwByteAddr, makeHexByte(dataPacket[2], dataPacket[3]));
  3477  01C2  1283               	bcf	status, 5	;RP0=0, select bank0
  3478  01C3  1303               	bcf	status, 6	;RP1=0, select bank0
  3479  01C4  0829               	movf	(parsePacket@dataPacket),w
  3480  01C5  3E03               	addlw	03h
  3481  01C6  0084               	movwf	fsr0
  3482  01C7  1383               	bcf	status, 7	;select IRP bank0
  3483  01C8  0800               	movf	indf,w
  3484  01C9  00A2               	movwf	(??_parsePacket+0)+0
  3485  01CA  0822               	movf	(??_parsePacket+0)+0,w
  3486  01CB  00FB               	movwf	(?_makeHexByte)
  3487  01CC  0829               	movf	(parsePacket@dataPacket),w
  3488  01CD  3E02               	addlw	02h
  3489  01CE  0084               	movwf	fsr0
  3490  01CF  0800               	movf	indf,w
  3491  01D0  120A  158A  2647   	fcall	_makeHexByte
              120A  118A         
  3492  01D5  1283               	bcf	status, 5	;RP0=0, select bank0
  3493  01D6  1303               	bcf	status, 6	;RP1=0, select bank0
  3494  01D7  00A3               	movwf	(??_parsePacket+1)+0
  3495  01D8  0823               	movf	(??_parsePacket+1)+0,w
  3496  01D9  00F8               	movwf	(?i1_eeprom_write)
  3497  01DA  3053               	movlw	(_rwByteAddr-__stringbase)
  3498  01DB  0084               	movwf	fsr0
  3499  01DC  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3500  01E1  120A  158A  26EB   	fcall	i1_eeprom_write
              120A  118A         
  3501                           	line	126
  3502                           ;Packet.c: 126: eeprom_write(cmdByteAddr, makeHexByte(dataPacket[4], dataPacket[5]));
  3503  01E6  1283               	bcf	status, 5	;RP0=0, select bank0
  3504  01E7  1303               	bcf	status, 6	;RP1=0, select bank0
  3505  01E8  0829               	movf	(parsePacket@dataPacket),w
  3506  01E9  3E05               	addlw	05h
  3507  01EA  0084               	movwf	fsr0
  3508  01EB  1383               	bcf	status, 7	;select IRP bank0
  3509  01EC  0800               	movf	indf,w
  3510  01ED  00A2               	movwf	(??_parsePacket+0)+0
  3511  01EE  0822               	movf	(??_parsePacket+0)+0,w
  3512  01EF  00FB               	movwf	(?_makeHexByte)
  3513  01F0  0829               	movf	(parsePacket@dataPacket),w
  3514  01F1  3E04               	addlw	04h
  3515  01F2  0084               	movwf	fsr0
  3516  01F3  0800               	movf	indf,w
  3517  01F4  120A  158A  2647   	fcall	_makeHexByte
              120A  118A         
  3518  01F9  1283               	bcf	status, 5	;RP0=0, select bank0
  3519  01FA  1303               	bcf	status, 6	;RP1=0, select bank0
  3520  01FB  00A3               	movwf	(??_parsePacket+1)+0
  3521  01FC  0823               	movf	(??_parsePacket+1)+0,w
  3522  01FD  00F8               	movwf	(?i1_eeprom_write)
  3523  01FE  3042               	movlw	(_cmdByteAddr-__stringbase)
  3524  01FF  0084               	movwf	fsr0
  3525  0200  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3526  0205  120A  158A  26EB   	fcall	i1_eeprom_write
              120A  118A         
  3527                           	line	128
  3528                           ;Packet.c: 128: eeprom_write(lenByteAddr, makeHexByte(dataPacket[6], dataPacket[7]));
  3529  020A  1283               	bcf	status, 5	;RP0=0, select bank0
  3530  020B  1303               	bcf	status, 6	;RP1=0, select bank0
  3531  020C  0829               	movf	(parsePacket@dataPacket),w
  3532  020D  3E07               	addlw	07h
  3533  020E  0084               	movwf	fsr0
  3534  020F  1383               	bcf	status, 7	;select IRP bank0
  3535  0210  0800               	movf	indf,w
  3536  0211  00A2               	movwf	(??_parsePacket+0)+0
  3537  0212  0822               	movf	(??_parsePacket+0)+0,w
  3538  0213  00FB               	movwf	(?_makeHexByte)
  3539  0214  0829               	movf	(parsePacket@dataPacket),w
  3540  0215  3E06               	addlw	06h
  3541  0216  0084               	movwf	fsr0
  3542  0217  0800               	movf	indf,w
  3543  0218  120A  158A  2647   	fcall	_makeHexByte
              120A  118A         
  3544  021D  1283               	bcf	status, 5	;RP0=0, select bank0
  3545  021E  1303               	bcf	status, 6	;RP1=0, select bank0
  3546  021F  00A3               	movwf	(??_parsePacket+1)+0
  3547  0220  0823               	movf	(??_parsePacket+1)+0,w
  3548  0221  00F8               	movwf	(?i1_eeprom_write)
  3549  0222  304D               	movlw	(_lenByteAddr-__stringbase)
  3550  0223  0084               	movwf	fsr0
  3551  0224  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3552  0229  120A  158A  26EB   	fcall	i1_eeprom_write
              120A  118A         
  3553                           	line	130
  3554                           	
  3555  022E                     i1l8553:	
  3556                           ;Packet.c: 130: eeprom_write(csByteAddr, makeHexByte(dataPacket[strlen(dataPacket) - 2],
                                  dataPacket[strlen(dataPacket) - 1]));
  3557  022E  1283               	bcf	status, 5	;RP0=0, select bank0
  3558  022F  1303               	bcf	status, 6	;RP1=0, select bank0
  3559  0230  0829               	movf	(parsePacket@dataPacket),w
  3560  0231  00F0               	movwf	(?i1_strlen)
  3561  0232  3000               	movlw	(0x0/2)
  3562  0233  00F1               	movwf	(?i1_strlen+1)
  3563  0234  120A  158A  2750   	fcall	i1_strlen
              120A  118A         
  3564  0239  0870               	movf	(0+(?i1_strlen)),w
  3565  023A  3EFF               	addlw	0FFh
  3566  023B  1283               	bcf	status, 5	;RP0=0, select bank0
  3567  023C  1303               	bcf	status, 6	;RP1=0, select bank0
  3568  023D  0729               	addwf	(parsePacket@dataPacket),w
  3569  023E  00A2               	movwf	(??_parsePacket+0)+0
  3570  023F  0822               	movf	0+(??_parsePacket+0)+0,w
  3571  0240  0084               	movwf	fsr0
  3572  0241  1383               	bcf	status, 7	;select IRP bank0
  3573  0242  0800               	movf	indf,w
  3574  0243  00A3               	movwf	(??_parsePacket+1)+0
  3575  0244  0823               	movf	(??_parsePacket+1)+0,w
  3576  0245  00FB               	movwf	(?_makeHexByte)
  3577  0246  0829               	movf	(parsePacket@dataPacket),w
  3578  0247  00F0               	movwf	(?i1_strlen)
  3579  0248  3000               	movlw	(0x0/2)
  3580  0249  00F1               	movwf	(?i1_strlen+1)
  3581  024A  120A  158A  2750   	fcall	i1_strlen
              120A  118A         
  3582  024F  0870               	movf	(0+(?i1_strlen)),w
  3583  0250  3EFE               	addlw	0FEh
  3584  0251  1283               	bcf	status, 5	;RP0=0, select bank0
  3585  0252  1303               	bcf	status, 6	;RP1=0, select bank0
  3586  0253  0729               	addwf	(parsePacket@dataPacket),w
  3587  0254  00A4               	movwf	(??_parsePacket+2)+0
  3588  0255  0824               	movf	0+(??_parsePacket+2)+0,w
  3589  0256  0084               	movwf	fsr0
  3590  0257  1383               	bcf	status, 7	;select IRP bank0
  3591  0258  0800               	movf	indf,w
  3592  0259  120A  158A  2647   	fcall	_makeHexByte
              120A  118A         
  3593  025E  1283               	bcf	status, 5	;RP0=0, select bank0
  3594  025F  1303               	bcf	status, 6	;RP1=0, select bank0
  3595  0260  00A5               	movwf	(??_parsePacket+3)+0
  3596  0261  0825               	movf	(??_parsePacket+3)+0,w
  3597  0262  00F8               	movwf	(?i1_eeprom_write)
  3598  0263  3043               	movlw	(_csByteAddr-__stringbase)
  3599  0264  0084               	movwf	fsr0
  3600  0265  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3601  026A  120A  158A  26EB   	fcall	i1_eeprom_write
              120A  118A         
  3602                           	line	133
  3603                           	
  3604  026F                     i1l8555:	
  3605                           ;Packet.c: 133: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  3606  026F  1283               	bcf	status, 5	;RP0=0, select bank0
  3607  0270  1303               	bcf	status, 6	;RP1=0, select bank0
  3608  0271  01A8               	clrf	(parsePacket@i)
  3609  0272  2AA9               	goto	i1l8563
  3610                           	
  3611  0273                     i1l1596:	
  3612                           	line	134
  3613                           	
  3614  0273                     i1l8557:	
  3615                           ;Packet.c: 134: eeprom_write(dataBytesAddr+i, makeHexByte(dataPacket[8 + dataCounter], d
                                 ataPacket[9 + dataCounter]));
  3616  0273  0826               	movf	(parsePacket@dataCounter),w
  3617  0274  3E09               	addlw	09h
  3618  0275  0729               	addwf	(parsePacket@dataPacket),w
  3619  0276  00A2               	movwf	(??_parsePacket+0)+0
  3620  0277  0822               	movf	0+(??_parsePacket+0)+0,w
  3621  0278  0084               	movwf	fsr0
  3622  0279  1383               	bcf	status, 7	;select IRP bank0
  3623  027A  0800               	movf	indf,w
  3624  027B  00A3               	movwf	(??_parsePacket+1)+0
  3625  027C  0823               	movf	(??_parsePacket+1)+0,w
  3626  027D  00FB               	movwf	(?_makeHexByte)
  3627  027E  0826               	movf	(parsePacket@dataCounter),w
  3628  027F  3E08               	addlw	08h
  3629  0280  0729               	addwf	(parsePacket@dataPacket),w
  3630  0281  00A4               	movwf	(??_parsePacket+2)+0
  3631  0282  0824               	movf	0+(??_parsePacket+2)+0,w
  3632  0283  0084               	movwf	fsr0
  3633  0284  0800               	movf	indf,w
  3634  0285  120A  158A  2647   	fcall	_makeHexByte
              120A  118A         
  3635  028A  1283               	bcf	status, 5	;RP0=0, select bank0
  3636  028B  1303               	bcf	status, 6	;RP1=0, select bank0
  3637  028C  00A5               	movwf	(??_parsePacket+3)+0
  3638  028D  0825               	movf	(??_parsePacket+3)+0,w
  3639  028E  00F8               	movwf	(?i1_eeprom_write)
  3640  028F  3044               	movlw	(_dataBytesAddr-__stringbase)
  3641  0290  0084               	movwf	fsr0
  3642  0291  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3643  0296  0728               	addwf	(parsePacket@i),w
  3644  0297  120A  158A  26EB   	fcall	i1_eeprom_write
              120A  118A         
  3645                           	line	135
  3646                           	
  3647  029C                     i1l8559:	
  3648                           ;Packet.c: 135: dataCounter += 2;
  3649  029C  3002               	movlw	low(02h)
  3650  029D  1283               	bcf	status, 5	;RP0=0, select bank0
  3651  029E  1303               	bcf	status, 6	;RP1=0, select bank0
  3652  029F  07A6               	addwf	(parsePacket@dataCounter),f
  3653  02A0  1803               	skipnc
  3654  02A1  0AA7               	incf	(parsePacket@dataCounter+1),f
  3655  02A2  3000               	movlw	high(02h)
  3656  02A3  07A7               	addwf	(parsePacket@dataCounter+1),f
  3657                           	line	133
  3658                           	
  3659  02A4                     i1l8561:	
  3660  02A4  3001               	movlw	(01h)
  3661  02A5  00A2               	movwf	(??_parsePacket+0)+0
  3662  02A6  0822               	movf	(??_parsePacket+0)+0,w
  3663  02A7  07A8               	addwf	(parsePacket@i),f
  3664  02A8  2AA9               	goto	i1l8563
  3665                           	
  3666  02A9                     i1l1595:	
  3667                           	
  3668  02A9                     i1l8563:	
  3669  02A9  304D               	movlw	(_lenByteAddr-__stringbase)
  3670  02AA  0084               	movwf	fsr0
  3671  02AB  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3672  02B0  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  3673  02B5  1283               	bcf	status, 5	;RP0=0, select bank0
  3674  02B6  1303               	bcf	status, 6	;RP1=0, select bank0
  3675  02B7  0228               	subwf	(parsePacket@i),w
  3676  02B8  1C03               	skipc
  3677  02B9  2ABB               	goto	u291_21
  3678  02BA  2ABC               	goto	u291_20
  3679  02BB                     u291_21:
  3680  02BB  2A73               	goto	i1l8557
  3681  02BC                     u291_20:
  3682  02BC  2ABE               	goto	i1l1598
  3683                           	
  3684  02BD                     i1l1597:	
  3685  02BD  2ABE               	goto	i1l1598
  3686                           	line	137
  3687                           	
  3688  02BE                     i1l1594:	
  3689                           	line	138
  3690                           	
  3691  02BE                     i1l1598:	
  3692  02BE  0008               	return
  3693                           	opt stack 0
  3694                           GLOBAL	__end_of_parsePacket
  3695  02BF                     	__end_of_parsePacket:
  3696 ;; =============== function _parsePacket ends ============
  3697                           
  3698                           	signat	_parsePacket,4216
  3699                           	global	i1_writeString
  3700                           psect	text1287,local,class=CODE,delta=2
  3701                           global __ptext1287
  3702  0F8A                     __ptext1287:
  3703                           
  3704 ;; *************** function i1_writeString *****************
  3705 ;; Defined at:
  3706 ;;		line 140 in file "Bluetooth.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;  writeString     1    wreg     PTR unsigned char 
  3709 ;;		 -> readError(25), 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  writeString     1    8[COMMON] PTR unsigned char 
  3712 ;;		 -> readError(25), 
  3713 ;;  writeString     2    9[COMMON] unsigned int 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;		None               void
  3716 ;; Registers used:
  3717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3723 ;;      Params:         0       0       0       0       0
  3724 ;;      Locals:         3       0       0       0       0
  3725 ;;      Temps:          0       0       0       0       0
  3726 ;;      Totals:         3       0       0       0       0
  3727 ;;Total ram usage:        3 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; Hardware stack levels required when called:    2
  3730 ;; This function calls:
  3731 ;;		i1_writeByte
  3732 ;;		i1_strlen
  3733 ;; This function is called by:
  3734 ;;		_readCommands
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           psect	text1287
  3738                           	file	"Bluetooth.c"
  3739                           	line	140
  3740                           	global	__size_ofi1_writeString
  3741  003B                     	__size_ofi1_writeString	equ	__end_ofi1_writeString-i1_writeString
  3742                           	
  3743  0F8A                     i1_writeString:	
  3744 ;; using string table level
  3745                           	opt	stack 1
  3746                           ; Regs used in i1_writeString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3747                           ;i1writeString@userString stored from wreg
  3748                           	line	144
  3749  0F8A  00F8               	movwf	(i1writeString@userString)
  3750                           	
  3751  0F8B                     i1l8731:	
  3752                           ;Bluetooth.c: 142: unsigned int i;
  3753                           ;Bluetooth.c: 144: for(i = 0;i<strlen(userString);i++){
  3754  0F8B  01F9               	clrf	(i1writeString@i)
  3755  0F8C  01FA               	clrf	(i1writeString@i+1)
  3756  0F8D  2FA8               	goto	i1l8737
  3757                           	
  3758  0F8E                     i1l788:	
  3759                           	line	145
  3760                           	
  3761  0F8E                     i1l8733:	
  3762                           ;Bluetooth.c: 145: writeByte(userString[i]);
  3763  0F8E  0879               	movf	(i1writeString@i),w
  3764  0F8F  0778               	addwf	(i1writeString@userString),w
  3765  0F90  0084               	movwf	fsr0
  3766  0F91  0879               	movf	(i1writeString@userString+1),w
  3767  0F92  1803               	skipnc
  3768  0F93  0A79               	incf	(i1writeString@userString+1),w
  3769  0F94  1283               	bcf	status, 5	;RP0=0, select bank0
  3770  0F95  1303               	bcf	status, 6	;RP1=0, select bank0
  3771  0F96  00FF               	movwf	btemp+1
  3772  0F97  120A  118A  2359   	fcall	stringtab
              120A  158A         
  3773  0F9C  120A  158A  259F   	fcall	i1_writeByte
              120A  158A         
  3774                           	line	144
  3775                           	
  3776  0FA1                     i1l8735:	
  3777  0FA1  3001               	movlw	low(01h)
  3778  0FA2  07F9               	addwf	(i1writeString@i),f
  3779  0FA3  1803               	skipnc
  3780  0FA4  0AFA               	incf	(i1writeString@i+1),f
  3781  0FA5  3000               	movlw	high(01h)
  3782  0FA6  07FA               	addwf	(i1writeString@i+1),f
  3783  0FA7  2FA8               	goto	i1l8737
  3784                           	
  3785  0FA8                     i1l787:	
  3786                           	
  3787  0FA8                     i1l8737:	
  3788  0FA8  0879               	movf	(i1writeString@userString+1),w
  3789  0FA9  01F1               	clrf	(?i1_strlen+1)
  3790  0FAA  07F1               	addwf	(?i1_strlen+1)
  3791  0FAB  0878               	movf	(i1writeString@userString),w
  3792  0FAC  01F0               	clrf	(?i1_strlen)
  3793  0FAD  07F0               	addwf	(?i1_strlen)
  3794                           
  3795  0FAE  120A  158A  2750   	fcall	i1_strlen
              120A  158A         
  3796  0FB3  0871               	movf	(1+(?i1_strlen)),w
  3797  0FB4  027A               	subwf	(i1writeString@i+1),w
  3798  0FB5  1D03               	skipz
  3799  0FB6  2FB9               	goto	u310_25
  3800  0FB7  0870               	movf	(0+(?i1_strlen)),w
  3801  0FB8  0279               	subwf	(i1writeString@i),w
  3802  0FB9                     u310_25:
  3803  0FB9  1C03               	skipc
  3804  0FBA  2FBC               	goto	u310_21
  3805  0FBB  2FBD               	goto	u310_20
  3806  0FBC                     u310_21:
  3807  0FBC  2F8E               	goto	i1l8733
  3808  0FBD                     u310_20:
  3809  0FBD  2FBE               	goto	i1l8739
  3810                           	
  3811  0FBE                     i1l789:	
  3812                           	line	148
  3813                           	
  3814  0FBE                     i1l8739:	
  3815                           ;Bluetooth.c: 146: }
  3816                           ;Bluetooth.c: 148: writeByte((unsigned char)i);
  3817  0FBE  0879               	movf	(i1writeString@i),w
  3818  0FBF  120A  158A  259F   	fcall	i1_writeByte
              120A  158A         
  3819                           	line	150
  3820                           	
  3821  0FC4                     i1l790:	
  3822  0FC4  0008               	return
  3823                           	opt stack 0
  3824                           GLOBAL	__end_ofi1_writeString
  3825  0FC5                     	__end_ofi1_writeString:
  3826 ;; =============== function i1_writeString ends ============
  3827                           
  3828                           	signat	i1_writeString,88
  3829                           	global	_addDataToCheckSum
  3830                           psect	text1288,local,class=CODE,delta=2
  3831                           global __ptext1288
  3832  0452                     __ptext1288:
  3833                           
  3834 ;; *************** function _addDataToCheckSum *****************
  3835 ;; Defined at:
  3836 ;;		line 258 in file "Packet.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  i               1   13[COMMON] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;		None               void
  3843 ;; Registers used:
  3844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3850 ;;      Params:         0       0       0       0       0
  3851 ;;      Locals:         1       0       0       0       0
  3852 ;;      Temps:          2       0       0       0       0
  3853 ;;      Totals:         3       0       0       0       0
  3854 ;;Total ram usage:        3 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    1
  3857 ;; This function calls:
  3858 ;;		_eeprom_read
  3859 ;;		i1_eeprom_write
  3860 ;; This function is called by:
  3861 ;;		_validatePacket
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           psect	text1288
  3865                           	file	"Packet.c"
  3866                           	line	258
  3867                           	global	__size_of_addDataToCheckSum
  3868  006D                     	__size_of_addDataToCheckSum	equ	__end_of_addDataToCheckSum-_addDataToCheckSum
  3869                           	
  3870  0452                     _addDataToCheckSum:	
  3871                           	opt	stack 1
  3872                           ; Regs used in _addDataToCheckSum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3873                           	line	260
  3874                           	
  3875  0452                     i1l8647:	
  3876                           ;Packet.c: 260: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(lenB
                                 yteAddr));
  3877  0452  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3878  0453  0084               	movwf	fsr0
  3879  0454  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3880  0459  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  3881  045E  00FB               	movwf	(??_addDataToCheckSum+0)+0
  3882  045F  304D               	movlw	(_lenByteAddr-__stringbase)
  3883  0460  0084               	movwf	fsr0
  3884  0461  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3885  0466  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  3886  046B  077B               	addwf	0+(??_addDataToCheckSum+0)+0,w
  3887  046C  00FC               	movwf	(??_addDataToCheckSum+1)+0
  3888  046D  087C               	movf	(??_addDataToCheckSum+1)+0,w
  3889  046E  00F8               	movwf	(?i1_eeprom_write)
  3890  046F  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3891  0470  0084               	movwf	fsr0
  3892  0471  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3893  0476  120A  158A  26EB   	fcall	i1_eeprom_write
              120A  118A         
  3894                           	line	263
  3895                           	
  3896  047B                     i1l8649:	
  3897                           ;Packet.c: 263: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  3898  047B  01FD               	clrf	(addDataToCheckSum@i)
  3899  047C  2CAC               	goto	i1l8655
  3900                           	
  3901  047D                     i1l1625:	
  3902                           	line	265
  3903                           	
  3904  047D                     i1l8651:	
  3905                           ;Packet.c: 265: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(data
                                 BytesAddr+i));
  3906  047D  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3907  047E  0084               	movwf	fsr0
  3908  047F  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3909  0484  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  3910  0489  00FB               	movwf	(??_addDataToCheckSum+0)+0
  3911  048A  3044               	movlw	(_dataBytesAddr-__stringbase)
  3912  048B  0084               	movwf	fsr0
  3913  048C  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3914  0491  077D               	addwf	(addDataToCheckSum@i),w
  3915  0492  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  3916  0497  077B               	addwf	0+(??_addDataToCheckSum+0)+0,w
  3917  0498  00FC               	movwf	(??_addDataToCheckSum+1)+0
  3918  0499  087C               	movf	(??_addDataToCheckSum+1)+0,w
  3919  049A  00F8               	movwf	(?i1_eeprom_write)
  3920  049B  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3921  049C  0084               	movwf	fsr0
  3922  049D  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3923  04A2  120A  158A  26EB   	fcall	i1_eeprom_write
              120A  118A         
  3924                           	line	263
  3925                           	
  3926  04A7                     i1l8653:	
  3927  04A7  3001               	movlw	(01h)
  3928  04A8  00FB               	movwf	(??_addDataToCheckSum+0)+0
  3929  04A9  087B               	movf	(??_addDataToCheckSum+0)+0,w
  3930  04AA  07FD               	addwf	(addDataToCheckSum@i),f
  3931  04AB  2CAC               	goto	i1l8655
  3932                           	
  3933  04AC                     i1l1624:	
  3934                           	
  3935  04AC                     i1l8655:	
  3936  04AC  304D               	movlw	(_lenByteAddr-__stringbase)
  3937  04AD  0084               	movwf	fsr0
  3938  04AE  120A  118A  2363   	fcall	stringdir
              120A  118A         
  3939  04B3  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  3940  04B8  027D               	subwf	(addDataToCheckSum@i),w
  3941  04B9  1C03               	skipc
  3942  04BA  2CBC               	goto	u302_21
  3943  04BB  2CBD               	goto	u302_20
  3944  04BC                     u302_21:
  3945  04BC  2C7D               	goto	i1l8651
  3946  04BD                     u302_20:
  3947  04BD  2CBE               	goto	i1l1627
  3948                           	
  3949  04BE                     i1l1626:	
  3950                           	line	267
  3951                           	
  3952  04BE                     i1l1627:	
  3953  04BE  0008               	return
  3954                           	opt stack 0
  3955                           GLOBAL	__end_of_addDataToCheckSum
  3956  04BF                     	__end_of_addDataToCheckSum:
  3957 ;; =============== function _addDataToCheckSum ends ============
  3958                           
  3959                           	signat	_addDataToCheckSum,88
  3960                           	global	_checkCS
  3961                           psect	text1289,local,class=CODE,delta=2
  3962                           global __ptext1289
  3963  0F1C                     __ptext1289:
  3964                           
  3965 ;; *************** function _checkCS *****************
  3966 ;; Defined at:
  3967 ;;		line 216 in file "Packet.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;		None
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  2    2[COMMON] int 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3981 ;;      Params:         2       0       0       0       0
  3982 ;;      Locals:         0       0       0       0       0
  3983 ;;      Temps:          1       0       0       0       0
  3984 ;;      Totals:         3       0       0       0       0
  3985 ;;Total ram usage:        3 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    1
  3988 ;; This function calls:
  3989 ;;		_eeprom_read
  3990 ;;		i1_writeByte
  3991 ;; This function is called by:
  3992 ;;		_validatePacket
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           psect	text1289
  3996                           	file	"Packet.c"
  3997                           	line	216
  3998                           	global	__size_of_checkCS
  3999  0034                     	__size_of_checkCS	equ	__end_of_checkCS-_checkCS
  4000                           	
  4001  0F1C                     _checkCS:	
  4002                           	opt	stack 1
  4003                           ; Regs used in _checkCS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4004                           	line	218
  4005                           	
  4006  0F1C                     i1l8615:	
  4007                           ;Packet.c: 218: if(eeprom_read(csByteAddr) == eeprom_read(calcCSByteAddr)){
  4008  0F1C  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4009  0F1D  0084               	movwf	fsr0
  4010  0F1E  120A  118A  2363   	fcall	stringdir
              120A  158A         
  4011  0F23  120A  158A  2628   	fcall	_eeprom_read
              120A  158A         
  4012  0F28  00F4               	movwf	(??_checkCS+0)+0
  4013  0F29  3043               	movlw	(_csByteAddr-__stringbase)
  4014  0F2A  0084               	movwf	fsr0
  4015  0F2B  120A  118A  2363   	fcall	stringdir
              120A  158A         
  4016  0F30  120A  158A  2628   	fcall	_eeprom_read
              120A  158A         
  4017  0F35  0674               	xorwf	0+(??_checkCS+0)+0,w
  4018  0F36  1D03               	skipz
  4019  0F37  2F39               	goto	u296_21
  4020  0F38  2F3A               	goto	u296_20
  4021  0F39                     u296_21:
  4022  0F39  2F46               	goto	i1l8623
  4023  0F3A                     u296_20:
  4024                           	line	220
  4025                           	
  4026  0F3A                     i1l8617:	
  4027                           ;Packet.c: 220: writeByte('Y');
  4028  0F3A  3059               	movlw	(059h)
  4029  0F3B  120A  158A  259F   	fcall	i1_writeByte
              120A  158A         
  4030                           	line	221
  4031                           	
  4032  0F40                     i1l8619:	
  4033                           ;Packet.c: 221: return 1;
  4034  0F40  3001               	movlw	low(01h)
  4035  0F41  00F2               	movwf	(?_checkCS)
  4036  0F42  3000               	movlw	high(01h)
  4037  0F43  00F3               	movwf	((?_checkCS))+1
  4038  0F44  2F4F               	goto	i1l1616
  4039                           	
  4040  0F45                     i1l8621:	
  4041  0F45  2F4F               	goto	i1l1616
  4042                           	line	222
  4043                           	
  4044  0F46                     i1l1615:	
  4045                           	line	224
  4046                           	
  4047  0F46                     i1l8623:	
  4048                           ;Packet.c: 222: }
  4049                           ;Packet.c: 224: writeByte('N');
  4050  0F46  304E               	movlw	(04Eh)
  4051  0F47  120A  158A  259F   	fcall	i1_writeByte
              120A  158A         
  4052                           	line	225
  4053                           	
  4054  0F4C                     i1l8625:	
  4055                           ;Packet.c: 225: return 0;
  4056  0F4C  01F2               	clrf	(?_checkCS)
  4057  0F4D  01F3               	clrf	(?_checkCS+1)
  4058  0F4E  2F4F               	goto	i1l1616
  4059                           	
  4060  0F4F                     i1l8627:	
  4061                           	line	226
  4062                           	
  4063  0F4F                     i1l1616:	
  4064  0F4F  0008               	return
  4065                           	opt stack 0
  4066                           GLOBAL	__end_of_checkCS
  4067  0F50                     	__end_of_checkCS:
  4068 ;; =============== function _checkCS ends ============
  4069                           
  4070                           	signat	_checkCS,90
  4071                           	global	_checkCMDByte
  4072                           psect	text1290,local,class=CODE,delta=2
  4073                           global __ptext1290
  4074  04BF                     __ptext1290:
  4075                           
  4076 ;; *************** function _checkCMDByte *****************
  4077 ;; Defined at:
  4078 ;;		line 193 in file "Packet.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  2   11[COMMON] int 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4092 ;;      Params:         2       0       0       0       0
  4093 ;;      Locals:         0       0       0       0       0
  4094 ;;      Temps:          0       2       0       0       0
  4095 ;;      Totals:         2       2       0       0       0
  4096 ;;Total ram usage:        4 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    1
  4099 ;; This function calls:
  4100 ;;		_eeprom_read
  4101 ;;		i1_eeprom_write
  4102 ;;		i1_writeByte
  4103 ;; This function is called by:
  4104 ;;		_validatePacket
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           psect	text1290
  4108                           	file	"Packet.c"
  4109                           	line	193
  4110                           	global	__size_of_checkCMDByte
  4111  006C                     	__size_of_checkCMDByte	equ	__end_of_checkCMDByte-_checkCMDByte
  4112                           	
  4113  04BF                     _checkCMDByte:	
  4114                           	opt	stack 1
  4115                           ; Regs used in _checkCMDByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4116                           	line	195
  4117                           	
  4118  04BF                     i1l8879:	
  4119                           ;Packet.c: 195: if(eeprom_read(cmdByteAddr) >= 0 && eeprom_read(cmdByteAddr) <= maxCmd){
  4120  04BF  3042               	movlw	(_cmdByteAddr-__stringbase)
  4121  04C0  0084               	movwf	fsr0
  4122  04C1  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4123  04C6  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4124  04CB  3042               	movlw	(_cmdByteAddr-__stringbase)
  4125  04CC  0084               	movwf	fsr0
  4126  04CD  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4127  04D2  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4128  04D7  1283               	bcf	status, 5	;RP0=0, select bank0
  4129  04D8  1303               	bcf	status, 6	;RP1=0, select bank0
  4130  04D9  00A0               	movwf	(??_checkCMDByte+0)+0
  4131  04DA  304E               	movlw	(_maxCmd-__stringbase)
  4132  04DB  0084               	movwf	fsr0
  4133  04DC  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4134  04E1  00A1               	movwf	(??_checkCMDByte+1)+0
  4135  04E2  0820               	movf	0+(??_checkCMDByte+0)+0,w
  4136  04E3  0221               	subwf	(??_checkCMDByte+1)+0,w
  4137  04E4  1C03               	skipc
  4138  04E5  2CE7               	goto	u324_21
  4139  04E6  2CE8               	goto	u324_20
  4140  04E7                     u324_21:
  4141  04E7  2D21               	goto	i1l8889
  4142  04E8                     u324_20:
  4143                           	line	197
  4144                           	
  4145  04E8                     i1l8881:	
  4146                           ;Packet.c: 197: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(cmdB
                                 yteAddr));
  4147  04E8  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4148  04E9  0084               	movwf	fsr0
  4149  04EA  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4150  04EF  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4151  04F4  1283               	bcf	status, 5	;RP0=0, select bank0
  4152  04F5  1303               	bcf	status, 6	;RP1=0, select bank0
  4153  04F6  00A0               	movwf	(??_checkCMDByte+0)+0
  4154  04F7  3042               	movlw	(_cmdByteAddr-__stringbase)
  4155  04F8  0084               	movwf	fsr0
  4156  04F9  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4157  04FE  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4158  0503  1283               	bcf	status, 5	;RP0=0, select bank0
  4159  0504  1303               	bcf	status, 6	;RP1=0, select bank0
  4160  0505  0720               	addwf	0+(??_checkCMDByte+0)+0,w
  4161  0506  00A1               	movwf	(??_checkCMDByte+1)+0
  4162  0507  0821               	movf	(??_checkCMDByte+1)+0,w
  4163  0508  00F8               	movwf	(?i1_eeprom_write)
  4164  0509  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4165  050A  0084               	movwf	fsr0
  4166  050B  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4167  0510  120A  158A  26EB   	fcall	i1_eeprom_write
              120A  118A         
  4168                           	line	199
  4169                           	
  4170  0515                     i1l8883:	
  4171                           ;Packet.c: 199: writeByte('C');
  4172  0515  3043               	movlw	(043h)
  4173  0516  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  4174                           	line	200
  4175                           	
  4176  051B                     i1l8885:	
  4177                           ;Packet.c: 200: return 1;
  4178  051B  3001               	movlw	low(01h)
  4179  051C  00FB               	movwf	(?_checkCMDByte)
  4180  051D  3000               	movlw	high(01h)
  4181  051E  00FC               	movwf	((?_checkCMDByte))+1
  4182  051F  2D2A               	goto	i1l1612
  4183                           	
  4184  0520                     i1l8887:	
  4185  0520  2D2A               	goto	i1l1612
  4186                           	line	201
  4187                           	
  4188  0521                     i1l1611:	
  4189                           	line	203
  4190                           	
  4191  0521                     i1l8889:	
  4192                           ;Packet.c: 201: }
  4193                           ;Packet.c: 203: writeByte('N');
  4194  0521  304E               	movlw	(04Eh)
  4195  0522  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  4196                           	line	204
  4197                           	
  4198  0527                     i1l8891:	
  4199                           ;Packet.c: 204: return 0;
  4200  0527  01FB               	clrf	(?_checkCMDByte)
  4201  0528  01FC               	clrf	(?_checkCMDByte+1)
  4202  0529  2D2A               	goto	i1l1612
  4203                           	
  4204  052A                     i1l8893:	
  4205                           	line	205
  4206                           	
  4207  052A                     i1l1612:	
  4208  052A  0008               	return
  4209                           	opt stack 0
  4210                           GLOBAL	__end_of_checkCMDByte
  4211  052B                     	__end_of_checkCMDByte:
  4212 ;; =============== function _checkCMDByte ends ============
  4213                           
  4214                           	signat	_checkCMDByte,90
  4215                           	global	_checkRWByte
  4216                           psect	text1291,local,class=CODE,delta=2
  4217                           global __ptext1291
  4218  0592                     __ptext1291:
  4219                           
  4220 ;; *************** function _checkRWByte *****************
  4221 ;; Defined at:
  4222 ;;		line 171 in file "Packet.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;		None
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  2   11[COMMON] int 
  4229 ;; Registers used:
  4230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4236 ;;      Params:         2       0       0       0       0
  4237 ;;      Locals:         0       0       0       0       0
  4238 ;;      Temps:          0       2       0       0       0
  4239 ;;      Totals:         2       2       0       0       0
  4240 ;;Total ram usage:        4 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    1
  4243 ;; This function calls:
  4244 ;;		_eeprom_read
  4245 ;;		i1_writeByte
  4246 ;;		i1_eeprom_write
  4247 ;; This function is called by:
  4248 ;;		_validatePacket
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           psect	text1291
  4252                           	file	"Packet.c"
  4253                           	line	171
  4254                           	global	__size_of_checkRWByte
  4255  0066                     	__size_of_checkRWByte	equ	__end_of_checkRWByte-_checkRWByte
  4256                           	
  4257  0592                     _checkRWByte:	
  4258                           	opt	stack 1
  4259                           ; Regs used in _checkRWByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4260                           	line	174
  4261                           	
  4262  0592                     i1l8861:	
  4263                           ;Packet.c: 174: if(eeprom_read(rwByteAddr) == 0 || eeprom_read(rwByteAddr) == 1){
  4264  0592  3053               	movlw	(_rwByteAddr-__stringbase)
  4265  0593  0084               	movwf	fsr0
  4266  0594  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4267  0599  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4268  059E  3A00               	xorlw	0
  4269  059F  1903               	skipnz
  4270  05A0  2DA2               	goto	u322_21
  4271  05A1  2DA3               	goto	u322_20
  4272  05A2                     u322_21:
  4273  05A2  2DB5               	goto	i1l8865
  4274  05A3                     u322_20:
  4275                           	
  4276  05A3                     i1l8863:	
  4277  05A3  3053               	movlw	(_rwByteAddr-__stringbase)
  4278  05A4  0084               	movwf	fsr0
  4279  05A5  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4280  05AA  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4281  05AF  3A01               	xorlw	01h
  4282  05B0  1D03               	skipz
  4283  05B1  2DB3               	goto	u323_21
  4284  05B2  2DB4               	goto	u323_20
  4285  05B3                     u323_21:
  4286  05B3  2DEE               	goto	i1l8873
  4287  05B4                     u323_20:
  4288  05B4  2DB5               	goto	i1l8865
  4289                           	
  4290  05B5                     i1l1607:	
  4291                           	line	176
  4292                           	
  4293  05B5                     i1l8865:	
  4294                           ;Packet.c: 176: writeByte('R');
  4295  05B5  3052               	movlw	(052h)
  4296  05B6  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  4297                           	line	178
  4298                           	
  4299  05BB                     i1l8867:	
  4300                           ;Packet.c: 178: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(rwBy
                                 teAddr));
  4301  05BB  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4302  05BC  0084               	movwf	fsr0
  4303  05BD  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4304  05C2  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4305  05C7  1283               	bcf	status, 5	;RP0=0, select bank0
  4306  05C8  1303               	bcf	status, 6	;RP1=0, select bank0
  4307  05C9  00A0               	movwf	(??_checkRWByte+0)+0
  4308  05CA  3053               	movlw	(_rwByteAddr-__stringbase)
  4309  05CB  0084               	movwf	fsr0
  4310  05CC  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4311  05D1  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4312  05D6  1283               	bcf	status, 5	;RP0=0, select bank0
  4313  05D7  1303               	bcf	status, 6	;RP1=0, select bank0
  4314  05D8  0720               	addwf	0+(??_checkRWByte+0)+0,w
  4315  05D9  00A1               	movwf	(??_checkRWByte+1)+0
  4316  05DA  0821               	movf	(??_checkRWByte+1)+0,w
  4317  05DB  00F8               	movwf	(?i1_eeprom_write)
  4318  05DC  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4319  05DD  0084               	movwf	fsr0
  4320  05DE  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4321  05E3  120A  158A  26EB   	fcall	i1_eeprom_write
              120A  118A         
  4322                           	line	179
  4323                           	
  4324  05E8                     i1l8869:	
  4325                           ;Packet.c: 179: return 1;
  4326  05E8  3001               	movlw	low(01h)
  4327  05E9  00FB               	movwf	(?_checkRWByte)
  4328  05EA  3000               	movlw	high(01h)
  4329  05EB  00FC               	movwf	((?_checkRWByte))+1
  4330  05EC  2DF7               	goto	i1l1608
  4331                           	
  4332  05ED                     i1l8871:	
  4333  05ED  2DF7               	goto	i1l1608
  4334                           	line	180
  4335                           	
  4336  05EE                     i1l1605:	
  4337                           	line	182
  4338                           	
  4339  05EE                     i1l8873:	
  4340                           ;Packet.c: 180: }
  4341                           ;Packet.c: 182: writeByte('N');
  4342  05EE  304E               	movlw	(04Eh)
  4343  05EF  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  4344                           	line	183
  4345                           	
  4346  05F4                     i1l8875:	
  4347                           ;Packet.c: 183: return 0;
  4348  05F4  01FB               	clrf	(?_checkRWByte)
  4349  05F5  01FC               	clrf	(?_checkRWByte+1)
  4350  05F6  2DF7               	goto	i1l1608
  4351                           	
  4352  05F7                     i1l8877:	
  4353                           	line	184
  4354                           	
  4355  05F7                     i1l1608:	
  4356  05F7  0008               	return
  4357                           	opt stack 0
  4358                           GLOBAL	__end_of_checkRWByte
  4359  05F8                     	__end_of_checkRWByte:
  4360 ;; =============== function _checkRWByte ends ============
  4361                           
  4362                           	signat	_checkRWByte,90
  4363                           	global	_checkStartByte
  4364                           psect	text1292,local,class=CODE,delta=2
  4365                           global __ptext1292
  4366  05F8                     __ptext1292:
  4367                           
  4368 ;; *************** function _checkStartByte *****************
  4369 ;; Defined at:
  4370 ;;		line 148 in file "Packet.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;		None
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  2   11[COMMON] int 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4384 ;;      Params:         2       0       0       0       0
  4385 ;;      Locals:         0       0       0       0       0
  4386 ;;      Temps:          0       2       0       0       0
  4387 ;;      Totals:         2       2       0       0       0
  4388 ;;Total ram usage:        4 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:    1
  4391 ;; This function calls:
  4392 ;;		_eeprom_read
  4393 ;;		i1_writeByte
  4394 ;;		i1_eeprom_write
  4395 ;; This function is called by:
  4396 ;;		_validatePacket
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           psect	text1292
  4400                           	file	"Packet.c"
  4401                           	line	148
  4402                           	global	__size_of_checkStartByte
  4403  0060                     	__size_of_checkStartByte	equ	__end_of_checkStartByte-_checkStartByte
  4404                           	
  4405  05F8                     _checkStartByte:	
  4406                           	opt	stack 1
  4407                           ; Regs used in _checkStartByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4408                           	line	151
  4409                           	
  4410  05F8                     i1l8845:	
  4411                           ;Packet.c: 151: if (eeprom_read(startByteAddr) == userStartByte) {
  4412  05F8  3060               	movlw	(_userStartByte-__stringbase)
  4413  05F9  0084               	movwf	fsr0
  4414  05FA  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4415  05FF  1283               	bcf	status, 5	;RP0=0, select bank0
  4416  0600  1303               	bcf	status, 6	;RP1=0, select bank0
  4417  0601  00A0               	movwf	(??_checkStartByte+0)+0
  4418  0602  3054               	movlw	(_startByteAddr-__stringbase)
  4419  0603  0084               	movwf	fsr0
  4420  0604  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4421  0609  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4422  060E  1283               	bcf	status, 5	;RP0=0, select bank0
  4423  060F  1303               	bcf	status, 6	;RP1=0, select bank0
  4424  0610  0620               	xorwf	(??_checkStartByte+0)+0,w
  4425  0611  1D03               	skipz
  4426  0612  2E14               	goto	u321_21
  4427  0613  2E15               	goto	u321_20
  4428  0614                     u321_21:
  4429  0614  2E4E               	goto	i1l8855
  4430  0615                     u321_20:
  4431                           	line	153
  4432                           	
  4433  0615                     i1l8847:	
  4434                           ;Packet.c: 153: writeByte('S');
  4435  0615  3053               	movlw	(053h)
  4436  0616  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  4437                           	line	155
  4438                           	
  4439  061B                     i1l8849:	
  4440                           ;Packet.c: 155: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(star
                                 tByteAddr));
  4441  061B  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4442  061C  0084               	movwf	fsr0
  4443  061D  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4444  0622  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4445  0627  1283               	bcf	status, 5	;RP0=0, select bank0
  4446  0628  1303               	bcf	status, 6	;RP1=0, select bank0
  4447  0629  00A0               	movwf	(??_checkStartByte+0)+0
  4448  062A  3054               	movlw	(_startByteAddr-__stringbase)
  4449  062B  0084               	movwf	fsr0
  4450  062C  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4451  0631  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4452  0636  1283               	bcf	status, 5	;RP0=0, select bank0
  4453  0637  1303               	bcf	status, 6	;RP1=0, select bank0
  4454  0638  0720               	addwf	0+(??_checkStartByte+0)+0,w
  4455  0639  00A1               	movwf	(??_checkStartByte+1)+0
  4456  063A  0821               	movf	(??_checkStartByte+1)+0,w
  4457  063B  00F8               	movwf	(?i1_eeprom_write)
  4458  063C  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4459  063D  0084               	movwf	fsr0
  4460  063E  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4461  0643  120A  158A  26EB   	fcall	i1_eeprom_write
              120A  118A         
  4462                           	line	156
  4463                           	
  4464  0648                     i1l8851:	
  4465                           ;Packet.c: 156: return 1;
  4466  0648  3001               	movlw	low(01h)
  4467  0649  00FB               	movwf	(?_checkStartByte)
  4468  064A  3000               	movlw	high(01h)
  4469  064B  00FC               	movwf	((?_checkStartByte))+1
  4470  064C  2E57               	goto	i1l1602
  4471                           	
  4472  064D                     i1l8853:	
  4473  064D  2E57               	goto	i1l1602
  4474                           	line	157
  4475                           	
  4476  064E                     i1l1601:	
  4477                           	line	159
  4478                           	
  4479  064E                     i1l8855:	
  4480                           ;Packet.c: 157: }
  4481                           ;Packet.c: 159: writeByte('N');
  4482  064E  304E               	movlw	(04Eh)
  4483  064F  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  4484                           	line	160
  4485                           	
  4486  0654                     i1l8857:	
  4487                           ;Packet.c: 160: return 0;
  4488  0654  01FB               	clrf	(?_checkStartByte)
  4489  0655  01FC               	clrf	(?_checkStartByte+1)
  4490  0656  2E57               	goto	i1l1602
  4491                           	
  4492  0657                     i1l8859:	
  4493                           	line	161
  4494                           	
  4495  0657                     i1l1602:	
  4496  0657  0008               	return
  4497                           	opt stack 0
  4498                           GLOBAL	__end_of_checkStartByte
  4499  0658                     	__end_of_checkStartByte:
  4500 ;; =============== function _checkStartByte ends ============
  4501                           
  4502                           	signat	_checkStartByte,90
  4503                           	global	_checkDataFrames
  4504                           psect	text1293,local,class=CODE,delta=2
  4505                           global __ptext1293
  4506  02BF                     __ptext1293:
  4507                           
  4508 ;; *************** function _checkDataFrames *****************
  4509 ;; Defined at:
  4510 ;;		line 85 in file "Packet.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  2    2[COMMON] int 
  4517 ;; Registers used:
  4518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4524 ;;      Params:         2       0       0       0       0
  4525 ;;      Locals:         0       0       0       0       0
  4526 ;;      Temps:          6       0       0       0       0
  4527 ;;      Totals:         8       0       0       0       0
  4528 ;;Total ram usage:        8 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    1
  4531 ;; This function calls:
  4532 ;;		_eeprom_read
  4533 ;;		i1_writeByte
  4534 ;; This function is called by:
  4535 ;;		_validatePacket
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           psect	text1293
  4539                           	file	"Packet.c"
  4540                           	line	85
  4541                           	global	__size_of_checkDataFrames
  4542  009A                     	__size_of_checkDataFrames	equ	__end_of_checkDataFrames-_checkDataFrames
  4543                           	
  4544  02BF                     _checkDataFrames:	
  4545                           	opt	stack 1
  4546                           ; Regs used in _checkDataFrames: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4547                           	line	87
  4548                           	
  4549  02BF                     i1l8519:	
  4550                           ;Packet.c: 87: if(eeprom_read(lenByteAddr) == 0 && (eeprom_read(RXLenAddr)-noDataLen) ==
                                  0){
  4551  02BF  304D               	movlw	(_lenByteAddr-__stringbase)
  4552  02C0  0084               	movwf	fsr0
  4553  02C1  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4554  02C6  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4555  02CB  3800               	iorlw	0
  4556  02CC  1D03               	skipz
  4557  02CD  2ACF               	goto	u285_21
  4558  02CE  2AD0               	goto	u285_20
  4559  02CF                     u285_21:
  4560  02CF  2B03               	goto	i1l8531
  4561  02D0                     u285_20:
  4562                           	
  4563  02D0                     i1l8521:	
  4564  02D0  3051               	movlw	(_noDataLen-__stringbase)
  4565  02D1  0084               	movwf	fsr0
  4566  02D2  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4567  02D7  00F4               	movwf	(??_checkDataFrames+0)+0
  4568  02D8  01F5               	clrf	(??_checkDataFrames+0)+0+1
  4569  02D9  09F4               	comf	(??_checkDataFrames+0)+0,f
  4570  02DA  09F5               	comf	(??_checkDataFrames+0)+1,f
  4571  02DB  0AF4               	incf	(??_checkDataFrames+0)+0,f
  4572  02DC  1903               	skipnz
  4573  02DD  0AF5               	incf	(??_checkDataFrames+0)+1,f
  4574  02DE  3040               	movlw	(_RXLenAddr-__stringbase)
  4575  02DF  0084               	movwf	fsr0
  4576  02E0  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4577  02E5  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4578  02EA  0774               	addwf	0+(??_checkDataFrames+0)+0,w
  4579  02EB  00F6               	movwf	(??_checkDataFrames+2)+0
  4580  02EC  0875               	movf	1+(??_checkDataFrames+0)+0,w
  4581  02ED  1803               	skipnc
  4582  02EE  0A75               	incf	1+(??_checkDataFrames+0)+0,w
  4583  02EF  00F7               	movwf	((??_checkDataFrames+2)+0)+1
  4584  02F0  0877               	movf	1+(??_checkDataFrames+2)+0,w
  4585  02F1  0476               	iorwf	0+(??_checkDataFrames+2)+0,w
  4586  02F2  1D03               	skipz
  4587  02F3  2AF5               	goto	u286_21
  4588  02F4  2AF6               	goto	u286_20
  4589  02F5                     u286_21:
  4590  02F5  2B03               	goto	i1l8531
  4591  02F6                     u286_20:
  4592                           	line	89
  4593                           	
  4594  02F6                     i1l8523:	
  4595                           ;Packet.c: 89: writeByte('D');
  4596  02F6  3044               	movlw	(044h)
  4597  02F7  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  4598                           	line	90
  4599                           	
  4600  02FC                     i1l8525:	
  4601                           ;Packet.c: 90: return 1;
  4602  02FC  3001               	movlw	low(01h)
  4603  02FD  00F2               	movwf	(?_checkDataFrames)
  4604  02FE  3000               	movlw	high(01h)
  4605  02FF  00F3               	movwf	((?_checkDataFrames))+1
  4606  0300  2B58               	goto	i1l1589
  4607                           	
  4608  0301                     i1l8527:	
  4609  0301  2B58               	goto	i1l1589
  4610                           	line	94
  4611                           	
  4612  0302                     i1l8529:	
  4613                           ;Packet.c: 94: }else if((eeprom_read(RXLenAddr) - noDataLen) == (eeprom_read(lenByteAddr
                                 )*2)){
  4614  0302  2B4F               	goto	i1l8539
  4615                           	
  4616  0303                     i1l1588:	
  4617                           	
  4618  0303                     i1l8531:	
  4619  0303  304D               	movlw	(_lenByteAddr-__stringbase)
  4620  0304  0084               	movwf	fsr0
  4621  0305  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4622  030A  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4623  030F  00F4               	movwf	(??_checkDataFrames+0)+0
  4624  0310  01F5               	clrf	(??_checkDataFrames+0)+0+1
  4625  0311  3001               	movlw	01h
  4626  0312  00FF               	movwf	btemp+1
  4627  0313                     u287_25:
  4628  0313  1003               	clrc
  4629  0314  0DF4               	rlf	(??_checkDataFrames+0)+0,f
  4630  0315  0DF5               	rlf	(??_checkDataFrames+0)+1,f
  4631  0316  0BFF               	decfsz	btemp+1,f
  4632  0317  2B13               	goto	u287_25
  4633  0318  3051               	movlw	(_noDataLen-__stringbase)
  4634  0319  0084               	movwf	fsr0
  4635  031A  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4636  031F  00F6               	movwf	(??_checkDataFrames+2)+0
  4637  0320  01F7               	clrf	(??_checkDataFrames+2)+0+1
  4638  0321  09F6               	comf	(??_checkDataFrames+2)+0,f
  4639  0322  09F7               	comf	(??_checkDataFrames+2)+1,f
  4640  0323  0AF6               	incf	(??_checkDataFrames+2)+0,f
  4641  0324  1903               	skipnz
  4642  0325  0AF7               	incf	(??_checkDataFrames+2)+1,f
  4643  0326  3040               	movlw	(_RXLenAddr-__stringbase)
  4644  0327  0084               	movwf	fsr0
  4645  0328  120A  118A  2363   	fcall	stringdir
              120A  118A         
  4646  032D  120A  158A  2628   	fcall	_eeprom_read
              120A  118A         
  4647  0332  0776               	addwf	0+(??_checkDataFrames+2)+0,w
  4648  0333  00F8               	movwf	(??_checkDataFrames+4)+0
  4649  0334  0877               	movf	1+(??_checkDataFrames+2)+0,w
  4650  0335  1803               	skipnc
  4651  0336  0A77               	incf	1+(??_checkDataFrames+2)+0,w
  4652  0337  00F9               	movwf	((??_checkDataFrames+4)+0)+1
  4653  0338  0875               	movf	1+(??_checkDataFrames+0)+0,w
  4654  0339  0679               	xorwf	1+(??_checkDataFrames+4)+0,w
  4655  033A  1D03               	skipz
  4656  033B  2B3E               	goto	u288_25
  4657  033C  0874               	movf	0+(??_checkDataFrames+0)+0,w
  4658  033D  0678               	xorwf	0+(??_checkDataFrames+4)+0,w
  4659  033E                     u288_25:
  4660                           
  4661  033E  1D03               	skipz
  4662  033F  2B41               	goto	u288_21
  4663  0340  2B42               	goto	u288_20
  4664  0341                     u288_21:
  4665  0341  2B4F               	goto	i1l8539
  4666  0342                     u288_20:
  4667                           	line	96
  4668                           	
  4669  0342                     i1l8533:	
  4670                           ;Packet.c: 96: writeByte('D');
  4671  0342  3044               	movlw	(044h)
  4672  0343  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  4673                           	line	97
  4674                           	
  4675  0348                     i1l8535:	
  4676                           ;Packet.c: 97: return 1;
  4677  0348  3001               	movlw	low(01h)
  4678  0349  00F2               	movwf	(?_checkDataFrames)
  4679  034A  3000               	movlw	high(01h)
  4680  034B  00F3               	movwf	((?_checkDataFrames))+1
  4681  034C  2B58               	goto	i1l1589
  4682                           	
  4683  034D                     i1l8537:	
  4684  034D  2B58               	goto	i1l1589
  4685                           	line	98
  4686                           	
  4687  034E                     i1l1591:	
  4688  034E  2B4F               	goto	i1l8539
  4689                           	line	101
  4690                           	
  4691  034F                     i1l1590:	
  4692                           	
  4693  034F                     i1l8539:	
  4694                           ;Packet.c: 98: }
  4695                           ;Packet.c: 101: writeByte('N');
  4696  034F  304E               	movlw	(04Eh)
  4697  0350  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  4698                           	line	102
  4699                           	
  4700  0355                     i1l8541:	
  4701                           ;Packet.c: 102: return 0;
  4702  0355  01F2               	clrf	(?_checkDataFrames)
  4703  0356  01F3               	clrf	(?_checkDataFrames+1)
  4704  0357  2B58               	goto	i1l1589
  4705                           	
  4706  0358                     i1l8543:	
  4707                           	line	103
  4708                           	
  4709  0358                     i1l1589:	
  4710  0358  0008               	return
  4711                           	opt stack 0
  4712                           GLOBAL	__end_of_checkDataFrames
  4713  0359                     	__end_of_checkDataFrames:
  4714 ;; =============== function _checkDataFrames ends ============
  4715                           
  4716                           	signat	_checkDataFrames,90
  4717                           	global	_checkLength
  4718                           psect	text1294,local,class=CODE,delta=2
  4719                           global __ptext1294
  4720  0EBC                     __ptext1294:
  4721                           
  4722 ;; *************** function _checkLength *****************
  4723 ;; Defined at:
  4724 ;;		line 64 in file "Packet.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;		None
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;		None
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  2    2[COMMON] int 
  4731 ;; Registers used:
  4732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4738 ;;      Params:         2       0       0       0       0
  4739 ;;      Locals:         0       0       0       0       0
  4740 ;;      Temps:          1       0       0       0       0
  4741 ;;      Totals:         3       0       0       0       0
  4742 ;;Total ram usage:        3 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:    1
  4745 ;; This function calls:
  4746 ;;		_eeprom_read
  4747 ;;		i1_writeByte
  4748 ;; This function is called by:
  4749 ;;		_parsePacket
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           psect	text1294
  4753                           	file	"Packet.c"
  4754                           	line	64
  4755                           	global	__size_of_checkLength
  4756  002F                     	__size_of_checkLength	equ	__end_of_checkLength-_checkLength
  4757                           	
  4758  0EBC                     _checkLength:	
  4759                           	opt	stack 1
  4760                           ; Regs used in _checkLength: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4761                           	line	67
  4762                           	
  4763  0EBC                     i1l8505:	
  4764                           ;Packet.c: 67: if (eeprom_read(RXLenAddr) >= minSizeByte) {
  4765  0EBC  3040               	movlw	(_RXLenAddr-__stringbase)
  4766  0EBD  0084               	movwf	fsr0
  4767  0EBE  120A  118A  2363   	fcall	stringdir
              120A  158A         
  4768  0EC3  120A  158A  2628   	fcall	_eeprom_read
              120A  158A         
  4769  0EC8  00F4               	movwf	(??_checkLength+0)+0
  4770  0EC9  304F               	movlw	(_minSizeByte-__stringbase)
  4771  0ECA  0084               	movwf	fsr0
  4772  0ECB  120A  118A  2363   	fcall	stringdir
              120A  158A         
  4773  0ED0  0274               	subwf	0+(??_checkLength+0)+0,w
  4774  0ED1  1C03               	skipc
  4775  0ED2  2ED4               	goto	u284_21
  4776  0ED3  2ED5               	goto	u284_20
  4777  0ED4                     u284_21:
  4778  0ED4  2EE1               	goto	i1l8513
  4779  0ED5                     u284_20:
  4780                           	line	69
  4781                           	
  4782  0ED5                     i1l8507:	
  4783                           ;Packet.c: 69: writeByte('L');
  4784  0ED5  304C               	movlw	(04Ch)
  4785  0ED6  120A  158A  259F   	fcall	i1_writeByte
              120A  158A         
  4786                           	line	70
  4787                           	
  4788  0EDB                     i1l8509:	
  4789                           ;Packet.c: 70: return 1;
  4790  0EDB  3001               	movlw	low(01h)
  4791  0EDC  00F2               	movwf	(?_checkLength)
  4792  0EDD  3000               	movlw	high(01h)
  4793  0EDE  00F3               	movwf	((?_checkLength))+1
  4794  0EDF  2EEA               	goto	i1l1585
  4795                           	
  4796  0EE0                     i1l8511:	
  4797  0EE0  2EEA               	goto	i1l1585
  4798                           	line	71
  4799                           	
  4800  0EE1                     i1l1584:	
  4801                           	line	73
  4802                           	
  4803  0EE1                     i1l8513:	
  4804                           ;Packet.c: 71: }
  4805                           ;Packet.c: 73: writeByte('N');
  4806  0EE1  304E               	movlw	(04Eh)
  4807  0EE2  120A  158A  259F   	fcall	i1_writeByte
              120A  158A         
  4808                           	line	74
  4809                           	
  4810  0EE7                     i1l8515:	
  4811                           ;Packet.c: 74: return 0;
  4812  0EE7  01F2               	clrf	(?_checkLength)
  4813  0EE8  01F3               	clrf	(?_checkLength+1)
  4814  0EE9  2EEA               	goto	i1l1585
  4815                           	
  4816  0EEA                     i1l8517:	
  4817                           	line	75
  4818                           	
  4819  0EEA                     i1l1585:	
  4820  0EEA  0008               	return
  4821                           	opt stack 0
  4822                           GLOBAL	__end_of_checkLength
  4823  0EEB                     	__end_of_checkLength:
  4824 ;; =============== function _checkLength ends ============
  4825                           
  4826                           	signat	_checkLength,90
  4827                           	global	_checkEven
  4828                           psect	text1295,local,class=CODE,delta=2
  4829                           global __ptext1295
  4830  0E6C                     __ptext1295:
  4831                           
  4832 ;; *************** function _checkEven *****************
  4833 ;; Defined at:
  4834 ;;		line 42 in file "Packet.c"
  4835 ;; Parameters:    Size  Location     Type
  4836 ;;		None
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;		None
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  2    2[COMMON] int 
  4841 ;; Registers used:
  4842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4848 ;;      Params:         2       0       0       0       0
  4849 ;;      Locals:         0       0       0       0       0
  4850 ;;      Temps:          1       0       0       0       0
  4851 ;;      Totals:         3       0       0       0       0
  4852 ;;Total ram usage:        3 bytes
  4853 ;; Hardware stack levels used:    1
  4854 ;; Hardware stack levels required when called:    1
  4855 ;; This function calls:
  4856 ;;		_eeprom_read
  4857 ;;		i1_writeByte
  4858 ;; This function is called by:
  4859 ;;		_parsePacket
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           psect	text1295
  4863                           	file	"Packet.c"
  4864                           	line	42
  4865                           	global	__size_of_checkEven
  4866  0027                     	__size_of_checkEven	equ	__end_of_checkEven-_checkEven
  4867                           	
  4868  0E6C                     _checkEven:	
  4869                           	opt	stack 1
  4870                           ; Regs used in _checkEven: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4871                           	line	45
  4872                           	
  4873  0E6C                     i1l8487:	
  4874                           ;Packet.c: 45: if (eeprom_read(RXLenAddr) % 2 == 0) {
  4875  0E6C  3040               	movlw	(_RXLenAddr-__stringbase)
  4876  0E6D  0084               	movwf	fsr0
  4877  0E6E  120A  118A  2363   	fcall	stringdir
              120A  158A         
  4878  0E73  120A  158A  2628   	fcall	_eeprom_read
              120A  158A         
  4879  0E78  00F4               	movwf	(??_checkEven+0)+0
  4880  0E79  1874               	btfsc	0+(??_checkEven+0)+0,(0)&7
  4881  0E7A  2E7C               	goto	u282_21
  4882  0E7B  2E7D               	goto	u282_20
  4883  0E7C                     u282_21:
  4884  0E7C  2E89               	goto	i1l8495
  4885  0E7D                     u282_20:
  4886                           	line	47
  4887                           	
  4888  0E7D                     i1l8489:	
  4889                           ;Packet.c: 47: writeByte('E');
  4890  0E7D  3045               	movlw	(045h)
  4891  0E7E  120A  158A  259F   	fcall	i1_writeByte
              120A  158A         
  4892                           	line	48
  4893                           	
  4894  0E83                     i1l8491:	
  4895                           ;Packet.c: 48: return 1;
  4896  0E83  3001               	movlw	low(01h)
  4897  0E84  00F2               	movwf	(?_checkEven)
  4898  0E85  3000               	movlw	high(01h)
  4899  0E86  00F3               	movwf	((?_checkEven))+1
  4900  0E87  2E92               	goto	i1l1581
  4901                           	
  4902  0E88                     i1l8493:	
  4903  0E88  2E92               	goto	i1l1581
  4904                           	line	49
  4905                           	
  4906  0E89                     i1l1580:	
  4907                           	line	51
  4908                           	
  4909  0E89                     i1l8495:	
  4910                           ;Packet.c: 49: }
  4911                           ;Packet.c: 51: writeByte('N');
  4912  0E89  304E               	movlw	(04Eh)
  4913  0E8A  120A  158A  259F   	fcall	i1_writeByte
              120A  158A         
  4914                           	line	52
  4915                           	
  4916  0E8F                     i1l8497:	
  4917                           ;Packet.c: 52: return 0;
  4918  0E8F  01F2               	clrf	(?_checkEven)
  4919  0E90  01F3               	clrf	(?_checkEven+1)
  4920  0E91  2E92               	goto	i1l1581
  4921                           	
  4922  0E92                     i1l8499:	
  4923                           	line	53
  4924                           	
  4925  0E92                     i1l1581:	
  4926  0E92  0008               	return
  4927                           	opt stack 0
  4928                           GLOBAL	__end_of_checkEven
  4929  0E93                     	__end_of_checkEven:
  4930 ;; =============== function _checkEven ends ============
  4931                           
  4932                           	signat	_checkEven,90
  4933                           	global	_makeHexByte
  4934                           psect	text1296,local,class=CODE,delta=2
  4935                           global __ptext1296
  4936  0E47                     __ptext1296:
  4937                           
  4938 ;; *************** function _makeHexByte *****************
  4939 ;; Defined at:
  4940 ;;		line 215 in file "Bluetooth.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  nibOne          1    wreg     unsigned char 
  4943 ;;  nibTwo          1   11[COMMON] unsigned char 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  nibOne          1    0[BANK0 ] unsigned char 
  4946 ;;  input_byte      1    1[BANK0 ] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      unsigned char 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0, pclath, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4956 ;;      Params:         1       0       0       0       0
  4957 ;;      Locals:         0       2       0       0       0
  4958 ;;      Temps:          2       0       0       0       0
  4959 ;;      Totals:         3       2       0       0       0
  4960 ;;Total ram usage:        5 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    1
  4963 ;; This function calls:
  4964 ;;		_makeNibble
  4965 ;; This function is called by:
  4966 ;;		_parsePacket
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           psect	text1296
  4970                           	file	"Bluetooth.c"
  4971                           	line	215
  4972                           	global	__size_of_makeHexByte
  4973  0025                     	__size_of_makeHexByte	equ	__end_of_makeHexByte-_makeHexByte
  4974                           	
  4975  0E47                     _makeHexByte:	
  4976                           	opt	stack 1
  4977                           ; Regs used in _makeHexByte: [wreg+status,2+status,0+pclath+cstack]
  4978                           ;makeHexByte@nibOne stored from wreg
  4979                           	line	217
  4980  0E47  1283               	bcf	status, 5	;RP0=0, select bank0
  4981  0E48  1303               	bcf	status, 6	;RP1=0, select bank0
  4982  0E49  00A0               	movwf	(makeHexByte@nibOne)
  4983                           	
  4984  0E4A                     i1l8481:	
  4985                           ;Bluetooth.c: 216: unsigned char input_byte;
  4986                           ;Bluetooth.c: 217: input_byte = (makeNibble(nibOne)<<4);
  4987  0E4A  0820               	movf	(makeHexByte@nibOne),w
  4988  0E4B  120A  158A  25AB   	fcall	_makeNibble
              120A  158A         
  4989  0E50  00FC               	movwf	(??_makeHexByte+0)+0
  4990  0E51  3003               	movlw	(04h)-1
  4991  0E52                     u281_25:
  4992  0E52  1003               	clrc
  4993  0E53  0DFC               	rlf	(??_makeHexByte+0)+0,f
  4994  0E54  3EFF               	addlw	-1
  4995  0E55  1D03               	skipz
  4996  0E56  2E52               	goto	u281_25
  4997  0E57  1003               	clrc
  4998  0E58  0D7C               	rlf	(??_makeHexByte+0)+0,w
  4999  0E59  00FD               	movwf	(??_makeHexByte+1)+0
  5000  0E5A  087D               	movf	(??_makeHexByte+1)+0,w
  5001  0E5B  1283               	bcf	status, 5	;RP0=0, select bank0
  5002  0E5C  1303               	bcf	status, 6	;RP1=0, select bank0
  5003  0E5D  00A1               	movwf	(makeHexByte@input_byte)
  5004                           	line	218
  5005                           ;Bluetooth.c: 218: input_byte|= makeNibble(nibTwo);
  5006  0E5E  087B               	movf	(makeHexByte@nibTwo),w
  5007  0E5F  120A  158A  25AB   	fcall	_makeNibble
              120A  158A         
  5008  0E64  00FC               	movwf	(??_makeHexByte+0)+0
  5009  0E65  087C               	movf	(??_makeHexByte+0)+0,w
  5010  0E66  1283               	bcf	status, 5	;RP0=0, select bank0
  5011  0E67  1303               	bcf	status, 6	;RP1=0, select bank0
  5012  0E68  04A1               	iorwf	(makeHexByte@input_byte),f
  5013                           	line	219
  5014                           	
  5015  0E69                     i1l8483:	
  5016                           ;Bluetooth.c: 219: return input_byte;
  5017  0E69  0821               	movf	(makeHexByte@input_byte),w
  5018  0E6A  2E6B               	goto	i1l803
  5019                           	
  5020  0E6B                     i1l8485:	
  5021                           	line	220
  5022                           	
  5023  0E6B                     i1l803:	
  5024  0E6B  0008               	return
  5025                           	opt stack 0
  5026                           GLOBAL	__end_of_makeHexByte
  5027  0E6C                     	__end_of_makeHexByte:
  5028 ;; =============== function _makeHexByte ends ============
  5029                           
  5030                           	signat	_makeHexByte,8313
  5031                           	global	_readString
  5032                           psect	text1297,local,class=CODE,delta=2
  5033                           global __ptext1297
  5034  0658                     __ptext1297:
  5035                           
  5036 ;; *************** function _readString *****************
  5037 ;; Defined at:
  5038 ;;		line 162 in file "Bluetooth.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  readStorage     1    wreg     PTR unsigned char 
  5041 ;;		 -> getPacket@arrStore(50), 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  readStorage     1    0[BANK0 ] PTR unsigned char 
  5044 ;;		 -> getPacket@arrStore(50), 
  5045 ;;  i               2    1[BANK0 ] unsigned int 
  5046 ;;  ch              1    3[BANK0 ] unsigned char 
  5047 ;; Return value:  Size  Location     Type
  5048 ;;		None               void
  5049 ;; Registers used:
  5050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5056 ;;      Params:         0       0       0       0       0
  5057 ;;      Locals:         0       4       0       0       0
  5058 ;;      Temps:          2       0       0       0       0
  5059 ;;      Totals:         2       4       0       0       0
  5060 ;;Total ram usage:        6 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; Hardware stack levels required when called:    1
  5063 ;; This function calls:
  5064 ;;		_readByte
  5065 ;;		i1_writeByte
  5066 ;;		i1_eeprom_write
  5067 ;; This function is called by:
  5068 ;;		_getPacket
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           psect	text1297
  5072                           	file	"Bluetooth.c"
  5073                           	line	162
  5074                           	global	__size_of_readString
  5075  005B                     	__size_of_readString	equ	__end_of_readString-_readString
  5076                           	
  5077  0658                     _readString:	
  5078                           	opt	stack 2
  5079                           ; Regs used in _readString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5080                           ;readString@readStorage stored from wreg
  5081                           	line	164
  5082  0658  1283               	bcf	status, 5	;RP0=0, select bank0
  5083  0659  1303               	bcf	status, 6	;RP1=0, select bank0
  5084  065A  00A0               	movwf	(readString@readStorage)
  5085                           	
  5086  065B                     i1l8433:	
  5087                           ;Bluetooth.c: 164: unsigned int i = 0;
  5088  065B  01A1               	clrf	(readString@i)
  5089  065C  01A2               	clrf	(readString@i+1)
  5090                           	line	168
  5091                           	
  5092  065D                     i1l8435:	
  5093                           ;Bluetooth.c: 166: unsigned char ch;
  5094                           ;Bluetooth.c: 168: ch = readByte();
  5095  065D  120A  158A  2589   	fcall	_readByte
              120A  118A         
  5096  0662  00FB               	movwf	(??_readString+0)+0
  5097  0663  087B               	movf	(??_readString+0)+0,w
  5098  0664  1283               	bcf	status, 5	;RP0=0, select bank0
  5099  0665  1303               	bcf	status, 6	;RP1=0, select bank0
  5100  0666  00A3               	movwf	(readString@ch)
  5101                           	line	169
  5102                           	
  5103  0667                     i1l8437:	
  5104                           ;Bluetooth.c: 169: writeByte(ch);
  5105  0667  0823               	movf	(readString@ch),w
  5106  0668  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  5107                           	line	171
  5108                           ;Bluetooth.c: 171: while(ch != userEndByte)
  5109  066D  2E91               	goto	i1l8447
  5110                           	
  5111  066E                     i1l794:	
  5112                           	line	174
  5113                           	
  5114  066E                     i1l8439:	
  5115                           ;Bluetooth.c: 172: {
  5116                           ;Bluetooth.c: 174: readStorage[i] = ch;
  5117  066E  1283               	bcf	status, 5	;RP0=0, select bank0
  5118  066F  1303               	bcf	status, 6	;RP1=0, select bank0
  5119  0670  0823               	movf	(readString@ch),w
  5120  0671  00FB               	movwf	(??_readString+0)+0
  5121  0672  0821               	movf	(readString@i),w
  5122  0673  0720               	addwf	(readString@readStorage),w
  5123  0674  00FC               	movwf	(??_readString+1)+0
  5124  0675  087C               	movf	0+(??_readString+1)+0,w
  5125  0676  0084               	movwf	fsr0
  5126  0677  087B               	movf	(??_readString+0)+0,w
  5127  0678  1383               	bcf	status, 7	;select IRP bank0
  5128  0679  0080               	movwf	indf
  5129                           	line	176
  5130                           	
  5131  067A                     i1l8441:	
  5132                           ;Bluetooth.c: 176: i++;
  5133  067A  3001               	movlw	low(01h)
  5134  067B  07A1               	addwf	(readString@i),f
  5135  067C  1803               	skipnc
  5136  067D  0AA2               	incf	(readString@i+1),f
  5137  067E  3000               	movlw	high(01h)
  5138  067F  07A2               	addwf	(readString@i+1),f
  5139                           	line	178
  5140                           	
  5141  0680                     i1l8443:	
  5142                           ;Bluetooth.c: 178: ch = readByte();
  5143  0680  120A  158A  2589   	fcall	_readByte
              120A  118A         
  5144  0685  00FB               	movwf	(??_readString+0)+0
  5145  0686  087B               	movf	(??_readString+0)+0,w
  5146  0687  1283               	bcf	status, 5	;RP0=0, select bank0
  5147  0688  1303               	bcf	status, 6	;RP1=0, select bank0
  5148  0689  00A3               	movwf	(readString@ch)
  5149                           	line	179
  5150                           	
  5151  068A                     i1l8445:	
  5152                           ;Bluetooth.c: 179: writeByte(ch);
  5153  068A  0823               	movf	(readString@ch),w
  5154  068B  120A  158A  259F   	fcall	i1_writeByte
              120A  118A         
  5155  0690  2E91               	goto	i1l8447
  5156                           	line	180
  5157                           	
  5158  0691                     i1l793:	
  5159                           	line	171
  5160                           	
  5161  0691                     i1l8447:	
  5162  0691  305F               	movlw	(_userEndByte-__stringbase)
  5163  0692  0084               	movwf	fsr0
  5164  0693  120A  118A  2363   	fcall	stringdir
              120A  118A         
  5165  0698  00FB               	movwf	(??_readString+0)+0
  5166  0699  1283               	bcf	status, 5	;RP0=0, select bank0
  5167  069A  1303               	bcf	status, 6	;RP1=0, select bank0
  5168  069B  0823               	movf	(readString@ch),w
  5169  069C  067B               	xorwf	(??_readString+0)+0,w
  5170  069D  1D03               	skipz
  5171  069E  2EA0               	goto	u276_21
  5172  069F  2EA1               	goto	u276_20
  5173  06A0                     u276_21:
  5174  06A0  2E6E               	goto	i1l8439
  5175  06A1                     u276_20:
  5176  06A1  2EA2               	goto	i1l8449
  5177                           	
  5178  06A2                     i1l795:	
  5179                           	line	185
  5180                           	
  5181  06A2                     i1l8449:	
  5182                           ;Bluetooth.c: 180: }
  5183                           ;Bluetooth.c: 185: eeprom_write(RXLenAddr,i);
  5184  06A2  0821               	movf	(readString@i),w
  5185  06A3  00FB               	movwf	(??_readString+0)+0
  5186  06A4  087B               	movf	(??_readString+0)+0,w
  5187  06A5  00F8               	movwf	(?i1_eeprom_write)
  5188  06A6  3040               	movlw	(_RXLenAddr-__stringbase)
  5189  06A7  0084               	movwf	fsr0
  5190  06A8  120A  118A  2363   	fcall	stringdir
              120A  118A         
  5191  06AD  120A  158A  26EB   	fcall	i1_eeprom_write
              120A  118A         
  5192                           	line	188
  5193                           	
  5194  06B2                     i1l796:	
  5195  06B2  0008               	return
  5196                           	opt stack 0
  5197                           GLOBAL	__end_of_readString
  5198  06B3                     	__end_of_readString:
  5199 ;; =============== function _readString ends ============
  5200                           
  5201                           	signat	_readString,4216
  5202                           	global	i1_strlen
  5203                           psect	text1298,local,class=CODE,delta=2
  5204                           global __ptext1298
  5205  0F50                     __ptext1298:
  5206                           
  5207 ;; *************** function i1_strlen *****************
  5208 ;; Defined at:
  5209 ;;		line 5 in file "C:\Microchip\HiTech\sources\strlen.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  strlen          2    0[COMMON] PTR const unsigned char 
  5212 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  strlen          2    6[COMMON] PTR const unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  2    0[COMMON] unsigned int 
  5217 ;; Registers used:
  5218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5224 ;;      Params:         2       0       0       0       0
  5225 ;;      Locals:         2       0       0       0       0
  5226 ;;      Temps:          4       0       0       0       0
  5227 ;;      Totals:         8       0       0       0       0
  5228 ;;Total ram usage:        8 bytes
  5229 ;; Hardware stack levels used:    2
  5230 ;; This function calls:
  5231 ;;		Nothing
  5232 ;; This function is called by:
  5233 ;;		_parsePacket
  5234 ;;		i1_writeString
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           psect	text1298
  5238                           	file	"C:\Microchip\HiTech\sources\strlen.c"
  5239                           	line	5
  5240                           	global	__size_ofi1_strlen
  5241  003A                     	__size_ofi1_strlen	equ	__end_ofi1_strlen-i1_strlen
  5242                           	
  5243  0F50                     i1_strlen:	
  5244 ;; using string table level
  5245                           	opt	stack 1
  5246                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5247                           	line	8
  5248                           	
  5249  0F50                     i1l8761:	
  5250  0F50  0871               	movf	(i1strlen@s+1),w
  5251  0F51  01F7               	clrf	(i1strlen@cp+1)
  5252  0F52  07F7               	addwf	(i1strlen@cp+1)
  5253  0F53  0870               	movf	(i1strlen@s),w
  5254  0F54  01F6               	clrf	(i1strlen@cp)
  5255  0F55  07F6               	addwf	(i1strlen@cp)
  5256                           
  5257                           	line	9
  5258  0F56  2F58               	goto	i1l8763
  5259                           	
  5260  0F57                     i1l6708:	
  5261                           	line	10
  5262  0F57  2F58               	goto	i1l8763
  5263                           	
  5264  0F58                     i1l6707:	
  5265                           	line	9
  5266                           	
  5267  0F58                     i1l8763:	
  5268  0F58  0877               	movf	(i1strlen@cp+1),w
  5269  0F59  00F3               	movwf	(??i1_strlen+0)+0+1
  5270  0F5A  0876               	movf	(i1strlen@cp),w
  5271  0F5B  00F2               	movwf	(??i1_strlen+0)+0
  5272  0F5C  3001               	movlw	(01h)
  5273  0F5D  07F6               	addwf	(i1strlen@cp),f
  5274  0F5E  1803               	skipnc
  5275  0F5F  0AF7               	incf	(i1strlen@cp+1),f
  5276  0F60  0873               	movf	1+(??i1_strlen+0)+0,w
  5277  0F61  1283               	bcf	status, 5	;RP0=0, select bank0
  5278  0F62  1303               	bcf	status, 6	;RP1=0, select bank0
  5279  0F63  00FF               	movwf	btemp+1
  5280  0F64  0872               	movf	0+(??i1_strlen+0)+0,w
  5281  0F65  0084               	movwf	fsr0
  5282  0F66  120A  118A  2359   	fcall	stringtab
              120A  158A         
  5283  0F6B  3800               	iorlw	0
  5284  0F6C  1D03               	skipz
  5285  0F6D  2F6F               	goto	u314_21
  5286  0F6E  2F70               	goto	u314_20
  5287  0F6F                     u314_21:
  5288  0F6F  2F58               	goto	i1l8763
  5289  0F70                     u314_20:
  5290  0F70  2F71               	goto	i1l8765
  5291                           	
  5292  0F71                     i1l6709:	
  5293                           	line	11
  5294                           	
  5295  0F71                     i1l8765:	
  5296  0F71  0970               	comf	(i1strlen@s),w
  5297  0F72  00F2               	movwf	(??i1_strlen+0)+0
  5298  0F73  0971               	comf	(i1strlen@s+1),w
  5299  0F74  00F3               	movwf	((??i1_strlen+0)+0+1)
  5300  0F75  0AF2               	incf	(??i1_strlen+0)+0,f
  5301  0F76  1903               	skipnz
  5302  0F77  0AF3               	incf	((??i1_strlen+0)+0+1),f
  5303  0F78  0876               	movf	(i1strlen@cp),w
  5304  0F79  0772               	addwf	0+(??i1_strlen+0)+0,w
  5305  0F7A  00F4               	movwf	(??i1_strlen+2)+0
  5306  0F7B  0877               	movf	(i1strlen@cp+1),w
  5307  0F7C  1803               	skipnc
  5308  0F7D  0A77               	incf	(i1strlen@cp+1),w
  5309  0F7E  0773               	addwf	1+(??i1_strlen+0)+0,w
  5310  0F7F  00F5               	movwf	1+(??i1_strlen+2)+0
  5311  0F80  0874               	movf	0+(??i1_strlen+2)+0,w
  5312  0F81  3EFF               	addlw	low(-1)
  5313  0F82  00F0               	movwf	(?i1_strlen)
  5314  0F83  0875               	movf	1+(??i1_strlen+2)+0,w
  5315  0F84  1803               	skipnc
  5316  0F85  3E01               	addlw	1
  5317  0F86  3EFF               	addlw	high(-1)
  5318  0F87  00F1               	movwf	1+(?i1_strlen)
  5319  0F88  2F89               	goto	i1l6710
  5320                           	
  5321  0F89                     i1l8767:	
  5322                           	line	12
  5323                           	
  5324  0F89                     i1l6710:	
  5325  0F89  0008               	return
  5326                           	opt stack 0
  5327                           GLOBAL	__end_ofi1_strlen
  5328  0F8A                     	__end_ofi1_strlen:
  5329 ;; =============== function i1_strlen ends ============
  5330                           
  5331                           	signat	i1_strlen,90
  5332                           	global	i1_eeprom_write
  5333                           psect	text1299,local,class=CODE,delta=2
  5334                           global __ptext1299
  5335  0EEB                     __ptext1299:
  5336                           
  5337 ;; *************** function i1_eeprom_write *****************
  5338 ;; Defined at:
  5339 ;;		line 7 in file "C:\Microchip\HiTech\sources\eewrite.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  eeprom_write    1    wreg     unsigned char 
  5342 ;;  eeprom_write    1    8[COMMON] unsigned char 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;  eeprom_write    1   10[COMMON] unsigned char 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      unsigned char 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5354 ;;      Params:         1       0       0       0       0
  5355 ;;      Locals:         1       0       0       0       0
  5356 ;;      Temps:          1       0       0       0       0
  5357 ;;      Totals:         3       0       0       0       0
  5358 ;;Total ram usage:        3 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_readString
  5364 ;;		_parsePacket
  5365 ;;		_checkStartByte
  5366 ;;		_checkRWByte
  5367 ;;		_checkCMDByte
  5368 ;;		_addDataToCheckSum
  5369 ;;		_getPacket
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           psect	text1299
  5373                           	file	"C:\Microchip\HiTech\sources\eewrite.c"
  5374                           	line	7
  5375                           	global	__size_ofi1_eeprom_write
  5376  0031                     	__size_ofi1_eeprom_write	equ	__end_ofi1_eeprom_write-i1_eeprom_write
  5377                           	
  5378  0EEB                     i1_eeprom_write:	
  5379                           	opt	stack 1
  5380                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0]
  5381                           ;i1eeprom_write@addr stored from wreg
  5382  0EEB  00FA               	movwf	(i1eeprom_write@addr)
  5383                           	line	8
  5384                           	
  5385  0EEC                     i1l6023:	
  5386  0EEC  2EED               	goto	i1l6024
  5387                           	
  5388  0EED                     i1l6025:	
  5389                           	
  5390  0EED                     i1l6024:	
  5391  0EED  1683               	bsf	status, 5	;RP0=1, select bank3
  5392  0EEE  1703               	bsf	status, 6	;RP1=1, select bank3
  5393  0EEF  188C               	btfsc	(3169/8)^0180h,(3169)&7
  5394  0EF0  2EF2               	goto	u311_21
  5395  0EF1  2EF3               	goto	u311_20
  5396  0EF2                     u311_21:
  5397  0EF2  2EED               	goto	i1l6024
  5398  0EF3                     u311_20:
  5399  0EF3  2EF4               	goto	i1l8741
  5400                           	
  5401  0EF4                     i1l6026:	
  5402                           	
  5403  0EF4                     i1l8741:	
  5404  0EF4  087A               	movf	(i1eeprom_write@addr),w
  5405  0EF5  1283               	bcf	status, 5	;RP0=0, select bank2
  5406  0EF6  1703               	bsf	status, 6	;RP1=1, select bank2
  5407  0EF7  008D               	movwf	(269)^0100h	;volatile
  5408  0EF8  0878               	movf	(i1eeprom_write@value),w
  5409  0EF9  008C               	movwf	(268)^0100h	;volatile
  5410                           	
  5411  0EFA                     i1l8743:	
  5412  0EFA  303F               	movlw	(03Fh)
  5413  0EFB  00F9               	movwf	(??i1_eeprom_write+0)+0
  5414  0EFC  0879               	movf	(??i1_eeprom_write+0)+0,w
  5415  0EFD  1683               	bsf	status, 5	;RP0=1, select bank3
  5416  0EFE  1703               	bsf	status, 6	;RP1=1, select bank3
  5417  0EFF  058C               	andwf	(396)^0180h,f	;volatile
  5418                           	
  5419  0F00                     i1l8745:	
  5420  0F00  1283               	bcf	status, 5	;RP0=0, select bank0
  5421  0F01  1303               	bcf	status, 6	;RP1=0, select bank0
  5422  0F02  1003               	bcf	(24/8),(24)&7
  5423                           	
  5424  0F03                     i1l8747:	
  5425  0F03  1F8B               	btfss	(95/8),(95)&7
  5426  0F04  2F06               	goto	u312_21
  5427  0F05  2F07               	goto	u312_20
  5428  0F06                     u312_21:
  5429  0F06  2F08               	goto	i1l6027
  5430  0F07                     u312_20:
  5431                           	
  5432  0F07                     i1l8749:	
  5433  0F07  1403               	bsf	(24/8),(24)&7
  5434                           	
  5435  0F08                     i1l6027:	
  5436  0F08  138B               	bcf	(95/8),(95)&7
  5437  0F09  1683               	bsf	status, 5	;RP0=1, select bank3
  5438  0F0A  1703               	bsf	status, 6	;RP1=1, select bank3
  5439  0F0B  150C               	bsf	(3170/8)^0180h,(3170)&7
  5440                           	
  5441  0F0C                     i1l8751:	
  5442  0F0C  3055               	movlw	(055h)
  5443  0F0D  008D               	movwf	(397)^0180h	;volatile
  5444  0F0E  30AA               	movlw	(0AAh)
  5445  0F0F  008D               	movwf	(397)^0180h	;volatile
  5446                           	
  5447  0F10                     i1l8753:	
  5448  0F10  148C               	bsf	(3169/8)^0180h,(3169)&7
  5449                           	
  5450  0F11                     i1l8755:	
  5451  0F11  110C               	bcf	(3170/8)^0180h,(3170)&7
  5452                           	
  5453  0F12                     i1l8757:	
  5454  0F12  1283               	bcf	status, 5	;RP0=0, select bank0
  5455  0F13  1303               	bcf	status, 6	;RP1=0, select bank0
  5456  0F14  1C03               	btfss	(24/8),(24)&7
  5457  0F15  2F17               	goto	u313_21
  5458  0F16  2F18               	goto	u313_20
  5459  0F17                     u313_21:
  5460  0F17  2F1B               	goto	i1l6030
  5461  0F18                     u313_20:
  5462                           	
  5463  0F18                     i1l8759:	
  5464  0F18  178B               	bsf	(95/8),(95)&7
  5465  0F19  2F1B               	goto	i1l6030
  5466                           	
  5467  0F1A                     i1l6028:	
  5468  0F1A  2F1B               	goto	i1l6030
  5469                           	
  5470  0F1B                     i1l6029:	
  5471                           	line	10
  5472                           ;	Return value of i1_eeprom_write is never used
  5473                           	
  5474  0F1B                     i1l6030:	
  5475  0F1B  0008               	return
  5476                           	opt stack 0
  5477                           GLOBAL	__end_ofi1_eeprom_write
  5478  0F1C                     	__end_ofi1_eeprom_write:
  5479 ;; =============== function i1_eeprom_write ends ============
  5480                           
  5481                           	signat	i1_eeprom_write,89
  5482                           	global	i1_writeByte
  5483                           psect	text1300,local,class=CODE,delta=2
  5484                           global __ptext1300
  5485  0D9F                     __ptext1300:
  5486                           
  5487 ;; *************** function i1_writeByte *****************
  5488 ;; Defined at:
  5489 ;;		line 74 in file "Bluetooth.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  writeByte       1    wreg     unsigned char 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  writeByte       1    0[COMMON] unsigned char 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;		None               void
  5496 ;; Registers used:
  5497 ;;		wreg
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5503 ;;      Params:         0       0       0       0       0
  5504 ;;      Locals:         1       0       0       0       0
  5505 ;;      Temps:          0       0       0       0       0
  5506 ;;      Totals:         1       0       0       0       0
  5507 ;;Total ram usage:        1 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; This function calls:
  5510 ;;		Nothing
  5511 ;; This function is called by:
  5512 ;;		_readString
  5513 ;;		_checkEven
  5514 ;;		_checkLength
  5515 ;;		_checkDataFrames
  5516 ;;		_checkStartByte
  5517 ;;		_checkRWByte
  5518 ;;		_checkCMDByte
  5519 ;;		_checkCS
  5520 ;;		_getPacket
  5521 ;;		_readCommands
  5522 ;;		i1_writeString
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           psect	text1300
  5526                           	file	"Bluetooth.c"
  5527                           	line	74
  5528                           	global	__size_ofi1_writeByte
  5529  000C                     	__size_ofi1_writeByte	equ	__end_ofi1_writeByte-i1_writeByte
  5530                           	
  5531  0D9F                     i1_writeByte:	
  5532                           	opt	stack 1
  5533                           ; Regs used in i1_writeByte: [wreg]
  5534                           ;i1writeByte@Byte stored from wreg
  5535  0D9F  00F0               	movwf	(i1writeByte@Byte)
  5536                           	line	78
  5537                           	
  5538  0DA0                     i1l8727:	
  5539                           ;Bluetooth.c: 78: while(!TXIF);
  5540  0DA0  2DA1               	goto	i1l772
  5541                           	
  5542  0DA1                     i1l773:	
  5543                           	
  5544  0DA1                     i1l772:	
  5545  0DA1  1283               	bcf	status, 5	;RP0=0, select bank0
  5546  0DA2  1303               	bcf	status, 6	;RP1=0, select bank0
  5547  0DA3  1E0C               	btfss	(100/8),(100)&7
  5548  0DA4  2DA6               	goto	u309_21
  5549  0DA5  2DA7               	goto	u309_20
  5550  0DA6                     u309_21:
  5551  0DA6  2DA1               	goto	i1l772
  5552  0DA7                     u309_20:
  5553  0DA7  2DA8               	goto	i1l8729
  5554                           	
  5555  0DA8                     i1l774:	
  5556                           	line	81
  5557                           	
  5558  0DA8                     i1l8729:	
  5559                           ;Bluetooth.c: 81: TXREG = Byte;
  5560  0DA8  0870               	movf	(i1writeByte@Byte),w
  5561  0DA9  0099               	movwf	(25)	;volatile
  5562                           	line	82
  5563                           	
  5564  0DAA                     i1l775:	
  5565  0DAA  0008               	return
  5566                           	opt stack 0
  5567                           GLOBAL	__end_ofi1_writeByte
  5568  0DAB                     	__end_ofi1_writeByte:
  5569 ;; =============== function i1_writeByte ends ============
  5570                           
  5571                           	signat	i1_writeByte,88
  5572                           	global	_writeCommands
  5573                           psect	text1301,local,class=CODE,delta=2
  5574                           global __ptext1301
  5575  07FF                     __ptext1301:
  5576                           
  5577 ;; *************** function _writeCommands *****************
  5578 ;; Defined at:
  5579 ;;		line 71 in file "Command.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;		None
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;		None               void
  5586 ;; Registers used:
  5587 ;;		None
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5593 ;;      Params:         0       0       0       0       0
  5594 ;;      Locals:         0       0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0
  5596 ;;      Totals:         0       0       0       0       0
  5597 ;;Total ram usage:        0 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		_getPacket
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           psect	text1301
  5606                           	file	"Command.c"
  5607                           	line	71
  5608                           	global	__size_of_writeCommands
  5609  0001                     	__size_of_writeCommands	equ	__end_of_writeCommands-_writeCommands
  5610                           	
  5611  07FF                     _writeCommands:	
  5612                           	opt	stack 3
  5613                           ; Regs used in _writeCommands: []
  5614                           	line	75
  5615                           	
  5616  07FF                     i1l4791:	
  5617  07FF  0008               	return
  5618                           	opt stack 0
  5619                           GLOBAL	__end_of_writeCommands
  5620  0800                     	__end_of_writeCommands:
  5621 ;; =============== function _writeCommands ends ============
  5622                           
  5623                           	signat	_writeCommands,88
  5624                           	global	_eeprom_read
  5625                           psect	text1302,local,class=CODE,delta=2
  5626                           global __ptext1302
  5627  0E28                     __ptext1302:
  5628                           
  5629 ;; *************** function _eeprom_read *****************
  5630 ;; Defined at:
  5631 ;;		line 7 in file "eeread.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  addr            1    wreg     unsigned char 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  addr            1    1[COMMON] unsigned char 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      unsigned char 
  5638 ;; Registers used:
  5639 ;;		wreg, status,2, status,0
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5645 ;;      Params:         0       0       0       0       0
  5646 ;;      Locals:         1       0       0       0       0
  5647 ;;      Temps:          1       0       0       0       0
  5648 ;;      Totals:         2       0       0       0       0
  5649 ;;Total ram usage:        2 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_checkEven
  5655 ;;		_checkLength
  5656 ;;		_checkDataFrames
  5657 ;;		_parsePacket
  5658 ;;		_checkStartByte
  5659 ;;		_checkRWByte
  5660 ;;		_checkCMDByte
  5661 ;;		_checkCS
  5662 ;;		_addDataToCheckSum
  5663 ;;		_getPacket
  5664 ;;		_readCommands
  5665 ;;		_displayPacket
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           psect	text1302
  5669                           	file	"C:\Microchip\HiTech\sources\eeread.c"
  5670                           	line	7
  5671                           	global	__size_of_eeprom_read
  5672  001F                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
  5673                           	
  5674  0E28                     _eeprom_read:	
  5675                           	opt	stack 2
  5676                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5677                           ;eeprom_read@addr stored from wreg
  5678                           	line	9
  5679  0E28  00F1               	movwf	(eeprom_read@addr)
  5680                           	line	8
  5681                           	
  5682  0E29                     i1l5406:	
  5683                           	line	9
  5684                           # 9 "C:\Microchip\HiTech\sources\eeread.c"
  5685  0E29  0064               clrwdt ;#
  5686                           psect	text1302
  5687                           	line	10
  5688  0E2A  1683               	bsf	status, 5	;RP0=1, select bank3
  5689  0E2B  1703               	bsf	status, 6	;RP1=1, select bank3
  5690  0E2C  188C               	btfsc	(3169/8)^0180h,(3169)&7
  5691  0E2D  2E2F               	goto	u283_21
  5692  0E2E  2E30               	goto	u283_20
  5693  0E2F                     u283_21:
  5694  0E2F  2E29               	goto	i1l5406
  5695  0E30                     u283_20:
  5696  0E30  2E31               	goto	i1l8501
  5697                           	
  5698  0E31                     i1l5407:	
  5699                           	line	11
  5700                           	
  5701  0E31                     i1l8501:	
  5702  0E31  0871               	movf	(eeprom_read@addr),w
  5703  0E32  1283               	bcf	status, 5	;RP0=0, select bank2
  5704  0E33  1703               	bsf	status, 6	;RP1=1, select bank2
  5705  0E34  008D               	movwf	(269)^0100h	;volatile
  5706  0E35  303F               	movlw	(03Fh)
  5707  0E36  00F0               	movwf	(??_eeprom_read+0)+0
  5708  0E37  0870               	movf	(??_eeprom_read+0)+0,w
  5709  0E38  1683               	bsf	status, 5	;RP0=1, select bank3
  5710  0E39  1703               	bsf	status, 6	;RP1=1, select bank3
  5711  0E3A  058C               	andwf	(396)^0180h,f	;volatile
  5712  0E3B  140C               	bsf	(3168/8)^0180h,(3168)&7
  5713  0E3C  1003               	clrc
  5714  0E3D  180C               	btfsc	(3168/8)^0180h,(3168)&7
  5715  0E3E  1403               	setc
  5716  0E3F  3000               	movlw	0
  5717  0E40  1803               	skipnc
  5718  0E41  3001               	movlw	1
  5719                           
  5720  0E42  1283               	bcf	status, 5	;RP0=0, select bank2
  5721  0E43  1703               	bsf	status, 6	;RP1=1, select bank2
  5722  0E44  080C               	movf	(268)^0100h,w	;volatile
  5723  0E45  2E46               	goto	i1l5408
  5724                           	
  5725  0E46                     i1l8503:	
  5726                           	line	12
  5727                           	
  5728  0E46                     i1l5408:	
  5729  0E46  0008               	return
  5730                           	opt stack 0
  5731                           GLOBAL	__end_of_eeprom_read
  5732  0E47                     	__end_of_eeprom_read:
  5733 ;; =============== function _eeprom_read ends ============
  5734                           
  5735                           	signat	_eeprom_read,4217
  5736                           	global	_makeNibble
  5737                           psect	text1303,local,class=CODE,delta=2
  5738                           global __ptext1303
  5739  0DAB                     __ptext1303:
  5740                           
  5741 ;; *************** function _makeNibble *****************
  5742 ;; Defined at:
  5743 ;;		line 199 in file "Bluetooth.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  tempNib         1    wreg     unsigned char 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  tempNib         1    0[COMMON] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      unsigned char 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5757 ;;      Params:         0       0       0       0       0
  5758 ;;      Locals:         1       0       0       0       0
  5759 ;;      Temps:          0       0       0       0       0
  5760 ;;      Totals:         1       0       0       0       0
  5761 ;;Total ram usage:        1 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; This function calls:
  5764 ;;		Nothing
  5765 ;; This function is called by:
  5766 ;;		_makeHexByte
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           psect	text1303
  5770                           	file	"Bluetooth.c"
  5771                           	line	199
  5772                           	global	__size_of_makeNibble
  5773  000F                     	__size_of_makeNibble	equ	__end_of_makeNibble-_makeNibble
  5774                           	
  5775  0DAB                     _makeNibble:	
  5776                           	opt	stack 1
  5777                           ; Regs used in _makeNibble: [wreg+status,2+status,0]
  5778                           ;makeNibble@tempNib stored from wreg
  5779  0DAB  00F0               	movwf	(makeNibble@tempNib)
  5780                           	line	200
  5781                           	
  5782  0DAC                     i1l8471:	
  5783                           ;Bluetooth.c: 200: if(tempNib>='A'){
  5784  0DAC  3041               	movlw	(041h)
  5785  0DAD  0270               	subwf	(makeNibble@tempNib),w
  5786  0DAE  1C03               	skipc
  5787  0DAF  2DB1               	goto	u280_21
  5788  0DB0  2DB2               	goto	u280_20
  5789  0DB1                     u280_21:
  5790  0DB1  2DB6               	goto	i1l8477
  5791  0DB2                     u280_20:
  5792                           	line	201
  5793                           	
  5794  0DB2                     i1l8473:	
  5795                           ;Bluetooth.c: 201: return ((tempNib - (unsigned char)'A')+10);
  5796  0DB2  0870               	movf	(makeNibble@tempNib),w
  5797  0DB3  3EC9               	addlw	0C9h
  5798  0DB4  2DB9               	goto	i1l800
  5799                           	
  5800  0DB5                     i1l8475:	
  5801  0DB5  2DB9               	goto	i1l800
  5802                           	line	202
  5803                           	
  5804  0DB6                     i1l799:	
  5805                           	line	203
  5806                           	
  5807  0DB6                     i1l8477:	
  5808                           ;Bluetooth.c: 202: }
  5809                           ;Bluetooth.c: 203: return (tempNib - '0');
  5810  0DB6  0870               	movf	(makeNibble@tempNib),w
  5811  0DB7  3ED0               	addlw	0D0h
  5812  0DB8  2DB9               	goto	i1l800
  5813                           	
  5814  0DB9                     i1l8479:	
  5815                           	line	204
  5816                           	
  5817  0DB9                     i1l800:	
  5818  0DB9  0008               	return
  5819                           	opt stack 0
  5820                           GLOBAL	__end_of_makeNibble
  5821  0DBA                     	__end_of_makeNibble:
  5822 ;; =============== function _makeNibble ends ============
  5823                           
  5824                           	signat	_makeNibble,4217
  5825                           	global	_readByte
  5826                           psect	text1304,local,class=CODE,delta=2
  5827                           global __ptext1304
  5828  0D89                     __ptext1304:
  5829                           
  5830 ;; *************** function _readByte *****************
  5831 ;; Defined at:
  5832 ;;		line 92 in file "Bluetooth.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;		None
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;		None
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  1    wreg      unsigned char 
  5839 ;; Registers used:
  5840 ;;		wreg
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5846 ;;      Params:         0       0       0       0       0
  5847 ;;      Locals:         0       0       0       0       0
  5848 ;;      Temps:          0       0       0       0       0
  5849 ;;      Totals:         0       0       0       0       0
  5850 ;;Total ram usage:        0 bytes
  5851 ;; Hardware stack levels used:    1
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_readString
  5856 ;;		_echoBack
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           psect	text1304
  5860                           	file	"Bluetooth.c"
  5861                           	line	92
  5862                           	global	__size_of_readByte
  5863  000B                     	__size_of_readByte	equ	__end_of_readByte-_readByte
  5864                           	
  5865  0D89                     _readByte:	
  5866                           	opt	stack 2
  5867                           ; Regs used in _readByte: [wreg]
  5868                           	line	97
  5869                           	
  5870  0D89                     i1l8413:	
  5871                           ;Bluetooth.c: 97: while(!RCIF);
  5872  0D89  2D8A               	goto	i1l778
  5873                           	
  5874  0D8A                     i1l779:	
  5875                           	
  5876  0D8A                     i1l778:	
  5877  0D8A  1283               	bcf	status, 5	;RP0=0, select bank0
  5878  0D8B  1303               	bcf	status, 6	;RP1=0, select bank0
  5879  0D8C  1E8C               	btfss	(101/8),(101)&7
  5880  0D8D  2D8F               	goto	u274_21
  5881  0D8E  2D90               	goto	u274_20
  5882  0D8F                     u274_21:
  5883  0D8F  2D8A               	goto	i1l778
  5884  0D90                     u274_20:
  5885  0D90  2D91               	goto	i1l8415
  5886                           	
  5887  0D91                     i1l780:	
  5888                           	line	106
  5889                           	
  5890  0D91                     i1l8415:	
  5891                           ;Bluetooth.c: 106: return RCREG;
  5892  0D91  081A               	movf	(26),w	;volatile
  5893  0D92  2D93               	goto	i1l781
  5894                           	
  5895  0D93                     i1l8417:	
  5896                           	line	109
  5897                           	
  5898  0D93                     i1l781:	
  5899  0D93  0008               	return
  5900                           	opt stack 0
  5901                           GLOBAL	__end_of_readByte
  5902  0D94                     	__end_of_readByte:
  5903 ;; =============== function _readByte ends ============
  5904                           
  5905                           	signat	_readByte,89
  5906                           psect	text1305,local,class=CODE,delta=2
  5907                           global __ptext1305
  5908  0000                     __ptext1305:
  5909                           	global	btemp
  5910  007E                     	btemp set 07Eh
  5911                           
  5912                           	DABS	1,126,2	;btemp
  5913                           	global	wtemp0
  5914  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Dec 14 16:41:44 2013

                         pc 0002                          _RD 0C60                          _WR 0C61  
                        fsr 0004                 _userEndByte 03C7                         l772 0DBE  
                       l773 0DBE                         l774 0DC4                         l790 07C8  
                       l775 0DCA                         l769 0DDC                         l787 07AA  
                       l788 078E                         l789 07C2                         _GIE 005F  
                       _isr 0E0B                         fsr0 0004                         indf 0000  
       __end_ofi1_writeByte 0DAB            ?_checkDataFrames 0072                        l2410 0591  
                      l2404 0EA5                        l2405 0EA5                        l2406 0EAA  
                      l2422 07FE                        l2407 0EBB                        l3190 0D77  
                      l3187 0D9E                        l6030 0FFF                        l6023 0FC8  
                      l6024 0FC9                        l6025 0FC9                        l6026 0FD0  
                      l6027 0FEC                        l6028 0FFE                        l6029 0FFF  
                      l6710 0788                        l8401 0DCF                        l3994 0730  
                      l8403 0DD9                        l8411 0DC4                        l6707 074F  
                      l3995 0741                        l6708 074E                        l3996 0742  
                      ?_isr 0070                        l8405 0DDA                        l6709 076E  
                      l3997 0742                        l8407 0DDB                        l8409 0DBD  
                      l8451 0FD0                        l8461 0FF0                        l8453 0FDC  
                      l8463 0FF4                        l8455 0FE4                        l8465 0FF5  
                      l8457 0FE7                        l8467 0FF6                        l8459 0FEB  
                      _ADON 00F8                        l8813 0745                        l8469 0FFC  
                      l8821 0789                        l8399 0DCB                        l8815 074F  
                      l8671 0D94                        l8823 078E                        l8831 06FE  
                      l8817 076E                        l8825 07A1                        l8841 0730  
                      l8833 0715                        l8819 0788                        l8827 07AA  
                      l8843 0735                        l8835 071A                        l8669 0D73  
                      l8829 07C2                        l8781 0E96                        l8837 071F  
                      l8783 0EA1                        l8791 07C9                        l8839 0724  
                      l8785 0EAA                        l8793 07CE                        l8787 0EBB  
                      l8779 0E93                        l8795 07DB                        l8789 052B  
                      l8797 07EB                        u3200 0708                        u3160 0EA9  
                      u3161 0EA8                        u3180 076D                        u3181 076C  
                      u3190 07C1                        u3191 07C0                        u2730 0DC3  
                      u2731 0DC2                        u3195 07BD                        u3357 073B  
                      u3367 0E9C                        u2770 0FCF                        u2771 0FCE  
                      _PEIE 005E                        u2780 0FEB                        u2781 0FEA  
                      u2790 0FFC                        u2791 0FFB                        _RCIE 0465  
                      _RCIF 0065                        _WREN 0C62                        _TXIF 0064  
            ??_eeprom_write 00A1      __end_of_checkStartByte 0658                        _main 06FE  
             _startByteAddr 03BC                        btemp 007E                        start 0012  
         _addDataToCheckSum 0452          ?_addDataToCheckSum 0070       makeHexByte@input_byte 0021  
                     ??_isr 0060                       ?_main 0070         ??_addDataToCheckSum 007B  
                     _EEADR 010D                       _CARRY 0018        __size_of_checkRWByte 0066  
                     i1l800 0DB9                       i1l803 0E6B                       i1l780 0D91  
                     i1l772 0DA1                       i1l781 0D93                       i1l773 0DA1  
                     i1l774 0DA8                       i1l790 0FC4                       i1l775 0DAA  
                     i1l793 0691                       i1l778 0D8A                       i1l794 066E  
                     i1l779 0D8A                       i1l795 06A2                       i1l787 0FA8  
                     i1l796 06B2                       i1l788 0F8E                       i1l789 0FBE  
                     i1l799 0DB6                       _RCREG 001A                       _RCSTA 0018  
                     _SPBRG 0099             __end_of_checkCS 0F50        __size_of_checkLength 002F  
                     _TRISA 0085                       _TXREG 0019                       _TXSTA 0098  
               _writeString 0789             __end_of_getTemp 07FF             __end_of_initADC 0D9F  
           i1writeByte@Byte 0070                       _tempC 03BD                       _tempF 03BE  
                     pclath 000A                       status 0003             ?_checkStartByte 007B  
                     wtemp0 007E   __end_of_addDataToCheckSum 04BF                ?_parsePacket 0070  
          __end_ofi1_strlen 0F8A                __end_of_main 0745       __size_of_checkCMDByte 006C  
             ?_readCommands 0070                      ??_main 00AC                  i1strlen@cp 0076  
               i1_writeByte 0D9F       __end_ofi1_writeString 0FC5               _userStartByte 03C8  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D                _writeByteVal 03C9                      i1l1601 064E  
                    i1l1602 0657                      i1l4002 0450                      i1l1611 0521  
                    i1l4003 0449                      i1l1612 052A                      i1l1620 06F7  
                    i1l4004 044F                      i1l1605 05EE                      i1l1621 06FD  
                    i1l4005 0451                      i1l4006 0451                      i1l1607 05B5  
                    i1l1615 0F46                      i1l1608 05F7                      i1l1616 0F4F  
                    i1l1624 04AC                      i1l1625 047D                      i1l1626 04BE  
                    i1l1627 04BE                      i1l1619 06F8                      i1l1580 0E89  
                    i1l1581 0E92                      i1l1590 034F                      i1l1591 034E  
                    i1l1584 0EE1                      i1l1585 0EEA                      i1l1594 02BE  
                    i1l1595 02A9                      i1l1588 0303                      i1l1596 0273  
                    i1l1589 0358                      i1l1597 02BD                      i1l6030 0F1B  
                    i1l1598 02BE                      i1l6023 0EEC                      i1l6024 0EED  
                    i1l6025 0EED                      i1l6026 0EF4                      i1l6027 0F08  
                    i1l6028 0F1A                      i1l6029 0F1B                      i1l5406 0E29  
                    i1l5407 0E31                      i1l5408 0E46                      i1l4780 003B  
                    i1l4781 0054                      i1l6710 0F89                      i1l4782 006D  
                    i1l4791 07FF                      i1l4783 0092                      u302_20 04BD  
                    u310_20 0FBD                      i1l4784 00AB                      u302_21 04BC  
                    u310_21 0FBC                      i1l4777 015E                      i1l4785 00C4  
                    i1l4786 00D7                      i1l4778 0016                      i1l6707 0F58  
                    i1l4779 0183                      i1l4787 0156                      i1l6708 0F57  
                    i1l4788 0183                      i1l3988 0E1B                      i1l8413 0D89  
                    i1l8501 0E31                      i1l6709 0F71                      u310_25 0FB9  
                    i1l3989 0E1B                      i1l8415 0D91                      i1l8503 0E46  
                    i1l8511 0EE0                      u311_20 0EF3                      i1l8417 0D93  
                    u311_21 0EF2                      i1l8441 067A                      i1l8433 065B  
                    i1l8513 0EE1                      i1l8505 0EBC                      i1l8521 02D0  
                    i1l8443 0680                      i1l8435 065D                      i1l8515 0EE7  
                    i1l8507 0ED5                      i1l8523 02F6                      i1l8531 0303  
                    i1l8445 068A                      i1l8437 0667                      i1l8517 0EEA  
                    i1l8509 0EDB                      i1l8541 0355                      i1l8533 0342  
                    i1l8525 02FC                      i1l8621 0F45                      i1l8701 003B  
                    i1l8471 0DAC                      i1l8439 066E                      i1l8447 0691  
                    i1l8543 0358                      i1l8535 0348                      i1l8527 0301  
                    i1l8519 02BF                      i1l8623 0F46                      i1l8615 0F1C  
                    i1l8551 019F                      i1l8711 00C4                      i1l8703 0054  
                    u312_20 0F07                      i1l8473 0DB2                      u312_21 0F06  
                    i1l8449 06A2                      i1l8481 0E4A                      i1l8537 034D  
                    i1l8529 0302                      i1l8625 0F4C                      i1l8617 0F3A  
                    i1l8561 02A4                      i1l8553 022E                      i1l8545 0187  
                    i1l8721 0156                      i1l8713 00D7                      i1l8705 006D  
                    i1l8475 0DB5                      i1l8483 0E69                      i1l8491 0E83  
                    i1l8539 034F                      i1l8627 0F4F                      i1l8619 0F40  
                    i1l8651 047D                      i1l8731 0F8B                      i1l8563 02A9  
                    i1l8555 026F                      i1l8547 0189                      i1l8723 015D  
                    i1l8715 0143                      i1l8707 0092                      i1l8477 0DB6  
                    i1l8741 0EF4                      i1l8485 0E6B                      i1l8493 0E88  
                    i1l8653 04A7                      i1l8733 0F8E                      i1l8557 0273  
                    i1l8549 0194                      i1l8901 06D4                      i1l8717 0149  
                    i1l8709 00AB                      i1l8725 015E                      i1l8479 0DB9  
                    i1l8727 0DA0                      i1l8751 0F0C                      i1l8743 0EFA  
                    i1l8495 0E89                      i1l8487 0E6C                      i1l8655 04AC  
                    i1l8647 0452                      i1l8735 0FA1                      i1l8559 029C  
                    i1l8911 06FD                      i1l8903 06DF                      i1l8719 014F  
                    u313_20 0F18                      u321_20 0615                      i1l8729 0DA8  
                    u313_21 0F17                      i1l8753 0F10                      i1l8745 0F00  
                    i1l8761 0F50                      i1l8497 0E8F                      i1l8489 0E7D  
                    u321_21 0614                      i1l8649 047B                      i1l8737 0FA8  
                    i1l8905 06EF                      i1l8921 03F0                      i1l8913 0E0B  
                    i1l8755 0F11                      i1l8747 0F03                      i1l8763 0F58  
                    i1l8499 0E92                      i1l8851 0648                      i1l8739 0FBE  
                    i1l8907 06F6                      i1l8931 0432                      i1l8923 0408  
                    i1l8915 0E0F                      i1l8757 0F12                      i1l8749 0F07  
                    i1l8765 0F71                      i1l8853 064D                      i1l8845 05F8  
                    i1l8861 0592                      i1l8909 06F8                      i1l8933 0443  
                    i1l8925 040E                      i1l8917 0E15                      i1l8759 0F18  
                    i1l8767 0F89                      i1l8847 0615                      i1l8855 064E  
                    i1l8871 05ED                      i1l8863 05A3                      i1l8935 0449  
                    i1l8927 041F                      i1l8919 03E3                      u314_20 0F70  
                    u322_20 05A3                      u330_20 0E0F                      u314_21 0F6F  
                    i1l8857 0654                      i1l8849 061B                      i1l8873 05EE  
                    i1l8865 05B5                      u322_21 05A2                      i1l8881 04E8  
                    i1l8697 0015                      i1l8929 0425                      u330_21 0E0E  
                    i1l8859 0657                      i1l8875 05F4                      i1l8867 05BB  
                    i1l8891 0527                      i1l8883 0515                      i1l8699 0016  
                    i1l8877 05F7                      i1l8869 05E8                      i1l8893 052A  
                    i1l8885 051B                      i1l8887 0520                      i1l8879 04BF  
                    i1l8895 06B3                      u323_20 05B4                      u331_20 0E15  
                    u323_21 05B3                      i1l8889 0521                      i1l8897 06BE  
                    u331_21 0E14                      i1l8899 06C9                      u324_20 04E8  
                    u332_20 03FA                      u324_21 04E7                      u309_20 0DA7  
                    u325_20 06BE                      u333_20 0432                      u309_21 0DA6  
                    u325_21 06BD                      u333_21 0431                      u326_20 06C9  
                    u334_20 0443                      u326_21 06C8                      u334_21 0442  
                    u327_20 06D4                      u327_21 06D3                      u280_20 0DB2  
                    u328_20 06DF                      u280_21 0DB1                      u328_21 06DE  
                    u329_20 06EF                      u329_21 06EE                      u281_25 0E52  
                    u274_20 0D90                      u282_20 0E7D                      u290_20 019F  
                    u274_21 0D8F                      u282_21 0E7C                      u290_21 019E  
                    u283_20 0E30                      u291_20 02BC                      u283_21 0E2F  
                    u291_21 02BB                      u276_20 06A1                      u284_20 0ED5  
                    u276_21 06A0                      u284_21 0ED4                      u285_20 02D0  
                    u285_21 02CF                      u286_20 02F6                      u286_21 02F5  
                    u287_25 0313                      u288_20 0342                      u296_20 0F3A  
                    u288_21 0341                      u296_21 0F39                      u288_25 033E  
                    u289_20 0194                      u289_21 0193                      _TRISC6 043E  
                    _TRISC7 043F                _checkCMDByte 04BF        __size_of_eeprom_read 001F  
      __size_of_makeHexByte 0025                      _maxCmd 03B6            __end_of_initTemp 0592  
          __end_of_readByte 0D94                   ??_checkCS 0074              ??_readCommands 007B  
          __end_of_readTemp 0EBC        __end_of_eeprom_write 1000     __size_of_validatePacket 004B  
                 ??_getTemp 00A4       readString@readStorage 0020                      clrloop 0D79  
                    _strlen 0745                   ??_initADC 00A0                 readString@i 0021  
                    saved_w 007E      __size_of_writeCommands 0001           makeHexByte@nibOne 0020  
         makeHexByte@nibTwo 007B             eeprom_read@addr 0071  __size_of_addDataToCheckSum 006D  
            __pcstackCOMMON 0070                __pidataBANK1 0D80          __size_of_checkEven 0027  
        __size_of_getPacket 006F           eeprom_write@value 00A0                   ?i1_strlen 0070  
                _csByteAddr 03AB                  __pbssBANK3 0190          __size_of_initUSART 0012  
   __size_ofi1_eeprom_write 0031              _calcCSByteAddr 03A9                  __pmaintext 06FE  
      __size_of_parsePacket 013B               _writeCommands 07FF                  __pintentry 0004  
                __ptext1300 0D9F                  __ptext1301 07FF                  __ptext1302 0E28  
                __ptext1303 0DAB                  __ptext1304 0D89                  __ptext1305 0000  
                __ptext1280 0DBA                  __ptext1272 07C9                  __ptext1281 0DCB  
                __ptext1273 052B                  __ptext1290 04BF                  __ptext1282 0E0B  
                __ptext1274 0E93                  __ptext1291 0592                  __ptext1283 03E3  
                __ptext1275 0789                  __ptext1292 05F8                  __ptext1284 0015  
                __ptext1276 0D94                  __ptext1293 02BF                  __ptext1285 06B3  
                __ptext1277 0D73                  __ptext1294 0EBC                  __ptext1286 0184  
                __ptext1278 0FC5                  __ptext1295 0E6C                  __ptext1287 0F8A  
                __ptext1279 0745                  __ptext1296 0E47                  __ptext1288 0452  
                __ptext1297 0658                  __ptext1289 0F1C                  __ptext1298 0F50  
                __ptext1299 0EEB                     ?_strlen 00A0                ?_writeString 00A8  
                ??i1_strlen 0072                  _makeNibble 0DAB            ??_checkStartByte 0020  
         __end_of_checkEven 0E93        __end_of_readCommands 0184                   ?_initTemp 0070  
                 ?_readByte 0070                   ?_readTemp 00A0          __size_of_writeByte 0011  
  __size_of_checkDataFrames 009A           __end_of_getPacket 0452       __size_of_eeprom_write 003B  
            ?_writeCommands 0070               ??_checkRWByte 0020                     _checkCS 0F1C  
                _readString 0658               ??_checkLength 0074              _validatePacket 06B3  
                _humStartHi 03B1           __end_of_initUSART 0DDD                  _humStartLo 03B2  
                   _getTemp 07C9                ?i1_writeByte 0070                     _initADC 0D94  
           __size_of_strlen 0044                     _member1 038A                     _member2 0369  
                   _member3 037D                __size_of_isr 001D        end_of_initialization 0E07  
     parsePacket@dataPacket 0029                  ??_initTemp 00A3                  ??_readByte 0070  
                   init_ram 0DE1                  _selectTemp 0D73                  ??_readTemp 00A2  
              _eeprom_write 0FC5                readString@ch 0023              main@testString 00B0  
                _tempHiAddr 03BF                  _rwByteAddr 03BB                  _tempLoAddr 03C0  
             _dataBytesAddr 03AC              getPacket@F1178 0190      __end_of_validatePacket 06FE  
                   strlen@s 00A0           __end_of_writeByte 0DCB         __end_of_checkRWByte 05F8  
       __end_of_checkLength 0EEB                 ?_makeNibble 0070                writeString@i 00AA  
             ??_eeprom_read 0070                   _RXLenAddr 03A8              i1_eeprom_write 0EEB  
           ??_writeCommands 0070               ??_makeHexByte 007C      __size_ofi1_writeString 003B  
           ?_validatePacket 0022           ??_checkDataFrames 0074                 ?_readString 0070  
            __end_of_strlen 0789         start_initialization 0DF0       __size_of_readCommands 016F  
               __end_of_isr 0E28        __size_of_writeString 0040                parsePacket@i 0028  
                 i1strlen@s 0070           __size_ofi1_strlen 003A                 ?_selectTemp 0070  
    __end_ofi1_eeprom_write 0F1C              i1writeString@i 0079         __end_of_eeprom_read 0E47  
       __size_of_makeNibble 000F                 __pdataBANK1 00B9                 _checkRWByte 0592  
               _cmdByteAddr 03AA         __end_of_makeHexByte 0E6C                 _checkLength 0EBC  
              _readCommands 0015                    ??_strlen 00A2        __size_ofi1_writeByte 000C  
             __pcstackBANK0 0020               __pcstackBANK1 00A0               i1_writeString 0F8A  
          eeprom_write@addr 00A2         __size_of_readString 005B             ?i1_eeprom_write 0078  
                 _checkEven 0E6C                 _endByteAddr 03AD               ??_parsePacket 0022  
         __size_of_initTemp 0067           __size_of_readByte 000B           __size_of_readTemp 0029  
       i1eeprom_write@value 0078                   _classTerm 0396                   _getPacket 03E3  
                  ?_checkCS 0072                   _noDataLen 03B9                   __pstrings 0359  
                  ?_getTemp 0070                    ?_initADC 0070         __size_of_selectTemp 0005  
                 _humHiAddr 03AF              ?i1_writeString 0070                   _initUSART 0DCB  
                 _humLoAddr 03B0     i1writeString@userString 0078                   _readError 03CA  
         interrupt_function 0004                  ?_checkEven 0072                 _eeprom_read 0E28  
             ?_checkCMDByte 007B                 _makeHexByte 0E47                    _GO_nDONE 00FA  
                ?_getPacket 0070                   main@F1175 00B9                 _lenByteAddr 03B5  
       __end_of_parsePacket 02BF                 __stringbase 0368                  ?_initUSART 0070  
              ??_makeNibble 0070                    i1_strlen 0F50                   _writeByte 0DBA  
           _checkDataFrames 02BF              ??_checkCMDByte 0020            ??_validatePacket 007E  
   __size_of_checkStartByte 0060                   init_fetch 0DDD          __end_of_makeNibble 0DBA  
               _humValHAddr 03B3                 _humValLAddr 03B4                 _readByteVal 03BA  
              ??_readString 007B                 _newLineChar 03B8                 _minSizeByte 03B7  
          __size_of_checkCS 0034             ??i1_writeString 0078            __size_of_getTemp 0036  
          __size_of_initADC 000B          i1eeprom_write@addr 007A                    _classNum 03A0  
                ?_writeByte 0070       writeString@userString 00A8                _tempValHAddr 03C4  
              _tempValLAddr 03C5                ??_selectTemp 00A0                    _initTemp 052B  
                  _readByte 0D89                    _readTemp 0E93               __size_of_main 0047  
               ??_checkEven 0074          __end_of_readString 06B3                    _groupNum 03AE  
               _parsePacket 0184                    clear_ram 0D78                _tempUnitAddr 03C3  
     __end_of_writeCommands 0800                 ??_getPacket 002A                ?_checkRWByte 007B  
              ?_checkLength 0072      parsePacket@dataCounter 0026               ??_writeString 00AA  
        addDataToCheckSum@i 007D          __end_of_selectTemp 0D78                 ??_initUSART 00A0  
   __end_of_checkDataFrames 0359            ??i1_eeprom_write 0079                    intlevel1 0000  
                 stringcode 0363           makeNibble@tempNib 0070          getTemp@tempReading 00A5  
               _tempStartHi 03C1                 _tempStartLo 03C2               ??i1_writeByte 0070  
         getPacket@arrStore 002E               writeByte@Byte 00A0                    strlen@cp 00A6  
      __end_of_checkCMDByte 052B                    stringdir 0363                    stringtab 0359  
               ??_writeByte 00A0                 _timeoutByte 03C6         __end_of_writeString 07C9  
             ?_eeprom_write 00A0                ?_eeprom_read 0070              _checkStartByte 05F8  
              ?_makeHexByte 007B  
