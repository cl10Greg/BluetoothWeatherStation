

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sun Dec 15 01:30:43 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 32 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 32 "main.c"
    45  2007  FF3A               	dw 0xFFFB & 0xFF7F & 0xFFBF & 0xFFFE & 0xFFFF ;#
    46                           	FNCALL	_main,_initUSART
    47                           	FNCALL	_main,_initADC
    48                           	FNCALL	_main,_initTemp
    49                           	FNCALL	_main,_initLCD
    50                           	FNCALL	_main,_lcdClear
    51                           	FNCALL	_main,_lcdGoto
    52                           	FNCALL	_main,_lcdPuts
    53                           	FNCALL	_main,_writeString
    54                           	FNCALL	_main,_getTemp
    55                           	FNCALL	_initLCD,_togE
    56                           	FNCALL	_initLCD,_lcdWrite
    57                           	FNCALL	_initLCD,_lcdClear
    58                           	FNCALL	_lcdPuts,_lcdWrite
    59                           	FNCALL	_lcdGoto,_lcdWrite
    60                           	FNCALL	_lcdClear,_lcdWrite
    61                           	FNCALL	_lcdWrite,_togE
    62                           	FNCALL	_getTemp,_selectTemp
    63                           	FNCALL	_getTemp,_readTemp
    64                           	FNCALL	_getTemp,_eeprom_write
    65                           	FNCALL	_initTemp,_eeprom_write
    66                           	FNCALL	_writeString,_writeByte
    67                           	FNCALL	_writeString,_strlen
    68                           	FNROOT	_main
    69                           	FNCALL	_isr,_getPacket
    70                           	FNCALL	_getPacket,i1_eeprom_write
    71                           	FNCALL	_getPacket,_readString
    72                           	FNCALL	_getPacket,_parsePacket
    73                           	FNCALL	_getPacket,_validatePacket
    74                           	FNCALL	_getPacket,_eeprom_read
    75                           	FNCALL	_getPacket,_readCommands
    76                           	FNCALL	_getPacket,_writeCommands
    77                           	FNCALL	_readCommands,i1_writeByte
    78                           	FNCALL	_readCommands,i1_writeString
    79                           	FNCALL	_readCommands,_eeprom_read
    80                           	FNCALL	_validatePacket,_checkStartByte
    81                           	FNCALL	_validatePacket,_checkRWByte
    82                           	FNCALL	_validatePacket,_checkCMDByte
    83                           	FNCALL	_validatePacket,_checkDataFrames
    84                           	FNCALL	_validatePacket,_addDataToCheckSum
    85                           	FNCALL	_validatePacket,_checkCS
    86                           	FNCALL	_parsePacket,_checkLength
    87                           	FNCALL	_parsePacket,_checkEven
    88                           	FNCALL	_parsePacket,_makeHexByte
    89                           	FNCALL	_parsePacket,i1_eeprom_write
    90                           	FNCALL	_parsePacket,i1_strlen
    91                           	FNCALL	_parsePacket,_eeprom_read
    92                           	FNCALL	i1_writeString,i1_writeByte
    93                           	FNCALL	i1_writeString,i1_strlen
    94                           	FNCALL	_addDataToCheckSum,_eeprom_read
    95                           	FNCALL	_addDataToCheckSum,i1_eeprom_write
    96                           	FNCALL	_checkCS,_eeprom_read
    97                           	FNCALL	_checkCS,i1_writeByte
    98                           	FNCALL	_checkCMDByte,_eeprom_read
    99                           	FNCALL	_checkCMDByte,i1_eeprom_write
   100                           	FNCALL	_checkCMDByte,i1_writeByte
   101                           	FNCALL	_checkRWByte,_eeprom_read
   102                           	FNCALL	_checkRWByte,i1_writeByte
   103                           	FNCALL	_checkRWByte,i1_eeprom_write
   104                           	FNCALL	_checkStartByte,_eeprom_read
   105                           	FNCALL	_checkStartByte,i1_writeByte
   106                           	FNCALL	_checkStartByte,i1_eeprom_write
   107                           	FNCALL	_checkDataFrames,_eeprom_read
   108                           	FNCALL	_checkDataFrames,i1_writeByte
   109                           	FNCALL	_checkLength,_eeprom_read
   110                           	FNCALL	_checkLength,i1_writeByte
   111                           	FNCALL	_checkEven,_eeprom_read
   112                           	FNCALL	_checkEven,i1_writeByte
   113                           	FNCALL	_makeHexByte,_makeNibble
   114                           	FNCALL	_readString,_readByte
   115                           	FNCALL	_readString,i1_writeByte
   116                           	FNCALL	_readString,i1_eeprom_write
   117                           	FNCALL	intlevel1,_isr
   118                           	global	intlevel1
   119                           	FNROOT	intlevel1
   120                           	global	main@F1186
   121                           	global	_readError
   122                           psect	idataBANK1,class=CODE,space=0,delta=2
   123                           global __pidataBANK1
   124  0D82                     __pidataBANK1:
   125                           	file	"main.c"
   126                           	line	52
   127                           
   128                           ;initializer for main@F1186
   129  0D82  3457               	retlw	057h
   130  0D83  3465               	retlw	065h
   131  0D84  346C               	retlw	06Ch
   132  0D85  3463               	retlw	063h
   133  0D86  346F               	retlw	06Fh
   134  0D87  346D               	retlw	06Dh
   135  0D88  3465               	retlw	065h
   136  0D89  340A               	retlw	0Ah
   137  0D8A  3400               	retlw	0
   138                           	file	"userMacro.h"
   139                           	line	26
   140                           
   141                           ;initializer for _readError
   142  0D8B  344E               	retlw	04Eh
   143  0D8C  346F               	retlw	06Fh
   144  0D8D  3474               	retlw	074h
   145  0D8E  3420               	retlw	020h
   146  0D8F  3461               	retlw	061h
   147  0D90  3420               	retlw	020h
   148  0D91  3476               	retlw	076h
   149  0D92  3461               	retlw	061h
   150  0D93  346C               	retlw	06Ch
   151  0D94  3469               	retlw	069h
   152  0D95  3464               	retlw	064h
   153  0D96  3420               	retlw	020h
   154  0D97  3472               	retlw	072h
   155  0D98  3465               	retlw	065h
   156  0D99  3461               	retlw	061h
   157  0D9A  3464               	retlw	064h
   158  0D9B  3420               	retlw	020h
   159  0D9C  3463               	retlw	063h
   160  0D9D  346F               	retlw	06Fh
   161  0D9E  346D               	retlw	06Dh
   162  0D9F  346D               	retlw	06Dh
   163  0DA0  3461               	retlw	061h
   164  0DA1  346E               	retlw	06Eh
   165  0DA2  3464               	retlw	064h
   166  0DA3  3400               	retlw	0
   167                           	global	_member2
   168                           psect	strings,class=STRING,delta=2
   169                           global __pstrings
   170  0446                     __pstrings:
   171                           ;	global	stringdir,stringtab,__stringbase
   172  0446                     stringtab:
   173                           ;	String table - string pointers are 1 byte each
   174  0446                     stringcode:stringdir:
      + 0446                     stringdir:	
   175  0446  3004               movlw high(stringdir)
   176  0447  008A               movwf pclath
   177  0448  0804               movf fsr,w
   178  0449  0A84               incf fsr
   179  044A  0782               	addwf pc
   180  044B                     __stringbase:
   181  044B  3400               	retlw	0
   182                           psect	strings
   183                           	file	"userMacro.h"
   184                           	line	20
   185  044C                     _member2:
   186  044C  3444               	retlw	044h
   187  044D  3465               	retlw	065h
   188  044E  3465               	retlw	065h
   189  044F  3470               	retlw	070h
   190  0450  3461               	retlw	061h
   191  0451  346B               	retlw	06Bh
   192  0452  3420               	retlw	020h
   193  0453  3443               	retlw	043h
   194  0454  3468               	retlw	068h
   195  0455  3461               	retlw	061h
   196  0456  346E               	retlw	06Eh
   197  0457  3464               	retlw	064h
   198  0458  3472               	retlw	072h
   199  0459  3461               	retlw	061h
   200  045A  3473               	retlw	073h
   201  045B  3465               	retlw	065h
   202  045C  346B               	retlw	06Bh
   203  045D  3461               	retlw	061h
   204  045E  3472               	retlw	072h
   205  045F  3400               	retlw	0
   206                           	global	_member3
   207                           psect	strings
   208                           	file	"userMacro.h"
   209                           	line	21
   210  0460                     _member3:
   211  0460  3441               	retlw	041h
   212  0461  3470               	retlw	070h
   213  0462  3475               	retlw	075h
   214  0463  3472               	retlw	072h
   215  0464  3476               	retlw	076h
   216  0465  3465               	retlw	065h
   217  0466  3420               	retlw	020h
   218  0467  3442               	retlw	042h
   219  0468  3468               	retlw	068h
   220  0469  3469               	retlw	069h
   221  046A  3464               	retlw	064h
   222  046B  3465               	retlw	065h
   223  046C  3400               	retlw	0
   224                           	global	_member1
   225                           psect	strings
   226                           	file	"userMacro.h"
   227                           	line	19
   228  046D                     _member1:
   229  046D  3447               	retlw	047h
   230  046E  3472               	retlw	072h
   231  046F  3465               	retlw	065h
   232  0470  3467               	retlw	067h
   233  0471  3420               	retlw	020h
   234  0472  3447               	retlw	047h
   235  0473  3469               	retlw	069h
   236  0474  3472               	retlw	072h
   237  0475  3461               	retlw	061h
   238  0476  3472               	retlw	072h
   239  0477  3464               	retlw	064h
   240  0478  3400               	retlw	0
   241                           	global	_classTerm
   242                           psect	strings
   243                           	file	"userMacro.h"
   244                           	line	23
   245  0479                     _classTerm:
   246  0479  3446               	retlw	046h
   247  047A  3461               	retlw	061h
   248  047B  346C               	retlw	06Ch
   249  047C  346C               	retlw	06Ch
   250  047D  3420               	retlw	020h
   251  047E  3432               	retlw	032h
   252  047F  3430               	retlw	030h
   253  0480  3431               	retlw	031h
   254  0481  3433               	retlw	033h
   255  0482  3400               	retlw	0
   256                           	global	_classNum
   257                           psect	strings
   258                           	file	"userMacro.h"
   259                           	line	22
   260  0483                     _classNum:
   261  0483  3445               	retlw	045h
   262  0484  3443               	retlw	043h
   263  0485  3445               	retlw	045h
   264  0486  3435               	retlw	035h
   265  0487  3436               	retlw	036h
   266  0488  3432               	retlw	032h
   267  0489  3430               	retlw	030h
   268  048A  3400               	retlw	0
   269                           	global	_RXLenAddr
   270                           psect	strings
   271                           	file	"userMacro.h"
   272                           	line	50
   273  048B                     _RXLenAddr:
   274  048B  3400               	retlw	0
   275                           	global	_calcCSByteAddr
   276                           psect	strings
   277                           	file	"userMacro.h"
   278                           	line	66
   279  048C                     _calcCSByteAddr:
   280  048C  3430               	retlw	030h
   281                           	global	_cmdByteAddr
   282                           psect	strings
   283                           	file	"userMacro.h"
   284                           	line	56
   285  048D                     _cmdByteAddr:
   286  048D  3403               	retlw	03h
   287                           	global	_csByteAddr
   288                           psect	strings
   289                           	file	"userMacro.h"
   290                           	line	60
   291  048E                     _csByteAddr:
   292  048E  3405               	retlw	05h
   293                           	global	_dataBytesAddr
   294                           psect	strings
   295                           	file	"userMacro.h"
   296                           	line	64
   297  048F                     _dataBytesAddr:
   298  048F  3407               	retlw	07h
   299                           	global	_endByteAddr
   300                           psect	strings
   301                           	file	"userMacro.h"
   302                           	line	62
   303  0490                     _endByteAddr:
   304  0490  3406               	retlw	06h
   305                           	global	_groupNum
   306                           psect	strings
   307                           	file	"userMacro.h"
   308                           	line	24
   309  0491                     _groupNum:
   310  0491  3432               	retlw	032h
   311                           	global	_humHiAddr
   312                           psect	strings
   313                           	file	"userMacro.h"
   314                           	line	96
   315  0492                     _humHiAddr:
   316  0492  3484               	retlw	084h
   317                           	global	_humLoAddr
   318                           psect	strings
   319                           	file	"userMacro.h"
   320                           	line	98
   321  0493                     _humLoAddr:
   322  0493  3486               	retlw	086h
   323                           	global	_humStartHi
   324                           psect	strings
   325                           	file	"userMacro.h"
   326                           	line	102
   327  0494                     _humStartHi:
   328  0494  3450               	retlw	050h
   329                           	global	_humStartLo
   330                           psect	strings
   331                           	file	"userMacro.h"
   332                           	line	104
   333  0495                     _humStartLo:
   334  0495  340A               	retlw	0Ah
   335                           	global	_humValHAddr
   336                           psect	strings
   337                           	file	"userMacro.h"
   338                           	line	92
   339  0496                     _humValHAddr:
   340  0496  3480               	retlw	080h
   341                           	global	_humValLAddr
   342                           psect	strings
   343                           	file	"userMacro.h"
   344                           	line	94
   345  0497                     _humValLAddr:
   346  0497  3482               	retlw	082h
   347                           	global	_lenByteAddr
   348                           psect	strings
   349                           	file	"userMacro.h"
   350                           	line	58
   351  0498                     _lenByteAddr:
   352  0498  3404               	retlw	04h
   353                           	global	_maxCmd
   354                           psect	strings
   355                           	file	"userMacro.h"
   356                           	line	40
   357  0499                     _maxCmd:
   358  0499  340E               	retlw	0Eh
   359                           	global	_minSizeByte
   360                           psect	strings
   361                           	file	"userMacro.h"
   362                           	line	36
   363  049A                     _minSizeByte:
   364  049A  340A               	retlw	0Ah
   365                           	global	_newLineChar
   366                           psect	strings
   367                           	file	"userMacro.h"
   368                           	line	34
   369  049B                     _newLineChar:
   370  049B  340A               	retlw	0Ah
   371                           	global	_noDataLen
   372                           psect	strings
   373                           	file	"userMacro.h"
   374                           	line	38
   375  049C                     _noDataLen:
   376  049C  340A               	retlw	0Ah
   377                           	global	_readByteVal
   378                           psect	strings
   379                           	file	"userMacro.h"
   380                           	line	42
   381  049D                     _readByteVal:
   382  049D  3400               	retlw	0
   383                           	global	_rwByteAddr
   384                           psect	strings
   385                           	file	"userMacro.h"
   386                           	line	54
   387  049E                     _rwByteAddr:
   388  049E  3402               	retlw	02h
   389                           	global	_startByteAddr
   390                           psect	strings
   391                           	file	"userMacro.h"
   392                           	line	52
   393  049F                     _startByteAddr:
   394  049F  3401               	retlw	01h
   395                           	global	_tempC
   396                           psect	strings
   397                           	file	"userMacro.h"
   398                           	line	86
   399  04A0                     _tempC:
   400  04A0  3400               	retlw	0
   401                           	global	_tempF
   402                           psect	strings
   403                           	file	"userMacro.h"
   404                           	line	88
   405  04A1                     _tempF:
   406  04A1  3410               	retlw	010h
   407                           	global	_tempHiAddr
   408                           psect	strings
   409                           	file	"userMacro.h"
   410                           	line	74
   411  04A2                     _tempHiAddr:
   412  04A2  3462               	retlw	062h
   413                           	global	_tempLoAddr
   414                           psect	strings
   415                           	file	"userMacro.h"
   416                           	line	76
   417  04A3                     _tempLoAddr:
   418  04A3  3464               	retlw	064h
   419                           	global	_tempStartHi
   420                           psect	strings
   421                           	file	"userMacro.h"
   422                           	line	82
   423  04A4                     _tempStartHi:
   424  04A4  3464               	retlw	064h
   425                           	global	_tempStartLo
   426                           psect	strings
   427                           	file	"userMacro.h"
   428                           	line	84
   429  04A5                     _tempStartLo:
   430  04A5  34A0               	retlw	0A0h
   431                           	global	_tempUnitAddr
   432                           psect	strings
   433                           	file	"userMacro.h"
   434                           	line	78
   435  04A6                     _tempUnitAddr:
   436  04A6  3466               	retlw	066h
   437                           	global	_tempValHAddr
   438                           psect	strings
   439                           	file	"userMacro.h"
   440                           	line	70
   441  04A7                     _tempValHAddr:
   442  04A7  3460               	retlw	060h
   443                           	global	_tempValLAddr
   444                           psect	strings
   445                           	file	"userMacro.h"
   446                           	line	72
   447  04A8                     _tempValLAddr:
   448  04A8  3461               	retlw	061h
   449                           	global	_timeoutByte
   450                           psect	strings
   451                           	file	"userMacro.h"
   452                           	line	46
   453  04A9                     _timeoutByte:
   454  04A9  34FF               	retlw	0FFh
   455                           	global	_userEndByte
   456                           psect	strings
   457                           	file	"userMacro.h"
   458                           	line	32
   459  04AA                     _userEndByte:
   460  04AA  340A               	retlw	0Ah
   461                           	global	_userStartByte
   462                           psect	strings
   463                           	file	"userMacro.h"
   464                           	line	30
   465  04AB                     _userStartByte:
   466  04AB  34AA               	retlw	0AAh
   467                           	global	_writeByteVal
   468                           psect	strings
   469                           	file	"userMacro.h"
   470                           	line	44
   471  04AC                     _writeByteVal:
   472  04AC  3401               	retlw	01h
   473                           	global	_member2
   474                           	global	_member3
   475                           	global	_member1
   476                           	global	_classTerm
   477                           	global	_classNum
   478                           	global	_RXLenAddr
   479                           	global	_calcCSByteAddr
   480                           	global	_cmdByteAddr
   481                           	global	_csByteAddr
   482                           	global	_dataBytesAddr
   483                           	global	_endByteAddr
   484                           	global	_groupNum
   485                           	global	_humHiAddr
   486                           	global	_humLoAddr
   487                           	global	_humStartHi
   488                           	global	_humStartLo
   489                           	global	_humValHAddr
   490                           	global	_humValLAddr
   491                           	global	_lenByteAddr
   492                           	global	_maxCmd
   493                           	global	_minSizeByte
   494                           	global	_newLineChar
   495                           	global	_noDataLen
   496                           	global	_readByteVal
   497                           	global	_rwByteAddr
   498                           	global	_startByteAddr
   499                           	global	_tempC
   500                           	global	_tempF
   501                           	global	_tempHiAddr
   502                           	global	_tempLoAddr
   503                           	global	_tempStartHi
   504                           	global	_tempStartLo
   505                           	global	_tempUnitAddr
   506                           	global	_tempValHAddr
   507                           	global	_tempValLAddr
   508                           	global	_timeoutByte
   509                           	global	_userEndByte
   510                           	global	_userStartByte
   511                           	global	_writeByteVal
   512                           	global	getPacket@F1189
   513                           	global	_ADCON0
   514  001F                     _ADCON0	set	31
   515                           	global	_ADRESH
   516  001E                     _ADRESH	set	30
   517                           	global	_PORTD
   518  0008                     _PORTD	set	8
   519                           	global	_RCREG
   520  001A                     _RCREG	set	26
   521                           	global	_RCSTA
   522  0018                     _RCSTA	set	24
   523                           	global	_TXREG
   524  0019                     _TXREG	set	25
   525                           	global	_ADON
   526  00F8                     _ADON	set	248
   527                           	global	_CARRY
   528  0018                     _CARRY	set	24
   529                           	global	_GIE
   530  005F                     _GIE	set	95
   531                           	global	_GO_nDONE
   532  00FA                     _GO_nDONE	set	250
   533                           	global	_PEIE
   534  005E                     _PEIE	set	94
   535                           	global	_RCIF
   536  0065                     _RCIF	set	101
   537                           	global	_RD0
   538  0040                     _RD0	set	64
   539                           	global	_RD1
   540  0041                     _RD1	set	65
   541                           	global	_RD2
   542  0042                     _RD2	set	66
   543                           	global	_RD4
   544  0044                     _RD4	set	68
   545                           	global	_RD5
   546  0045                     _RD5	set	69
   547                           	global	_RD6
   548  0046                     _RD6	set	70
   549                           	global	_RD7
   550  0047                     _RD7	set	71
   551                           	global	_TXIF
   552  0064                     _TXIF	set	100
   553                           	global	_ADCON1
   554  009F                     _ADCON1	set	159
   555                           	global	_ADRESL
   556  009E                     _ADRESL	set	158
   557                           	global	_SPBRG
   558  0099                     _SPBRG	set	153
   559                           	global	_TRISA
   560  0085                     _TRISA	set	133
   561                           	global	_TRISD
   562  0088                     _TRISD	set	136
   563                           	global	_TXSTA
   564  0098                     _TXSTA	set	152
   565                           	global	_RCIE
   566  0465                     _RCIE	set	1125
   567                           	global	_TRISC6
   568  043E                     _TRISC6	set	1086
   569                           	global	_TRISC7
   570  043F                     _TRISC7	set	1087
   571                           	global	_EEADR
   572  010D                     _EEADR	set	269
   573                           	global	_EEDATA
   574  010C                     _EEDATA	set	268
   575                           	global	_EECON1
   576  018C                     _EECON1	set	396
   577                           	global	_EECON2
   578  018D                     _EECON2	set	397
   579                           	global	_RD
   580  0C60                     _RD	set	3168
   581                           	global	_WR
   582  0C61                     _WR	set	3169
   583                           	global	_WREN
   584  0C62                     _WREN	set	3170
   585                           	
   586  04AD                     STR_1:	
   587  04AD  3448               	retlw	72	;'H'
   588  04AE  3465               	retlw	101	;'e'
   589  04AF  346C               	retlw	108	;'l'
   590  04B0  346C               	retlw	108	;'l'
   591  04B1  346F               	retlw	111	;'o'
   592  04B2  3400               	retlw	0
   593                           psect	strings
   594                           	file	"C:\Users\GREGLA~1\AppData\Local\Temp\s9rg."
   595                           	line	#
   596                           psect cinit,class=CODE,delta=2
   597                           global start_initialization
   598  07E4                     start_initialization:
   599                           
   600                           psect	dataBANK1,class=BANK1,space=1
   601                           global __pdataBANK1
   602  00A0                     __pdataBANK1:
   603                           	file	"main.c"
   604                           	line	52
   605  00A0                     main@F1186:
   606  00A0                            ds      9
   607                           
   608                           psect	dataBANK1
   609                           	file	"userMacro.h"
   610                           	line	26
   611  00A9                     _readError:
   612  00A9                            ds      25
   613                           
   614                           psect	bssBANK3,class=BANK3,space=1
   615                           global __pbssBANK3
   616  0190                     __pbssBANK3:
   617  0190                     getPacket@F1189:
   618  0190                            ds      50
   619                           
   620                           psect clrtext,class=CODE,delta=2
   621                           global clear_ram
   622                           ;	Called with FSR containing the base address, and
   623                           ;	W with the last address+1
   624  0C8A                     clear_ram:
   625  0C8A  0064               	clrwdt			;clear the watchdog before getting into this loop
   626  0C8B                     clrloop:
   627  0C8B  0180               	clrf	indf		;clear RAM location pointed to by FSR
   628  0C8C  0A84               	incf	fsr,f		;increment pointer
   629  0C8D  0604               	xorwf	fsr,w		;XOR with final address
   630  0C8E  1903               	btfsc	status,2	;have we reached the end yet?
   631  0C8F  3400               	retlw	0		;all done for this memory range, return
   632  0C90  0604               	xorwf	fsr,w		;XOR again to restore value
   633  0C91  2C8B               	goto	clrloop		;do the next byte
   634                           
   635                           ; Clear objects allocated to BANK3
   636                           psect cinit,class=CODE,delta=2
   637  07E4  1783               	bsf	status, 7	;select IRP bank2
   638  07E5  3090               	movlw	low(__pbssBANK3)
   639  07E6  0084               	movwf	fsr
   640  07E7  30C2               	movlw	low((__pbssBANK3)+032h)
   641  07E8  120A  158A  248A   	fcall	clear_ram
              120A  118A         
   642                           global btemp
   643                           psect inittext,class=CODE,delta=2
   644                           global init_fetch,btemp
   645                           ;	Called with low address in FSR and high address in W
   646  0CE6                     init_fetch:
   647  0CE6  087E               	movf btemp,w
   648  0CE7  008A               	movwf pclath
   649  0CE8  087F               	movf btemp+1,w
   650  0CE9  0082               	movwf pc
   651                           global init_ram
   652                           ;Called with:
   653                           ;	high address of idata address in btemp 
   654                           ;	low address of idata address in btemp+1 
   655                           ;	low address of data in FSR
   656                           ;	high address + 1 of data in btemp-1
   657  0CEA                     init_ram:
   658  0CEA  120A  158A  24E6   	fcall init_fetch
              120A  158A         
   659  0CEF  0080               	movwf indf,f
   660  0CF0  0A84               	incf fsr,f
   661  0CF1  0804               	movf fsr,w
   662  0CF2  067D               	xorwf btemp-1,w
   663  0CF3  1903               	btfsc status,2
   664  0CF4  3400               	retlw 0
   665  0CF5  0AFF               	incf btemp+1,f
   666  0CF6  1903               	btfsc status,2
   667  0CF7  0AFE               	incf btemp,f
   668  0CF8  2CEA               	goto init_ram
   669                           ; Initialize objects allocated to BANK1
   670                           psect cinit,class=CODE,delta=2
   671                           global init_ram, __pidataBANK1
   672  07ED  1383               	bcf	status, 7	;select IRP bank0
   673  07EE  30C2               	movlw low(__pdataBANK1+34)
   674  07EF  00FD               	movwf btemp-1,f
   675  07F0  300D               	movlw high(__pidataBANK1)
   676  07F1  00FE               	movwf btemp,f
   677  07F2  3082               	movlw low(__pidataBANK1)
   678  07F3  00FF               	movwf btemp+1,f
   679  07F4  30A0               	movlw low(__pdataBANK1)
   680  07F5  0084               	movwf fsr,f
   681  07F6  120A  158A  24EA   	fcall init_ram
              120A  118A         
   682                           psect cinit,class=CODE,delta=2
   683                           global end_of_initialization
   684                           
   685                           ;End of C runtime variable initialization code
   686                           
   687  07FB                     end_of_initialization:
   688  07FB  0183               clrf status
   689  07FC  120A  118A  2F00   ljmp _main	;jump to C main() function
   690                           psect	cstackBANK1,class=BANK1,space=1
   691                           global __pcstackBANK1
   692  00C2                     __pcstackBANK1:
   693                           	global	??_selectTemp
   694  00C2                     ??_selectTemp:	; 0 bytes @ 0x0
   695                           	global	??_togE
   696  00C2                     ??_togE:	; 0 bytes @ 0x0
   697                           	global	??_initUSART
   698  00C2                     ??_initUSART:	; 0 bytes @ 0x0
   699                           	global	??_writeByte
   700  00C2                     ??_writeByte:	; 0 bytes @ 0x0
   701                           	global	??_initADC
   702  00C2                     ??_initADC:	; 0 bytes @ 0x0
   703                           	global	?_eeprom_write
   704  00C2                     ?_eeprom_write:	; 1 bytes @ 0x0
   705                           	global	?_strlen
   706  00C2                     ?_strlen:	; 2 bytes @ 0x0
   707                           	global	?_readTemp
   708  00C2                     ?_readTemp:	; 2 bytes @ 0x0
   709                           	global	writeByte@Byte
   710  00C2                     writeByte@Byte:	; 1 bytes @ 0x0
   711                           	global	eeprom_write@value
   712  00C2                     eeprom_write@value:	; 1 bytes @ 0x0
   713  00C2                     	ds	1
   714                           	global	??_eeprom_write
   715  00C3                     ??_eeprom_write:	; 0 bytes @ 0x1
   716  00C3                     	ds	1
   717                           	global	??_strlen
   718  00C4                     ??_strlen:	; 0 bytes @ 0x2
   719                           	global	??_lcdWrite
   720  00C4                     ??_lcdWrite:	; 0 bytes @ 0x2
   721                           	global	??_readTemp
   722  00C4                     ??_readTemp:	; 0 bytes @ 0x2
   723                           	global	eeprom_write@addr
   724  00C4                     eeprom_write@addr:	; 1 bytes @ 0x2
   725  00C4                     	ds	1
   726                           	global	??_initTemp
   727  00C5                     ??_initTemp:	; 0 bytes @ 0x3
   728                           	global	lcdWrite@c
   729  00C5                     lcdWrite@c:	; 1 bytes @ 0x3
   730  00C5                     	ds	1
   731                           	global	??_lcdClear
   732  00C6                     ??_lcdClear:	; 0 bytes @ 0x4
   733                           	global	??_lcdGoto
   734  00C6                     ??_lcdGoto:	; 0 bytes @ 0x4
   735                           	global	??_lcdPuts
   736  00C6                     ??_lcdPuts:	; 0 bytes @ 0x4
   737                           	global	??_getTemp
   738  00C6                     ??_getTemp:	; 0 bytes @ 0x4
   739  00C6                     	ds	1
   740                           	global	lcdPuts@s
   741  00C7                     lcdPuts@s:	; 1 bytes @ 0x5
   742                           	global	getTemp@tempReading
   743  00C7                     getTemp@tempReading:	; 2 bytes @ 0x5
   744  00C7                     	ds	1
   745                           	global	??_initLCD
   746  00C8                     ??_initLCD:	; 0 bytes @ 0x6
   747                           	global	lcdGoto@pos
   748  00C8                     lcdGoto@pos:	; 1 bytes @ 0x6
   749  00C8                     	ds	2
   750                           	global	strlen@s
   751  00CA                     strlen@s:	; 1 bytes @ 0x8
   752  00CA                     	ds	1
   753                           	global	strlen@cp
   754  00CB                     strlen@cp:	; 1 bytes @ 0x9
   755  00CB                     	ds	1
   756                           	global	??_writeString
   757  00CC                     ??_writeString:	; 0 bytes @ 0xA
   758  00CC                     	ds	1
   759                           	global	writeString@userString
   760  00CD                     writeString@userString:	; 1 bytes @ 0xB
   761  00CD                     	ds	1
   762                           	global	writeString@i
   763  00CE                     writeString@i:	; 2 bytes @ 0xC
   764  00CE                     	ds	2
   765                           	global	??_main
   766  00D0                     ??_main:	; 0 bytes @ 0xE
   767  00D0                     	ds	4
   768                           	global	main@testString
   769  00D4                     main@testString:	; 9 bytes @ 0x12
   770  00D4                     	ds	9
   771                           psect	cstackCOMMON,class=COMMON,space=1
   772                           global __pcstackCOMMON
   773  0070                     __pcstackCOMMON:
   774                           	global	??_eeprom_read
   775  0070                     ??_eeprom_read:	; 0 bytes @ 0x0
   776                           	global	?_addDataToCheckSum
   777  0070                     ?_addDataToCheckSum:	; 0 bytes @ 0x0
   778                           	global	?_selectTemp
   779  0070                     ?_selectTemp:	; 0 bytes @ 0x0
   780                           	global	?_getPacket
   781  0070                     ?_getPacket:	; 0 bytes @ 0x0
   782                           	global	?_initLCD
   783  0070                     ?_initLCD:	; 0 bytes @ 0x0
   784                           	global	?_lcdClear
   785  0070                     ?_lcdClear:	; 0 bytes @ 0x0
   786                           	global	?_lcdGoto
   787  0070                     ?_lcdGoto:	; 0 bytes @ 0x0
   788                           	global	?_lcdPuts
   789  0070                     ?_lcdPuts:	; 0 bytes @ 0x0
   790                           	global	?_readCommands
   791  0070                     ?_readCommands:	; 0 bytes @ 0x0
   792                           	global	?_writeCommands
   793  0070                     ?_writeCommands:	; 0 bytes @ 0x0
   794                           	global	??_writeCommands
   795  0070                     ??_writeCommands:	; 0 bytes @ 0x0
   796                           	global	?_togE
   797  0070                     ?_togE:	; 0 bytes @ 0x0
   798                           	global	?_lcdWrite
   799  0070                     ?_lcdWrite:	; 0 bytes @ 0x0
   800                           	global	?_initUSART
   801  0070                     ?_initUSART:	; 0 bytes @ 0x0
   802                           	global	?_writeByte
   803  0070                     ?_writeByte:	; 0 bytes @ 0x0
   804                           	global	??_readByte
   805  0070                     ??_readByte:	; 0 bytes @ 0x0
   806                           	global	?_writeString
   807  0070                     ?_writeString:	; 0 bytes @ 0x0
   808                           	global	?_readString
   809  0070                     ?_readString:	; 0 bytes @ 0x0
   810                           	global	??_makeNibble
   811  0070                     ??_makeNibble:	; 0 bytes @ 0x0
   812                           	global	?_parsePacket
   813  0070                     ?_parsePacket:	; 0 bytes @ 0x0
   814                           	global	?_initTemp
   815  0070                     ?_initTemp:	; 0 bytes @ 0x0
   816                           	global	?_getTemp
   817  0070                     ?_getTemp:	; 0 bytes @ 0x0
   818                           	global	?_initADC
   819  0070                     ?_initADC:	; 0 bytes @ 0x0
   820                           	global	?_isr
   821  0070                     ?_isr:	; 0 bytes @ 0x0
   822                           	global	?i1_writeByte
   823  0070                     ?i1_writeByte:	; 0 bytes @ 0x0
   824                           	global	??i1_writeByte
   825  0070                     ??i1_writeByte:	; 0 bytes @ 0x0
   826                           	global	?i1_writeString
   827  0070                     ?i1_writeString:	; 0 bytes @ 0x0
   828                           	global	?_eeprom_read
   829  0070                     ?_eeprom_read:	; 1 bytes @ 0x0
   830                           	global	?_readByte
   831  0070                     ?_readByte:	; 1 bytes @ 0x0
   832                           	global	?_makeNibble
   833  0070                     ?_makeNibble:	; 1 bytes @ 0x0
   834                           	global	?_main
   835  0070                     ?_main:	; 2 bytes @ 0x0
   836                           	global	?i1_strlen
   837  0070                     ?i1_strlen:	; 2 bytes @ 0x0
   838                           	global	makeNibble@tempNib
   839  0070                     makeNibble@tempNib:	; 1 bytes @ 0x0
   840                           	global	i1writeByte@Byte
   841  0070                     i1writeByte@Byte:	; 1 bytes @ 0x0
   842  0070                     	ds	1
   843                           	global	eeprom_read@addr
   844  0071                     eeprom_read@addr:	; 1 bytes @ 0x1
   845  0071                     	ds	1
   846                           	global	??i1_strlen
   847  0072                     ??i1_strlen:	; 0 bytes @ 0x2
   848                           	global	?_checkEven
   849  0072                     ?_checkEven:	; 2 bytes @ 0x2
   850                           	global	?_checkLength
   851  0072                     ?_checkLength:	; 2 bytes @ 0x2
   852                           	global	?_checkDataFrames
   853  0072                     ?_checkDataFrames:	; 2 bytes @ 0x2
   854                           	global	?_checkCS
   855  0072                     ?_checkCS:	; 2 bytes @ 0x2
   856  0072                     	ds	2
   857                           	global	??_checkEven
   858  0074                     ??_checkEven:	; 0 bytes @ 0x4
   859                           	global	??_checkLength
   860  0074                     ??_checkLength:	; 0 bytes @ 0x4
   861                           	global	??_checkDataFrames
   862  0074                     ??_checkDataFrames:	; 0 bytes @ 0x4
   863                           	global	??_checkCS
   864  0074                     ??_checkCS:	; 0 bytes @ 0x4
   865  0074                     	ds	4
   866                           	global	i1strlen@s
   867  0078                     i1strlen@s:	; 1 bytes @ 0x8
   868  0078                     	ds	1
   869                           	global	i1strlen@cp
   870  0079                     i1strlen@cp:	; 1 bytes @ 0x9
   871  0079                     	ds	1
   872                           	global	??i1_writeString
   873  007A                     ??i1_writeString:	; 0 bytes @ 0xA
   874                           	global	?i1_eeprom_write
   875  007A                     ?i1_eeprom_write:	; 1 bytes @ 0xA
   876                           	global	i1eeprom_write@value
   877  007A                     i1eeprom_write@value:	; 1 bytes @ 0xA
   878  007A                     	ds	1
   879                           	global	??i1_eeprom_write
   880  007B                     ??i1_eeprom_write:	; 0 bytes @ 0xB
   881                           	global	i1writeString@userString
   882  007B                     i1writeString@userString:	; 1 bytes @ 0xB
   883  007B                     	ds	1
   884                           	global	i1eeprom_write@addr
   885  007C                     i1eeprom_write@addr:	; 1 bytes @ 0xC
   886                           	global	i1writeString@i
   887  007C                     i1writeString@i:	; 2 bytes @ 0xC
   888  007C                     	ds	1
   889                           	global	?_makeHexByte
   890  007D                     ?_makeHexByte:	; 1 bytes @ 0xD
   891                           	global	makeHexByte@nibTwo
   892  007D                     makeHexByte@nibTwo:	; 1 bytes @ 0xD
   893                           	global	addDataToCheckSum@i
   894  007D                     addDataToCheckSum@i:	; 1 bytes @ 0xD
   895  007D                     	ds	1
   896                           	global	??_readCommands
   897  007E                     ??_readCommands:	; 0 bytes @ 0xE
   898                           	global	??_validatePacket
   899  007E                     ??_validatePacket:	; 0 bytes @ 0xE
   900                           psect	cstackBANK0,class=BANK0,space=1
   901                           global __pcstackBANK0
   902  0020                     __pcstackBANK0:
   903                           	global	??_addDataToCheckSum
   904  0020                     ??_addDataToCheckSum:	; 0 bytes @ 0x0
   905                           	global	??_readString
   906  0020                     ??_readString:	; 0 bytes @ 0x0
   907                           	global	??_makeHexByte
   908  0020                     ??_makeHexByte:	; 0 bytes @ 0x0
   909                           	global	?_checkStartByte
   910  0020                     ?_checkStartByte:	; 2 bytes @ 0x0
   911                           	global	?_checkRWByte
   912  0020                     ?_checkRWByte:	; 2 bytes @ 0x0
   913                           	global	?_checkCMDByte
   914  0020                     ?_checkCMDByte:	; 2 bytes @ 0x0
   915  0020                     	ds	2
   916                           	global	??_checkStartByte
   917  0022                     ??_checkStartByte:	; 0 bytes @ 0x2
   918                           	global	??_checkRWByte
   919  0022                     ??_checkRWByte:	; 0 bytes @ 0x2
   920                           	global	??_checkCMDByte
   921  0022                     ??_checkCMDByte:	; 0 bytes @ 0x2
   922                           	global	readString@readStorage
   923  0022                     readString@readStorage:	; 1 bytes @ 0x2
   924                           	global	makeHexByte@nibOne
   925  0022                     makeHexByte@nibOne:	; 1 bytes @ 0x2
   926  0022                     	ds	1
   927                           	global	makeHexByte@input_byte
   928  0023                     makeHexByte@input_byte:	; 1 bytes @ 0x3
   929                           	global	readString@i
   930  0023                     readString@i:	; 2 bytes @ 0x3
   931  0023                     	ds	1
   932                           	global	??_parsePacket
   933  0024                     ??_parsePacket:	; 0 bytes @ 0x4
   934                           	global	?_validatePacket
   935  0024                     ?_validatePacket:	; 2 bytes @ 0x4
   936  0024                     	ds	1
   937                           	global	readString@ch
   938  0025                     readString@ch:	; 1 bytes @ 0x5
   939  0025                     	ds	3
   940                           	global	parsePacket@dataCounter
   941  0028                     parsePacket@dataCounter:	; 2 bytes @ 0x8
   942  0028                     	ds	2
   943                           	global	parsePacket@i
   944  002A                     parsePacket@i:	; 1 bytes @ 0xA
   945  002A                     	ds	1
   946                           	global	parsePacket@dataPacket
   947  002B                     parsePacket@dataPacket:	; 1 bytes @ 0xB
   948  002B                     	ds	1
   949                           	global	??_getPacket
   950  002C                     ??_getPacket:	; 0 bytes @ 0xC
   951  002C                     	ds	4
   952                           	global	getPacket@arrStore
   953  0030                     getPacket@arrStore:	; 50 bytes @ 0x10
   954  0030                     	ds	50
   955                           	global	??_isr
   956  0062                     ??_isr:	; 0 bytes @ 0x42
   957  0062                     	ds	4
   958 ;;Data sizes: Strings 6, constant 97, data 34, bss 50, persistent 0 stack 0
   959 ;;Auto spaces:   Size  Autos    Used
   960 ;; COMMON          14     14      14
   961 ;; BANK0           80     70      70
   962 ;; BANK1           80     27      61
   963 ;; BANK3           96      0      50
   964 ;; BANK2           96      0       0
   965                           
   966 ;;
   967 ;; Pointer list with targets:
   968                           
   969 ;; i1writeString@userString	PTR unsigned char  size(1) Largest target is 25
   970 ;;		 -> readError(BANK1[25]), 
   971 ;;
   972 ;; ?i1_strlen	unsigned int  size(1) Largest target is 50
   973 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   974 ;;
   975 ;; i1strlen@s	PTR const unsigned char  size(1) Largest target is 50
   976 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   977 ;;
   978 ;; ?_readTemp	unsigned int  size(1) Largest target is 0
   979 ;;
   980 ;; ?_strlen	unsigned int  size(1) Largest target is 50
   981 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   982 ;;
   983 ;; strlen@s	PTR const unsigned char  size(1) Largest target is 50
   984 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   985 ;;
   986 ;; strlen@cp	PTR const unsigned char  size(1) Largest target is 50
   987 ;;		 -> readError(BANK1[25]), getPacket@arrStore(BANK0[50]), main@testString(BANK1[9]), 
   988 ;;
   989 ;; lcdPuts@s	PTR const unsigned char  size(1) Largest target is 6
   990 ;;		 -> STR_1(CODE[6]), 
   991 ;;
   992 ;; parsePacket@dataPacket	PTR unsigned char  size(1) Largest target is 50
   993 ;;		 -> getPacket@arrStore(BANK0[50]), 
   994 ;;
   995 ;; readString@readStorage	PTR unsigned char  size(1) Largest target is 50
   996 ;;		 -> getPacket@arrStore(BANK0[50]), 
   997 ;;
   998 ;; writeString@userString	PTR unsigned char  size(1) Largest target is 25
   999 ;;		 -> readError(BANK1[25]), main@testString(BANK1[9]), 
  1000 ;;
  1001                           
  1002                           
  1003 ;;
  1004 ;; Critical Paths under _main in COMMON
  1005 ;;
  1006 ;;   None.
  1007 ;;
  1008 ;; Critical Paths under _isr in COMMON
  1009 ;;
  1010 ;;   _readCommands->i1_writeString
  1011 ;;   _validatePacket->_addDataToCheckSum
  1012 ;;   _parsePacket->_makeHexByte
  1013 ;;   i1_writeString->i1_strlen
  1014 ;;   _addDataToCheckSum->i1_eeprom_write
  1015 ;;   _checkCS->_eeprom_read
  1016 ;;   _checkCMDByte->i1_eeprom_write
  1017 ;;   _checkRWByte->i1_eeprom_write
  1018 ;;   _checkStartByte->i1_eeprom_write
  1019 ;;   _checkDataFrames->_eeprom_read
  1020 ;;   _checkLength->_eeprom_read
  1021 ;;   _checkEven->_eeprom_read
  1022 ;;   _makeHexByte->i1_eeprom_write
  1023 ;;   _readString->i1_eeprom_write
  1024 ;;   i1_eeprom_write->i1_strlen
  1025 ;;
  1026 ;; Critical Paths under _main in BANK0
  1027 ;;
  1028 ;;   None.
  1029 ;;
  1030 ;; Critical Paths under _isr in BANK0
  1031 ;;
  1032 ;;   _isr->_getPacket
  1033 ;;   _getPacket->_parsePacket
  1034 ;;   _validatePacket->_checkStartByte
  1035 ;;   _validatePacket->_checkRWByte
  1036 ;;   _validatePacket->_checkCMDByte
  1037 ;;   _parsePacket->_makeHexByte
  1038 ;;
  1039 ;; Critical Paths under _main in BANK1
  1040 ;;
  1041 ;;   _main->_writeString
  1042 ;;   _initLCD->_lcdClear
  1043 ;;   _lcdPuts->_lcdWrite
  1044 ;;   _lcdGoto->_lcdWrite
  1045 ;;   _lcdClear->_lcdWrite
  1046 ;;   _lcdWrite->_togE
  1047 ;;   _getTemp->_readTemp
  1048 ;;   _initTemp->_eeprom_write
  1049 ;;   _writeString->_strlen
  1050 ;;
  1051 ;; Critical Paths under _isr in BANK1
  1052 ;;
  1053 ;;   None.
  1054 ;;
  1055 ;; Critical Paths under _main in BANK3
  1056 ;;
  1057 ;;   None.
  1058 ;;
  1059 ;; Critical Paths under _isr in BANK3
  1060 ;;
  1061 ;;   None.
  1062 ;;
  1063 ;; Critical Paths under _main in BANK2
  1064 ;;
  1065 ;;   None.
  1066 ;;
  1067 ;; Critical Paths under _isr in BANK2
  1068 ;;
  1069 ;;   None.
  1070                           
  1071 ;;
  1072 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1073 ;;
  1074                           
  1075 ;;
  1076 ;;Call Graph Tables:
  1077 ;;
  1078 ;; ---------------------------------------------------------------------------------
  1079 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1080 ;; ---------------------------------------------------------------------------------
  1081 ;; (0) _main                                                13    13      0     684
  1082 ;;                                             14 BANK1     13    13      0
  1083 ;;                          _initUSART
  1084 ;;                            _initADC
  1085 ;;                           _initTemp
  1086 ;;                            _initLCD
  1087 ;;                           _lcdClear
  1088 ;;                            _lcdGoto
  1089 ;;                            _lcdPuts
  1090 ;;                        _writeString
  1091 ;;                            _getTemp
  1092 ;; ---------------------------------------------------------------------------------
  1093 ;; (1) _initLCD                                              2     2      0      88
  1094 ;;                                              6 BANK1      2     2      0
  1095 ;;                               _togE
  1096 ;;                           _lcdWrite
  1097 ;;                           _lcdClear
  1098 ;; ---------------------------------------------------------------------------------
  1099 ;; (1) _lcdPuts                                              2     2      0      89
  1100 ;;                                              4 BANK1      2     2      0
  1101 ;;                           _lcdWrite
  1102 ;; ---------------------------------------------------------------------------------
  1103 ;; (1) _lcdGoto                                              3     3      0      66
  1104 ;;                                              4 BANK1      3     3      0
  1105 ;;                           _lcdWrite
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (1) _lcdClear                                             2     2      0      44
  1108 ;;                                              4 BANK1      2     2      0
  1109 ;;                           _lcdWrite
  1110 ;; ---------------------------------------------------------------------------------
  1111 ;; (2) _lcdWrite                                             2     2      0      44
  1112 ;;                                              2 BANK1      2     2      0
  1113 ;;                               _togE
  1114 ;; ---------------------------------------------------------------------------------
  1115 ;; (1) _getTemp                                              3     3      0      95
  1116 ;;                                              4 BANK1      3     3      0
  1117 ;;                         _selectTemp
  1118 ;;                           _readTemp
  1119 ;;                       _eeprom_write
  1120 ;; ---------------------------------------------------------------------------------
  1121 ;; (3) _togE                                                 2     2      0       0
  1122 ;;                                              0 BANK1      2     2      0
  1123 ;; ---------------------------------------------------------------------------------
  1124 ;; (1) _initTemp                                             1     1      0      50
  1125 ;;                                              3 BANK1      1     1      0
  1126 ;;                       _eeprom_write
  1127 ;; ---------------------------------------------------------------------------------
  1128 ;; (2) _readTemp                                             4     2      2       0
  1129 ;;                                              0 BANK1      4     2      2
  1130 ;; ---------------------------------------------------------------------------------
  1131 ;; (1) _writeString                                          4     4      0     223
  1132 ;;                                             10 BANK1      4     4      0
  1133 ;;                          _writeByte
  1134 ;;                             _strlen
  1135 ;; ---------------------------------------------------------------------------------
  1136 ;; (1) _initADC                                              0     0      0       0
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; (2) _selectTemp                                           0     0      0       0
  1139 ;; ---------------------------------------------------------------------------------
  1140 ;; (2) _eeprom_write                                         3     2      1      50
  1141 ;;                                              0 BANK1      3     2      1
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (2) _strlen                                              10     8      2      89
  1144 ;;                                              0 BANK1     10     8      2
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; (2) _writeByte                                            1     1      0      22
  1147 ;;                                              0 BANK1      1     1      0
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; (1) _initUSART                                            0     0      0       0
  1150 ;; ---------------------------------------------------------------------------------
  1151 ;; Estimated maximum stack depth 3
  1152 ;; ---------------------------------------------------------------------------------
  1153 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1154 ;; ---------------------------------------------------------------------------------
  1155 ;; (5) _isr                                                  4     4      0    3905
  1156 ;;                                             66 BANK0      4     4      0
  1157 ;;                          _getPacket
  1158 ;; ---------------------------------------------------------------------------------
  1159 ;; (6) _getPacket                                           54    54      0    3905
  1160 ;;                                             12 BANK0     54    54      0
  1161 ;;                     i1_eeprom_write
  1162 ;;                         _readString
  1163 ;;                        _parsePacket
  1164 ;;                     _validatePacket
  1165 ;;                        _eeprom_read
  1166 ;;                       _readCommands
  1167 ;;                      _writeCommands
  1168 ;; ---------------------------------------------------------------------------------
  1169 ;; (7) _readCommands                                         0     0      0     831
  1170 ;;                        i1_writeByte
  1171 ;;                      i1_writeString
  1172 ;;                        _eeprom_read
  1173 ;; ---------------------------------------------------------------------------------
  1174 ;; (7) _validatePacket                                       2     0      2    1215
  1175 ;;                                              4 BANK0      2     0      2
  1176 ;;                     _checkStartByte
  1177 ;;                        _checkRWByte
  1178 ;;                       _checkCMDByte
  1179 ;;                    _checkDataFrames
  1180 ;;                  _addDataToCheckSum
  1181 ;;                            _checkCS
  1182 ;; ---------------------------------------------------------------------------------
  1183 ;; (7) _parsePacket                                          8     8      0    1208
  1184 ;;                                              4 BANK0      8     8      0
  1185 ;;                        _checkLength
  1186 ;;                          _checkEven
  1187 ;;                        _makeHexByte
  1188 ;;                     i1_eeprom_write
  1189 ;;                           i1_strlen
  1190 ;;                        _eeprom_read
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (8) i1_writeString                                        4     4      0     736
  1193 ;;                                             10 COMMON     4     4      0
  1194 ;;                        i1_writeByte
  1195 ;;                           i1_strlen
  1196 ;; ---------------------------------------------------------------------------------
  1197 ;; (8) _addDataToCheckSum                                    3     3      0     236
  1198 ;;                                             13 COMMON     1     1      0
  1199 ;;                                              0 BANK0      2     2      0
  1200 ;;                        _eeprom_read
  1201 ;;                     i1_eeprom_write
  1202 ;; ---------------------------------------------------------------------------------
  1203 ;; (8) _checkCS                                              3     1      2      95
  1204 ;;                                              2 COMMON     3     1      2
  1205 ;;                        _eeprom_read
  1206 ;;                        i1_writeByte
  1207 ;; ---------------------------------------------------------------------------------
  1208 ;; (8) _checkCMDByte                                         4     2      2     263
  1209 ;;                                              0 BANK0      4     2      2
  1210 ;;                        _eeprom_read
  1211 ;;                     i1_eeprom_write
  1212 ;;                        i1_writeByte
  1213 ;; ---------------------------------------------------------------------------------
  1214 ;; (8) _checkRWByte                                          4     2      2     263
  1215 ;;                                              0 BANK0      4     2      2
  1216 ;;                        _eeprom_read
  1217 ;;                        i1_writeByte
  1218 ;;                     i1_eeprom_write
  1219 ;; ---------------------------------------------------------------------------------
  1220 ;; (8) _checkStartByte                                       4     2      2     263
  1221 ;;                                              0 BANK0      4     2      2
  1222 ;;                        _eeprom_read
  1223 ;;                        i1_writeByte
  1224 ;;                     i1_eeprom_write
  1225 ;; ---------------------------------------------------------------------------------
  1226 ;; (8) _checkDataFrames                                      8     6      2      95
  1227 ;;                                              2 COMMON     8     6      2
  1228 ;;                        _eeprom_read
  1229 ;;                        i1_writeByte
  1230 ;; ---------------------------------------------------------------------------------
  1231 ;; (8) _checkLength                                          3     1      2      95
  1232 ;;                                              2 COMMON     3     1      2
  1233 ;;                        _eeprom_read
  1234 ;;                        i1_writeByte
  1235 ;; ---------------------------------------------------------------------------------
  1236 ;; (8) _checkEven                                            3     1      2      95
  1237 ;;                                              2 COMMON     3     1      2
  1238 ;;                        _eeprom_read
  1239 ;;                        i1_writeByte
  1240 ;; ---------------------------------------------------------------------------------
  1241 ;; (8) _makeHexByte                                          5     4      1     134
  1242 ;;                                             13 COMMON     1     0      1
  1243 ;;                                              0 BANK0      4     4      0
  1244 ;;                         _makeNibble
  1245 ;;                     i1_eeprom_write (ARG)
  1246 ;;                           i1_strlen (ARG)
  1247 ;; ---------------------------------------------------------------------------------
  1248 ;; (7) _readString                                           6     6      0     399
  1249 ;;                                              0 BANK0      6     6      0
  1250 ;;                           _readByte
  1251 ;;                        i1_writeByte
  1252 ;;                     i1_eeprom_write
  1253 ;; ---------------------------------------------------------------------------------
  1254 ;; (9) i1_strlen                                            10     8      2     294
  1255 ;;                                              0 COMMON    10     8      2
  1256 ;; ---------------------------------------------------------------------------------
  1257 ;; (9) i1_eeprom_write                                       3     2      1     168
  1258 ;;                                             10 COMMON     3     2      1
  1259 ;;                         _makeNibble (ARG)
  1260 ;;                           i1_strlen (ARG)
  1261 ;;                        _eeprom_read (ARG)
  1262 ;; ---------------------------------------------------------------------------------
  1263 ;; (9) i1_writeByte                                          1     1      0      73
  1264 ;;                                              0 COMMON     1     1      0
  1265 ;; ---------------------------------------------------------------------------------
  1266 ;; (7) _writeCommands                                        0     0      0       0
  1267 ;; ---------------------------------------------------------------------------------
  1268 ;; (8) _eeprom_read                                          2     2      0      22
  1269 ;;                                              0 COMMON     2     2      0
  1270 ;; ---------------------------------------------------------------------------------
  1271 ;; (9) _makeNibble                                           1     1      0      66
  1272 ;;                                              0 COMMON     1     1      0
  1273 ;; ---------------------------------------------------------------------------------
  1274 ;; (8) _readByte                                             0     0      0       0
  1275 ;; ---------------------------------------------------------------------------------
  1276 ;; Estimated maximum stack depth 9
  1277 ;; ---------------------------------------------------------------------------------
  1278                           
  1279 ;; Call Graph Graphs:
  1280                           
  1281 ;; _main (ROOT)
  1282 ;;   _initUSART
  1283 ;;   _initADC
  1284 ;;   _initTemp
  1285 ;;     _eeprom_write
  1286 ;;   _initLCD
  1287 ;;     _togE
  1288 ;;     _lcdWrite
  1289 ;;       _togE
  1290 ;;     _lcdClear
  1291 ;;       _lcdWrite
  1292 ;;         _togE
  1293 ;;   _lcdClear
  1294 ;;     _lcdWrite
  1295 ;;       _togE
  1296 ;;   _lcdGoto
  1297 ;;     _lcdWrite
  1298 ;;       _togE
  1299 ;;   _lcdPuts
  1300 ;;     _lcdWrite
  1301 ;;       _togE
  1302 ;;   _writeString
  1303 ;;     _writeByte
  1304 ;;     _strlen
  1305 ;;   _getTemp
  1306 ;;     _selectTemp
  1307 ;;     _readTemp
  1308 ;;     _eeprom_write
  1309 ;;
  1310 ;; _isr (ROOT)
  1311 ;;   _getPacket
  1312 ;;     i1_eeprom_write
  1313 ;;       _makeNibble (ARG)
  1314 ;;       i1_strlen (ARG)
  1315 ;;       _eeprom_read (ARG)
  1316 ;;     _readString
  1317 ;;       _readByte
  1318 ;;       i1_writeByte
  1319 ;;       i1_eeprom_write
  1320 ;;         _makeNibble (ARG)
  1321 ;;         i1_strlen (ARG)
  1322 ;;         _eeprom_read (ARG)
  1323 ;;     _parsePacket
  1324 ;;       _checkLength
  1325 ;;         _eeprom_read
  1326 ;;         i1_writeByte
  1327 ;;       _checkEven
  1328 ;;         _eeprom_read
  1329 ;;         i1_writeByte
  1330 ;;       _makeHexByte
  1331 ;;         _makeNibble
  1332 ;;         i1_eeprom_write (ARG)
  1333 ;;           _makeNibble (ARG)
  1334 ;;           i1_strlen (ARG)
  1335 ;;           _eeprom_read (ARG)
  1336 ;;         i1_strlen (ARG)
  1337 ;;       i1_eeprom_write
  1338 ;;         _makeNibble (ARG)
  1339 ;;         i1_strlen (ARG)
  1340 ;;         _eeprom_read (ARG)
  1341 ;;       i1_strlen
  1342 ;;       _eeprom_read
  1343 ;;     _validatePacket
  1344 ;;       _checkStartByte
  1345 ;;         _eeprom_read
  1346 ;;         i1_writeByte
  1347 ;;         i1_eeprom_write
  1348 ;;           _makeNibble (ARG)
  1349 ;;           i1_strlen (ARG)
  1350 ;;           _eeprom_read (ARG)
  1351 ;;       _checkRWByte
  1352 ;;         _eeprom_read
  1353 ;;         i1_writeByte
  1354 ;;         i1_eeprom_write
  1355 ;;           _makeNibble (ARG)
  1356 ;;           i1_strlen (ARG)
  1357 ;;           _eeprom_read (ARG)
  1358 ;;       _checkCMDByte
  1359 ;;         _eeprom_read
  1360 ;;         i1_eeprom_write
  1361 ;;           _makeNibble (ARG)
  1362 ;;           i1_strlen (ARG)
  1363 ;;           _eeprom_read (ARG)
  1364 ;;         i1_writeByte
  1365 ;;       _checkDataFrames
  1366 ;;         _eeprom_read
  1367 ;;         i1_writeByte
  1368 ;;       _addDataToCheckSum
  1369 ;;         _eeprom_read
  1370 ;;         i1_eeprom_write
  1371 ;;           _makeNibble (ARG)
  1372 ;;           i1_strlen (ARG)
  1373 ;;           _eeprom_read (ARG)
  1374 ;;       _checkCS
  1375 ;;         _eeprom_read
  1376 ;;         i1_writeByte
  1377 ;;     _eeprom_read
  1378 ;;     _readCommands
  1379 ;;       i1_writeByte
  1380 ;;       i1_writeString
  1381 ;;         i1_writeByte
  1382 ;;         i1_strlen
  1383 ;;       _eeprom_read
  1384 ;;     _writeCommands
  1385 ;;
  1386                           
  1387 ;; Address spaces:
  1388                           
  1389 ;;Name               Size   Autos  Total    Cost      Usage
  1390 ;;BANK3               60      0      32       9       52.1%
  1391 ;;BITBANK3            60      0       0       8        0.0%
  1392 ;;SFR3                 0      0       0       4        0.0%
  1393 ;;BITSFR3              0      0       0       4        0.0%
  1394 ;;BANK2               60      0       0      11        0.0%
  1395 ;;BITBANK2            60      0       0      10        0.0%
  1396 ;;SFR2                 0      0       0       5        0.0%
  1397 ;;BITSFR2              0      0       0       5        0.0%
  1398 ;;SFR1                 0      0       0       2        0.0%
  1399 ;;BITSFR1              0      0       0       2        0.0%
  1400 ;;BANK1               50     1B      3D       7       76.3%
  1401 ;;BITBANK1            50      0       0       6        0.0%
  1402 ;;CODE                 0      0       0       0        0.0%
  1403 ;;DATA                 0      0      D1      12        0.0%
  1404 ;;ABS                  0      0      C3       3        0.0%
  1405 ;;NULL                 0      0       0       0        0.0%
  1406 ;;STACK                0      0       E       2        0.0%
  1407 ;;BANK0               50     46      46       5       87.5%
  1408 ;;BITBANK0            50      0       0       4        0.0%
  1409 ;;SFR0                 0      0       0       1        0.0%
  1410 ;;BITSFR0              0      0       0       1        0.0%
  1411 ;;COMMON               E      E       E       1      100.0%
  1412 ;;BITCOMMON            E      0       0       0        0.0%
  1413 ;;EEDATA             100      0       0       0        0.0%
  1414                           
  1415                           	global	_main
  1416                           psect	maintext,global,class=CODE,delta=2
  1417                           global __pmaintext
  1418  0700                     __pmaintext:
  1419                           
  1420 ;; *************** function _main *****************
  1421 ;; Defined at:
  1422 ;;		line 51 in file "main.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  testString      9   18[BANK1 ] unsigned char [9]
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  2  3997[COMMON] int 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 17F/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1436 ;;      Params:         0       0       0       0       0
  1437 ;;      Locals:         0       0       9       0       0
  1438 ;;      Temps:          0       0       4       0       0
  1439 ;;      Totals:         0       0      13       0       0
  1440 ;;Total ram usage:       13 bytes
  1441 ;; Hardware stack levels required when called:    9
  1442 ;; This function calls:
  1443 ;;		_initUSART
  1444 ;;		_initADC
  1445 ;;		_initTemp
  1446 ;;		_initLCD
  1447 ;;		_lcdClear
  1448 ;;		_lcdGoto
  1449 ;;		_lcdPuts
  1450 ;;		_writeString
  1451 ;;		_getTemp
  1452 ;; This function is called by:
  1453 ;;		Startup code after reset
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           psect	maintext
  1457                           	file	"main.c"
  1458                           	line	51
  1459                           	global	__size_of_main
  1460  0058                     	__size_of_main	equ	__end_of_main-_main
  1461                           	
  1462  0700                     _main:	
  1463 ;; hardware stack exceeded
  1464                           	opt	stack 0
  1465                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1466                           	line	52
  1467                           	
  1468  0700                     l9777:	
  1469                           ;main.c: 52: char testString[] = "Welcome\n";
  1470  0700  30D4               	movlw	(main@testString)&0ffh
  1471  0701  0084               	movwf	fsr0
  1472  0702  30A0               	movlw	low(main@F1186)
  1473  0703  1683               	bsf	status, 5	;RP0=1, select bank1
  1474  0704  1303               	bcf	status, 6	;RP1=0, select bank1
  1475  0705  00D0               	movwf	(??_main+0)^080h+0
  1476  0706  0804               	movf	fsr0,w
  1477  0707  00D1               	movwf	((??_main+0)^080h+0+1)
  1478  0708  3009               	movlw	9
  1479  0709  00D2               	movwf	((??_main+0)^080h+0+2)
  1480  070A                     u3210:
  1481  070A  0850               	movf	(??_main+0)^080h+0,w
  1482  070B  0084               	movwf	fsr0
  1483  070C  1383               	bcf	status, 7	;select IRP bank1
  1484                           	
  1485  070D  0800               	movf	indf,w
  1486  070E  00D3               	movwf	((??_main+0)^080h+0+3)
  1487  070F  0AD0               	incf	(??_main+0)^080h+0,f
  1488  0710  0851               	movf	((??_main+0)^080h+0+1),w
  1489  0711  0084               	movwf	fsr0
  1490                           	
  1491  0712  0853               	movf	((??_main+0)^080h+0+3),w
  1492  0713  0080               	movwf	indf
  1493  0714  0AD1               	incf	((??_main+0)^080h+0+1),f
  1494  0715  0BD2               	decfsz	((??_main+0)^080h+0+2),f
  1495  0716  2F0A               	goto	u3210
  1496                           	line	56
  1497                           	
  1498  0717                     l9779:	
  1499                           ;main.c: 56: initUSART();
  1500  0717  120A  158A  24D4   	fcall	_initUSART
              120A  118A         
  1501                           	line	58
  1502                           	
  1503  071C                     l9781:	
  1504                           ;main.c: 58: initADC();
  1505  071C  120A  158A  249D   	fcall	_initADC
              120A  118A         
  1506                           	line	60
  1507                           	
  1508  0721                     l9783:	
  1509                           ;main.c: 60: initTemp();
  1510  0721  120A  118A  251D   	fcall	_initTemp
              120A  118A         
  1511                           	line	62
  1512                           	
  1513  0726                     l9785:	
  1514                           ;main.c: 62: initLCD();
  1515  0726  120A  118A  25E8   	fcall	_initLCD
              120A  118A         
  1516                           	line	63
  1517                           	
  1518  072B                     l9787:	
  1519                           ;main.c: 63: lcdClear();
  1520  072B  120A  158A  24F9   	fcall	_lcdClear
              120A  118A         
  1521                           	line	64
  1522                           	
  1523  0730                     l9789:	
  1524                           ;main.c: 64: lcdGoto(0x00);
  1525  0730  3000               	movlw	(0)
  1526  0731  120A  158A  250E   	fcall	_lcdGoto
              120A  118A         
  1527                           	line	65
  1528                           	
  1529  0736                     l9791:	
  1530                           ;main.c: 65: lcdPuts("Hello");
  1531  0736  3062               	movlw	((STR_1-__stringbase))&0ffh
  1532  0737  120A  158A  2642   	fcall	_lcdPuts
              120A  118A         
  1533                           	line	68
  1534                           	
  1535  073C                     l9793:	
  1536                           ;main.c: 68: writeString(testString);
  1537  073C  30D4               	movlw	(main@testString)&0ffh
  1538  073D  120A  158A  2795   	fcall	_writeString
              120A  118A         
  1539  0742  2F43               	goto	l9795
  1540                           	line	72
  1541                           ;main.c: 72: while(1){
  1542                           	
  1543  0743                     l4000:	
  1544                           	line	73
  1545                           	
  1546  0743                     l9795:	
  1547                           ;main.c: 73: getTemp();
  1548  0743  120A  158A  27CA   	fcall	_getTemp
              120A  118A         
  1549                           	line	74
  1550                           	
  1551  0748                     l9797:	
  1552                           ;main.c: 74: _delay((unsigned long)((10)*(20000000/4000.0)));
  1553                           	opt asmopt_off
  1554  0748  3041               movlw	65
  1555  0749  1683               	bsf	status, 5	;RP0=1, select bank1
  1556  074A  1303               	bcf	status, 6	;RP1=0, select bank1
  1557  074B  00D1               movwf	((??_main+0)^080h+0+1),f
  1558  074C  30EE               	movlw	238
  1559  074D  00D0               movwf	((??_main+0)^080h+0),f
  1560  074E                     u3227:
  1561  074E  0BD0               	decfsz	((??_main+0)^080h+0),f
  1562  074F  2F4E               	goto	u3227
  1563  0750  0BD1               	decfsz	((??_main+0)^080h+0+1),f
  1564  0751  2F4E               	goto	u3227
  1565  0752  0064               	clrwdt
  1566                           opt asmopt_on
  1567                           
  1568  0753  2F43               	goto	l9795
  1569                           	line	75
  1570                           	
  1571  0754                     l4001:	
  1572                           	line	72
  1573  0754  2F43               	goto	l9795
  1574                           	
  1575  0755                     l4002:	
  1576                           	line	80
  1577                           ;main.c: 75: }
  1578                           ;main.c: 79: return 0;
  1579                           ;	Return value of _main is never used
  1580                           	
  1581  0755                     l4003:	
  1582                           	global	start
  1583  0755  120A  118A  2812   	ljmp	start
  1584                           	opt stack 0
  1585                           GLOBAL	__end_of_main
  1586  0758                     	__end_of_main:
  1587 ;; =============== function _main ends ============
  1588                           
  1589                           	signat	_main,90
  1590                           	global	_initLCD
  1591                           psect	text877,local,class=CODE,delta=2
  1592                           global __ptext877
  1593  05E8                     __ptext877:
  1594                           
  1595 ;; *************** function _initLCD *****************
  1596 ;; Defined at:
  1597 ;;		line 6 in file "16x4LCD.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;		None               void
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, pclath, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1611 ;;      Params:         0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0
  1613 ;;      Temps:          0       0       2       0       0
  1614 ;;      Totals:         0       0       2       0       0
  1615 ;;Total ram usage:        2 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    8
  1618 ;; This function calls:
  1619 ;;		_togE
  1620 ;;		_lcdWrite
  1621 ;;		_lcdClear
  1622 ;; This function is called by:
  1623 ;;		_main
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           psect	text877
  1627                           	file	"16x4LCD.c"
  1628                           	line	6
  1629                           	global	__size_of_initLCD
  1630  005F                     	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  1631                           	
  1632  05E8                     _initLCD:	
  1633 ;; hardware stack exceeded
  1634                           	opt	stack 0
  1635                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1636                           	line	7
  1637                           	
  1638  05E8                     l9735:	
  1639                           ;16x4LCD.c: 7: TRISD = 0x00;
  1640  05E8  1683               	bsf	status, 5	;RP0=1, select bank1
  1641  05E9  1303               	bcf	status, 6	;RP1=0, select bank1
  1642  05EA  0188               	clrf	(136)^080h	;volatile
  1643                           	line	8
  1644                           	
  1645  05EB                     l9737:	
  1646                           ;16x4LCD.c: 8: RD1 = 0;
  1647  05EB  1283               	bcf	status, 5	;RP0=0, select bank0
  1648  05EC  1303               	bcf	status, 6	;RP1=0, select bank0
  1649  05ED  1088               	bcf	(65/8),(65)&7
  1650                           	line	9
  1651                           	
  1652  05EE                     l9739:	
  1653                           ;16x4LCD.c: 9: RD2 = 0;
  1654  05EE  1108               	bcf	(66/8),(66)&7
  1655                           	line	10
  1656                           	
  1657  05EF                     l9741:	
  1658                           ;16x4LCD.c: 10: RD0 = 0;
  1659  05EF  1008               	bcf	(64/8),(64)&7
  1660                           	line	11
  1661                           	
  1662  05F0                     l9743:	
  1663                           ;16x4LCD.c: 11: RD4 = 0;
  1664  05F0  1208               	bcf	(68/8),(68)&7
  1665                           	line	12
  1666                           	
  1667  05F1                     l9745:	
  1668                           ;16x4LCD.c: 12: RD5 = 0;
  1669  05F1  1288               	bcf	(69/8),(69)&7
  1670                           	line	13
  1671                           	
  1672  05F2                     l9747:	
  1673                           ;16x4LCD.c: 13: RD6 = 0;
  1674  05F2  1308               	bcf	(70/8),(70)&7
  1675                           	line	14
  1676                           	
  1677  05F3                     l9749:	
  1678                           ;16x4LCD.c: 14: RD7 = 0;
  1679  05F3  1388               	bcf	(71/8),(71)&7
  1680                           	line	15
  1681                           	
  1682  05F4                     l9751:	
  1683                           ;16x4LCD.c: 15: _delay((unsigned long)((15)*(20000000/4000.0)));
  1684                           	opt asmopt_off
  1685  05F4  3062               movlw	98
  1686  05F5  1683               	bsf	status, 5	;RP0=1, select bank1
  1687  05F6  1303               	bcf	status, 6	;RP1=0, select bank1
  1688  05F7  00C9               movwf	((??_initLCD+0)^080h+0+1),f
  1689  05F8  3065               	movlw	101
  1690  05F9  00C8               movwf	((??_initLCD+0)^080h+0),f
  1691  05FA                     u3237:
  1692  05FA  0BC8               	decfsz	((??_initLCD+0)^080h+0),f
  1693  05FB  2DFA               	goto	u3237
  1694  05FC  0BC9               	decfsz	((??_initLCD+0)^080h+0+1),f
  1695  05FD  2DFA               	goto	u3237
  1696  05FE  2DFF               	nop2
  1697                           opt asmopt_on
  1698                           
  1699                           	line	16
  1700                           	
  1701  05FF                     l9753:	
  1702                           ;16x4LCD.c: 16: PORTD = 0x30;
  1703  05FF  3030               	movlw	(030h)
  1704  0600  1283               	bcf	status, 5	;RP0=0, select bank0
  1705  0601  1303               	bcf	status, 6	;RP1=0, select bank0
  1706  0602  0088               	movwf	(8)	;volatile
  1707                           	line	17
  1708                           	
  1709  0603                     l9755:	
  1710                           ;16x4LCD.c: 17: togE();
  1711  0603  120A  158A  2546   	fcall	_togE
              120A  118A         
  1712                           	line	18
  1713                           	
  1714  0608                     l9757:	
  1715                           ;16x4LCD.c: 18: _delay((unsigned long)((5)*(20000000/4000.0)));
  1716                           	opt asmopt_off
  1717  0608  3021               movlw	33
  1718  0609  1683               	bsf	status, 5	;RP0=1, select bank1
  1719  060A  1303               	bcf	status, 6	;RP1=0, select bank1
  1720  060B  00C9               movwf	((??_initLCD+0)^080h+0+1),f
  1721  060C  3076               	movlw	118
  1722  060D  00C8               movwf	((??_initLCD+0)^080h+0),f
  1723  060E                     u3247:
  1724  060E  0BC8               	decfsz	((??_initLCD+0)^080h+0),f
  1725  060F  2E0E               	goto	u3247
  1726  0610  0BC9               	decfsz	((??_initLCD+0)^080h+0+1),f
  1727  0611  2E0E               	goto	u3247
  1728  0612  0064               	clrwdt
  1729                           opt asmopt_on
  1730                           
  1731                           	line	19
  1732                           	
  1733  0613                     l9759:	
  1734                           ;16x4LCD.c: 19: togE();
  1735  0613  120A  158A  2546   	fcall	_togE
              120A  118A         
  1736                           	line	20
  1737                           	
  1738  0618                     l9761:	
  1739                           ;16x4LCD.c: 20: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1740                           	opt asmopt_off
  1741  0618  30F9               movlw	249
  1742  0619  1683               	bsf	status, 5	;RP0=1, select bank1
  1743  061A  1303               	bcf	status, 6	;RP1=0, select bank1
  1744  061B  00C8               movwf	(??_initLCD+0)^080h+0,f
  1745  061C                     u3257:
  1746  061C  0064               	clrwdt
  1747  061D  0BC8               decfsz	(??_initLCD+0)^080h+0,f
  1748  061E  2E1C               	goto	u3257
  1749  061F  2E20               	nop2	;nop
  1750  0620  0064               	clrwdt
  1751                           opt asmopt_on
  1752                           
  1753                           	line	21
  1754                           	
  1755  0621                     l9763:	
  1756                           ;16x4LCD.c: 21: togE();
  1757  0621  120A  158A  2546   	fcall	_togE
              120A  118A         
  1758                           	line	22
  1759                           	
  1760  0626                     l9765:	
  1761                           ;16x4LCD.c: 22: PORTD = 0x20;
  1762  0626  3020               	movlw	(020h)
  1763  0627  1283               	bcf	status, 5	;RP0=0, select bank0
  1764  0628  1303               	bcf	status, 6	;RP1=0, select bank0
  1765  0629  0088               	movwf	(8)	;volatile
  1766                           	line	23
  1767                           	
  1768  062A                     l9767:	
  1769                           ;16x4LCD.c: 23: togE();
  1770  062A  120A  158A  2546   	fcall	_togE
              120A  118A         
  1771                           	line	25
  1772                           	
  1773  062F                     l9769:	
  1774                           ;16x4LCD.c: 25: lcdWrite(0x28);
  1775  062F  3028               	movlw	(028h)
  1776  0630  120A  158A  2619   	fcall	_lcdWrite
              120A  118A         
  1777                           	line	26
  1778                           	
  1779  0635                     l9771:	
  1780                           ;16x4LCD.c: 26: lcdWrite(0xF0);
  1781  0635  30F0               	movlw	(0F0h)
  1782  0636  120A  158A  2619   	fcall	_lcdWrite
              120A  118A         
  1783                           	line	27
  1784                           	
  1785  063B                     l9773:	
  1786                           ;16x4LCD.c: 27: lcdClear();
  1787  063B  120A  158A  24F9   	fcall	_lcdClear
              120A  118A         
  1788                           	line	28
  1789                           	
  1790  0640                     l9775:	
  1791                           ;16x4LCD.c: 28: lcdWrite(0x60);
  1792  0640  3060               	movlw	(060h)
  1793  0641  120A  158A  2619   	fcall	_lcdWrite
              120A  118A         
  1794                           	line	30
  1795                           	
  1796  0646                     l5570:	
  1797  0646  0008               	return
  1798                           	opt stack 0
  1799                           GLOBAL	__end_of_initLCD
  1800  0647                     	__end_of_initLCD:
  1801 ;; =============== function _initLCD ends ============
  1802                           
  1803                           	signat	_initLCD,88
  1804                           	global	_lcdPuts
  1805                           psect	text878,local,class=CODE,delta=2
  1806                           global __ptext878
  1807  0E42                     __ptext878:
  1808                           
  1809 ;; *************** function _lcdPuts *****************
  1810 ;; Defined at:
  1811 ;;		line 53 in file "16x4LCD.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  s               1    wreg     PTR const unsigned char 
  1814 ;;		 -> STR_1(6), 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  s               1    5[BANK1 ] PTR const unsigned char 
  1817 ;;		 -> STR_1(6), 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;		None               void
  1820 ;; Registers used:
  1821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1827 ;;      Params:         0       0       0       0       0
  1828 ;;      Locals:         0       0       1       0       0
  1829 ;;      Temps:          0       0       1       0       0
  1830 ;;      Totals:         0       0       2       0       0
  1831 ;;Total ram usage:        2 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:    7
  1834 ;; This function calls:
  1835 ;;		_lcdWrite
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           psect	text878
  1841                           	file	"16x4LCD.c"
  1842                           	line	53
  1843                           	global	__size_of_lcdPuts
  1844  002C                     	__size_of_lcdPuts	equ	__end_of_lcdPuts-_lcdPuts
  1845                           	
  1846  0E42                     _lcdPuts:	
  1847 ;; using string table level
  1848                           	opt	stack 1
  1849                           ; Regs used in _lcdPuts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1850                           ;lcdPuts@s stored from wreg
  1851  0E42  1683               	bsf	status, 5	;RP0=1, select bank1
  1852  0E43  1303               	bcf	status, 6	;RP1=0, select bank1
  1853  0E44  00C7               	movwf	(lcdPuts@s)^080h
  1854                           	line	54
  1855                           	
  1856  0E45                     l9727:	
  1857                           ;16x4LCD.c: 54: RD0 = 1;
  1858  0E45  1283               	bcf	status, 5	;RP0=0, select bank0
  1859  0E46  1303               	bcf	status, 6	;RP1=0, select bank0
  1860  0E47  1408               	bsf	(64/8),(64)&7
  1861                           	line	55
  1862                           ;16x4LCD.c: 55: while(*s)
  1863  0E48  2E5E               	goto	l9733
  1864                           	
  1865  0E49                     l5583:	
  1866                           	line	56
  1867                           	
  1868  0E49                     l9729:	
  1869                           ;16x4LCD.c: 56: lcdWrite(*s++);
  1870  0E49  1683               	bsf	status, 5	;RP0=1, select bank1
  1871  0E4A  1303               	bcf	status, 6	;RP1=0, select bank1
  1872  0E4B  0847               	movf	(lcdPuts@s)^080h,w
  1873  0E4C  0084               	movwf	fsr0
  1874  0E4D  120A  118A  2446   	fcall	stringdir
              120A  158A         
  1875  0E52  120A  158A  2619   	fcall	_lcdWrite
              120A  158A         
  1876                           	
  1877  0E57                     l9731:	
  1878  0E57  3001               	movlw	(01h)
  1879  0E58  1683               	bsf	status, 5	;RP0=1, select bank1
  1880  0E59  1303               	bcf	status, 6	;RP1=0, select bank1
  1881  0E5A  00C6               	movwf	(??_lcdPuts+0)^080h+0
  1882  0E5B  0846               	movf	(??_lcdPuts+0)^080h+0,w
  1883  0E5C  07C7               	addwf	(lcdPuts@s)^080h,f
  1884  0E5D  2E5E               	goto	l9733
  1885                           	
  1886  0E5E                     l5582:	
  1887                           	line	55
  1888                           	
  1889  0E5E                     l9733:	
  1890  0E5E  1683               	bsf	status, 5	;RP0=1, select bank1
  1891  0E5F  1303               	bcf	status, 6	;RP1=0, select bank1
  1892  0E60  0847               	movf	(lcdPuts@s)^080h,w
  1893  0E61  0084               	movwf	fsr0
  1894  0E62  120A  118A  2446   	fcall	stringdir
              120A  158A         
  1895  0E67  3800               	iorlw	0
  1896  0E68  1D03               	skipz
  1897  0E69  2E6B               	goto	u3201
  1898  0E6A  2E6C               	goto	u3200
  1899  0E6B                     u3201:
  1900  0E6B  2E49               	goto	l9729
  1901  0E6C                     u3200:
  1902  0E6C  2E6D               	goto	l5585
  1903                           	
  1904  0E6D                     l5584:	
  1905                           	line	57
  1906                           	
  1907  0E6D                     l5585:	
  1908  0E6D  0008               	return
  1909                           	opt stack 0
  1910                           GLOBAL	__end_of_lcdPuts
  1911  0E6E                     	__end_of_lcdPuts:
  1912 ;; =============== function _lcdPuts ends ============
  1913                           
  1914                           	signat	_lcdPuts,4216
  1915                           	global	_lcdGoto
  1916                           psect	text879,local,class=CODE,delta=2
  1917                           global __ptext879
  1918  0D0E                     __ptext879:
  1919                           
  1920 ;; *************** function _lcdGoto *****************
  1921 ;; Defined at:
  1922 ;;		line 64 in file "16x4LCD.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  pos             1    wreg     unsigned char 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  pos             1    6[BANK1 ] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;		None               void
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, pclath, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       0       0       0       0
  1937 ;;      Locals:         0       0       1       0       0
  1938 ;;      Temps:          0       0       2       0       0
  1939 ;;      Totals:         0       0       3       0       0
  1940 ;;Total ram usage:        3 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    7
  1943 ;; This function calls:
  1944 ;;		_lcdWrite
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           psect	text879
  1950                           	file	"16x4LCD.c"
  1951                           	line	64
  1952                           	global	__size_of_lcdGoto
  1953  001B                     	__size_of_lcdGoto	equ	__end_of_lcdGoto-_lcdGoto
  1954                           	
  1955  0D0E                     _lcdGoto:	
  1956                           	opt	stack 0
  1957                           ; Regs used in _lcdGoto: [wreg+status,2+status,0+pclath+cstack]
  1958                           ;lcdGoto@pos stored from wreg
  1959  0D0E  1683               	bsf	status, 5	;RP0=1, select bank1
  1960  0D0F  1303               	bcf	status, 6	;RP1=0, select bank1
  1961  0D10  00C8               	movwf	(lcdGoto@pos)^080h
  1962                           	line	65
  1963                           	
  1964  0D11                     l9721:	
  1965                           ;16x4LCD.c: 65: RD0 = 0;
  1966  0D11  1283               	bcf	status, 5	;RP0=0, select bank0
  1967  0D12  1303               	bcf	status, 6	;RP1=0, select bank0
  1968  0D13  1008               	bcf	(64/8),(64)&7
  1969                           	line	66
  1970                           	
  1971  0D14                     l9723:	
  1972                           ;16x4LCD.c: 66: lcdWrite(0x80+pos);
  1973  0D14  1683               	bsf	status, 5	;RP0=1, select bank1
  1974  0D15  1303               	bcf	status, 6	;RP1=0, select bank1
  1975  0D16  0848               	movf	(lcdGoto@pos)^080h,w
  1976  0D17  3E80               	addlw	080h
  1977  0D18  120A  158A  2619   	fcall	_lcdWrite
              120A  158A         
  1978                           	line	67
  1979                           	
  1980  0D1D                     l9725:	
  1981                           ;16x4LCD.c: 67: _delay((unsigned long)((10)*(20000000/4000.0)));
  1982                           	opt asmopt_off
  1983  0D1D  3041               movlw	65
  1984  0D1E  1683               	bsf	status, 5	;RP0=1, select bank1
  1985  0D1F  1303               	bcf	status, 6	;RP1=0, select bank1
  1986  0D20  00C7               movwf	((??_lcdGoto+0)^080h+0+1),f
  1987  0D21  30EE               	movlw	238
  1988  0D22  00C6               movwf	((??_lcdGoto+0)^080h+0),f
  1989  0D23                     u3267:
  1990  0D23  0BC6               	decfsz	((??_lcdGoto+0)^080h+0),f
  1991  0D24  2D23               	goto	u3267
  1992  0D25  0BC7               	decfsz	((??_lcdGoto+0)^080h+0+1),f
  1993  0D26  2D23               	goto	u3267
  1994  0D27  0064               	clrwdt
  1995                           opt asmopt_on
  1996                           
  1997                           	line	68
  1998                           	
  1999  0D28                     l5591:	
  2000  0D28  0008               	return
  2001                           	opt stack 0
  2002                           GLOBAL	__end_of_lcdGoto
  2003  0D29                     	__end_of_lcdGoto:
  2004 ;; =============== function _lcdGoto ends ============
  2005                           
  2006                           	signat	_lcdGoto,4216
  2007                           	global	_lcdClear
  2008                           psect	text880,local,class=CODE,delta=2
  2009                           global __ptext880
  2010  0CF9                     __ptext880:
  2011                           
  2012 ;; *************** function _lcdClear *****************
  2013 ;; Defined at:
  2014 ;;		line 47 in file "16x4LCD.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;		None               void
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         0       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0
  2030 ;;      Temps:          0       0       2       0       0
  2031 ;;      Totals:         0       0       2       0       0
  2032 ;;Total ram usage:        2 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    7
  2035 ;; This function calls:
  2036 ;;		_lcdWrite
  2037 ;; This function is called by:
  2038 ;;		_main
  2039 ;;		_initLCD
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           psect	text880
  2043                           	file	"16x4LCD.c"
  2044                           	line	47
  2045                           	global	__size_of_lcdClear
  2046  0015                     	__size_of_lcdClear	equ	__end_of_lcdClear-_lcdClear
  2047                           	
  2048  0CF9                     _lcdClear:	
  2049                           	opt	stack 0
  2050                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  2051                           	line	48
  2052                           	
  2053  0CF9                     l9715:	
  2054                           ;16x4LCD.c: 48: RD0 = 0;
  2055  0CF9  1283               	bcf	status, 5	;RP0=0, select bank0
  2056  0CFA  1303               	bcf	status, 6	;RP1=0, select bank0
  2057  0CFB  1008               	bcf	(64/8),(64)&7
  2058                           	line	49
  2059                           	
  2060  0CFC                     l9717:	
  2061                           ;16x4LCD.c: 49: lcdWrite(0x10);
  2062  0CFC  3010               	movlw	(010h)
  2063  0CFD  120A  158A  2619   	fcall	_lcdWrite
              120A  158A         
  2064                           	line	50
  2065                           	
  2066  0D02                     l9719:	
  2067                           ;16x4LCD.c: 50: _delay((unsigned long)((2)*(20000000/4000.0)));
  2068                           	opt asmopt_off
  2069  0D02  300D               movlw	13
  2070  0D03  1683               	bsf	status, 5	;RP0=1, select bank1
  2071  0D04  1303               	bcf	status, 6	;RP1=0, select bank1
  2072  0D05  00C7               movwf	((??_lcdClear+0)^080h+0+1),f
  2073  0D06  30FB               	movlw	251
  2074  0D07  00C6               movwf	((??_lcdClear+0)^080h+0),f
  2075  0D08                     u3277:
  2076  0D08  0BC6               	decfsz	((??_lcdClear+0)^080h+0),f
  2077  0D09  2D08               	goto	u3277
  2078  0D0A  0BC7               	decfsz	((??_lcdClear+0)^080h+0+1),f
  2079  0D0B  2D08               	goto	u3277
  2080  0D0C  2D0D               	nop2
  2081                           opt asmopt_on
  2082                           
  2083                           	line	51
  2084                           	
  2085  0D0D                     l5579:	
  2086  0D0D  0008               	return
  2087                           	opt stack 0
  2088                           GLOBAL	__end_of_lcdClear
  2089  0D0E                     	__end_of_lcdClear:
  2090 ;; =============== function _lcdClear ends ============
  2091                           
  2092                           	signat	_lcdClear,88
  2093                           	global	_lcdWrite
  2094                           psect	text881,local,class=CODE,delta=2
  2095                           global __ptext881
  2096  0E19                     __ptext881:
  2097                           
  2098 ;; *************** function _lcdWrite *****************
  2099 ;; Defined at:
  2100 ;;		line 39 in file "16x4LCD.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  c               1    wreg     unsigned char 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  c               1    3[BANK1 ] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;		None               void
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0, pclath, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2114 ;;      Params:         0       0       0       0       0
  2115 ;;      Locals:         0       0       1       0       0
  2116 ;;      Temps:          0       0       1       0       0
  2117 ;;      Totals:         0       0       2       0       0
  2118 ;;Total ram usage:        2 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    6
  2121 ;; This function calls:
  2122 ;;		_togE
  2123 ;; This function is called by:
  2124 ;;		_initLCD
  2125 ;;		_lcdClear
  2126 ;;		_lcdPuts
  2127 ;;		_lcdGoto
  2128 ;;		_lcdPutch
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           psect	text881
  2132                           	file	"16x4LCD.c"
  2133                           	line	39
  2134                           	global	__size_of_lcdWrite
  2135  0029                     	__size_of_lcdWrite	equ	__end_of_lcdWrite-_lcdWrite
  2136                           	
  2137  0E19                     _lcdWrite:	
  2138                           	opt	stack 0
  2139                           ; Regs used in _lcdWrite: [wreg+status,2+status,0+pclath+cstack]
  2140                           ;lcdWrite@c stored from wreg
  2141  0E19  1683               	bsf	status, 5	;RP0=1, select bank1
  2142  0E1A  1303               	bcf	status, 6	;RP1=0, select bank1
  2143  0E1B  00C5               	movwf	(lcdWrite@c)^080h
  2144                           	line	40
  2145                           	
  2146  0E1C                     l9705:	
  2147                           ;16x4LCD.c: 40: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2148                           	opt asmopt_off
  2149  0E1C  3042               movlw	66
  2150  0E1D  00C4               movwf	(??_lcdWrite+0)^080h+0,f
  2151  0E1E                     u3287:
  2152  0E1E  0BC4               decfsz	(??_lcdWrite+0)^080h+0,f
  2153  0E1F  2E1E               	goto	u3287
  2154  0E20  0064               	clrwdt
  2155                           opt asmopt_on
  2156                           
  2157                           	line	41
  2158                           	
  2159  0E21                     l9707:	
  2160                           ;16x4LCD.c: 41: PORTD = ((c >> 4) & 0xF0);
  2161  0E21  1683               	bsf	status, 5	;RP0=1, select bank1
  2162  0E22  1303               	bcf	status, 6	;RP1=0, select bank1
  2163  0E23  0845               	movf	(lcdWrite@c)^080h,w
  2164  0E24  00C4               	movwf	(??_lcdWrite+0)^080h+0
  2165  0E25  3004               	movlw	04h
  2166  0E26                     u3195:
  2167  0E26  1003               	clrc
  2168  0E27  0CC4               	rrf	(??_lcdWrite+0)^080h+0,f
  2169  0E28  3EFF               	addlw	-1
  2170  0E29  1D03               	skipz
  2171  0E2A  2E26               	goto	u3195
  2172  0E2B  0844               	movf	0+(??_lcdWrite+0)^080h+0,w
  2173  0E2C  39F0               	andlw	0F0h
  2174  0E2D  1283               	bcf	status, 5	;RP0=0, select bank0
  2175  0E2E  1303               	bcf	status, 6	;RP1=0, select bank0
  2176  0E2F  0088               	movwf	(8)	;volatile
  2177                           	line	42
  2178                           	
  2179  0E30                     l9709:	
  2180                           ;16x4LCD.c: 42: togE();
  2181  0E30  120A  158A  2546   	fcall	_togE
              120A  158A         
  2182                           	line	43
  2183                           	
  2184  0E35                     l9711:	
  2185                           ;16x4LCD.c: 43: PORTD = (c & 0xF0);
  2186  0E35  1683               	bsf	status, 5	;RP0=1, select bank1
  2187  0E36  1303               	bcf	status, 6	;RP1=0, select bank1
  2188  0E37  0845               	movf	(lcdWrite@c)^080h,w
  2189  0E38  39F0               	andlw	0F0h
  2190  0E39  1283               	bcf	status, 5	;RP0=0, select bank0
  2191  0E3A  1303               	bcf	status, 6	;RP1=0, select bank0
  2192  0E3B  0088               	movwf	(8)	;volatile
  2193                           	line	44
  2194                           	
  2195  0E3C                     l9713:	
  2196                           ;16x4LCD.c: 44: togE();
  2197  0E3C  120A  158A  2546   	fcall	_togE
              120A  158A         
  2198                           	line	45
  2199                           	
  2200  0E41                     l5576:	
  2201  0E41  0008               	return
  2202                           	opt stack 0
  2203                           GLOBAL	__end_of_lcdWrite
  2204  0E42                     	__end_of_lcdWrite:
  2205 ;; =============== function _lcdWrite ends ============
  2206                           
  2207                           	signat	_lcdWrite,4216
  2208                           	global	_getTemp
  2209                           psect	text882,local,class=CODE,delta=2
  2210                           global __ptext882
  2211  0FCA                     __ptext882:
  2212                           
  2213 ;; *************** function _getTemp *****************
  2214 ;; Defined at:
  2215 ;;		line 45 in file "Temperature.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;		None
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  tempReading     2    5[BANK1 ] unsigned int 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;		None               void
  2222 ;; Registers used:
  2223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2229 ;;      Params:         0       0       0       0       0
  2230 ;;      Locals:         0       0       2       0       0
  2231 ;;      Temps:          0       0       1       0       0
  2232 ;;      Totals:         0       0       3       0       0
  2233 ;;Total ram usage:        3 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    6
  2236 ;; This function calls:
  2237 ;;		_selectTemp
  2238 ;;		_readTemp
  2239 ;;		_eeprom_write
  2240 ;; This function is called by:
  2241 ;;		_main
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           psect	text882
  2245                           	file	"Temperature.c"
  2246                           	global	__size_of_getTemp
  2247  0036                     	__size_of_getTemp	equ	__end_of_getTemp-_getTemp
  2248                           	
  2249  0FCA                     _getTemp:	
  2250                           	opt	stack 1
  2251                           ; Regs used in _getTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2252                           	line	48
  2253                           	
  2254  0FCA                     l9697:	
  2255                           ;Temperature.c: 46: unsigned int tempReading;
  2256                           ;Temperature.c: 48: selectTemp();
  2257  0FCA  120A  158A  2485   	fcall	_selectTemp
              120A  158A         
  2258                           	line	50
  2259                           	
  2260  0FCF                     l9699:	
  2261                           ;Temperature.c: 50: tempReading = readTemp();
  2262  0FCF  120A  158A  25F0   	fcall	_readTemp
              120A  158A         
  2263  0FD4  1683               	bsf	status, 5	;RP0=1, select bank1
  2264  0FD5  1303               	bcf	status, 6	;RP1=0, select bank1
  2265  0FD6  0843               	movf	(1+(?_readTemp))^080h,w
  2266  0FD7  01C8               	clrf	(getTemp@tempReading+1)^080h
  2267  0FD8  07C8               	addwf	(getTemp@tempReading+1)^080h
  2268  0FD9  0842               	movf	(0+(?_readTemp))^080h,w
  2269  0FDA  01C7               	clrf	(getTemp@tempReading)^080h
  2270  0FDB  07C7               	addwf	(getTemp@tempReading)^080h
  2271                           
  2272                           	line	52
  2273                           	
  2274  0FDC                     l9701:	
  2275                           ;Temperature.c: 52: eeprom_write(tempValLAddr,tempReading);
  2276  0FDC  0847               	movf	(getTemp@tempReading)^080h,w
  2277  0FDD  00C6               	movwf	(??_getTemp+0)^080h+0
  2278  0FDE  0846               	movf	(??_getTemp+0)^080h+0,w
  2279  0FDF  00C2               	movwf	(?_eeprom_write)^080h
  2280  0FE0  305D               	movlw	(_tempValLAddr-__stringbase)
  2281  0FE1  0084               	movwf	fsr0
  2282  0FE2  120A  118A  2446   	fcall	stringdir
              120A  158A         
  2283  0FE7  120A  118A  27A9   	fcall	_eeprom_write
              120A  158A         
  2284                           	line	54
  2285                           	
  2286  0FEC                     l9703:	
  2287                           ;Temperature.c: 54: eeprom_write(tempValHAddr+1,tempReading>>8);
  2288  0FEC  1683               	bsf	status, 5	;RP0=1, select bank1
  2289  0FED  1303               	bcf	status, 6	;RP1=0, select bank1
  2290  0FEE  0848               	movf	(getTemp@tempReading+1)^080h,w
  2291  0FEF  00C6               	movwf	(??_getTemp+0)^080h+0
  2292  0FF0  0846               	movf	(??_getTemp+0)^080h+0,w
  2293  0FF1  00C2               	movwf	(?_eeprom_write)^080h
  2294  0FF2  305C               	movlw	(_tempValHAddr-__stringbase)
  2295  0FF3  0084               	movwf	fsr0
  2296  0FF4  120A  118A  2446   	fcall	stringdir
              120A  158A         
  2297  0FF9  3E01               	addlw	01h
  2298  0FFA  120A  118A  27A9   	fcall	_eeprom_write
              120A  158A         
  2299                           	line	55
  2300                           	
  2301  0FFF                     l2422:	
  2302  0FFF  0008               	return
  2303                           	opt stack 0
  2304                           GLOBAL	__end_of_getTemp
  2305  1000                     	__end_of_getTemp:
  2306 ;; =============== function _getTemp ends ============
  2307                           
  2308                           	signat	_getTemp,88
  2309                           	global	_togE
  2310                           psect	text883,local,class=CODE,delta=2
  2311                           global __ptext883
  2312  0D46                     __ptext883:
  2313                           
  2314 ;; *************** function _togE *****************
  2315 ;; Defined at:
  2316 ;;		line 32 in file "16x4LCD.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;		None               void
  2323 ;; Registers used:
  2324 ;;		wreg
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2330 ;;      Params:         0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0
  2332 ;;      Temps:          0       0       2       0       0
  2333 ;;      Totals:         0       0       2       0       0
  2334 ;;Total ram usage:        2 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    5
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_initLCD
  2341 ;;		_lcdWrite
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           psect	text883
  2345                           	file	"16x4LCD.c"
  2346                           	line	32
  2347                           	global	__size_of_togE
  2348  001D                     	__size_of_togE	equ	__end_of_togE-_togE
  2349                           	
  2350  0D46                     _togE:	
  2351                           	opt	stack 0
  2352                           ; Regs used in _togE: [wreg]
  2353                           	line	33
  2354                           	
  2355  0D46                     l9691:	
  2356                           ;16x4LCD.c: 33: RD2 = 1;
  2357  0D46  1283               	bcf	status, 5	;RP0=0, select bank0
  2358  0D47  1303               	bcf	status, 6	;RP1=0, select bank0
  2359  0D48  1508               	bsf	(66/8),(66)&7
  2360                           	line	34
  2361                           	
  2362  0D49                     l9693:	
  2363                           ;16x4LCD.c: 34: _delay((unsigned long)((2)*(20000000/4000.0)));
  2364                           	opt asmopt_off
  2365  0D49  300D               movlw	13
  2366  0D4A  1683               	bsf	status, 5	;RP0=1, select bank1
  2367  0D4B  1303               	bcf	status, 6	;RP1=0, select bank1
  2368  0D4C  00C3               movwf	((??_togE+0)^080h+0+1),f
  2369  0D4D  30FB               	movlw	251
  2370  0D4E  00C2               movwf	((??_togE+0)^080h+0),f
  2371  0D4F                     u3297:
  2372  0D4F  0BC2               	decfsz	((??_togE+0)^080h+0),f
  2373  0D50  2D4F               	goto	u3297
  2374  0D51  0BC3               	decfsz	((??_togE+0)^080h+0+1),f
  2375  0D52  2D4F               	goto	u3297
  2376  0D53  2D54               	nop2
  2377                           opt asmopt_on
  2378                           
  2379                           	line	35
  2380                           	
  2381  0D54                     l9695:	
  2382                           ;16x4LCD.c: 35: RD2 = 0;
  2383  0D54  1283               	bcf	status, 5	;RP0=0, select bank0
  2384  0D55  1303               	bcf	status, 6	;RP1=0, select bank0
  2385  0D56  1108               	bcf	(66/8),(66)&7
  2386                           	line	36
  2387                           ;16x4LCD.c: 36: _delay((unsigned long)((2)*(20000000/4000.0)));
  2388                           	opt asmopt_off
  2389  0D57  300D               movlw	13
  2390  0D58  1683               	bsf	status, 5	;RP0=1, select bank1
  2391  0D59  1303               	bcf	status, 6	;RP1=0, select bank1
  2392  0D5A  00C3               movwf	((??_togE+0)^080h+0+1),f
  2393  0D5B  30FB               	movlw	251
  2394  0D5C  00C2               movwf	((??_togE+0)^080h+0),f
  2395  0D5D                     u3307:
  2396  0D5D  0BC2               	decfsz	((??_togE+0)^080h+0),f
  2397  0D5E  2D5D               	goto	u3307
  2398  0D5F  0BC3               	decfsz	((??_togE+0)^080h+0+1),f
  2399  0D60  2D5D               	goto	u3307
  2400  0D61  2D62               	nop2
  2401                           opt asmopt_on
  2402                           
  2403                           	line	37
  2404                           	
  2405  0D62                     l5573:	
  2406  0D62  0008               	return
  2407                           	opt stack 0
  2408                           GLOBAL	__end_of_togE
  2409  0D63                     	__end_of_togE:
  2410 ;; =============== function _togE ends ============
  2411                           
  2412                           	signat	_togE,88
  2413                           	global	_initTemp
  2414                           psect	text884,local,class=CODE,delta=2
  2415                           global __ptext884
  2416  051D                     __ptext884:
  2417                           
  2418 ;; *************** function _initTemp *****************
  2419 ;; Defined at:
  2420 ;;		line 24 in file "Temperature.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;		None               void
  2427 ;; Registers used:
  2428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2434 ;;      Params:         0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0
  2436 ;;      Temps:          0       0       1       0       0
  2437 ;;      Totals:         0       0       1       0       0
  2438 ;;Total ram usage:        1 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    6
  2441 ;; This function calls:
  2442 ;;		_eeprom_write
  2443 ;; This function is called by:
  2444 ;;		_main
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           psect	text884
  2448                           	file	"Temperature.c"
  2449                           	line	24
  2450                           	global	__size_of_initTemp
  2451  0067                     	__size_of_initTemp	equ	__end_of_initTemp-_initTemp
  2452                           	
  2453  051D                     _initTemp:	
  2454                           	opt	stack 1
  2455                           ; Regs used in _initTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2456                           	line	26
  2457                           	
  2458  051D                     l9689:	
  2459                           ;Temperature.c: 26: eeprom_write(tempValHAddr,0x00);
  2460  051D  1683               	bsf	status, 5	;RP0=1, select bank1
  2461  051E  1303               	bcf	status, 6	;RP1=0, select bank1
  2462  051F  01C2               	clrf	(?_eeprom_write)^080h
  2463  0520  305C               	movlw	(_tempValHAddr-__stringbase)
  2464  0521  0084               	movwf	fsr0
  2465  0522  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2466  0527  120A  118A  27A9   	fcall	_eeprom_write
              120A  118A         
  2467                           	line	27
  2468                           ;Temperature.c: 27: eeprom_write(tempValLAddr, 0x00);
  2469  052C  1683               	bsf	status, 5	;RP0=1, select bank1
  2470  052D  1303               	bcf	status, 6	;RP1=0, select bank1
  2471  052E  01C2               	clrf	(?_eeprom_write)^080h
  2472  052F  305D               	movlw	(_tempValLAddr-__stringbase)
  2473  0530  0084               	movwf	fsr0
  2474  0531  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2475  0536  120A  118A  27A9   	fcall	_eeprom_write
              120A  118A         
  2476                           	line	28
  2477                           ;Temperature.c: 28: eeprom_write(tempHiAddr, tempStartHi);
  2478  053B  3059               	movlw	(_tempStartHi-__stringbase)
  2479  053C  0084               	movwf	fsr0
  2480  053D  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2481  0542  1683               	bsf	status, 5	;RP0=1, select bank1
  2482  0543  1303               	bcf	status, 6	;RP1=0, select bank1
  2483  0544  00C5               	movwf	(??_initTemp+0)^080h+0
  2484  0545  0845               	movf	(??_initTemp+0)^080h+0,w
  2485  0546  00C2               	movwf	(?_eeprom_write)^080h
  2486  0547  3057               	movlw	(_tempHiAddr-__stringbase)
  2487  0548  0084               	movwf	fsr0
  2488  0549  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2489  054E  120A  118A  27A9   	fcall	_eeprom_write
              120A  118A         
  2490                           	line	29
  2491                           ;Temperature.c: 29: eeprom_write(tempLoAddr, tempStartLo);
  2492  0553  305A               	movlw	(_tempStartLo-__stringbase)
  2493  0554  0084               	movwf	fsr0
  2494  0555  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2495  055A  1683               	bsf	status, 5	;RP0=1, select bank1
  2496  055B  1303               	bcf	status, 6	;RP1=0, select bank1
  2497  055C  00C5               	movwf	(??_initTemp+0)^080h+0
  2498  055D  0845               	movf	(??_initTemp+0)^080h+0,w
  2499  055E  00C2               	movwf	(?_eeprom_write)^080h
  2500  055F  3058               	movlw	(_tempLoAddr-__stringbase)
  2501  0560  0084               	movwf	fsr0
  2502  0561  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2503  0566  120A  118A  27A9   	fcall	_eeprom_write
              120A  118A         
  2504                           	line	30
  2505                           ;Temperature.c: 30: eeprom_write(tempUnitAddr, tempC);
  2506  056B  3055               	movlw	(_tempC-__stringbase)
  2507  056C  0084               	movwf	fsr0
  2508  056D  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2509  0572  1683               	bsf	status, 5	;RP0=1, select bank1
  2510  0573  1303               	bcf	status, 6	;RP1=0, select bank1
  2511  0574  00C5               	movwf	(??_initTemp+0)^080h+0
  2512  0575  0845               	movf	(??_initTemp+0)^080h+0,w
  2513  0576  00C2               	movwf	(?_eeprom_write)^080h
  2514  0577  305B               	movlw	(_tempUnitAddr-__stringbase)
  2515  0578  0084               	movwf	fsr0
  2516  0579  120A  118A  2446   	fcall	stringdir
              120A  118A         
  2517  057E  120A  118A  27A9   	fcall	_eeprom_write
              120A  118A         
  2518                           	line	31
  2519                           	
  2520  0583                     l2410:	
  2521  0583  0008               	return
  2522                           	opt stack 0
  2523                           GLOBAL	__end_of_initTemp
  2524  0584                     	__end_of_initTemp:
  2525 ;; =============== function _initTemp ends ============
  2526                           
  2527                           	signat	_initTemp,88
  2528                           	global	_readTemp
  2529                           psect	text885,local,class=CODE,delta=2
  2530                           global __ptext885
  2531  0DF0                     __ptext885:
  2532                           
  2533 ;; *************** function _readTemp *****************
  2534 ;; Defined at:
  2535 ;;		line 7 in file "Temperature.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;		None
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  2    0[BANK1 ] unsigned int 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0, btemp+1
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         0       0       2       0       0
  2550 ;;      Locals:         0       0       0       0       0
  2551 ;;      Temps:          0       0       2       0       0
  2552 ;;      Totals:         0       0       4       0       0
  2553 ;;Total ram usage:        4 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    5
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_getTemp
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           psect	text885
  2563                           	file	"Temperature.c"
  2564                           	line	7
  2565                           	global	__size_of_readTemp
  2566  0029                     	__size_of_readTemp	equ	__end_of_readTemp-_readTemp
  2567                           	
  2568  0DF0                     _readTemp:	
  2569                           	opt	stack 1
  2570                           ; Regs used in _readTemp: [wreg+status,2+status,0+btemp+1]
  2571                           	line	9
  2572                           	
  2573  0DF0                     l9679:	
  2574                           ;Temperature.c: 9: ADON = 1;
  2575  0DF0  1283               	bcf	status, 5	;RP0=0, select bank0
  2576  0DF1  1303               	bcf	status, 6	;RP1=0, select bank0
  2577  0DF2  141F               	bsf	(248/8),(248)&7
  2578                           	line	13
  2579                           	
  2580  0DF3                     l9681:	
  2581                           ;Temperature.c: 13: _delay((unsigned long)((10)*(20000000/4000.0)));
  2582                           	opt asmopt_off
  2583  0DF3  3041               movlw	65
  2584  0DF4  1683               	bsf	status, 5	;RP0=1, select bank1
  2585  0DF5  1303               	bcf	status, 6	;RP1=0, select bank1
  2586  0DF6  00C5               movwf	((??_readTemp+0)^080h+0+1),f
  2587  0DF7  30EE               	movlw	238
  2588  0DF8  00C4               movwf	((??_readTemp+0)^080h+0),f
  2589  0DF9                     u3317:
  2590  0DF9  0BC4               	decfsz	((??_readTemp+0)^080h+0),f
  2591  0DFA  2DF9               	goto	u3317
  2592  0DFB  0BC5               	decfsz	((??_readTemp+0)^080h+0+1),f
  2593  0DFC  2DF9               	goto	u3317
  2594  0DFD  0064               	clrwdt
  2595                           opt asmopt_on
  2596                           
  2597                           	line	15
  2598                           	
  2599  0DFE                     l9683:	
  2600                           ;Temperature.c: 15: GO_nDONE = 1;
  2601  0DFE  1283               	bcf	status, 5	;RP0=0, select bank0
  2602  0DFF  1303               	bcf	status, 6	;RP1=0, select bank0
  2603  0E00  151F               	bsf	(250/8),(250)&7
  2604                           	line	18
  2605                           ;Temperature.c: 18: while(GO_nDONE);
  2606  0E01  2E02               	goto	l2404
  2607                           	
  2608  0E02                     l2405:	
  2609                           	
  2610  0E02                     l2404:	
  2611  0E02  191F               	btfsc	(250/8),(250)&7
  2612  0E03  2E05               	goto	u3181
  2613  0E04  2E06               	goto	u3180
  2614  0E05                     u3181:
  2615  0E05  2E02               	goto	l2404
  2616  0E06                     u3180:
  2617  0E06  2E07               	goto	l9685
  2618                           	
  2619  0E07                     l2406:	
  2620                           	line	21
  2621                           	
  2622  0E07                     l9685:	
  2623                           ;Temperature.c: 21: return ((ADRESH<<8)+ADRESL);
  2624  0E07  081E               	movf	(30),w	;volatile
  2625  0E08  1683               	bsf	status, 5	;RP0=1, select bank1
  2626  0E09  1303               	bcf	status, 6	;RP1=0, select bank1
  2627  0E0A  00C4               	movwf	(??_readTemp+0)^080h+0
  2628  0E0B  01C5               	clrf	(??_readTemp+0)^080h+0+1
  2629  0E0C  0844               	movf	(??_readTemp+0)^080h+0,w
  2630  0E0D  00C5               	movwf	(??_readTemp+0)^080h+1
  2631  0E0E  01C4               	clrf	(??_readTemp+0)^080h+0
  2632  0E0F  081E               	movf	(158)^080h,w	;volatile
  2633  0E10  0744               	addwf	0+(??_readTemp+0)^080h+0,w
  2634  0E11  00C2               	movwf	(?_readTemp)^080h
  2635  0E12  3000               	movlw	0
  2636  0E13  1803               	skipnc
  2637  0E14  3001               	movlw	1
  2638  0E15  0745               	addwf	1+(??_readTemp+0)^080h+0,w
  2639  0E16  00C3               	movwf	1+(?_readTemp)^080h
  2640  0E17  2E18               	goto	l2407
  2641                           	
  2642  0E18                     l9687:	
  2643                           	line	22
  2644                           	
  2645  0E18                     l2407:	
  2646  0E18  0008               	return
  2647                           	opt stack 0
  2648                           GLOBAL	__end_of_readTemp
  2649  0E19                     	__end_of_readTemp:
  2650 ;; =============== function _readTemp ends ============
  2651                           
  2652                           	signat	_readTemp,90
  2653                           	global	_writeString
  2654                           psect	text886,local,class=CODE,delta=2
  2655                           global __ptext886
  2656  0F95                     __ptext886:
  2657                           
  2658 ;; *************** function _writeString *****************
  2659 ;; Defined at:
  2660 ;;		line 140 in file "Bluetooth.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  userString      1    wreg     PTR unsigned char 
  2663 ;;		 -> readError(25), main@testString(9), 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  userString      1   11[BANK1 ] PTR unsigned char 
  2666 ;;		 -> readError(25), main@testString(9), 
  2667 ;;  i               2   12[BANK1 ] unsigned int 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;		None               void
  2670 ;; Registers used:
  2671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2677 ;;      Params:         0       0       0       0       0
  2678 ;;      Locals:         0       0       3       0       0
  2679 ;;      Temps:          0       0       1       0       0
  2680 ;;      Totals:         0       0       4       0       0
  2681 ;;Total ram usage:        4 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    6
  2684 ;; This function calls:
  2685 ;;		_writeByte
  2686 ;;		_strlen
  2687 ;; This function is called by:
  2688 ;;		_main
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           psect	text886
  2692                           	file	"Bluetooth.c"
  2693                           	line	140
  2694                           	global	__size_of_writeString
  2695  0035                     	__size_of_writeString	equ	__end_of_writeString-_writeString
  2696                           	
  2697  0F95                     _writeString:	
  2698                           	opt	stack 1
  2699                           ; Regs used in _writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2700                           ;writeString@userString stored from wreg
  2701                           	line	144
  2702  0F95  1683               	bsf	status, 5	;RP0=1, select bank1
  2703  0F96  1303               	bcf	status, 6	;RP1=0, select bank1
  2704  0F97  00CD               	movwf	(writeString@userString)^080h
  2705                           	
  2706  0F98                     l9669:	
  2707                           ;Bluetooth.c: 142: unsigned int i;
  2708                           ;Bluetooth.c: 144: for(i = 0;i<strlen(userString);i++){
  2709  0F98  01CE               	clrf	(writeString@i)^080h
  2710  0F99  01CF               	clrf	(writeString@i+1)^080h
  2711  0F9A  2FB0               	goto	l9675
  2712                           	
  2713  0F9B                     l788:	
  2714                           	line	145
  2715                           	
  2716  0F9B                     l9671:	
  2717                           ;Bluetooth.c: 145: writeByte(userString[i]);
  2718  0F9B  084E               	movf	(writeString@i)^080h,w
  2719  0F9C  074D               	addwf	(writeString@userString)^080h,w
  2720  0F9D  00CC               	movwf	(??_writeString+0)^080h+0
  2721  0F9E  084C               	movf	0+(??_writeString+0)^080h+0,w
  2722  0F9F  0084               	movwf	fsr0
  2723  0FA0  1383               	bcf	status, 7	;select IRP bank0
  2724  0FA1  0800               	movf	indf,w
  2725  0FA2  120A  158A  24C3   	fcall	_writeByte
              120A  158A         
  2726                           	line	144
  2727                           	
  2728  0FA7                     l9673:	
  2729  0FA7  3001               	movlw	low(01h)
  2730  0FA8  1683               	bsf	status, 5	;RP0=1, select bank1
  2731  0FA9  1303               	bcf	status, 6	;RP1=0, select bank1
  2732  0FAA  07CE               	addwf	(writeString@i)^080h,f
  2733  0FAB  1803               	skipnc
  2734  0FAC  0ACF               	incf	(writeString@i+1)^080h,f
  2735  0FAD  3000               	movlw	high(01h)
  2736  0FAE  07CF               	addwf	(writeString@i+1)^080h,f
  2737  0FAF  2FB0               	goto	l9675
  2738                           	
  2739  0FB0                     l787:	
  2740                           	
  2741  0FB0                     l9675:	
  2742  0FB0  084D               	movf	(writeString@userString)^080h,w
  2743  0FB1  120A  158A  272E   	fcall	_strlen
              120A  158A         
  2744  0FB6  1683               	bsf	status, 5	;RP0=1, select bank1
  2745  0FB7  1303               	bcf	status, 6	;RP1=0, select bank1
  2746  0FB8  0843               	movf	(1+(?_strlen))^080h,w
  2747  0FB9  024F               	subwf	(writeString@i+1)^080h,w
  2748  0FBA  1D03               	skipz
  2749  0FBB  2FBE               	goto	u3175
  2750  0FBC  0842               	movf	(0+(?_strlen))^080h,w
  2751  0FBD  024E               	subwf	(writeString@i)^080h,w
  2752  0FBE                     u3175:
  2753  0FBE  1C03               	skipc
  2754  0FBF  2FC1               	goto	u3171
  2755  0FC0  2FC2               	goto	u3170
  2756  0FC1                     u3171:
  2757  0FC1  2F9B               	goto	l9671
  2758  0FC2                     u3170:
  2759  0FC2  2FC3               	goto	l9677
  2760                           	
  2761  0FC3                     l789:	
  2762                           	line	148
  2763                           	
  2764  0FC3                     l9677:	
  2765                           ;Bluetooth.c: 146: }
  2766                           ;Bluetooth.c: 148: writeByte((unsigned char)i);
  2767  0FC3  084E               	movf	(writeString@i)^080h,w
  2768  0FC4  120A  158A  24C3   	fcall	_writeByte
              120A  158A         
  2769                           	line	150
  2770                           	
  2771  0FC9                     l790:	
  2772  0FC9  0008               	return
  2773                           	opt stack 0
  2774                           GLOBAL	__end_of_writeString
  2775  0FCA                     	__end_of_writeString:
  2776 ;; =============== function _writeString ends ============
  2777                           
  2778                           	signat	_writeString,4216
  2779                           	global	_initADC
  2780                           psect	text887,local,class=CODE,delta=2
  2781                           global __ptext887
  2782  0C9D                     __ptext887:
  2783                           
  2784 ;; *************** function _initADC *****************
  2785 ;; Defined at:
  2786 ;;		line 7 in file "customADC.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;		None               void
  2793 ;; Registers used:
  2794 ;;		wreg
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2800 ;;      Params:         0       0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0
  2803 ;;      Totals:         0       0       0       0       0
  2804 ;;Total ram usage:        0 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:    5
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_main
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           psect	text887
  2814                           	file	"customADC.c"
  2815                           	line	7
  2816                           	global	__size_of_initADC
  2817  000B                     	__size_of_initADC	equ	__end_of_initADC-_initADC
  2818                           	
  2819  0C9D                     _initADC:	
  2820                           	opt	stack 2
  2821                           ; Regs used in _initADC: [wreg]
  2822                           	line	8
  2823                           	
  2824  0C9D                     l9563:	
  2825                           ;customADC.c: 8: TRISA = 0x03;
  2826  0C9D  3003               	movlw	(03h)
  2827  0C9E  1683               	bsf	status, 5	;RP0=1, select bank1
  2828  0C9F  1303               	bcf	status, 6	;RP1=0, select bank1
  2829  0CA0  0085               	movwf	(133)^080h	;volatile
  2830                           	line	22
  2831                           ;customADC.c: 22: ADCON1 = 0x0F;
  2832  0CA1  300F               	movlw	(0Fh)
  2833  0CA2  009F               	movwf	(159)^080h	;volatile
  2834                           	line	39
  2835                           ;customADC.c: 39: ADCON0 = 0x80;
  2836  0CA3  3080               	movlw	(080h)
  2837  0CA4  1283               	bcf	status, 5	;RP0=0, select bank0
  2838  0CA5  1303               	bcf	status, 6	;RP1=0, select bank0
  2839  0CA6  009F               	movwf	(31)	;volatile
  2840                           	line	40
  2841                           	
  2842  0CA7                     l3187:	
  2843  0CA7  0008               	return
  2844                           	opt stack 0
  2845                           GLOBAL	__end_of_initADC
  2846  0CA8                     	__end_of_initADC:
  2847 ;; =============== function _initADC ends ============
  2848                           
  2849                           	signat	_initADC,88
  2850                           	global	_selectTemp
  2851                           psect	text888,local,class=CODE,delta=2
  2852                           global __ptext888
  2853  0C85                     __ptext888:
  2854                           
  2855 ;; *************** function _selectTemp *****************
  2856 ;; Defined at:
  2857 ;;		line 43 in file "customADC.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;		None               void
  2864 ;; Registers used:
  2865 ;;		wreg
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2871 ;;      Params:         0       0       0       0       0
  2872 ;;      Locals:         0       0       0       0       0
  2873 ;;      Temps:          0       0       0       0       0
  2874 ;;      Totals:         0       0       0       0       0
  2875 ;;Total ram usage:        0 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    5
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_getTemp
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           psect	text888
  2885                           	file	"customADC.c"
  2886                           	line	43
  2887                           	global	__size_of_selectTemp
  2888  0005                     	__size_of_selectTemp	equ	__end_of_selectTemp-_selectTemp
  2889                           	
  2890  0C85                     _selectTemp:	
  2891                           	opt	stack 1
  2892                           ; Regs used in _selectTemp: [wreg]
  2893                           	line	44
  2894                           	
  2895  0C85                     l9561:	
  2896                           ;customADC.c: 44: ADCON0 = 0x80;
  2897  0C85  3080               	movlw	(080h)
  2898  0C86  1283               	bcf	status, 5	;RP0=0, select bank0
  2899  0C87  1303               	bcf	status, 6	;RP1=0, select bank0
  2900  0C88  009F               	movwf	(31)	;volatile
  2901                           	line	45
  2902                           	
  2903  0C89                     l3190:	
  2904  0C89  0008               	return
  2905                           	opt stack 0
  2906                           GLOBAL	__end_of_selectTemp
  2907  0C8A                     	__end_of_selectTemp:
  2908 ;; =============== function _selectTemp ends ============
  2909                           
  2910                           	signat	_selectTemp,88
  2911                           	global	_eeprom_write
  2912                           psect	text889,local,class=CODE,delta=2
  2913                           global __ptext889
  2914  07A9                     __ptext889:
  2915                           
  2916 ;; *************** function _eeprom_write *****************
  2917 ;; Defined at:
  2918 ;;		line 7 in file "C:\Microchip\HiTech\sources\eewrite.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  addr            1    wreg     unsigned char 
  2921 ;;  value           1    0[BANK1 ] unsigned char 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  addr            1    2[BANK1 ] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      unsigned char 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2933 ;;      Params:         0       0       1       0       0
  2934 ;;      Locals:         0       0       1       0       0
  2935 ;;      Temps:          0       0       1       0       0
  2936 ;;      Totals:         0       0       3       0       0
  2937 ;;Total ram usage:        3 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    5
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_initTemp
  2944 ;;		_getTemp
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           psect	text889
  2948                           	file	"C:\Microchip\HiTech\sources\eewrite.c"
  2949                           	line	7
  2950                           	global	__size_of_eeprom_write
  2951  003B                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
  2952                           	
  2953  07A9                     _eeprom_write:	
  2954                           	opt	stack 1
  2955                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2956                           ;eeprom_write@addr stored from wreg
  2957  07A9  1683               	bsf	status, 5	;RP0=1, select bank1
  2958  07AA  1303               	bcf	status, 6	;RP1=0, select bank1
  2959  07AB  00C4               	movwf	(eeprom_write@addr)^080h
  2960                           	line	8
  2961                           	
  2962  07AC                     l6823:	
  2963  07AC  2FAD               	goto	l6824
  2964                           	
  2965  07AD                     l6825:	
  2966                           	
  2967  07AD                     l6824:	
  2968  07AD  1683               	bsf	status, 5	;RP0=1, select bank3
  2969  07AE  1703               	bsf	status, 6	;RP1=1, select bank3
  2970  07AF  188C               	btfsc	(3169/8)^0180h,(3169)&7
  2971  07B0  2FB2               	goto	u2791
  2972  07B1  2FB3               	goto	u2790
  2973  07B2                     u2791:
  2974  07B2  2FAD               	goto	l6824
  2975  07B3                     u2790:
  2976  07B3  2FB4               	goto	l9345
  2977                           	
  2978  07B4                     l6826:	
  2979                           	
  2980  07B4                     l9345:	
  2981  07B4  1683               	bsf	status, 5	;RP0=1, select bank1
  2982  07B5  1303               	bcf	status, 6	;RP1=0, select bank1
  2983  07B6  0844               	movf	(eeprom_write@addr)^080h,w
  2984  07B7  1283               	bcf	status, 5	;RP0=0, select bank2
  2985  07B8  1703               	bsf	status, 6	;RP1=1, select bank2
  2986  07B9  008D               	movwf	(269)^0100h	;volatile
  2987  07BA  1683               	bsf	status, 5	;RP0=1, select bank1
  2988  07BB  1303               	bcf	status, 6	;RP1=0, select bank1
  2989  07BC  0842               	movf	(eeprom_write@value)^080h,w
  2990  07BD  1283               	bcf	status, 5	;RP0=0, select bank2
  2991  07BE  1703               	bsf	status, 6	;RP1=1, select bank2
  2992  07BF  008C               	movwf	(268)^0100h	;volatile
  2993                           	
  2994  07C0                     l9347:	
  2995  07C0  303F               	movlw	(03Fh)
  2996  07C1  1683               	bsf	status, 5	;RP0=1, select bank1
  2997  07C2  1303               	bcf	status, 6	;RP1=0, select bank1
  2998  07C3  00C3               	movwf	(??_eeprom_write+0)^080h+0
  2999  07C4  0843               	movf	(??_eeprom_write+0)^080h+0,w
  3000  07C5  1683               	bsf	status, 5	;RP0=1, select bank3
  3001  07C6  1703               	bsf	status, 6	;RP1=1, select bank3
  3002  07C7  058C               	andwf	(396)^0180h,f	;volatile
  3003                           	
  3004  07C8                     l9349:	
  3005  07C8  1283               	bcf	status, 5	;RP0=0, select bank0
  3006  07C9  1303               	bcf	status, 6	;RP1=0, select bank0
  3007  07CA  1003               	bcf	(24/8),(24)&7
  3008                           	
  3009  07CB                     l9351:	
  3010  07CB  1F8B               	btfss	(95/8),(95)&7
  3011  07CC  2FCE               	goto	u2801
  3012  07CD  2FCF               	goto	u2800
  3013  07CE                     u2801:
  3014  07CE  2FD0               	goto	l6827
  3015  07CF                     u2800:
  3016                           	
  3017  07CF                     l9353:	
  3018  07CF  1403               	bsf	(24/8),(24)&7
  3019                           	
  3020  07D0                     l6827:	
  3021  07D0  138B               	bcf	(95/8),(95)&7
  3022  07D1  1683               	bsf	status, 5	;RP0=1, select bank3
  3023  07D2  1703               	bsf	status, 6	;RP1=1, select bank3
  3024  07D3  150C               	bsf	(3170/8)^0180h,(3170)&7
  3025                           	
  3026  07D4                     l9355:	
  3027  07D4  3055               	movlw	(055h)
  3028  07D5  008D               	movwf	(397)^0180h	;volatile
  3029  07D6  30AA               	movlw	(0AAh)
  3030  07D7  008D               	movwf	(397)^0180h	;volatile
  3031                           	
  3032  07D8                     l9357:	
  3033  07D8  148C               	bsf	(3169/8)^0180h,(3169)&7
  3034                           	
  3035  07D9                     l9359:	
  3036  07D9  110C               	bcf	(3170/8)^0180h,(3170)&7
  3037                           	
  3038  07DA                     l9361:	
  3039  07DA  1283               	bcf	status, 5	;RP0=0, select bank0
  3040  07DB  1303               	bcf	status, 6	;RP1=0, select bank0
  3041  07DC  1C03               	btfss	(24/8),(24)&7
  3042  07DD  2FDF               	goto	u2811
  3043  07DE  2FE0               	goto	u2810
  3044  07DF                     u2811:
  3045  07DF  2FE3               	goto	l6830
  3046  07E0                     u2810:
  3047                           	
  3048  07E0                     l9363:	
  3049  07E0  178B               	bsf	(95/8),(95)&7
  3050  07E1  2FE3               	goto	l6830
  3051                           	
  3052  07E2                     l6828:	
  3053  07E2  2FE3               	goto	l6830
  3054                           	
  3055  07E3                     l6829:	
  3056                           	line	10
  3057                           ;	Return value of _eeprom_write is never used
  3058                           	
  3059  07E3                     l6830:	
  3060  07E3  0008               	return
  3061                           	opt stack 0
  3062                           GLOBAL	__end_of_eeprom_write
  3063  07E4                     	__end_of_eeprom_write:
  3064 ;; =============== function _eeprom_write ends ============
  3065                           
  3066                           	signat	_eeprom_write,8313
  3067                           	global	_strlen
  3068                           psect	text890,local,class=CODE,delta=2
  3069                           global __ptext890
  3070  0F2E                     __ptext890:
  3071                           
  3072 ;; *************** function _strlen *****************
  3073 ;; Defined at:
  3074 ;;		line 5 in file "C:\Microchip\HiTech\sources\strlen.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  s               1    wreg     PTR const unsigned char 
  3077 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  s               1    8[BANK1 ] PTR const unsigned char 
  3080 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  3081 ;;  cp              1    9[BANK1 ] PTR const unsigned char 
  3082 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  2    0[BANK1 ] unsigned int 
  3085 ;; Registers used:
  3086 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3092 ;;      Params:         0       0       2       0       0
  3093 ;;      Locals:         0       0       2       0       0
  3094 ;;      Temps:          0       0       6       0       0
  3095 ;;      Totals:         0       0      10       0       0
  3096 ;;Total ram usage:       10 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:    5
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_writeString
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           psect	text890
  3106                           	file	"C:\Microchip\HiTech\sources\strlen.c"
  3107                           	line	5
  3108                           	global	__size_of_strlen
  3109  0033                     	__size_of_strlen	equ	__end_of_strlen-_strlen
  3110                           	
  3111  0F2E                     _strlen:	
  3112                           	opt	stack 1
  3113                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  3114                           ;strlen@s stored from wreg
  3115                           	line	8
  3116  0F2E  1683               	bsf	status, 5	;RP0=1, select bank1
  3117  0F2F  1303               	bcf	status, 6	;RP1=0, select bank1
  3118  0F30  00CA               	movwf	(strlen@s)^080h
  3119                           	
  3120  0F31                     l9319:	
  3121  0F31  084A               	movf	(strlen@s)^080h,w
  3122  0F32  00C4               	movwf	(??_strlen+0)^080h+0
  3123  0F33  0844               	movf	(??_strlen+0)^080h+0,w
  3124  0F34  00CB               	movwf	(strlen@cp)^080h
  3125                           	line	9
  3126  0F35  2F37               	goto	l9321
  3127                           	
  3128  0F36                     l7508:	
  3129                           	line	10
  3130  0F36  2F37               	goto	l9321
  3131                           	
  3132  0F37                     l7507:	
  3133                           	line	9
  3134                           	
  3135  0F37                     l9321:	
  3136  0F37  084B               	movf	(strlen@cp)^080h,w
  3137  0F38  0084               	movwf	fsr0
  3138  0F39  3001               	movlw	01h
  3139  0F3A  07CB               	addwf	(strlen@cp)^080h,f
  3140  0F3B  1383               	bcf	status, 7	;select IRP bank0
  3141  0F3C  0880               	movf	indf,f
  3142  0F3D  1D03               	skipz
  3143  0F3E  2F40               	goto	u2771
  3144  0F3F  2F41               	goto	u2770
  3145  0F40                     u2771:
  3146  0F40  2F37               	goto	l9321
  3147  0F41                     u2770:
  3148  0F41  2F42               	goto	l9323
  3149                           	
  3150  0F42                     l7509:	
  3151                           	line	11
  3152                           	
  3153  0F42                     l9323:	
  3154  0F42  084A               	movf	(strlen@s)^080h,w
  3155  0F43  00C4               	movwf	(??_strlen+0)^080h+0
  3156  0F44  3000               	movlw	((0x0/2))
  3157  0F45  00C5               	movwf	(??_strlen+0)^080h+0+1
  3158  0F46  09C4               	comf	(??_strlen+0)^080h+0,f
  3159  0F47  09C5               	comf	(??_strlen+0)^080h+1,f
  3160  0F48  0AC4               	incf	(??_strlen+0)^080h+0,f
  3161  0F49  1903               	skipnz
  3162  0F4A  0AC5               	incf	(??_strlen+0)^080h+1,f
  3163  0F4B  084B               	movf	(strlen@cp)^080h,w
  3164  0F4C  00C6               	movwf	(??_strlen+2)^080h+0
  3165  0F4D  3000               	movlw	((0x0/2))
  3166  0F4E  00C7               	movwf	(??_strlen+2)^080h+0+1
  3167  0F4F  0844               	movf	0+(??_strlen+0)^080h+0,w
  3168  0F50  0746               	addwf	0+(??_strlen+2)^080h+0,w
  3169  0F51  00C8               	movwf	(??_strlen+4)^080h+0
  3170  0F52  0845               	movf	1+(??_strlen+0)^080h+0,w
  3171  0F53  1803               	skipnc
  3172  0F54  0A45               	incf	1+(??_strlen+0)^080h+0,w
  3173  0F55  0747               	addwf	1+(??_strlen+2)^080h+0,w
  3174  0F56  00C9               	movwf	1+(??_strlen+4)^080h+0
  3175  0F57  0848               	movf	0+(??_strlen+4)^080h+0,w
  3176  0F58  3EFF               	addlw	low(-1)
  3177  0F59  00C2               	movwf	(?_strlen)^080h
  3178  0F5A  0849               	movf	1+(??_strlen+4)^080h+0,w
  3179  0F5B  1803               	skipnc
  3180  0F5C  3E01               	addlw	1
  3181  0F5D  3EFF               	addlw	high(-1)
  3182  0F5E  00C3               	movwf	1+(?_strlen)^080h
  3183  0F5F  2F60               	goto	l7510
  3184                           	
  3185  0F60                     l9325:	
  3186                           	line	12
  3187                           	
  3188  0F60                     l7510:	
  3189  0F60  0008               	return
  3190                           	opt stack 0
  3191                           GLOBAL	__end_of_strlen
  3192  0F61                     	__end_of_strlen:
  3193 ;; =============== function _strlen ends ============
  3194                           
  3195                           	signat	_strlen,4218
  3196                           	global	_writeByte
  3197                           psect	text891,local,class=CODE,delta=2
  3198                           global __ptext891
  3199  0CC3                     __ptext891:
  3200                           
  3201 ;; *************** function _writeByte *****************
  3202 ;; Defined at:
  3203 ;;		line 74 in file "Bluetooth.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  Byte            1    wreg     unsigned char 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  Byte            1    0[BANK1 ] unsigned char 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;		None               void
  3210 ;; Registers used:
  3211 ;;		wreg
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3217 ;;      Params:         0       0       0       0       0
  3218 ;;      Locals:         0       0       1       0       0
  3219 ;;      Temps:          0       0       0       0       0
  3220 ;;      Totals:         0       0       1       0       0
  3221 ;;Total ram usage:        1 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    5
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_writeString
  3228 ;;		_echoBack
  3229 ;;		_displayPacket
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           psect	text891
  3233                           	file	"Bluetooth.c"
  3234                           	line	74
  3235                           	global	__size_of_writeByte
  3236  0011                     	__size_of_writeByte	equ	__end_of_writeByte-_writeByte
  3237                           	
  3238  0CC3                     _writeByte:	
  3239                           	opt	stack 1
  3240                           ; Regs used in _writeByte: [wreg]
  3241                           ;writeByte@Byte stored from wreg
  3242  0CC3  1683               	bsf	status, 5	;RP0=1, select bank1
  3243  0CC4  1303               	bcf	status, 6	;RP1=0, select bank1
  3244  0CC5  00C2               	movwf	(writeByte@Byte)^080h
  3245                           	line	78
  3246                           	
  3247  0CC6                     l9303:	
  3248                           ;Bluetooth.c: 78: while(!TXIF);
  3249  0CC6  2CC7               	goto	l772
  3250                           	
  3251  0CC7                     l773:	
  3252                           	
  3253  0CC7                     l772:	
  3254  0CC7  1283               	bcf	status, 5	;RP0=0, select bank0
  3255  0CC8  1E0C               	btfss	(100/8),(100)&7
  3256  0CC9  2CCB               	goto	u2751
  3257  0CCA  2CCC               	goto	u2750
  3258  0CCB                     u2751:
  3259  0CCB  2CC7               	goto	l772
  3260  0CCC                     u2750:
  3261  0CCC  2CCD               	goto	l9305
  3262                           	
  3263  0CCD                     l774:	
  3264                           	line	81
  3265                           	
  3266  0CCD                     l9305:	
  3267                           ;Bluetooth.c: 81: TXREG = Byte;
  3268  0CCD  1683               	bsf	status, 5	;RP0=1, select bank1
  3269  0CCE  1303               	bcf	status, 6	;RP1=0, select bank1
  3270  0CCF  0842               	movf	(writeByte@Byte)^080h,w
  3271  0CD0  1283               	bcf	status, 5	;RP0=0, select bank0
  3272  0CD1  1303               	bcf	status, 6	;RP1=0, select bank0
  3273  0CD2  0099               	movwf	(25)	;volatile
  3274                           	line	82
  3275                           	
  3276  0CD3                     l775:	
  3277  0CD3  0008               	return
  3278                           	opt stack 0
  3279                           GLOBAL	__end_of_writeByte
  3280  0CD4                     	__end_of_writeByte:
  3281 ;; =============== function _writeByte ends ============
  3282                           
  3283                           	signat	_writeByte,4216
  3284                           	global	_initUSART
  3285                           psect	text892,local,class=CODE,delta=2
  3286                           global __ptext892
  3287  0CD4                     __ptext892:
  3288                           
  3289 ;; *************** function _initUSART *****************
  3290 ;; Defined at:
  3291 ;;		line 16 in file "Bluetooth.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;		None               void
  3298 ;; Registers used:
  3299 ;;		wreg
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3305 ;;      Params:         0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0
  3308 ;;      Totals:         0       0       0       0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    5
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           psect	text892
  3319                           	file	"Bluetooth.c"
  3320                           	line	16
  3321                           	global	__size_of_initUSART
  3322  0012                     	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  3323                           	
  3324  0CD4                     _initUSART:	
  3325                           	opt	stack 2
  3326                           ; Regs used in _initUSART: [wreg]
  3327                           	line	18
  3328                           	
  3329  0CD4                     l9293:	
  3330                           ;Bluetooth.c: 18: TRISC6 = 0;
  3331  0CD4  1683               	bsf	status, 5	;RP0=1, select bank1
  3332  0CD5  1303               	bcf	status, 6	;RP1=0, select bank1
  3333  0CD6  1307               	bcf	(1086/8)^080h,(1086)&7
  3334                           	line	21
  3335                           ;Bluetooth.c: 21: TRISC7 = 1;
  3336  0CD7  1787               	bsf	(1087/8)^080h,(1087)&7
  3337                           	line	34
  3338                           	
  3339  0CD8                     l9295:	
  3340                           ;Bluetooth.c: 34: RCSTA = 0x90;
  3341  0CD8  3090               	movlw	(090h)
  3342  0CD9  1283               	bcf	status, 5	;RP0=0, select bank0
  3343  0CDA  1303               	bcf	status, 6	;RP1=0, select bank0
  3344  0CDB  0098               	movwf	(24)	;volatile
  3345                           	line	48
  3346                           ;Bluetooth.c: 48: TXSTA = 0x24;
  3347  0CDC  3024               	movlw	(024h)
  3348  0CDD  1683               	bsf	status, 5	;RP0=1, select bank1
  3349  0CDE  1303               	bcf	status, 6	;RP1=0, select bank1
  3350  0CDF  0098               	movwf	(152)^080h	;volatile
  3351                           	line	56
  3352                           ;Bluetooth.c: 56: SPBRG = 129;
  3353  0CE0  3081               	movlw	(081h)
  3354  0CE1  0099               	movwf	(153)^080h	;volatile
  3355                           	line	58
  3356                           	
  3357  0CE2                     l9297:	
  3358                           ;Bluetooth.c: 58: GIE = 1;
  3359  0CE2  178B               	bsf	(95/8),(95)&7
  3360                           	line	60
  3361                           	
  3362  0CE3                     l9299:	
  3363                           ;Bluetooth.c: 60: PEIE = 1;
  3364  0CE3  170B               	bsf	(94/8),(94)&7
  3365                           	line	62
  3366                           	
  3367  0CE4                     l9301:	
  3368                           ;Bluetooth.c: 62: RCIE = 1;
  3369  0CE4  168C               	bsf	(1125/8)^080h,(1125)&7
  3370                           	line	64
  3371                           	
  3372  0CE5                     l769:	
  3373  0CE5  0008               	return
  3374                           	opt stack 0
  3375                           GLOBAL	__end_of_initUSART
  3376  0CE6                     	__end_of_initUSART:
  3377 ;; =============== function _initUSART ends ============
  3378                           
  3379                           	signat	_initUSART,88
  3380                           	global	_isr
  3381                           psect	text893,local,class=CODE,delta=2
  3382                           global __ptext893
  3383  0D29                     __ptext893:
  3384                           
  3385 ;; *************** function _isr *****************
  3386 ;; Defined at:
  3387 ;;		line 36 in file "main.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;		None
  3392 ;; Return value:  Size  Location     Type
  3393 ;;		None               void
  3394 ;; Registers used:
  3395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       0       0       0       0
  3402 ;;      Locals:         0       0       0       0       0
  3403 ;;      Temps:          0       4       0       0       0
  3404 ;;      Totals:         0       4       0       0       0
  3405 ;;Total ram usage:        4 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    4
  3408 ;; This function calls:
  3409 ;;		_getPacket
  3410 ;; This function is called by:
  3411 ;;		Interrupt level 1
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           psect	text893
  3415                           	file	"main.c"
  3416                           	line	36
  3417                           	global	__size_of_isr
  3418  001D                     	__size_of_isr	equ	__end_of_isr-_isr
  3419                           	
  3420  0D29                     _isr:	
  3421 ;; hardware stack exceeded
  3422                           	opt	stack 0
  3423                           ; Regs used in _isr: [allreg]
  3424                           psect	intentry,class=CODE,delta=2
  3425                           global __pintentry
  3426  0004                     __pintentry:
  3427                           global interrupt_function
  3428  0004                     interrupt_function:
  3429                           	global saved_w
  3430  007E                     	saved_w	set	btemp+0
  3431  0004  00FE               	movwf	saved_w
  3432  0005  0E03               	swapf	status,w
  3433  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  3434  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  3435  0008  00E2               	movwf	(??_isr+0)
  3436  0009  0804               	movf	fsr0,w
  3437  000A  00E3               	movwf	(??_isr+1)
  3438  000B  080A               	movf	pclath,w
  3439  000C  00E4               	movwf	(??_isr+2)
  3440  000D  087F               	movf	btemp+1,w
  3441  000E  00E5               	movwf	(??_isr+3)
  3442  000F  120A  158A  2D29   	ljmp	_isr
  3443                           psect	text893
  3444                           	line	37
  3445                           	
  3446  0D29                     i1l9565:	
  3447                           ;main.c: 37: if(RCIF && RCIE){
  3448  0D29  1E8C               	btfss	(101/8),(101)&7
  3449  0D2A  2D2C               	goto	u306_21
  3450  0D2B  2D2D               	goto	u306_20
  3451  0D2C                     u306_21:
  3452  0D2C  2D39               	goto	i1l3995
  3453  0D2D                     u306_20:
  3454                           	
  3455  0D2D                     i1l9567:	
  3456  0D2D  1683               	bsf	status, 5	;RP0=1, select bank1
  3457  0D2E  1303               	bcf	status, 6	;RP1=0, select bank1
  3458  0D2F  1E8C               	btfss	(1125/8)^080h,(1125)&7
  3459  0D30  2D32               	goto	u307_21
  3460  0D31  2D33               	goto	u307_20
  3461  0D32                     u307_21:
  3462  0D32  2D39               	goto	i1l3995
  3463  0D33                     u307_20:
  3464                           	line	38
  3465                           	
  3466  0D33                     i1l9569:	
  3467                           ;main.c: 38: getPacket();
  3468  0D33  120A  118A  2647   	fcall	_getPacket
              120A  158A         
  3469  0D38  2D39               	goto	i1l3995
  3470                           	line	39
  3471                           	
  3472  0D39                     i1l3994:	
  3473                           	line	40
  3474                           	
  3475  0D39                     i1l3995:	
  3476  0D39  1283               	bcf	status, 5	;RP0=0, select bank0
  3477  0D3A  1303               	bcf	status, 6	;RP1=0, select bank0
  3478  0D3B  0865               	movf	(??_isr+3),w
  3479  0D3C  00FF               	movwf	btemp+1
  3480  0D3D  0864               	movf	(??_isr+2),w
  3481  0D3E  008A               	movwf	pclath
  3482  0D3F  0863               	movf	(??_isr+1),w
  3483  0D40  0084               	movwf	fsr0
  3484  0D41  0E62               	swapf	(??_isr+0)^00h,w
  3485  0D42  0083               	movwf	status
  3486  0D43  0EFE               	swapf	saved_w,f
  3487  0D44  0E7E               	swapf	saved_w,w
  3488  0D45  0009               	retfie
  3489                           	opt stack 0
  3490                           GLOBAL	__end_of_isr
  3491  0D46                     	__end_of_isr:
  3492 ;; =============== function _isr ends ============
  3493                           
  3494                           	signat	_isr,88
  3495                           	global	_getPacket
  3496                           psect	text894,local,class=CODE,delta=2
  3497                           global __ptext894
  3498  0647                     __ptext894:
  3499                           
  3500 ;; *************** function _getPacket *****************
  3501 ;; Defined at:
  3502 ;;		line 82 in file "main.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  arrStore       50   16[BANK0 ] unsigned char [50]
  3507 ;; Return value:  Size  Location     Type
  3508 ;;		None               void
  3509 ;; Registers used:
  3510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3516 ;;      Params:         0       0       0       0       0
  3517 ;;      Locals:         0      50       0       0       0
  3518 ;;      Temps:          0       4       0       0       0
  3519 ;;      Totals:         0      54       0       0       0
  3520 ;;Total ram usage:       54 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    3
  3523 ;; This function calls:
  3524 ;;		i1_eeprom_write
  3525 ;;		_readString
  3526 ;;		_parsePacket
  3527 ;;		_validatePacket
  3528 ;;		_eeprom_read
  3529 ;;		_readCommands
  3530 ;;		_writeCommands
  3531 ;; This function is called by:
  3532 ;;		_isr
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           psect	text894
  3536                           	file	"main.c"
  3537                           	line	82
  3538                           	global	__size_of_getPacket
  3539  005E                     	__size_of_getPacket	equ	__end_of_getPacket-_getPacket
  3540                           	
  3541  0647                     _getPacket:	
  3542 ;; hardware stack exceeded
  3543                           	opt	stack 0
  3544                           ; Regs used in _getPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3545                           	line	84
  3546                           	
  3547  0647                     i1l9571:	
  3548                           ;main.c: 84: eeprom_write(calcCSByteAddr,0x00);
  3549  0647  01FA               	clrf	(?i1_eeprom_write)
  3550  0648  3041               	movlw	(_calcCSByteAddr-__stringbase)
  3551  0649  0084               	movwf	fsr0
  3552  064A  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3553  064F  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  3554                           	line	86
  3555                           	
  3556  0654                     i1l9573:	
  3557                           ;main.c: 86: char arrStore[50] = {0};
  3558  0654  3030               	movlw	(getPacket@arrStore)&0ffh
  3559  0655  0084               	movwf	fsr0
  3560  0656  3090               	movlw	low(getPacket@F1189)
  3561  0657  1283               	bcf	status, 5	;RP0=0, select bank0
  3562  0658  1303               	bcf	status, 6	;RP1=0, select bank0
  3563  0659  00AC               	movwf	(??_getPacket+0)+0
  3564  065A  0804               	movf	fsr0,w
  3565  065B  00AD               	movwf	((??_getPacket+0)+0+1)
  3566  065C  3032               	movlw	50
  3567  065D  00AE               	movwf	((??_getPacket+0)+0+2)
  3568  065E                     u308_20:
  3569  065E  082C               	movf	(??_getPacket+0)+0,w
  3570  065F  0084               	movwf	fsr0
  3571  0660  1783               	bsf	status, 7	;select IRP bank3
  3572                           	
  3573  0661  0800               	movf	indf,w
  3574  0662  00AF               	movwf	((??_getPacket+0)+0+3)
  3575  0663  0AAC               	incf	(??_getPacket+0)+0,f
  3576  0664  082D               	movf	((??_getPacket+0)+0+1),w
  3577  0665  0084               	movwf	fsr0
  3578  0666  1383               	bcf	status, 7	;select IRP bank0
  3579                           	
  3580  0667  082F               	movf	((??_getPacket+0)+0+3),w
  3581  0668  0080               	movwf	indf
  3582  0669  0AAD               	incf	((??_getPacket+0)+0+1),f
  3583  066A  0BAE               	decfsz	((??_getPacket+0)+0+2),f
  3584  066B  2E5E               	goto	u308_20
  3585                           	line	88
  3586                           	
  3587  066C                     i1l9575:	
  3588                           ;main.c: 88: readString(arrStore);
  3589  066C  3030               	movlw	(getPacket@arrStore)&0ffh
  3590  066D  120A  118A  26A5   	fcall	_readString
              120A  118A         
  3591                           	line	90
  3592                           	
  3593  0672                     i1l9577:	
  3594                           ;main.c: 90: parsePacket(arrStore);
  3595  0672  3030               	movlw	(getPacket@arrStore)&0ffh
  3596  0673  120A  118A  2190   	fcall	_parsePacket
              120A  118A         
  3597                           	line	93
  3598                           	
  3599  0678                     i1l9579:	
  3600                           ;main.c: 93: if(validatePacket()){
  3601  0678  120A  118A  2758   	fcall	_validatePacket
              120A  118A         
  3602  067D  1283               	bcf	status, 5	;RP0=0, select bank0
  3603  067E  1303               	bcf	status, 6	;RP1=0, select bank0
  3604  067F  0825               	movf	(1+(?_validatePacket)),w
  3605  0680  0424               	iorwf	(0+(?_validatePacket)),w
  3606  0681  1903               	skipnz
  3607  0682  2E84               	goto	u309_21
  3608  0683  2E85               	goto	u309_20
  3609  0684                     u309_21:
  3610  0684  2EA4               	goto	i1l4012
  3611  0685                     u309_20:
  3612                           	line	96
  3613                           	
  3614  0685                     i1l9581:	
  3615                           ;main.c: 96: if(eeprom_read(rwByteAddr) == 0){
  3616  0685  3053               	movlw	(_rwByteAddr-__stringbase)
  3617  0686  0084               	movwf	fsr0
  3618  0687  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3619  068C  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  3620  0691  3800               	iorlw	0
  3621  0692  1D03               	skipz
  3622  0693  2E95               	goto	u310_21
  3623  0694  2E96               	goto	u310_20
  3624  0695                     u310_21:
  3625  0695  2E9C               	goto	i1l9585
  3626  0696                     u310_20:
  3627                           	line	97
  3628                           	
  3629  0696                     i1l9583:	
  3630                           ;main.c: 97: readCommands();
  3631  0696  120A  118A  2015   	fcall	_readCommands
              120A  118A         
  3632                           	line	99
  3633                           ;main.c: 99: }else{
  3634  069B  2EA4               	goto	i1l4012
  3635                           	
  3636  069C                     i1l4009:	
  3637                           	line	100
  3638                           	
  3639  069C                     i1l9585:	
  3640                           ;main.c: 100: writeCommands();
  3641  069C  120A  118A  27FF   	fcall	_writeCommands
              120A  118A         
  3642  06A1  2EA4               	goto	i1l4012
  3643                           	line	101
  3644                           	
  3645  06A2                     i1l4010:	
  3646                           	line	103
  3647                           ;main.c: 101: }
  3648                           ;main.c: 103: }else{
  3649  06A2  2EA4               	goto	i1l4012
  3650                           	
  3651  06A3                     i1l4008:	
  3652  06A3  2EA4               	goto	i1l4012
  3653                           	line	106
  3654                           	
  3655  06A4                     i1l4011:	
  3656                           	line	107
  3657                           	
  3658  06A4                     i1l4012:	
  3659  06A4  0008               	return
  3660                           	opt stack 0
  3661                           GLOBAL	__end_of_getPacket
  3662  06A5                     	__end_of_getPacket:
  3663 ;; =============== function _getPacket ends ============
  3664                           
  3665                           	signat	_getPacket,88
  3666                           	global	_readCommands
  3667                           psect	text895,local,class=CODE,delta=2
  3668                           global __ptext895
  3669  0015                     __ptext895:
  3670                           
  3671 ;; *************** function _readCommands *****************
  3672 ;; Defined at:
  3673 ;;		line 12 in file "Command.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;		None               void
  3680 ;; Registers used:
  3681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3687 ;;      Params:         0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0
  3690 ;;      Totals:         0       0       0       0       0
  3691 ;;Total ram usage:        0 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    2
  3694 ;; This function calls:
  3695 ;;		i1_writeByte
  3696 ;;		i1_writeString
  3697 ;;		_eeprom_read
  3698 ;; This function is called by:
  3699 ;;		_getPacket
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           psect	text895
  3703                           	file	"Command.c"
  3704                           	line	12
  3705                           	global	__size_of_readCommands
  3706  017B                     	__size_of_readCommands	equ	__end_of_readCommands-_readCommands
  3707                           	
  3708  0015                     _readCommands:	
  3709 ;; hardware stack exceeded
  3710                           	opt	stack 0
  3711                           ; Regs used in _readCommands: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3712                           	line	14
  3713                           	
  3714  0015                     i1l9587:	
  3715                           ;Command.c: 14: switch(eeprom_read(cmdByteAddr)){
  3716  0015  296A               	goto	i1l9621
  3717                           	line	16
  3718                           ;Command.c: 16: case 0:
  3719                           	
  3720  0016                     i1l4784:	
  3721                           	line	17
  3722                           	
  3723  0016                     i1l9589:	
  3724                           ;Command.c: 17: writeByte(userStartByte);
  3725  0016  3060               	movlw	(_userStartByte-__stringbase)
  3726  0017  0084               	movwf	fsr0
  3727  0018  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3728  001D  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3729                           	line	18
  3730                           ;Command.c: 18: writeByte(tempValHAddr);
  3731  0022  305C               	movlw	(_tempValHAddr-__stringbase)
  3732  0023  0084               	movwf	fsr0
  3733  0024  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3734  0029  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3735                           	line	19
  3736                           ;Command.c: 19: writeByte(tempValLAddr);
  3737  002E  305D               	movlw	(_tempValLAddr-__stringbase)
  3738  002F  0084               	movwf	fsr0
  3739  0030  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3740  0035  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3741                           	line	20
  3742                           ;Command.c: 20: break;
  3743  003A  298F               	goto	i1l4794
  3744                           	line	22
  3745                           ;Command.c: 22: case 1:
  3746                           	
  3747  003B                     i1l4786:	
  3748                           	line	23
  3749                           	
  3750  003B                     i1l9591:	
  3751                           ;Command.c: 23: writeByte(userStartByte);
  3752  003B  3060               	movlw	(_userStartByte-__stringbase)
  3753  003C  0084               	movwf	fsr0
  3754  003D  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3755  0042  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3756                           	line	24
  3757                           ;Command.c: 24: writeByte(tempHiAddr);
  3758  0047  3057               	movlw	(_tempHiAddr-__stringbase)
  3759  0048  0084               	movwf	fsr0
  3760  0049  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3761  004E  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3762                           	line	25
  3763                           ;Command.c: 25: break;
  3764  0053  298F               	goto	i1l4794
  3765                           	line	27
  3766                           ;Command.c: 27: case 2:
  3767                           	
  3768  0054                     i1l4787:	
  3769                           	line	28
  3770                           	
  3771  0054                     i1l9593:	
  3772                           ;Command.c: 28: writeByte(userStartByte);
  3773  0054  3060               	movlw	(_userStartByte-__stringbase)
  3774  0055  0084               	movwf	fsr0
  3775  0056  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3776  005B  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3777                           	line	29
  3778                           ;Command.c: 29: writeByte(tempLoAddr);
  3779  0060  3058               	movlw	(_tempLoAddr-__stringbase)
  3780  0061  0084               	movwf	fsr0
  3781  0062  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3782  0067  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3783                           	line	30
  3784                           ;Command.c: 30: break;
  3785  006C  298F               	goto	i1l4794
  3786                           	line	32
  3787                           ;Command.c: 32: case 3:
  3788                           	
  3789  006D                     i1l4788:	
  3790                           	line	33
  3791                           	
  3792  006D                     i1l9595:	
  3793                           ;Command.c: 33: writeByte(userStartByte);
  3794  006D  3060               	movlw	(_userStartByte-__stringbase)
  3795  006E  0084               	movwf	fsr0
  3796  006F  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3797  0074  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3798                           	line	34
  3799                           ;Command.c: 34: writeByte(humValHAddr);
  3800  0079  304B               	movlw	(_humValHAddr-__stringbase)
  3801  007A  0084               	movwf	fsr0
  3802  007B  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3803  0080  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3804                           	line	35
  3805                           ;Command.c: 35: writeByte(humValLAddr);
  3806  0085  304C               	movlw	(_humValLAddr-__stringbase)
  3807  0086  0084               	movwf	fsr0
  3808  0087  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3809  008C  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3810                           	line	36
  3811                           ;Command.c: 36: break;
  3812  0091  298F               	goto	i1l4794
  3813                           	line	38
  3814                           ;Command.c: 38: case 4:
  3815                           	
  3816  0092                     i1l4789:	
  3817                           	line	39
  3818                           	
  3819  0092                     i1l9597:	
  3820                           ;Command.c: 39: writeByte(userStartByte);
  3821  0092  3060               	movlw	(_userStartByte-__stringbase)
  3822  0093  0084               	movwf	fsr0
  3823  0094  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3824  0099  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3825                           	line	40
  3826                           ;Command.c: 40: writeByte(humHiAddr);
  3827  009E  3047               	movlw	(_humHiAddr-__stringbase)
  3828  009F  0084               	movwf	fsr0
  3829  00A0  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3830  00A5  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3831                           	line	41
  3832                           ;Command.c: 41: break;
  3833  00AA  298F               	goto	i1l4794
  3834                           	line	43
  3835                           ;Command.c: 43: case 5:
  3836                           	
  3837  00AB                     i1l4790:	
  3838                           	line	44
  3839                           	
  3840  00AB                     i1l9599:	
  3841                           ;Command.c: 44: writeByte(userStartByte);
  3842  00AB  3060               	movlw	(_userStartByte-__stringbase)
  3843  00AC  0084               	movwf	fsr0
  3844  00AD  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3845  00B2  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3846                           	line	45
  3847                           ;Command.c: 45: writeByte(humLoAddr);
  3848  00B7  3048               	movlw	(_humLoAddr-__stringbase)
  3849  00B8  0084               	movwf	fsr0
  3850  00B9  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3851  00BE  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3852                           	line	46
  3853                           ;Command.c: 46: break;
  3854  00C3  298F               	goto	i1l4794
  3855                           	line	48
  3856                           ;Command.c: 48: case 6:
  3857                           	
  3858  00C4                     i1l4791:	
  3859                           	line	49
  3860                           	
  3861  00C4                     i1l9601:	
  3862                           ;Command.c: 49: writeByte(userStartByte);
  3863  00C4  3060               	movlw	(_userStartByte-__stringbase)
  3864  00C5  0084               	movwf	fsr0
  3865  00C6  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3866  00CB  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3867                           	line	50
  3868                           	
  3869  00D0                     i1l9603:	
  3870                           ;Command.c: 50: writeByte('R');
  3871  00D0  3052               	movlw	(052h)
  3872  00D1  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3873                           	line	51
  3874                           	
  3875  00D6                     i1l9605:	
  3876                           ;Command.c: 51: writeByte('T');
  3877  00D6  3054               	movlw	(054h)
  3878  00D7  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3879                           	line	52
  3880                           	
  3881  00DC                     i1l9607:	
  3882                           ;Command.c: 52: writeByte('C');
  3883  00DC  3043               	movlw	(043h)
  3884  00DD  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3885                           	line	53
  3886                           ;Command.c: 53: break;
  3887  00E2  298F               	goto	i1l4794
  3888                           	line	55
  3889                           ;Command.c: 55: case 7:
  3890                           	
  3891  00E3                     i1l4792:	
  3892                           	line	56
  3893                           	
  3894  00E3                     i1l9609:	
  3895                           ;Command.c: 56: writeByte(userStartByte);
  3896  00E3  3060               	movlw	(_userStartByte-__stringbase)
  3897  00E4  0084               	movwf	fsr0
  3898  00E5  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3899  00EA  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3900                           	line	57
  3901                           ;Command.c: 57: writeByte(tempValHAddr);
  3902  00EF  305C               	movlw	(_tempValHAddr-__stringbase)
  3903  00F0  0084               	movwf	fsr0
  3904  00F1  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3905  00F6  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3906                           	line	58
  3907                           ;Command.c: 58: writeByte(tempValLAddr);
  3908  00FB  305D               	movlw	(_tempValLAddr-__stringbase)
  3909  00FC  0084               	movwf	fsr0
  3910  00FD  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3911  0102  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3912                           	line	59
  3913                           ;Command.c: 59: writeByte(tempHiAddr);
  3914  0107  3057               	movlw	(_tempHiAddr-__stringbase)
  3915  0108  0084               	movwf	fsr0
  3916  0109  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3917  010E  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3918                           	line	60
  3919                           ;Command.c: 60: writeByte(tempLoAddr);
  3920  0113  3058               	movlw	(_tempLoAddr-__stringbase)
  3921  0114  0084               	movwf	fsr0
  3922  0115  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3923  011A  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3924                           	line	61
  3925                           ;Command.c: 61: writeByte(humValHAddr);
  3926  011F  304B               	movlw	(_humValHAddr-__stringbase)
  3927  0120  0084               	movwf	fsr0
  3928  0121  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3929  0126  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3930                           	line	62
  3931                           ;Command.c: 62: writeByte(humValLAddr);
  3932  012B  304C               	movlw	(_humValLAddr-__stringbase)
  3933  012C  0084               	movwf	fsr0
  3934  012D  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3935  0132  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3936                           	line	63
  3937                           ;Command.c: 63: writeByte(humHiAddr);
  3938  0137  3047               	movlw	(_humHiAddr-__stringbase)
  3939  0138  0084               	movwf	fsr0
  3940  0139  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3941  013E  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3942                           	line	64
  3943                           ;Command.c: 64: writeByte(humLoAddr);
  3944  0143  3048               	movlw	(_humLoAddr-__stringbase)
  3945  0144  0084               	movwf	fsr0
  3946  0145  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3947  014A  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3948                           	line	65
  3949                           	
  3950  014F                     i1l9611:	
  3951                           ;Command.c: 65: writeByte('R');
  3952  014F  3052               	movlw	(052h)
  3953  0150  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3954                           	line	66
  3955                           	
  3956  0155                     i1l9613:	
  3957                           ;Command.c: 66: writeByte('T');
  3958  0155  3054               	movlw	(054h)
  3959  0156  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3960                           	line	67
  3961                           	
  3962  015B                     i1l9615:	
  3963                           ;Command.c: 67: writeByte('C');
  3964  015B  3043               	movlw	(043h)
  3965  015C  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  3966                           	line	68
  3967                           ;Command.c: 68: break;
  3968  0161  298F               	goto	i1l4794
  3969                           	line	70
  3970                           ;Command.c: 70: default:
  3971                           	
  3972  0162                     i1l4793:	
  3973                           	line	71
  3974                           	
  3975  0162                     i1l9617:	
  3976                           ;Command.c: 71: writeString(readError);
  3977  0162  30A9               	movlw	(_readError)&0ffh
  3978  0163  120A  158A  269D   	fcall	i1_writeString
              120A  118A         
  3979                           	line	72
  3980                           ;Command.c: 72: break;
  3981  0168  298F               	goto	i1l4794
  3982                           	line	73
  3983                           	
  3984  0169                     i1l9619:	
  3985                           ;Command.c: 73: }
  3986  0169  298F               	goto	i1l4794
  3987                           	line	14
  3988                           	
  3989  016A                     i1l4783:	
  3990                           	
  3991  016A                     i1l9621:	
  3992  016A  3042               	movlw	(_cmdByteAddr-__stringbase)
  3993  016B  0084               	movwf	fsr0
  3994  016C  120A  118A  2446   	fcall	stringdir
              120A  118A         
  3995  0171  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  3996                           	; Switch size 1, requested type "space"
  3997                           ; Number of cases is 8, Range of values is 0 to 7
  3998                           ; switch strategies available:
  3999                           ; Name         Instructions Cycles
  4000                           ; simple_byte           25    13 (average)
  4001                           ; direct_byte           32     8 (fixed)
  4002                           ; jumptable            260     6 (fixed)
  4003                           ; rangetable            12     6 (fixed)
  4004                           ; spacedrange           22     9 (fixed)
  4005                           ; locatedrange           8     3 (fixed)
  4006                           ;	Chosen strategy is simple_byte
  4007                           
  4008                           	opt asmopt_off
  4009  0176  3A00               	xorlw	0^0	; case 0
  4010  0177  1903               	skipnz
  4011  0178  2816               	goto	i1l9589
  4012  0179  3A01               	xorlw	1^0	; case 1
  4013  017A  1903               	skipnz
  4014  017B  283B               	goto	i1l9591
  4015  017C  3A03               	xorlw	2^1	; case 2
  4016  017D  1903               	skipnz
  4017  017E  2854               	goto	i1l9593
  4018  017F  3A01               	xorlw	3^2	; case 3
  4019  0180  1903               	skipnz
  4020  0181  286D               	goto	i1l9595
  4021  0182  3A07               	xorlw	4^3	; case 4
  4022  0183  1903               	skipnz
  4023  0184  2892               	goto	i1l9597
  4024  0185  3A01               	xorlw	5^4	; case 5
  4025  0186  1903               	skipnz
  4026  0187  28AB               	goto	i1l9599
  4027  0188  3A03               	xorlw	6^5	; case 6
  4028  0189  1903               	skipnz
  4029  018A  28C4               	goto	i1l9601
  4030  018B  3A01               	xorlw	7^6	; case 7
  4031  018C  1903               	skipnz
  4032  018D  28E3               	goto	i1l9609
  4033  018E  2962               	goto	i1l9617
  4034                           	opt asmopt_on
  4035                           
  4036                           	line	73
  4037                           	
  4038  018F                     i1l4785:	
  4039                           	line	76
  4040                           	
  4041  018F                     i1l4794:	
  4042  018F  0008               	return
  4043                           	opt stack 0
  4044                           GLOBAL	__end_of_readCommands
  4045  0190                     	__end_of_readCommands:
  4046 ;; =============== function _readCommands ends ============
  4047                           
  4048                           	signat	_readCommands,88
  4049                           	global	_validatePacket
  4050                           psect	text896,local,class=CODE,delta=2
  4051                           global __ptext896
  4052  0758                     __ptext896:
  4053                           
  4054 ;; *************** function _validatePacket *****************
  4055 ;; Defined at:
  4056 ;;		line 236 in file "Packet.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  2    4[BANK0 ] int 
  4063 ;; Registers used:
  4064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4070 ;;      Params:         0       2       0       0       0
  4071 ;;      Locals:         0       0       0       0       0
  4072 ;;      Temps:          0       0       0       0       0
  4073 ;;      Totals:         0       2       0       0       0
  4074 ;;Total ram usage:        2 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    2
  4077 ;; This function calls:
  4078 ;;		_checkStartByte
  4079 ;;		_checkRWByte
  4080 ;;		_checkCMDByte
  4081 ;;		_checkDataFrames
  4082 ;;		_addDataToCheckSum
  4083 ;;		_checkCS
  4084 ;; This function is called by:
  4085 ;;		_getPacket
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           psect	text896
  4089                           	file	"Packet.c"
  4090                           	line	236
  4091                           	global	__size_of_validatePacket
  4092  0051                     	__size_of_validatePacket	equ	__end_of_validatePacket-_validatePacket
  4093                           	
  4094  0758                     _validatePacket:	
  4095 ;; hardware stack exceeded
  4096                           	opt	stack 0
  4097                           ; Regs used in _validatePacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4098                           	line	238
  4099                           	
  4100  0758                     i1l9521:	
  4101                           ;Packet.c: 238: if(checkStartByte() && checkRWByte() && checkCMDByte() && checkDataFrame
                                 s()){
  4102  0758  120A  118A  2584   	fcall	_checkStartByte
              120A  118A         
  4103  075D  1283               	bcf	status, 5	;RP0=0, select bank0
  4104  075E  1303               	bcf	status, 6	;RP1=0, select bank0
  4105  075F  0821               	movf	(1+(?_checkStartByte)),w
  4106  0760  0420               	iorwf	(0+(?_checkStartByte)),w
  4107  0761  1903               	skipnz
  4108  0762  2F64               	goto	u299_21
  4109  0763  2F65               	goto	u299_20
  4110  0764                     u299_21:
  4111  0764  2FA3               	goto	i1l9535
  4112  0765                     u299_20:
  4113                           	
  4114  0765                     i1l9523:	
  4115  0765  120A  118A  24B3   	fcall	_checkRWByte
              120A  118A         
  4116  076A  1283               	bcf	status, 5	;RP0=0, select bank0
  4117  076B  1303               	bcf	status, 6	;RP1=0, select bank0
  4118  076C  0821               	movf	(1+(?_checkRWByte)),w
  4119  076D  0420               	iorwf	(0+(?_checkRWByte)),w
  4120  076E  1903               	skipnz
  4121  076F  2F71               	goto	u300_21
  4122  0770  2F72               	goto	u300_20
  4123  0771                     u300_21:
  4124  0771  2FA3               	goto	i1l9535
  4125  0772                     u300_20:
  4126                           	
  4127  0772                     i1l9525:	
  4128  0772  120A  118A  23D6   	fcall	_checkCMDByte
              120A  118A         
  4129  0777  1283               	bcf	status, 5	;RP0=0, select bank0
  4130  0778  1303               	bcf	status, 6	;RP1=0, select bank0
  4131  0779  0821               	movf	(1+(?_checkCMDByte)),w
  4132  077A  0420               	iorwf	(0+(?_checkCMDByte)),w
  4133  077B  1903               	skipnz
  4134  077C  2F7E               	goto	u301_21
  4135  077D  2F7F               	goto	u301_20
  4136  077E                     u301_21:
  4137  077E  2FA3               	goto	i1l9535
  4138  077F                     u301_20:
  4139                           	
  4140  077F                     i1l9527:	
  4141  077F  120A  118A  22C5   	fcall	_checkDataFrames
              120A  118A         
  4142  0784  0873               	movf	(1+(?_checkDataFrames)),w
  4143  0785  0472               	iorwf	(0+(?_checkDataFrames)),w
  4144  0786  1903               	skipnz
  4145  0787  2F89               	goto	u302_21
  4146  0788  2F8A               	goto	u302_20
  4147  0789                     u302_21:
  4148  0789  2FA3               	goto	i1l9535
  4149  078A                     u302_20:
  4150                           	line	240
  4151                           	
  4152  078A                     i1l9529:	
  4153                           ;Packet.c: 240: addDataToCheckSum();
  4154  078A  120A  118A  235F   	fcall	_addDataToCheckSum
              120A  118A         
  4155                           	line	242
  4156                           ;Packet.c: 242: if(checkCS())
  4157  078F  120A  158A  2761   	fcall	_checkCS
              120A  118A         
  4158  0794  0873               	movf	(1+(?_checkCS)),w
  4159  0795  0472               	iorwf	(0+(?_checkCS)),w
  4160  0796  1903               	skipnz
  4161  0797  2F99               	goto	u303_21
  4162  0798  2F9A               	goto	u303_20
  4163  0799                     u303_21:
  4164  0799  2FA3               	goto	i1l9535
  4165  079A                     u303_20:
  4166                           	line	244
  4167                           	
  4168  079A                     i1l9531:	
  4169                           ;Packet.c: 244: return 1;
  4170  079A  3001               	movlw	low(01h)
  4171  079B  1283               	bcf	status, 5	;RP0=0, select bank0
  4172  079C  1303               	bcf	status, 6	;RP1=0, select bank0
  4173  079D  00A4               	movwf	(?_validatePacket)
  4174  079E  3000               	movlw	high(01h)
  4175  079F  00A5               	movwf	((?_validatePacket))+1
  4176  07A0  2FA8               	goto	i1l1621
  4177                           	
  4178  07A1                     i1l9533:	
  4179  07A1  2FA8               	goto	i1l1621
  4180                           	
  4181  07A2                     i1l1620:	
  4182  07A2  2FA3               	goto	i1l9535
  4183                           	line	245
  4184                           	
  4185  07A3                     i1l1619:	
  4186                           	line	247
  4187                           	
  4188  07A3                     i1l9535:	
  4189                           ;Packet.c: 245: }
  4190                           ;Packet.c: 247: return 0;
  4191  07A3  1283               	bcf	status, 5	;RP0=0, select bank0
  4192  07A4  1303               	bcf	status, 6	;RP1=0, select bank0
  4193  07A5  01A4               	clrf	(?_validatePacket)
  4194  07A6  01A5               	clrf	(?_validatePacket+1)
  4195  07A7  2FA8               	goto	i1l1621
  4196                           	
  4197  07A8                     i1l9537:	
  4198                           	line	249
  4199                           	
  4200  07A8                     i1l1621:	
  4201  07A8  0008               	return
  4202                           	opt stack 0
  4203                           GLOBAL	__end_of_validatePacket
  4204  07A9                     	__end_of_validatePacket:
  4205 ;; =============== function _validatePacket ends ============
  4206                           
  4207                           	signat	_validatePacket,90
  4208                           	global	_parsePacket
  4209                           psect	text897,local,class=CODE,delta=2
  4210                           global __ptext897
  4211  0190                     __ptext897:
  4212                           
  4213 ;; *************** function _parsePacket *****************
  4214 ;; Defined at:
  4215 ;;		line 114 in file "Packet.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  dataPacket      1    wreg     PTR unsigned char 
  4218 ;;		 -> getPacket@arrStore(50), 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  dataPacket      1   11[BANK0 ] PTR unsigned char 
  4221 ;;		 -> getPacket@arrStore(50), 
  4222 ;;  i               1   10[BANK0 ] unsigned char 
  4223 ;;  dataCounter     2    8[BANK0 ] int 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;		None               void
  4226 ;; Registers used:
  4227 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4233 ;;      Params:         0       0       0       0       0
  4234 ;;      Locals:         0       4       0       0       0
  4235 ;;      Temps:          0       4       0       0       0
  4236 ;;      Totals:         0       8       0       0       0
  4237 ;;Total ram usage:        8 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    2
  4240 ;; This function calls:
  4241 ;;		_checkLength
  4242 ;;		_checkEven
  4243 ;;		_makeHexByte
  4244 ;;		i1_eeprom_write
  4245 ;;		i1_strlen
  4246 ;;		_eeprom_read
  4247 ;; This function is called by:
  4248 ;;		_getPacket
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           psect	text897
  4252                           	file	"Packet.c"
  4253                           	line	114
  4254                           	global	__size_of_parsePacket
  4255  0135                     	__size_of_parsePacket	equ	__end_of_parsePacket-_parsePacket
  4256                           	
  4257  0190                     _parsePacket:	
  4258 ;; hardware stack exceeded
  4259                           	opt	stack 0
  4260                           ; Regs used in _parsePacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4261                           ;parsePacket@dataPacket stored from wreg
  4262                           	line	116
  4263  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  4264  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  4265  0192  00AB               	movwf	(parsePacket@dataPacket)
  4266                           	
  4267  0193                     i1l9439:	
  4268                           ;Packet.c: 116: int dataCounter = 0;
  4269  0193  01A8               	clrf	(parsePacket@dataCounter)
  4270  0194  01A9               	clrf	(parsePacket@dataCounter+1)
  4271                           	line	119
  4272                           	
  4273  0195                     i1l9441:	
  4274                           ;Packet.c: 119: if (checkLength() && checkEven()) {
  4275  0195  120A  158A  266E   	fcall	_checkLength
              120A  118A         
  4276  019A  0873               	movf	(1+(?_checkLength)),w
  4277  019B  0472               	iorwf	(0+(?_checkLength)),w
  4278  019C  1903               	skipnz
  4279  019D  299F               	goto	u291_21
  4280  019E  29A0               	goto	u291_20
  4281  019F                     u291_21:
  4282  019F  2AC4               	goto	i1l1598
  4283  01A0                     u291_20:
  4284                           	
  4285  01A0                     i1l9443:	
  4286  01A0  120A  158A  25C9   	fcall	_checkEven
              120A  118A         
  4287  01A5  0873               	movf	(1+(?_checkEven)),w
  4288  01A6  0472               	iorwf	(0+(?_checkEven)),w
  4289  01A7  1903               	skipnz
  4290  01A8  29AA               	goto	u292_21
  4291  01A9  29AB               	goto	u292_20
  4292  01AA                     u292_21:
  4293  01AA  2AC4               	goto	i1l1598
  4294  01AB                     u292_20:
  4295                           	line	122
  4296                           	
  4297  01AB                     i1l9445:	
  4298                           ;Packet.c: 122: eeprom_write(startByteAddr, makeHexByte(dataPacket[0], dataPacket[1]));
  4299  01AB  1283               	bcf	status, 5	;RP0=0, select bank0
  4300  01AC  1303               	bcf	status, 6	;RP1=0, select bank0
  4301  01AD  082B               	movf	(parsePacket@dataPacket),w
  4302  01AE  3E01               	addlw	01h
  4303  01AF  0084               	movwf	fsr0
  4304  01B0  1383               	bcf	status, 7	;select IRP bank0
  4305  01B1  0800               	movf	indf,w
  4306  01B2  00A4               	movwf	(??_parsePacket+0)+0
  4307  01B3  0824               	movf	(??_parsePacket+0)+0,w
  4308  01B4  00FD               	movwf	(?_makeHexByte)
  4309  01B5  082B               	movf	(parsePacket@dataPacket),w
  4310  01B6  0084               	movwf	fsr0
  4311  01B7  0800               	movf	indf,w
  4312  01B8  120A  158A  25A4   	fcall	_makeHexByte
              120A  118A         
  4313  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  4314  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  4315  01BF  00A5               	movwf	(??_parsePacket+1)+0
  4316  01C0  0825               	movf	(??_parsePacket+1)+0,w
  4317  01C1  00FA               	movwf	(?i1_eeprom_write)
  4318  01C2  3054               	movlw	(_startByteAddr-__stringbase)
  4319  01C3  0084               	movwf	fsr0
  4320  01C4  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4321  01C9  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4322                           	line	124
  4323                           ;Packet.c: 124: eeprom_write(rwByteAddr, makeHexByte(dataPacket[2], dataPacket[3]));
  4324  01CE  1283               	bcf	status, 5	;RP0=0, select bank0
  4325  01CF  1303               	bcf	status, 6	;RP1=0, select bank0
  4326  01D0  082B               	movf	(parsePacket@dataPacket),w
  4327  01D1  3E03               	addlw	03h
  4328  01D2  0084               	movwf	fsr0
  4329  01D3  1383               	bcf	status, 7	;select IRP bank0
  4330  01D4  0800               	movf	indf,w
  4331  01D5  00A4               	movwf	(??_parsePacket+0)+0
  4332  01D6  0824               	movf	(??_parsePacket+0)+0,w
  4333  01D7  00FD               	movwf	(?_makeHexByte)
  4334  01D8  082B               	movf	(parsePacket@dataPacket),w
  4335  01D9  3E02               	addlw	02h
  4336  01DA  0084               	movwf	fsr0
  4337  01DB  0800               	movf	indf,w
  4338  01DC  120A  158A  25A4   	fcall	_makeHexByte
              120A  118A         
  4339  01E1  1283               	bcf	status, 5	;RP0=0, select bank0
  4340  01E2  1303               	bcf	status, 6	;RP1=0, select bank0
  4341  01E3  00A5               	movwf	(??_parsePacket+1)+0
  4342  01E4  0825               	movf	(??_parsePacket+1)+0,w
  4343  01E5  00FA               	movwf	(?i1_eeprom_write)
  4344  01E6  3053               	movlw	(_rwByteAddr-__stringbase)
  4345  01E7  0084               	movwf	fsr0
  4346  01E8  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4347  01ED  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4348                           	line	126
  4349                           ;Packet.c: 126: eeprom_write(cmdByteAddr, makeHexByte(dataPacket[4], dataPacket[5]));
  4350  01F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4351  01F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4352  01F4  082B               	movf	(parsePacket@dataPacket),w
  4353  01F5  3E05               	addlw	05h
  4354  01F6  0084               	movwf	fsr0
  4355  01F7  1383               	bcf	status, 7	;select IRP bank0
  4356  01F8  0800               	movf	indf,w
  4357  01F9  00A4               	movwf	(??_parsePacket+0)+0
  4358  01FA  0824               	movf	(??_parsePacket+0)+0,w
  4359  01FB  00FD               	movwf	(?_makeHexByte)
  4360  01FC  082B               	movf	(parsePacket@dataPacket),w
  4361  01FD  3E04               	addlw	04h
  4362  01FE  0084               	movwf	fsr0
  4363  01FF  0800               	movf	indf,w
  4364  0200  120A  158A  25A4   	fcall	_makeHexByte
              120A  118A         
  4365  0205  1283               	bcf	status, 5	;RP0=0, select bank0
  4366  0206  1303               	bcf	status, 6	;RP1=0, select bank0
  4367  0207  00A5               	movwf	(??_parsePacket+1)+0
  4368  0208  0825               	movf	(??_parsePacket+1)+0,w
  4369  0209  00FA               	movwf	(?i1_eeprom_write)
  4370  020A  3042               	movlw	(_cmdByteAddr-__stringbase)
  4371  020B  0084               	movwf	fsr0
  4372  020C  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4373  0211  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4374                           	line	128
  4375                           ;Packet.c: 128: eeprom_write(lenByteAddr, makeHexByte(dataPacket[6], dataPacket[7]));
  4376  0216  1283               	bcf	status, 5	;RP0=0, select bank0
  4377  0217  1303               	bcf	status, 6	;RP1=0, select bank0
  4378  0218  082B               	movf	(parsePacket@dataPacket),w
  4379  0219  3E07               	addlw	07h
  4380  021A  0084               	movwf	fsr0
  4381  021B  1383               	bcf	status, 7	;select IRP bank0
  4382  021C  0800               	movf	indf,w
  4383  021D  00A4               	movwf	(??_parsePacket+0)+0
  4384  021E  0824               	movf	(??_parsePacket+0)+0,w
  4385  021F  00FD               	movwf	(?_makeHexByte)
  4386  0220  082B               	movf	(parsePacket@dataPacket),w
  4387  0221  3E06               	addlw	06h
  4388  0222  0084               	movwf	fsr0
  4389  0223  0800               	movf	indf,w
  4390  0224  120A  158A  25A4   	fcall	_makeHexByte
              120A  118A         
  4391  0229  1283               	bcf	status, 5	;RP0=0, select bank0
  4392  022A  1303               	bcf	status, 6	;RP1=0, select bank0
  4393  022B  00A5               	movwf	(??_parsePacket+1)+0
  4394  022C  0825               	movf	(??_parsePacket+1)+0,w
  4395  022D  00FA               	movwf	(?i1_eeprom_write)
  4396  022E  304D               	movlw	(_lenByteAddr-__stringbase)
  4397  022F  0084               	movwf	fsr0
  4398  0230  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4399  0235  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4400                           	line	130
  4401                           ;Packet.c: 130: eeprom_write(csByteAddr, makeHexByte(dataPacket[strlen(dataPacket) - 2],
                                  dataPacket[strlen(dataPacket) - 1]));
  4402  023A  1283               	bcf	status, 5	;RP0=0, select bank0
  4403  023B  1303               	bcf	status, 6	;RP1=0, select bank0
  4404  023C  082B               	movf	(parsePacket@dataPacket),w
  4405  023D  120A  158A  26FD   	fcall	i1_strlen
              120A  118A         
  4406  0242  0870               	movf	(0+(?i1_strlen)),w
  4407  0243  3EFF               	addlw	0FFh
  4408  0244  1283               	bcf	status, 5	;RP0=0, select bank0
  4409  0245  1303               	bcf	status, 6	;RP1=0, select bank0
  4410  0246  072B               	addwf	(parsePacket@dataPacket),w
  4411  0247  00A4               	movwf	(??_parsePacket+0)+0
  4412  0248  0824               	movf	0+(??_parsePacket+0)+0,w
  4413  0249  0084               	movwf	fsr0
  4414  024A  1383               	bcf	status, 7	;select IRP bank0
  4415  024B  0800               	movf	indf,w
  4416  024C  00A5               	movwf	(??_parsePacket+1)+0
  4417  024D  0825               	movf	(??_parsePacket+1)+0,w
  4418  024E  00FD               	movwf	(?_makeHexByte)
  4419  024F  082B               	movf	(parsePacket@dataPacket),w
  4420  0250  120A  158A  26FD   	fcall	i1_strlen
              120A  118A         
  4421  0255  0870               	movf	(0+(?i1_strlen)),w
  4422  0256  3EFE               	addlw	0FEh
  4423  0257  1283               	bcf	status, 5	;RP0=0, select bank0
  4424  0258  1303               	bcf	status, 6	;RP1=0, select bank0
  4425  0259  072B               	addwf	(parsePacket@dataPacket),w
  4426  025A  00A6               	movwf	(??_parsePacket+2)+0
  4427  025B  0826               	movf	0+(??_parsePacket+2)+0,w
  4428  025C  0084               	movwf	fsr0
  4429  025D  1383               	bcf	status, 7	;select IRP bank0
  4430  025E  0800               	movf	indf,w
  4431  025F  120A  158A  25A4   	fcall	_makeHexByte
              120A  118A         
  4432  0264  1283               	bcf	status, 5	;RP0=0, select bank0
  4433  0265  1303               	bcf	status, 6	;RP1=0, select bank0
  4434  0266  00A7               	movwf	(??_parsePacket+3)+0
  4435  0267  0827               	movf	(??_parsePacket+3)+0,w
  4436  0268  00FA               	movwf	(?i1_eeprom_write)
  4437  0269  3043               	movlw	(_csByteAddr-__stringbase)
  4438  026A  0084               	movwf	fsr0
  4439  026B  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4440  0270  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4441                           	line	133
  4442                           	
  4443  0275                     i1l9447:	
  4444                           ;Packet.c: 133: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  4445  0275  1283               	bcf	status, 5	;RP0=0, select bank0
  4446  0276  1303               	bcf	status, 6	;RP1=0, select bank0
  4447  0277  01AA               	clrf	(parsePacket@i)
  4448  0278  2AAF               	goto	i1l9455
  4449                           	
  4450  0279                     i1l1596:	
  4451                           	line	134
  4452                           	
  4453  0279                     i1l9449:	
  4454                           ;Packet.c: 134: eeprom_write(dataBytesAddr+i, makeHexByte(dataPacket[8 + dataCounter], d
                                 ataPacket[9 + dataCounter]));
  4455  0279  0828               	movf	(parsePacket@dataCounter),w
  4456  027A  3E09               	addlw	09h
  4457  027B  072B               	addwf	(parsePacket@dataPacket),w
  4458  027C  00A4               	movwf	(??_parsePacket+0)+0
  4459  027D  0824               	movf	0+(??_parsePacket+0)+0,w
  4460  027E  0084               	movwf	fsr0
  4461  027F  1383               	bcf	status, 7	;select IRP bank0
  4462  0280  0800               	movf	indf,w
  4463  0281  00A5               	movwf	(??_parsePacket+1)+0
  4464  0282  0825               	movf	(??_parsePacket+1)+0,w
  4465  0283  00FD               	movwf	(?_makeHexByte)
  4466  0284  0828               	movf	(parsePacket@dataCounter),w
  4467  0285  3E08               	addlw	08h
  4468  0286  072B               	addwf	(parsePacket@dataPacket),w
  4469  0287  00A6               	movwf	(??_parsePacket+2)+0
  4470  0288  0826               	movf	0+(??_parsePacket+2)+0,w
  4471  0289  0084               	movwf	fsr0
  4472  028A  0800               	movf	indf,w
  4473  028B  120A  158A  25A4   	fcall	_makeHexByte
              120A  118A         
  4474  0290  1283               	bcf	status, 5	;RP0=0, select bank0
  4475  0291  1303               	bcf	status, 6	;RP1=0, select bank0
  4476  0292  00A7               	movwf	(??_parsePacket+3)+0
  4477  0293  0827               	movf	(??_parsePacket+3)+0,w
  4478  0294  00FA               	movwf	(?i1_eeprom_write)
  4479  0295  3044               	movlw	(_dataBytesAddr-__stringbase)
  4480  0296  0084               	movwf	fsr0
  4481  0297  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4482  029C  072A               	addwf	(parsePacket@i),w
  4483  029D  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4484                           	line	135
  4485                           	
  4486  02A2                     i1l9451:	
  4487                           ;Packet.c: 135: dataCounter += 2;
  4488  02A2  3002               	movlw	low(02h)
  4489  02A3  1283               	bcf	status, 5	;RP0=0, select bank0
  4490  02A4  1303               	bcf	status, 6	;RP1=0, select bank0
  4491  02A5  07A8               	addwf	(parsePacket@dataCounter),f
  4492  02A6  1803               	skipnc
  4493  02A7  0AA9               	incf	(parsePacket@dataCounter+1),f
  4494  02A8  3000               	movlw	high(02h)
  4495  02A9  07A9               	addwf	(parsePacket@dataCounter+1),f
  4496                           	line	133
  4497                           	
  4498  02AA                     i1l9453:	
  4499  02AA  3001               	movlw	(01h)
  4500  02AB  00A4               	movwf	(??_parsePacket+0)+0
  4501  02AC  0824               	movf	(??_parsePacket+0)+0,w
  4502  02AD  07AA               	addwf	(parsePacket@i),f
  4503  02AE  2AAF               	goto	i1l9455
  4504                           	
  4505  02AF                     i1l1595:	
  4506                           	
  4507  02AF                     i1l9455:	
  4508  02AF  304D               	movlw	(_lenByteAddr-__stringbase)
  4509  02B0  0084               	movwf	fsr0
  4510  02B1  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4511  02B6  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  4512  02BB  1283               	bcf	status, 5	;RP0=0, select bank0
  4513  02BC  1303               	bcf	status, 6	;RP1=0, select bank0
  4514  02BD  022A               	subwf	(parsePacket@i),w
  4515  02BE  1C03               	skipc
  4516  02BF  2AC1               	goto	u293_21
  4517  02C0  2AC2               	goto	u293_20
  4518  02C1                     u293_21:
  4519  02C1  2A79               	goto	i1l9449
  4520  02C2                     u293_20:
  4521  02C2  2AC4               	goto	i1l1598
  4522                           	
  4523  02C3                     i1l1597:	
  4524  02C3  2AC4               	goto	i1l1598
  4525                           	line	137
  4526                           	
  4527  02C4                     i1l1594:	
  4528                           	line	138
  4529                           	
  4530  02C4                     i1l1598:	
  4531  02C4  0008               	return
  4532                           	opt stack 0
  4533                           GLOBAL	__end_of_parsePacket
  4534  02C5                     	__end_of_parsePacket:
  4535 ;; =============== function _parsePacket ends ============
  4536                           
  4537                           	signat	_parsePacket,4216
  4538                           	global	i1_writeString
  4539                           psect	text898,local,class=CODE,delta=2
  4540                           global __ptext898
  4541  0E9D                     __ptext898:
  4542                           
  4543 ;; *************** function i1_writeString *****************
  4544 ;; Defined at:
  4545 ;;		line 140 in file "Bluetooth.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  writeString     1    wreg     PTR unsigned char 
  4548 ;;		 -> readError(25), 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  writeString     1   11[COMMON] PTR unsigned char 
  4551 ;;		 -> readError(25), 
  4552 ;;  writeString     2   12[COMMON] unsigned int 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;		None               void
  4555 ;; Registers used:
  4556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4562 ;;      Params:         0       0       0       0       0
  4563 ;;      Locals:         3       0       0       0       0
  4564 ;;      Temps:          1       0       0       0       0
  4565 ;;      Totals:         4       0       0       0       0
  4566 ;;Total ram usage:        4 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    1
  4569 ;; This function calls:
  4570 ;;		i1_writeByte
  4571 ;;		i1_strlen
  4572 ;; This function is called by:
  4573 ;;		_readCommands
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           psect	text898
  4577                           	file	"Bluetooth.c"
  4578                           	line	140
  4579                           	global	__size_ofi1_writeString
  4580  002F                     	__size_ofi1_writeString	equ	__end_ofi1_writeString-i1_writeString
  4581                           	
  4582  0E9D                     i1_writeString:	
  4583 ;; hardware stack exceeded
  4584                           	opt	stack 0
  4585                           ; Regs used in i1_writeString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4586                           ;i1writeString@userString stored from wreg
  4587                           	line	144
  4588  0E9D  00FB               	movwf	(i1writeString@userString)
  4589                           	
  4590  0E9E                     i1l9631:	
  4591                           ;Bluetooth.c: 142: unsigned int i;
  4592                           ;Bluetooth.c: 144: for(i = 0;i<strlen(userString);i++){
  4593  0E9E  01FC               	clrf	(i1writeString@i)
  4594  0E9F  01FD               	clrf	(i1writeString@i+1)
  4595  0EA0  2EB4               	goto	i1l9637
  4596                           	
  4597  0EA1                     i1l788:	
  4598                           	line	145
  4599                           	
  4600  0EA1                     i1l9633:	
  4601                           ;Bluetooth.c: 145: writeByte(userString[i]);
  4602  0EA1  087C               	movf	(i1writeString@i),w
  4603  0EA2  077B               	addwf	(i1writeString@userString),w
  4604  0EA3  00FA               	movwf	(??i1_writeString+0)+0
  4605  0EA4  087A               	movf	0+(??i1_writeString+0)+0,w
  4606  0EA5  0084               	movwf	fsr0
  4607  0EA6  1383               	bcf	status, 7	;select IRP bank0
  4608  0EA7  0800               	movf	indf,w
  4609  0EA8  120A  158A  24A8   	fcall	i1_writeByte
              120A  158A         
  4610                           	line	144
  4611                           	
  4612  0EAD                     i1l9635:	
  4613  0EAD  3001               	movlw	low(01h)
  4614  0EAE  07FC               	addwf	(i1writeString@i),f
  4615  0EAF  1803               	skipnc
  4616  0EB0  0AFD               	incf	(i1writeString@i+1),f
  4617  0EB1  3000               	movlw	high(01h)
  4618  0EB2  07FD               	addwf	(i1writeString@i+1),f
  4619  0EB3  2EB4               	goto	i1l9637
  4620                           	
  4621  0EB4                     i1l787:	
  4622                           	
  4623  0EB4                     i1l9637:	
  4624  0EB4  087B               	movf	(i1writeString@userString),w
  4625  0EB5  120A  158A  26FD   	fcall	i1_strlen
              120A  158A         
  4626  0EBA  0871               	movf	(1+(?i1_strlen)),w
  4627  0EBB  027D               	subwf	(i1writeString@i+1),w
  4628  0EBC  1D03               	skipz
  4629  0EBD  2EC0               	goto	u312_25
  4630  0EBE  0870               	movf	(0+(?i1_strlen)),w
  4631  0EBF  027C               	subwf	(i1writeString@i),w
  4632  0EC0                     u312_25:
  4633  0EC0  1C03               	skipc
  4634  0EC1  2EC3               	goto	u312_21
  4635  0EC2  2EC4               	goto	u312_20
  4636  0EC3                     u312_21:
  4637  0EC3  2EA1               	goto	i1l9633
  4638  0EC4                     u312_20:
  4639  0EC4  2EC5               	goto	i1l9639
  4640                           	
  4641  0EC5                     i1l789:	
  4642                           	line	148
  4643                           	
  4644  0EC5                     i1l9639:	
  4645                           ;Bluetooth.c: 146: }
  4646                           ;Bluetooth.c: 148: writeByte((unsigned char)i);
  4647  0EC5  087C               	movf	(i1writeString@i),w
  4648  0EC6  120A  158A  24A8   	fcall	i1_writeByte
              120A  158A         
  4649                           	line	150
  4650                           	
  4651  0ECB                     i1l790:	
  4652  0ECB  0008               	return
  4653                           	opt stack 0
  4654                           GLOBAL	__end_ofi1_writeString
  4655  0ECC                     	__end_ofi1_writeString:
  4656 ;; =============== function i1_writeString ends ============
  4657                           
  4658                           	signat	i1_writeString,88
  4659                           	global	_addDataToCheckSum
  4660                           psect	text899,local,class=CODE,delta=2
  4661                           global __ptext899
  4662  035F                     __ptext899:
  4663                           
  4664 ;; *************** function _addDataToCheckSum *****************
  4665 ;; Defined at:
  4666 ;;		line 258 in file "Packet.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;		None
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  i               1   13[COMMON] unsigned char 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;		None               void
  4673 ;; Registers used:
  4674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4680 ;;      Params:         0       0       0       0       0
  4681 ;;      Locals:         1       0       0       0       0
  4682 ;;      Temps:          0       2       0       0       0
  4683 ;;      Totals:         1       2       0       0       0
  4684 ;;Total ram usage:        3 bytes
  4685 ;; Hardware stack levels used:    1
  4686 ;; Hardware stack levels required when called:    1
  4687 ;; This function calls:
  4688 ;;		_eeprom_read
  4689 ;;		i1_eeprom_write
  4690 ;; This function is called by:
  4691 ;;		_validatePacket
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           psect	text899
  4695                           	file	"Packet.c"
  4696                           	line	258
  4697                           	global	__size_of_addDataToCheckSum
  4698  0077                     	__size_of_addDataToCheckSum	equ	__end_of_addDataToCheckSum-_addDataToCheckSum
  4699                           	
  4700  035F                     _addDataToCheckSum:	
  4701 ;; hardware stack exceeded
  4702                           	opt	stack 0
  4703                           ; Regs used in _addDataToCheckSum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4704                           	line	260
  4705                           	
  4706  035F                     i1l9539:	
  4707                           ;Packet.c: 260: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(lenB
                                 yteAddr));
  4708  035F  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4709  0360  0084               	movwf	fsr0
  4710  0361  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4711  0366  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  4712  036B  1283               	bcf	status, 5	;RP0=0, select bank0
  4713  036C  1303               	bcf	status, 6	;RP1=0, select bank0
  4714  036D  00A0               	movwf	(??_addDataToCheckSum+0)+0
  4715  036E  304D               	movlw	(_lenByteAddr-__stringbase)
  4716  036F  0084               	movwf	fsr0
  4717  0370  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4718  0375  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  4719  037A  1283               	bcf	status, 5	;RP0=0, select bank0
  4720  037B  1303               	bcf	status, 6	;RP1=0, select bank0
  4721  037C  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  4722  037D  00A1               	movwf	(??_addDataToCheckSum+1)+0
  4723  037E  0821               	movf	(??_addDataToCheckSum+1)+0,w
  4724  037F  00FA               	movwf	(?i1_eeprom_write)
  4725  0380  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4726  0381  0084               	movwf	fsr0
  4727  0382  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4728  0387  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4729                           	line	263
  4730                           	
  4731  038C                     i1l9541:	
  4732                           ;Packet.c: 263: for (unsigned char i = 0x00; i < eeprom_read(lenByteAddr); i++) {
  4733  038C  01FD               	clrf	(addDataToCheckSum@i)
  4734  038D  2BC3               	goto	i1l9547
  4735                           	
  4736  038E                     i1l1625:	
  4737                           	line	265
  4738                           	
  4739  038E                     i1l9543:	
  4740                           ;Packet.c: 265: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(data
                                 BytesAddr+i));
  4741  038E  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4742  038F  0084               	movwf	fsr0
  4743  0390  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4744  0395  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  4745  039A  1283               	bcf	status, 5	;RP0=0, select bank0
  4746  039B  1303               	bcf	status, 6	;RP1=0, select bank0
  4747  039C  00A0               	movwf	(??_addDataToCheckSum+0)+0
  4748  039D  3044               	movlw	(_dataBytesAddr-__stringbase)
  4749  039E  0084               	movwf	fsr0
  4750  039F  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4751  03A4  077D               	addwf	(addDataToCheckSum@i),w
  4752  03A5  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  4753  03AA  1283               	bcf	status, 5	;RP0=0, select bank0
  4754  03AB  1303               	bcf	status, 6	;RP1=0, select bank0
  4755  03AC  0720               	addwf	0+(??_addDataToCheckSum+0)+0,w
  4756  03AD  00A1               	movwf	(??_addDataToCheckSum+1)+0
  4757  03AE  0821               	movf	(??_addDataToCheckSum+1)+0,w
  4758  03AF  00FA               	movwf	(?i1_eeprom_write)
  4759  03B0  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4760  03B1  0084               	movwf	fsr0
  4761  03B2  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4762  03B7  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  4763                           	line	263
  4764                           	
  4765  03BC                     i1l9545:	
  4766  03BC  3001               	movlw	(01h)
  4767  03BD  1283               	bcf	status, 5	;RP0=0, select bank0
  4768  03BE  1303               	bcf	status, 6	;RP1=0, select bank0
  4769  03BF  00A0               	movwf	(??_addDataToCheckSum+0)+0
  4770  03C0  0820               	movf	(??_addDataToCheckSum+0)+0,w
  4771  03C1  07FD               	addwf	(addDataToCheckSum@i),f
  4772  03C2  2BC3               	goto	i1l9547
  4773                           	
  4774  03C3                     i1l1624:	
  4775                           	
  4776  03C3                     i1l9547:	
  4777  03C3  304D               	movlw	(_lenByteAddr-__stringbase)
  4778  03C4  0084               	movwf	fsr0
  4779  03C5  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4780  03CA  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  4781  03CF  027D               	subwf	(addDataToCheckSum@i),w
  4782  03D0  1C03               	skipc
  4783  03D1  2BD3               	goto	u304_21
  4784  03D2  2BD4               	goto	u304_20
  4785  03D3                     u304_21:
  4786  03D3  2B8E               	goto	i1l9543
  4787  03D4                     u304_20:
  4788  03D4  2BD5               	goto	i1l1627
  4789                           	
  4790  03D5                     i1l1626:	
  4791                           	line	267
  4792                           	
  4793  03D5                     i1l1627:	
  4794  03D5  0008               	return
  4795                           	opt stack 0
  4796                           GLOBAL	__end_of_addDataToCheckSum
  4797  03D6                     	__end_of_addDataToCheckSum:
  4798 ;; =============== function _addDataToCheckSum ends ============
  4799                           
  4800                           	signat	_addDataToCheckSum,88
  4801                           	global	_checkCS
  4802                           psect	text900,local,class=CODE,delta=2
  4803                           global __ptext900
  4804  0F61                     __ptext900:
  4805                           
  4806 ;; *************** function _checkCS *****************
  4807 ;; Defined at:
  4808 ;;		line 216 in file "Packet.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  2    2[COMMON] int 
  4815 ;; Registers used:
  4816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4822 ;;      Params:         2       0       0       0       0
  4823 ;;      Locals:         0       0       0       0       0
  4824 ;;      Temps:          1       0       0       0       0
  4825 ;;      Totals:         3       0       0       0       0
  4826 ;;Total ram usage:        3 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:    1
  4829 ;; This function calls:
  4830 ;;		_eeprom_read
  4831 ;;		i1_writeByte
  4832 ;; This function is called by:
  4833 ;;		_validatePacket
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           psect	text900
  4837                           	file	"Packet.c"
  4838                           	line	216
  4839                           	global	__size_of_checkCS
  4840  0034                     	__size_of_checkCS	equ	__end_of_checkCS-_checkCS
  4841                           	
  4842  0F61                     _checkCS:	
  4843 ;; hardware stack exceeded
  4844                           	opt	stack 0
  4845                           ; Regs used in _checkCS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4846                           	line	218
  4847                           	
  4848  0F61                     i1l9507:	
  4849                           ;Packet.c: 218: if(eeprom_read(csByteAddr) == eeprom_read(calcCSByteAddr)){
  4850  0F61  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4851  0F62  0084               	movwf	fsr0
  4852  0F63  120A  118A  2446   	fcall	stringdir
              120A  158A         
  4853  0F68  120A  158A  2563   	fcall	_eeprom_read
              120A  158A         
  4854  0F6D  00F4               	movwf	(??_checkCS+0)+0
  4855  0F6E  3043               	movlw	(_csByteAddr-__stringbase)
  4856  0F6F  0084               	movwf	fsr0
  4857  0F70  120A  118A  2446   	fcall	stringdir
              120A  158A         
  4858  0F75  120A  158A  2563   	fcall	_eeprom_read
              120A  158A         
  4859  0F7A  0674               	xorwf	0+(??_checkCS+0)+0,w
  4860  0F7B  1D03               	skipz
  4861  0F7C  2F7E               	goto	u298_21
  4862  0F7D  2F7F               	goto	u298_20
  4863  0F7E                     u298_21:
  4864  0F7E  2F8B               	goto	i1l9515
  4865  0F7F                     u298_20:
  4866                           	line	220
  4867                           	
  4868  0F7F                     i1l9509:	
  4869                           ;Packet.c: 220: writeByte('Y');
  4870  0F7F  3059               	movlw	(059h)
  4871  0F80  120A  158A  24A8   	fcall	i1_writeByte
              120A  158A         
  4872                           	line	221
  4873                           	
  4874  0F85                     i1l9511:	
  4875                           ;Packet.c: 221: return 1;
  4876  0F85  3001               	movlw	low(01h)
  4877  0F86  00F2               	movwf	(?_checkCS)
  4878  0F87  3000               	movlw	high(01h)
  4879  0F88  00F3               	movwf	((?_checkCS))+1
  4880  0F89  2F94               	goto	i1l1616
  4881                           	
  4882  0F8A                     i1l9513:	
  4883  0F8A  2F94               	goto	i1l1616
  4884                           	line	222
  4885                           	
  4886  0F8B                     i1l1615:	
  4887                           	line	224
  4888                           	
  4889  0F8B                     i1l9515:	
  4890                           ;Packet.c: 222: }
  4891                           ;Packet.c: 224: writeByte('N');
  4892  0F8B  304E               	movlw	(04Eh)
  4893  0F8C  120A  158A  24A8   	fcall	i1_writeByte
              120A  158A         
  4894                           	line	225
  4895                           	
  4896  0F91                     i1l9517:	
  4897                           ;Packet.c: 225: return 0;
  4898  0F91  01F2               	clrf	(?_checkCS)
  4899  0F92  01F3               	clrf	(?_checkCS+1)
  4900  0F93  2F94               	goto	i1l1616
  4901                           	
  4902  0F94                     i1l9519:	
  4903                           	line	226
  4904                           	
  4905  0F94                     i1l1616:	
  4906  0F94  0008               	return
  4907                           	opt stack 0
  4908                           GLOBAL	__end_of_checkCS
  4909  0F95                     	__end_of_checkCS:
  4910 ;; =============== function _checkCS ends ============
  4911                           
  4912                           	signat	_checkCS,90
  4913                           	global	_checkCMDByte
  4914                           psect	text901,local,class=CODE,delta=2
  4915                           global __ptext901
  4916  03D6                     __ptext901:
  4917                           
  4918 ;; *************** function _checkCMDByte *****************
  4919 ;; Defined at:
  4920 ;;		line 193 in file "Packet.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;		None
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;		None
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  2    0[BANK0 ] int 
  4927 ;; Registers used:
  4928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4934 ;;      Params:         0       2       0       0       0
  4935 ;;      Locals:         0       0       0       0       0
  4936 ;;      Temps:          0       2       0       0       0
  4937 ;;      Totals:         0       4       0       0       0
  4938 ;;Total ram usage:        4 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    1
  4941 ;; This function calls:
  4942 ;;		_eeprom_read
  4943 ;;		i1_eeprom_write
  4944 ;;		i1_writeByte
  4945 ;; This function is called by:
  4946 ;;		_validatePacket
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           psect	text901
  4950                           	file	"Packet.c"
  4951                           	line	193
  4952                           	global	__size_of_checkCMDByte
  4953  0070                     	__size_of_checkCMDByte	equ	__end_of_checkCMDByte-_checkCMDByte
  4954                           	
  4955  03D6                     _checkCMDByte:	
  4956 ;; hardware stack exceeded
  4957                           	opt	stack 0
  4958                           ; Regs used in _checkCMDByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4959                           	line	195
  4960                           	
  4961  03D6                     i1l9491:	
  4962                           ;Packet.c: 195: if(eeprom_read(cmdByteAddr) >= 0 && eeprom_read(cmdByteAddr) <= maxCmd){
  4963  03D6  3042               	movlw	(_cmdByteAddr-__stringbase)
  4964  03D7  0084               	movwf	fsr0
  4965  03D8  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4966  03DD  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  4967  03E2  3042               	movlw	(_cmdByteAddr-__stringbase)
  4968  03E3  0084               	movwf	fsr0
  4969  03E4  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4970  03E9  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  4971  03EE  1283               	bcf	status, 5	;RP0=0, select bank0
  4972  03EF  1303               	bcf	status, 6	;RP1=0, select bank0
  4973  03F0  00A2               	movwf	(??_checkCMDByte+0)+0
  4974  03F1  304E               	movlw	(_maxCmd-__stringbase)
  4975  03F2  0084               	movwf	fsr0
  4976  03F3  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4977  03F8  00A3               	movwf	(??_checkCMDByte+1)+0
  4978  03F9  0822               	movf	0+(??_checkCMDByte+0)+0,w
  4979  03FA  0223               	subwf	(??_checkCMDByte+1)+0,w
  4980  03FB  1C03               	skipc
  4981  03FC  2BFE               	goto	u297_21
  4982  03FD  2BFF               	goto	u297_20
  4983  03FE                     u297_21:
  4984  03FE  2C3A               	goto	i1l9501
  4985  03FF                     u297_20:
  4986                           	line	197
  4987                           	
  4988  03FF                     i1l9493:	
  4989                           ;Packet.c: 197: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(cmdB
                                 yteAddr));
  4990  03FF  3041               	movlw	(_calcCSByteAddr-__stringbase)
  4991  0400  0084               	movwf	fsr0
  4992  0401  120A  118A  2446   	fcall	stringdir
              120A  118A         
  4993  0406  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  4994  040B  1283               	bcf	status, 5	;RP0=0, select bank0
  4995  040C  1303               	bcf	status, 6	;RP1=0, select bank0
  4996  040D  00A2               	movwf	(??_checkCMDByte+0)+0
  4997  040E  3042               	movlw	(_cmdByteAddr-__stringbase)
  4998  040F  0084               	movwf	fsr0
  4999  0410  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5000  0415  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  5001  041A  1283               	bcf	status, 5	;RP0=0, select bank0
  5002  041B  1303               	bcf	status, 6	;RP1=0, select bank0
  5003  041C  0722               	addwf	0+(??_checkCMDByte+0)+0,w
  5004  041D  00A3               	movwf	(??_checkCMDByte+1)+0
  5005  041E  0823               	movf	(??_checkCMDByte+1)+0,w
  5006  041F  00FA               	movwf	(?i1_eeprom_write)
  5007  0420  3041               	movlw	(_calcCSByteAddr-__stringbase)
  5008  0421  0084               	movwf	fsr0
  5009  0422  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5010  0427  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  5011                           	line	199
  5012                           	
  5013  042C                     i1l9495:	
  5014                           ;Packet.c: 199: writeByte('C');
  5015  042C  3043               	movlw	(043h)
  5016  042D  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  5017                           	line	200
  5018                           	
  5019  0432                     i1l9497:	
  5020                           ;Packet.c: 200: return 1;
  5021  0432  3001               	movlw	low(01h)
  5022  0433  1283               	bcf	status, 5	;RP0=0, select bank0
  5023  0434  1303               	bcf	status, 6	;RP1=0, select bank0
  5024  0435  00A0               	movwf	(?_checkCMDByte)
  5025  0436  3000               	movlw	high(01h)
  5026  0437  00A1               	movwf	((?_checkCMDByte))+1
  5027  0438  2C45               	goto	i1l1612
  5028                           	
  5029  0439                     i1l9499:	
  5030  0439  2C45               	goto	i1l1612
  5031                           	line	201
  5032                           	
  5033  043A                     i1l1611:	
  5034                           	line	203
  5035                           	
  5036  043A                     i1l9501:	
  5037                           ;Packet.c: 201: }
  5038                           ;Packet.c: 203: writeByte('N');
  5039  043A  304E               	movlw	(04Eh)
  5040  043B  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  5041                           	line	204
  5042                           	
  5043  0440                     i1l9503:	
  5044                           ;Packet.c: 204: return 0;
  5045  0440  1283               	bcf	status, 5	;RP0=0, select bank0
  5046  0441  1303               	bcf	status, 6	;RP1=0, select bank0
  5047  0442  01A0               	clrf	(?_checkCMDByte)
  5048  0443  01A1               	clrf	(?_checkCMDByte+1)
  5049  0444  2C45               	goto	i1l1612
  5050                           	
  5051  0445                     i1l9505:	
  5052                           	line	205
  5053                           	
  5054  0445                     i1l1612:	
  5055  0445  0008               	return
  5056                           	opt stack 0
  5057                           GLOBAL	__end_of_checkCMDByte
  5058  0446                     	__end_of_checkCMDByte:
  5059 ;; =============== function _checkCMDByte ends ============
  5060                           
  5061                           	signat	_checkCMDByte,90
  5062                           	global	_checkRWByte
  5063                           psect	text902,local,class=CODE,delta=2
  5064                           global __ptext902
  5065  04B3                     __ptext902:
  5066                           
  5067 ;; *************** function _checkRWByte *****************
  5068 ;; Defined at:
  5069 ;;		line 171 in file "Packet.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  2    0[BANK0 ] int 
  5076 ;; Registers used:
  5077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5083 ;;      Params:         0       2       0       0       0
  5084 ;;      Locals:         0       0       0       0       0
  5085 ;;      Temps:          0       2       0       0       0
  5086 ;;      Totals:         0       4       0       0       0
  5087 ;;Total ram usage:        4 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    1
  5090 ;; This function calls:
  5091 ;;		_eeprom_read
  5092 ;;		i1_writeByte
  5093 ;;		i1_eeprom_write
  5094 ;; This function is called by:
  5095 ;;		_validatePacket
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           psect	text902
  5099                           	file	"Packet.c"
  5100                           	line	171
  5101                           	global	__size_of_checkRWByte
  5102  006A                     	__size_of_checkRWByte	equ	__end_of_checkRWByte-_checkRWByte
  5103                           	
  5104  04B3                     _checkRWByte:	
  5105 ;; hardware stack exceeded
  5106                           	opt	stack 0
  5107                           ; Regs used in _checkRWByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5108                           	line	174
  5109                           	
  5110  04B3                     i1l9473:	
  5111                           ;Packet.c: 174: if(eeprom_read(rwByteAddr) == 0 || eeprom_read(rwByteAddr) == 1){
  5112  04B3  3053               	movlw	(_rwByteAddr-__stringbase)
  5113  04B4  0084               	movwf	fsr0
  5114  04B5  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5115  04BA  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  5116  04BF  3A00               	xorlw	0
  5117  04C0  1903               	skipnz
  5118  04C1  2CC3               	goto	u295_21
  5119  04C2  2CC4               	goto	u295_20
  5120  04C3                     u295_21:
  5121  04C3  2CD6               	goto	i1l9477
  5122  04C4                     u295_20:
  5123                           	
  5124  04C4                     i1l9475:	
  5125  04C4  3053               	movlw	(_rwByteAddr-__stringbase)
  5126  04C5  0084               	movwf	fsr0
  5127  04C6  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5128  04CB  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  5129  04D0  3A01               	xorlw	01h
  5130  04D1  1D03               	skipz
  5131  04D2  2CD4               	goto	u296_21
  5132  04D3  2CD5               	goto	u296_20
  5133  04D4                     u296_21:
  5134  04D4  2D11               	goto	i1l9485
  5135  04D5                     u296_20:
  5136  04D5  2CD6               	goto	i1l9477
  5137                           	
  5138  04D6                     i1l1607:	
  5139                           	line	176
  5140                           	
  5141  04D6                     i1l9477:	
  5142                           ;Packet.c: 176: writeByte('R');
  5143  04D6  3052               	movlw	(052h)
  5144  04D7  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  5145                           	line	178
  5146                           	
  5147  04DC                     i1l9479:	
  5148                           ;Packet.c: 178: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(rwBy
                                 teAddr));
  5149  04DC  3041               	movlw	(_calcCSByteAddr-__stringbase)
  5150  04DD  0084               	movwf	fsr0
  5151  04DE  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5152  04E3  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  5153  04E8  1283               	bcf	status, 5	;RP0=0, select bank0
  5154  04E9  1303               	bcf	status, 6	;RP1=0, select bank0
  5155  04EA  00A2               	movwf	(??_checkRWByte+0)+0
  5156  04EB  3053               	movlw	(_rwByteAddr-__stringbase)
  5157  04EC  0084               	movwf	fsr0
  5158  04ED  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5159  04F2  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  5160  04F7  1283               	bcf	status, 5	;RP0=0, select bank0
  5161  04F8  1303               	bcf	status, 6	;RP1=0, select bank0
  5162  04F9  0722               	addwf	0+(??_checkRWByte+0)+0,w
  5163  04FA  00A3               	movwf	(??_checkRWByte+1)+0
  5164  04FB  0823               	movf	(??_checkRWByte+1)+0,w
  5165  04FC  00FA               	movwf	(?i1_eeprom_write)
  5166  04FD  3041               	movlw	(_calcCSByteAddr-__stringbase)
  5167  04FE  0084               	movwf	fsr0
  5168  04FF  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5169  0504  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  5170                           	line	179
  5171                           	
  5172  0509                     i1l9481:	
  5173                           ;Packet.c: 179: return 1;
  5174  0509  3001               	movlw	low(01h)
  5175  050A  1283               	bcf	status, 5	;RP0=0, select bank0
  5176  050B  1303               	bcf	status, 6	;RP1=0, select bank0
  5177  050C  00A0               	movwf	(?_checkRWByte)
  5178  050D  3000               	movlw	high(01h)
  5179  050E  00A1               	movwf	((?_checkRWByte))+1
  5180  050F  2D1C               	goto	i1l1608
  5181                           	
  5182  0510                     i1l9483:	
  5183  0510  2D1C               	goto	i1l1608
  5184                           	line	180
  5185                           	
  5186  0511                     i1l1605:	
  5187                           	line	182
  5188                           	
  5189  0511                     i1l9485:	
  5190                           ;Packet.c: 180: }
  5191                           ;Packet.c: 182: writeByte('N');
  5192  0511  304E               	movlw	(04Eh)
  5193  0512  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  5194                           	line	183
  5195                           	
  5196  0517                     i1l9487:	
  5197                           ;Packet.c: 183: return 0;
  5198  0517  1283               	bcf	status, 5	;RP0=0, select bank0
  5199  0518  1303               	bcf	status, 6	;RP1=0, select bank0
  5200  0519  01A0               	clrf	(?_checkRWByte)
  5201  051A  01A1               	clrf	(?_checkRWByte+1)
  5202  051B  2D1C               	goto	i1l1608
  5203                           	
  5204  051C                     i1l9489:	
  5205                           	line	184
  5206                           	
  5207  051C                     i1l1608:	
  5208  051C  0008               	return
  5209                           	opt stack 0
  5210                           GLOBAL	__end_of_checkRWByte
  5211  051D                     	__end_of_checkRWByte:
  5212 ;; =============== function _checkRWByte ends ============
  5213                           
  5214                           	signat	_checkRWByte,90
  5215                           	global	_checkStartByte
  5216                           psect	text903,local,class=CODE,delta=2
  5217                           global __ptext903
  5218  0584                     __ptext903:
  5219                           
  5220 ;; *************** function _checkStartByte *****************
  5221 ;; Defined at:
  5222 ;;		line 148 in file "Packet.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;		None
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;		None
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  2    0[BANK0 ] int 
  5229 ;; Registers used:
  5230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5236 ;;      Params:         0       2       0       0       0
  5237 ;;      Locals:         0       0       0       0       0
  5238 ;;      Temps:          0       2       0       0       0
  5239 ;;      Totals:         0       4       0       0       0
  5240 ;;Total ram usage:        4 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    1
  5243 ;; This function calls:
  5244 ;;		_eeprom_read
  5245 ;;		i1_writeByte
  5246 ;;		i1_eeprom_write
  5247 ;; This function is called by:
  5248 ;;		_validatePacket
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           psect	text903
  5252                           	file	"Packet.c"
  5253                           	line	148
  5254                           	global	__size_of_checkStartByte
  5255  0064                     	__size_of_checkStartByte	equ	__end_of_checkStartByte-_checkStartByte
  5256                           	
  5257  0584                     _checkStartByte:	
  5258 ;; hardware stack exceeded
  5259                           	opt	stack 0
  5260                           ; Regs used in _checkStartByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5261                           	line	151
  5262                           	
  5263  0584                     i1l9457:	
  5264                           ;Packet.c: 151: if (eeprom_read(startByteAddr) == userStartByte) {
  5265  0584  3060               	movlw	(_userStartByte-__stringbase)
  5266  0585  0084               	movwf	fsr0
  5267  0586  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5268  058B  1283               	bcf	status, 5	;RP0=0, select bank0
  5269  058C  1303               	bcf	status, 6	;RP1=0, select bank0
  5270  058D  00A2               	movwf	(??_checkStartByte+0)+0
  5271  058E  3054               	movlw	(_startByteAddr-__stringbase)
  5272  058F  0084               	movwf	fsr0
  5273  0590  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5274  0595  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  5275  059A  1283               	bcf	status, 5	;RP0=0, select bank0
  5276  059B  1303               	bcf	status, 6	;RP1=0, select bank0
  5277  059C  0622               	xorwf	(??_checkStartByte+0)+0,w
  5278  059D  1D03               	skipz
  5279  059E  2DA0               	goto	u294_21
  5280  059F  2DA1               	goto	u294_20
  5281  05A0                     u294_21:
  5282  05A0  2DDC               	goto	i1l9467
  5283  05A1                     u294_20:
  5284                           	line	153
  5285                           	
  5286  05A1                     i1l9459:	
  5287                           ;Packet.c: 153: writeByte('S');
  5288  05A1  3053               	movlw	(053h)
  5289  05A2  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  5290                           	line	155
  5291                           	
  5292  05A7                     i1l9461:	
  5293                           ;Packet.c: 155: eeprom_write(calcCSByteAddr,eeprom_read(calcCSByteAddr)+eeprom_read(star
                                 tByteAddr));
  5294  05A7  3041               	movlw	(_calcCSByteAddr-__stringbase)
  5295  05A8  0084               	movwf	fsr0
  5296  05A9  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5297  05AE  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  5298  05B3  1283               	bcf	status, 5	;RP0=0, select bank0
  5299  05B4  1303               	bcf	status, 6	;RP1=0, select bank0
  5300  05B5  00A2               	movwf	(??_checkStartByte+0)+0
  5301  05B6  3054               	movlw	(_startByteAddr-__stringbase)
  5302  05B7  0084               	movwf	fsr0
  5303  05B8  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5304  05BD  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  5305  05C2  1283               	bcf	status, 5	;RP0=0, select bank0
  5306  05C3  1303               	bcf	status, 6	;RP1=0, select bank0
  5307  05C4  0722               	addwf	0+(??_checkStartByte+0)+0,w
  5308  05C5  00A3               	movwf	(??_checkStartByte+1)+0
  5309  05C6  0823               	movf	(??_checkStartByte+1)+0,w
  5310  05C7  00FA               	movwf	(?i1_eeprom_write)
  5311  05C8  3041               	movlw	(_calcCSByteAddr-__stringbase)
  5312  05C9  0084               	movwf	fsr0
  5313  05CA  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5314  05CF  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  5315                           	line	156
  5316                           	
  5317  05D4                     i1l9463:	
  5318                           ;Packet.c: 156: return 1;
  5319  05D4  3001               	movlw	low(01h)
  5320  05D5  1283               	bcf	status, 5	;RP0=0, select bank0
  5321  05D6  1303               	bcf	status, 6	;RP1=0, select bank0
  5322  05D7  00A0               	movwf	(?_checkStartByte)
  5323  05D8  3000               	movlw	high(01h)
  5324  05D9  00A1               	movwf	((?_checkStartByte))+1
  5325  05DA  2DE7               	goto	i1l1602
  5326                           	
  5327  05DB                     i1l9465:	
  5328  05DB  2DE7               	goto	i1l1602
  5329                           	line	157
  5330                           	
  5331  05DC                     i1l1601:	
  5332                           	line	159
  5333                           	
  5334  05DC                     i1l9467:	
  5335                           ;Packet.c: 157: }
  5336                           ;Packet.c: 159: writeByte('N');
  5337  05DC  304E               	movlw	(04Eh)
  5338  05DD  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  5339                           	line	160
  5340                           	
  5341  05E2                     i1l9469:	
  5342                           ;Packet.c: 160: return 0;
  5343  05E2  1283               	bcf	status, 5	;RP0=0, select bank0
  5344  05E3  1303               	bcf	status, 6	;RP1=0, select bank0
  5345  05E4  01A0               	clrf	(?_checkStartByte)
  5346  05E5  01A1               	clrf	(?_checkStartByte+1)
  5347  05E6  2DE7               	goto	i1l1602
  5348                           	
  5349  05E7                     i1l9471:	
  5350                           	line	161
  5351                           	
  5352  05E7                     i1l1602:	
  5353  05E7  0008               	return
  5354                           	opt stack 0
  5355                           GLOBAL	__end_of_checkStartByte
  5356  05E8                     	__end_of_checkStartByte:
  5357 ;; =============== function _checkStartByte ends ============
  5358                           
  5359                           	signat	_checkStartByte,90
  5360                           	global	_checkDataFrames
  5361                           psect	text904,local,class=CODE,delta=2
  5362                           global __ptext904
  5363  02C5                     __ptext904:
  5364                           
  5365 ;; *************** function _checkDataFrames *****************
  5366 ;; Defined at:
  5367 ;;		line 85 in file "Packet.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;		None
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  2    2[COMMON] int 
  5374 ;; Registers used:
  5375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5381 ;;      Params:         2       0       0       0       0
  5382 ;;      Locals:         0       0       0       0       0
  5383 ;;      Temps:          6       0       0       0       0
  5384 ;;      Totals:         8       0       0       0       0
  5385 ;;Total ram usage:        8 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    1
  5388 ;; This function calls:
  5389 ;;		_eeprom_read
  5390 ;;		i1_writeByte
  5391 ;; This function is called by:
  5392 ;;		_validatePacket
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           psect	text904
  5396                           	file	"Packet.c"
  5397                           	line	85
  5398                           	global	__size_of_checkDataFrames
  5399  009A                     	__size_of_checkDataFrames	equ	__end_of_checkDataFrames-_checkDataFrames
  5400                           	
  5401  02C5                     _checkDataFrames:	
  5402 ;; hardware stack exceeded
  5403                           	opt	stack 0
  5404                           ; Regs used in _checkDataFrames: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5405                           	line	87
  5406                           	
  5407  02C5                     i1l9413:	
  5408                           ;Packet.c: 87: if(eeprom_read(lenByteAddr) == 0 && (eeprom_read(RXLenAddr)-noDataLen) ==
                                  0){
  5409  02C5  304D               	movlw	(_lenByteAddr-__stringbase)
  5410  02C6  0084               	movwf	fsr0
  5411  02C7  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5412  02CC  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  5413  02D1  3800               	iorlw	0
  5414  02D2  1D03               	skipz
  5415  02D3  2AD5               	goto	u287_21
  5416  02D4  2AD6               	goto	u287_20
  5417  02D5                     u287_21:
  5418  02D5  2B09               	goto	i1l9425
  5419  02D6                     u287_20:
  5420                           	
  5421  02D6                     i1l9415:	
  5422  02D6  3051               	movlw	(_noDataLen-__stringbase)
  5423  02D7  0084               	movwf	fsr0
  5424  02D8  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5425  02DD  00F4               	movwf	(??_checkDataFrames+0)+0
  5426  02DE  01F5               	clrf	(??_checkDataFrames+0)+0+1
  5427  02DF  09F4               	comf	(??_checkDataFrames+0)+0,f
  5428  02E0  09F5               	comf	(??_checkDataFrames+0)+1,f
  5429  02E1  0AF4               	incf	(??_checkDataFrames+0)+0,f
  5430  02E2  1903               	skipnz
  5431  02E3  0AF5               	incf	(??_checkDataFrames+0)+1,f
  5432  02E4  3040               	movlw	(_RXLenAddr-__stringbase)
  5433  02E5  0084               	movwf	fsr0
  5434  02E6  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5435  02EB  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  5436  02F0  0774               	addwf	0+(??_checkDataFrames+0)+0,w
  5437  02F1  00F6               	movwf	(??_checkDataFrames+2)+0
  5438  02F2  0875               	movf	1+(??_checkDataFrames+0)+0,w
  5439  02F3  1803               	skipnc
  5440  02F4  0A75               	incf	1+(??_checkDataFrames+0)+0,w
  5441  02F5  00F7               	movwf	((??_checkDataFrames+2)+0)+1
  5442  02F6  0877               	movf	1+(??_checkDataFrames+2)+0,w
  5443  02F7  0476               	iorwf	0+(??_checkDataFrames+2)+0,w
  5444  02F8  1D03               	skipz
  5445  02F9  2AFB               	goto	u288_21
  5446  02FA  2AFC               	goto	u288_20
  5447  02FB                     u288_21:
  5448  02FB  2B09               	goto	i1l9425
  5449  02FC                     u288_20:
  5450                           	line	89
  5451                           	
  5452  02FC                     i1l9417:	
  5453                           ;Packet.c: 89: writeByte('D');
  5454  02FC  3044               	movlw	(044h)
  5455  02FD  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  5456                           	line	90
  5457                           	
  5458  0302                     i1l9419:	
  5459                           ;Packet.c: 90: return 1;
  5460  0302  3001               	movlw	low(01h)
  5461  0303  00F2               	movwf	(?_checkDataFrames)
  5462  0304  3000               	movlw	high(01h)
  5463  0305  00F3               	movwf	((?_checkDataFrames))+1
  5464  0306  2B5E               	goto	i1l1589
  5465                           	
  5466  0307                     i1l9421:	
  5467  0307  2B5E               	goto	i1l1589
  5468                           	line	94
  5469                           	
  5470  0308                     i1l9423:	
  5471                           ;Packet.c: 94: }else if((eeprom_read(RXLenAddr) - noDataLen) == (eeprom_read(lenByteAddr
                                 )*2)){
  5472  0308  2B55               	goto	i1l9433
  5473                           	
  5474  0309                     i1l1588:	
  5475                           	
  5476  0309                     i1l9425:	
  5477  0309  304D               	movlw	(_lenByteAddr-__stringbase)
  5478  030A  0084               	movwf	fsr0
  5479  030B  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5480  0310  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  5481  0315  00F4               	movwf	(??_checkDataFrames+0)+0
  5482  0316  01F5               	clrf	(??_checkDataFrames+0)+0+1
  5483  0317  3001               	movlw	01h
  5484  0318  00FF               	movwf	btemp+1
  5485  0319                     u289_25:
  5486  0319  1003               	clrc
  5487  031A  0DF4               	rlf	(??_checkDataFrames+0)+0,f
  5488  031B  0DF5               	rlf	(??_checkDataFrames+0)+1,f
  5489  031C  0BFF               	decfsz	btemp+1,f
  5490  031D  2B19               	goto	u289_25
  5491  031E  3051               	movlw	(_noDataLen-__stringbase)
  5492  031F  0084               	movwf	fsr0
  5493  0320  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5494  0325  00F6               	movwf	(??_checkDataFrames+2)+0
  5495  0326  01F7               	clrf	(??_checkDataFrames+2)+0+1
  5496  0327  09F6               	comf	(??_checkDataFrames+2)+0,f
  5497  0328  09F7               	comf	(??_checkDataFrames+2)+1,f
  5498  0329  0AF6               	incf	(??_checkDataFrames+2)+0,f
  5499  032A  1903               	skipnz
  5500  032B  0AF7               	incf	(??_checkDataFrames+2)+1,f
  5501  032C  3040               	movlw	(_RXLenAddr-__stringbase)
  5502  032D  0084               	movwf	fsr0
  5503  032E  120A  118A  2446   	fcall	stringdir
              120A  118A         
  5504  0333  120A  158A  2563   	fcall	_eeprom_read
              120A  118A         
  5505  0338  0776               	addwf	0+(??_checkDataFrames+2)+0,w
  5506  0339  00F8               	movwf	(??_checkDataFrames+4)+0
  5507  033A  0877               	movf	1+(??_checkDataFrames+2)+0,w
  5508  033B  1803               	skipnc
  5509  033C  0A77               	incf	1+(??_checkDataFrames+2)+0,w
  5510  033D  00F9               	movwf	((??_checkDataFrames+4)+0)+1
  5511  033E  0875               	movf	1+(??_checkDataFrames+0)+0,w
  5512  033F  0679               	xorwf	1+(??_checkDataFrames+4)+0,w
  5513  0340  1D03               	skipz
  5514  0341  2B44               	goto	u290_25
  5515  0342  0874               	movf	0+(??_checkDataFrames+0)+0,w
  5516  0343  0678               	xorwf	0+(??_checkDataFrames+4)+0,w
  5517  0344                     u290_25:
  5518                           
  5519  0344  1D03               	skipz
  5520  0345  2B47               	goto	u290_21
  5521  0346  2B48               	goto	u290_20
  5522  0347                     u290_21:
  5523  0347  2B55               	goto	i1l9433
  5524  0348                     u290_20:
  5525                           	line	96
  5526                           	
  5527  0348                     i1l9427:	
  5528                           ;Packet.c: 96: writeByte('D');
  5529  0348  3044               	movlw	(044h)
  5530  0349  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  5531                           	line	97
  5532                           	
  5533  034E                     i1l9429:	
  5534                           ;Packet.c: 97: return 1;
  5535  034E  3001               	movlw	low(01h)
  5536  034F  00F2               	movwf	(?_checkDataFrames)
  5537  0350  3000               	movlw	high(01h)
  5538  0351  00F3               	movwf	((?_checkDataFrames))+1
  5539  0352  2B5E               	goto	i1l1589
  5540                           	
  5541  0353                     i1l9431:	
  5542  0353  2B5E               	goto	i1l1589
  5543                           	line	98
  5544                           	
  5545  0354                     i1l1591:	
  5546  0354  2B55               	goto	i1l9433
  5547                           	line	101
  5548                           	
  5549  0355                     i1l1590:	
  5550                           	
  5551  0355                     i1l9433:	
  5552                           ;Packet.c: 98: }
  5553                           ;Packet.c: 101: writeByte('N');
  5554  0355  304E               	movlw	(04Eh)
  5555  0356  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  5556                           	line	102
  5557                           	
  5558  035B                     i1l9435:	
  5559                           ;Packet.c: 102: return 0;
  5560  035B  01F2               	clrf	(?_checkDataFrames)
  5561  035C  01F3               	clrf	(?_checkDataFrames+1)
  5562  035D  2B5E               	goto	i1l1589
  5563                           	
  5564  035E                     i1l9437:	
  5565                           	line	103
  5566                           	
  5567  035E                     i1l1589:	
  5568  035E  0008               	return
  5569                           	opt stack 0
  5570                           GLOBAL	__end_of_checkDataFrames
  5571  035F                     	__end_of_checkDataFrames:
  5572 ;; =============== function _checkDataFrames ends ============
  5573                           
  5574                           	signat	_checkDataFrames,90
  5575                           	global	_checkLength
  5576                           psect	text905,local,class=CODE,delta=2
  5577                           global __ptext905
  5578  0E6E                     __ptext905:
  5579                           
  5580 ;; *************** function _checkLength *****************
  5581 ;; Defined at:
  5582 ;;		line 64 in file "Packet.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;		None
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;		None
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  2    2[COMMON] int 
  5589 ;; Registers used:
  5590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5596 ;;      Params:         2       0       0       0       0
  5597 ;;      Locals:         0       0       0       0       0
  5598 ;;      Temps:          1       0       0       0       0
  5599 ;;      Totals:         3       0       0       0       0
  5600 ;;Total ram usage:        3 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; Hardware stack levels required when called:    1
  5603 ;; This function calls:
  5604 ;;		_eeprom_read
  5605 ;;		i1_writeByte
  5606 ;; This function is called by:
  5607 ;;		_parsePacket
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           psect	text905
  5611                           	file	"Packet.c"
  5612                           	line	64
  5613                           	global	__size_of_checkLength
  5614  002F                     	__size_of_checkLength	equ	__end_of_checkLength-_checkLength
  5615                           	
  5616  0E6E                     _checkLength:	
  5617 ;; hardware stack exceeded
  5618                           	opt	stack 0
  5619                           ; Regs used in _checkLength: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5620                           	line	67
  5621                           	
  5622  0E6E                     i1l9399:	
  5623                           ;Packet.c: 67: if (eeprom_read(RXLenAddr) >= minSizeByte) {
  5624  0E6E  3040               	movlw	(_RXLenAddr-__stringbase)
  5625  0E6F  0084               	movwf	fsr0
  5626  0E70  120A  118A  2446   	fcall	stringdir
              120A  158A         
  5627  0E75  120A  158A  2563   	fcall	_eeprom_read
              120A  158A         
  5628  0E7A  00F4               	movwf	(??_checkLength+0)+0
  5629  0E7B  304F               	movlw	(_minSizeByte-__stringbase)
  5630  0E7C  0084               	movwf	fsr0
  5631  0E7D  120A  118A  2446   	fcall	stringdir
              120A  158A         
  5632  0E82  0274               	subwf	0+(??_checkLength+0)+0,w
  5633  0E83  1C03               	skipc
  5634  0E84  2E86               	goto	u286_21
  5635  0E85  2E87               	goto	u286_20
  5636  0E86                     u286_21:
  5637  0E86  2E93               	goto	i1l9407
  5638  0E87                     u286_20:
  5639                           	line	69
  5640                           	
  5641  0E87                     i1l9401:	
  5642                           ;Packet.c: 69: writeByte('L');
  5643  0E87  304C               	movlw	(04Ch)
  5644  0E88  120A  158A  24A8   	fcall	i1_writeByte
              120A  158A         
  5645                           	line	70
  5646                           	
  5647  0E8D                     i1l9403:	
  5648                           ;Packet.c: 70: return 1;
  5649  0E8D  3001               	movlw	low(01h)
  5650  0E8E  00F2               	movwf	(?_checkLength)
  5651  0E8F  3000               	movlw	high(01h)
  5652  0E90  00F3               	movwf	((?_checkLength))+1
  5653  0E91  2E9C               	goto	i1l1585
  5654                           	
  5655  0E92                     i1l9405:	
  5656  0E92  2E9C               	goto	i1l1585
  5657                           	line	71
  5658                           	
  5659  0E93                     i1l1584:	
  5660                           	line	73
  5661                           	
  5662  0E93                     i1l9407:	
  5663                           ;Packet.c: 71: }
  5664                           ;Packet.c: 73: writeByte('N');
  5665  0E93  304E               	movlw	(04Eh)
  5666  0E94  120A  158A  24A8   	fcall	i1_writeByte
              120A  158A         
  5667                           	line	74
  5668                           	
  5669  0E99                     i1l9409:	
  5670                           ;Packet.c: 74: return 0;
  5671  0E99  01F2               	clrf	(?_checkLength)
  5672  0E9A  01F3               	clrf	(?_checkLength+1)
  5673  0E9B  2E9C               	goto	i1l1585
  5674                           	
  5675  0E9C                     i1l9411:	
  5676                           	line	75
  5677                           	
  5678  0E9C                     i1l1585:	
  5679  0E9C  0008               	return
  5680                           	opt stack 0
  5681                           GLOBAL	__end_of_checkLength
  5682  0E9D                     	__end_of_checkLength:
  5683 ;; =============== function _checkLength ends ============
  5684                           
  5685                           	signat	_checkLength,90
  5686                           	global	_checkEven
  5687                           psect	text906,local,class=CODE,delta=2
  5688                           global __ptext906
  5689  0DC9                     __ptext906:
  5690                           
  5691 ;; *************** function _checkEven *****************
  5692 ;; Defined at:
  5693 ;;		line 42 in file "Packet.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;		None
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;		None
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  2    2[COMMON] int 
  5700 ;; Registers used:
  5701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5707 ;;      Params:         2       0       0       0       0
  5708 ;;      Locals:         0       0       0       0       0
  5709 ;;      Temps:          1       0       0       0       0
  5710 ;;      Totals:         3       0       0       0       0
  5711 ;;Total ram usage:        3 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    1
  5714 ;; This function calls:
  5715 ;;		_eeprom_read
  5716 ;;		i1_writeByte
  5717 ;; This function is called by:
  5718 ;;		_parsePacket
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           psect	text906
  5722                           	file	"Packet.c"
  5723                           	line	42
  5724                           	global	__size_of_checkEven
  5725  0027                     	__size_of_checkEven	equ	__end_of_checkEven-_checkEven
  5726                           	
  5727  0DC9                     _checkEven:	
  5728 ;; hardware stack exceeded
  5729                           	opt	stack 0
  5730                           ; Regs used in _checkEven: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5731                           	line	45
  5732                           	
  5733  0DC9                     i1l9381:	
  5734                           ;Packet.c: 45: if (eeprom_read(RXLenAddr) % 2 == 0) {
  5735  0DC9  3040               	movlw	(_RXLenAddr-__stringbase)
  5736  0DCA  0084               	movwf	fsr0
  5737  0DCB  120A  118A  2446   	fcall	stringdir
              120A  158A         
  5738  0DD0  120A  158A  2563   	fcall	_eeprom_read
              120A  158A         
  5739  0DD5  00F4               	movwf	(??_checkEven+0)+0
  5740  0DD6  1874               	btfsc	0+(??_checkEven+0)+0,(0)&7
  5741  0DD7  2DD9               	goto	u284_21
  5742  0DD8  2DDA               	goto	u284_20
  5743  0DD9                     u284_21:
  5744  0DD9  2DE6               	goto	i1l9389
  5745  0DDA                     u284_20:
  5746                           	line	47
  5747                           	
  5748  0DDA                     i1l9383:	
  5749                           ;Packet.c: 47: writeByte('E');
  5750  0DDA  3045               	movlw	(045h)
  5751  0DDB  120A  158A  24A8   	fcall	i1_writeByte
              120A  158A         
  5752                           	line	48
  5753                           	
  5754  0DE0                     i1l9385:	
  5755                           ;Packet.c: 48: return 1;
  5756  0DE0  3001               	movlw	low(01h)
  5757  0DE1  00F2               	movwf	(?_checkEven)
  5758  0DE2  3000               	movlw	high(01h)
  5759  0DE3  00F3               	movwf	((?_checkEven))+1
  5760  0DE4  2DEF               	goto	i1l1581
  5761                           	
  5762  0DE5                     i1l9387:	
  5763  0DE5  2DEF               	goto	i1l1581
  5764                           	line	49
  5765                           	
  5766  0DE6                     i1l1580:	
  5767                           	line	51
  5768                           	
  5769  0DE6                     i1l9389:	
  5770                           ;Packet.c: 49: }
  5771                           ;Packet.c: 51: writeByte('N');
  5772  0DE6  304E               	movlw	(04Eh)
  5773  0DE7  120A  158A  24A8   	fcall	i1_writeByte
              120A  158A         
  5774                           	line	52
  5775                           	
  5776  0DEC                     i1l9391:	
  5777                           ;Packet.c: 52: return 0;
  5778  0DEC  01F2               	clrf	(?_checkEven)
  5779  0DED  01F3               	clrf	(?_checkEven+1)
  5780  0DEE  2DEF               	goto	i1l1581
  5781                           	
  5782  0DEF                     i1l9393:	
  5783                           	line	53
  5784                           	
  5785  0DEF                     i1l1581:	
  5786  0DEF  0008               	return
  5787                           	opt stack 0
  5788                           GLOBAL	__end_of_checkEven
  5789  0DF0                     	__end_of_checkEven:
  5790 ;; =============== function _checkEven ends ============
  5791                           
  5792                           	signat	_checkEven,90
  5793                           	global	_makeHexByte
  5794                           psect	text907,local,class=CODE,delta=2
  5795                           global __ptext907
  5796  0DA4                     __ptext907:
  5797                           
  5798 ;; *************** function _makeHexByte *****************
  5799 ;; Defined at:
  5800 ;;		line 215 in file "Bluetooth.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  nibOne          1    wreg     unsigned char 
  5803 ;;  nibTwo          1   13[COMMON] unsigned char 
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;  nibOne          1    2[BANK0 ] unsigned char 
  5806 ;;  input_byte      1    3[BANK0 ] unsigned char 
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  1    wreg      unsigned char 
  5809 ;; Registers used:
  5810 ;;		wreg, status,2, status,0, pclath, cstack
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5816 ;;      Params:         1       0       0       0       0
  5817 ;;      Locals:         0       2       0       0       0
  5818 ;;      Temps:          0       2       0       0       0
  5819 ;;      Totals:         1       4       0       0       0
  5820 ;;Total ram usage:        5 bytes
  5821 ;; Hardware stack levels used:    1
  5822 ;; Hardware stack levels required when called:    1
  5823 ;; This function calls:
  5824 ;;		_makeNibble
  5825 ;; This function is called by:
  5826 ;;		_parsePacket
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           psect	text907
  5830                           	file	"Bluetooth.c"
  5831                           	line	215
  5832                           	global	__size_of_makeHexByte
  5833  0025                     	__size_of_makeHexByte	equ	__end_of_makeHexByte-_makeHexByte
  5834                           	
  5835  0DA4                     _makeHexByte:	
  5836 ;; hardware stack exceeded
  5837                           	opt	stack 0
  5838                           ; Regs used in _makeHexByte: [wreg+status,2+status,0+pclath+cstack]
  5839                           ;makeHexByte@nibOne stored from wreg
  5840                           	line	217
  5841  0DA4  1283               	bcf	status, 5	;RP0=0, select bank0
  5842  0DA5  1303               	bcf	status, 6	;RP1=0, select bank0
  5843  0DA6  00A2               	movwf	(makeHexByte@nibOne)
  5844                           	
  5845  0DA7                     i1l9375:	
  5846                           ;Bluetooth.c: 216: unsigned char input_byte;
  5847                           ;Bluetooth.c: 217: input_byte = (makeNibble(nibOne)<<4);
  5848  0DA7  0822               	movf	(makeHexByte@nibOne),w
  5849  0DA8  120A  158A  24B4   	fcall	_makeNibble
              120A  158A         
  5850  0DAD  1283               	bcf	status, 5	;RP0=0, select bank0
  5851  0DAE  1303               	bcf	status, 6	;RP1=0, select bank0
  5852  0DAF  00A0               	movwf	(??_makeHexByte+0)+0
  5853  0DB0  3003               	movlw	(04h)-1
  5854  0DB1                     u283_25:
  5855  0DB1  1003               	clrc
  5856  0DB2  0DA0               	rlf	(??_makeHexByte+0)+0,f
  5857  0DB3  3EFF               	addlw	-1
  5858  0DB4  1D03               	skipz
  5859  0DB5  2DB1               	goto	u283_25
  5860  0DB6  1003               	clrc
  5861  0DB7  0D20               	rlf	(??_makeHexByte+0)+0,w
  5862  0DB8  00A1               	movwf	(??_makeHexByte+1)+0
  5863  0DB9  0821               	movf	(??_makeHexByte+1)+0,w
  5864  0DBA  00A3               	movwf	(makeHexByte@input_byte)
  5865                           	line	218
  5866                           ;Bluetooth.c: 218: input_byte|= makeNibble(nibTwo);
  5867  0DBB  087D               	movf	(makeHexByte@nibTwo),w
  5868  0DBC  120A  158A  24B4   	fcall	_makeNibble
              120A  158A         
  5869  0DC1  1283               	bcf	status, 5	;RP0=0, select bank0
  5870  0DC2  1303               	bcf	status, 6	;RP1=0, select bank0
  5871  0DC3  00A0               	movwf	(??_makeHexByte+0)+0
  5872  0DC4  0820               	movf	(??_makeHexByte+0)+0,w
  5873  0DC5  04A3               	iorwf	(makeHexByte@input_byte),f
  5874                           	line	219
  5875                           	
  5876  0DC6                     i1l9377:	
  5877                           ;Bluetooth.c: 219: return input_byte;
  5878  0DC6  0823               	movf	(makeHexByte@input_byte),w
  5879  0DC7  2DC8               	goto	i1l803
  5880                           	
  5881  0DC8                     i1l9379:	
  5882                           	line	220
  5883                           	
  5884  0DC8                     i1l803:	
  5885  0DC8  0008               	return
  5886                           	opt stack 0
  5887                           GLOBAL	__end_of_makeHexByte
  5888  0DC9                     	__end_of_makeHexByte:
  5889 ;; =============== function _makeHexByte ends ============
  5890                           
  5891                           	signat	_makeHexByte,8313
  5892                           	global	_readString
  5893                           psect	text908,local,class=CODE,delta=2
  5894                           global __ptext908
  5895  06A5                     __ptext908:
  5896                           
  5897 ;; *************** function _readString *****************
  5898 ;; Defined at:
  5899 ;;		line 162 in file "Bluetooth.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;  readStorage     1    wreg     PTR unsigned char 
  5902 ;;		 -> getPacket@arrStore(50), 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;  readStorage     1    2[BANK0 ] PTR unsigned char 
  5905 ;;		 -> getPacket@arrStore(50), 
  5906 ;;  i               2    3[BANK0 ] unsigned int 
  5907 ;;  ch              1    5[BANK0 ] unsigned char 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;		None               void
  5910 ;; Registers used:
  5911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5917 ;;      Params:         0       0       0       0       0
  5918 ;;      Locals:         0       4       0       0       0
  5919 ;;      Temps:          0       2       0       0       0
  5920 ;;      Totals:         0       6       0       0       0
  5921 ;;Total ram usage:        6 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    1
  5924 ;; This function calls:
  5925 ;;		_readByte
  5926 ;;		i1_writeByte
  5927 ;;		i1_eeprom_write
  5928 ;; This function is called by:
  5929 ;;		_getPacket
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           psect	text908
  5933                           	file	"Bluetooth.c"
  5934                           	line	162
  5935                           	global	__size_of_readString
  5936  005B                     	__size_of_readString	equ	__end_of_readString-_readString
  5937                           	
  5938  06A5                     _readString:	
  5939 ;; using string table level
  5940                           	opt	stack 1
  5941                           ; Regs used in _readString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5942                           ;readString@readStorage stored from wreg
  5943                           	line	164
  5944  06A5  1283               	bcf	status, 5	;RP0=0, select bank0
  5945  06A6  1303               	bcf	status, 6	;RP1=0, select bank0
  5946  06A7  00A2               	movwf	(readString@readStorage)
  5947                           	
  5948  06A8                     i1l9327:	
  5949                           ;Bluetooth.c: 164: unsigned int i = 0;
  5950  06A8  01A3               	clrf	(readString@i)
  5951  06A9  01A4               	clrf	(readString@i+1)
  5952                           	line	168
  5953                           	
  5954  06AA                     i1l9329:	
  5955                           ;Bluetooth.c: 166: unsigned char ch;
  5956                           ;Bluetooth.c: 168: ch = readByte();
  5957  06AA  120A  158A  2492   	fcall	_readByte
              120A  118A         
  5958  06AF  1283               	bcf	status, 5	;RP0=0, select bank0
  5959  06B0  1303               	bcf	status, 6	;RP1=0, select bank0
  5960  06B1  00A0               	movwf	(??_readString+0)+0
  5961  06B2  0820               	movf	(??_readString+0)+0,w
  5962  06B3  00A5               	movwf	(readString@ch)
  5963                           	line	169
  5964                           	
  5965  06B4                     i1l9331:	
  5966                           ;Bluetooth.c: 169: writeByte(ch);
  5967  06B4  0825               	movf	(readString@ch),w
  5968  06B5  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  5969                           	line	171
  5970                           ;Bluetooth.c: 171: while(ch != userEndByte)
  5971  06BA  2EDE               	goto	i1l9341
  5972                           	
  5973  06BB                     i1l794:	
  5974                           	line	174
  5975                           	
  5976  06BB                     i1l9333:	
  5977                           ;Bluetooth.c: 172: {
  5978                           ;Bluetooth.c: 174: readStorage[i] = ch;
  5979  06BB  1283               	bcf	status, 5	;RP0=0, select bank0
  5980  06BC  1303               	bcf	status, 6	;RP1=0, select bank0
  5981  06BD  0825               	movf	(readString@ch),w
  5982  06BE  00A0               	movwf	(??_readString+0)+0
  5983  06BF  0823               	movf	(readString@i),w
  5984  06C0  0722               	addwf	(readString@readStorage),w
  5985  06C1  00A1               	movwf	(??_readString+1)+0
  5986  06C2  0821               	movf	0+(??_readString+1)+0,w
  5987  06C3  0084               	movwf	fsr0
  5988  06C4  0820               	movf	(??_readString+0)+0,w
  5989  06C5  1383               	bcf	status, 7	;select IRP bank0
  5990  06C6  0080               	movwf	indf
  5991                           	line	176
  5992                           	
  5993  06C7                     i1l9335:	
  5994                           ;Bluetooth.c: 176: i++;
  5995  06C7  3001               	movlw	low(01h)
  5996  06C8  07A3               	addwf	(readString@i),f
  5997  06C9  1803               	skipnc
  5998  06CA  0AA4               	incf	(readString@i+1),f
  5999  06CB  3000               	movlw	high(01h)
  6000  06CC  07A4               	addwf	(readString@i+1),f
  6001                           	line	178
  6002                           	
  6003  06CD                     i1l9337:	
  6004                           ;Bluetooth.c: 178: ch = readByte();
  6005  06CD  120A  158A  2492   	fcall	_readByte
              120A  118A         
  6006  06D2  1283               	bcf	status, 5	;RP0=0, select bank0
  6007  06D3  1303               	bcf	status, 6	;RP1=0, select bank0
  6008  06D4  00A0               	movwf	(??_readString+0)+0
  6009  06D5  0820               	movf	(??_readString+0)+0,w
  6010  06D6  00A5               	movwf	(readString@ch)
  6011                           	line	179
  6012                           	
  6013  06D7                     i1l9339:	
  6014                           ;Bluetooth.c: 179: writeByte(ch);
  6015  06D7  0825               	movf	(readString@ch),w
  6016  06D8  120A  158A  24A8   	fcall	i1_writeByte
              120A  118A         
  6017  06DD  2EDE               	goto	i1l9341
  6018                           	line	180
  6019                           	
  6020  06DE                     i1l793:	
  6021                           	line	171
  6022                           	
  6023  06DE                     i1l9341:	
  6024  06DE  305F               	movlw	(_userEndByte-__stringbase)
  6025  06DF  0084               	movwf	fsr0
  6026  06E0  120A  118A  2446   	fcall	stringdir
              120A  118A         
  6027  06E5  1283               	bcf	status, 5	;RP0=0, select bank0
  6028  06E6  1303               	bcf	status, 6	;RP1=0, select bank0
  6029  06E7  00A0               	movwf	(??_readString+0)+0
  6030  06E8  0825               	movf	(readString@ch),w
  6031  06E9  0620               	xorwf	(??_readString+0)+0,w
  6032  06EA  1D03               	skipz
  6033  06EB  2EED               	goto	u278_21
  6034  06EC  2EEE               	goto	u278_20
  6035  06ED                     u278_21:
  6036  06ED  2EBB               	goto	i1l9333
  6037  06EE                     u278_20:
  6038  06EE  2EEF               	goto	i1l9343
  6039                           	
  6040  06EF                     i1l795:	
  6041                           	line	185
  6042                           	
  6043  06EF                     i1l9343:	
  6044                           ;Bluetooth.c: 180: }
  6045                           ;Bluetooth.c: 185: eeprom_write(RXLenAddr,i);
  6046  06EF  0823               	movf	(readString@i),w
  6047  06F0  00A0               	movwf	(??_readString+0)+0
  6048  06F1  0820               	movf	(??_readString+0)+0,w
  6049  06F2  00FA               	movwf	(?i1_eeprom_write)
  6050  06F3  3040               	movlw	(_RXLenAddr-__stringbase)
  6051  06F4  0084               	movwf	fsr0
  6052  06F5  120A  118A  2446   	fcall	stringdir
              120A  118A         
  6053  06FA  120A  158A  26CC   	fcall	i1_eeprom_write
              120A  118A         
  6054                           	line	188
  6055                           	
  6056  06FF                     i1l796:	
  6057  06FF  0008               	return
  6058                           	opt stack 0
  6059                           GLOBAL	__end_of_readString
  6060  0700                     	__end_of_readString:
  6061 ;; =============== function _readString ends ============
  6062                           
  6063                           	signat	_readString,4216
  6064                           	global	i1_strlen
  6065                           psect	text909,local,class=CODE,delta=2
  6066                           global __ptext909
  6067  0EFD                     __ptext909:
  6068                           
  6069 ;; *************** function i1_strlen *****************
  6070 ;; Defined at:
  6071 ;;		line 5 in file "C:\Microchip\HiTech\sources\strlen.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  strlen          1    wreg     PTR const unsigned char 
  6074 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  strlen          1    8[COMMON] PTR const unsigned char 
  6077 ;;		 -> readError(25), getPacket@arrStore(50), main@testString(9), 
  6078 ;;  strlen          1    9[COMMON] PTR const unsigned char 
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  2    0[COMMON] unsigned int 
  6081 ;; Registers used:
  6082 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6088 ;;      Params:         2       0       0       0       0
  6089 ;;      Locals:         2       0       0       0       0
  6090 ;;      Temps:          6       0       0       0       0
  6091 ;;      Totals:        10       0       0       0       0
  6092 ;;Total ram usage:       10 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; This function calls:
  6095 ;;		Nothing
  6096 ;; This function is called by:
  6097 ;;		_parsePacket
  6098 ;;		i1_writeString
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           psect	text909
  6102                           	file	"C:\Microchip\HiTech\sources\strlen.c"
  6103                           	line	5
  6104                           	global	__size_ofi1_strlen
  6105  0031                     	__size_ofi1_strlen	equ	__end_ofi1_strlen-i1_strlen
  6106                           	
  6107  0EFD                     i1_strlen:	
  6108 ;; hardware stack exceeded
  6109                           	opt	stack 0
  6110                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  6111                           ;i1strlen@s stored from wreg
  6112                           	line	8
  6113  0EFD  00F8               	movwf	(i1strlen@s)
  6114                           	
  6115  0EFE                     i1l9661:	
  6116  0EFE  0878               	movf	(i1strlen@s),w
  6117  0EFF  00F2               	movwf	(??i1_strlen+0)+0
  6118  0F00  0872               	movf	(??i1_strlen+0)+0,w
  6119  0F01  00F9               	movwf	(i1strlen@cp)
  6120                           	line	9
  6121  0F02  2F04               	goto	i1l9663
  6122                           	
  6123  0F03                     i1l7508:	
  6124                           	line	10
  6125  0F03  2F04               	goto	i1l9663
  6126                           	
  6127  0F04                     i1l7507:	
  6128                           	line	9
  6129                           	
  6130  0F04                     i1l9663:	
  6131  0F04  0879               	movf	(i1strlen@cp),w
  6132  0F05  0084               	movwf	fsr0
  6133  0F06  3001               	movlw	01h
  6134  0F07  07F9               	addwf	(i1strlen@cp),f
  6135  0F08  1383               	bcf	status, 7	;select IRP bank0
  6136  0F09  0880               	movf	indf,f
  6137  0F0A  1D03               	skipz
  6138  0F0B  2F0D               	goto	u316_21
  6139  0F0C  2F0E               	goto	u316_20
  6140  0F0D                     u316_21:
  6141  0F0D  2F04               	goto	i1l9663
  6142  0F0E                     u316_20:
  6143  0F0E  2F0F               	goto	i1l9665
  6144                           	
  6145  0F0F                     i1l7509:	
  6146                           	line	11
  6147                           	
  6148  0F0F                     i1l9665:	
  6149  0F0F  0878               	movf	(i1strlen@s),w
  6150  0F10  00F2               	movwf	(??i1_strlen+0)+0
  6151  0F11  3000               	movlw	((0x0/2))
  6152  0F12  00F3               	movwf	(??i1_strlen+0)+0+1
  6153  0F13  09F2               	comf	(??i1_strlen+0)+0,f
  6154  0F14  09F3               	comf	(??i1_strlen+0)+1,f
  6155  0F15  0AF2               	incf	(??i1_strlen+0)+0,f
  6156  0F16  1903               	skipnz
  6157  0F17  0AF3               	incf	(??i1_strlen+0)+1,f
  6158  0F18  0879               	movf	(i1strlen@cp),w
  6159  0F19  00F4               	movwf	(??i1_strlen+2)+0
  6160  0F1A  3000               	movlw	((0x0/2))
  6161  0F1B  00F5               	movwf	(??i1_strlen+2)+0+1
  6162  0F1C  0872               	movf	0+(??i1_strlen+0)+0,w
  6163  0F1D  0774               	addwf	0+(??i1_strlen+2)+0,w
  6164  0F1E  00F6               	movwf	(??i1_strlen+4)+0
  6165  0F1F  0873               	movf	1+(??i1_strlen+0)+0,w
  6166  0F20  1803               	skipnc
  6167  0F21  0A73               	incf	1+(??i1_strlen+0)+0,w
  6168  0F22  0775               	addwf	1+(??i1_strlen+2)+0,w
  6169  0F23  00F7               	movwf	1+(??i1_strlen+4)+0
  6170  0F24  0876               	movf	0+(??i1_strlen+4)+0,w
  6171  0F25  3EFF               	addlw	low(-1)
  6172  0F26  00F0               	movwf	(?i1_strlen)
  6173  0F27  0877               	movf	1+(??i1_strlen+4)+0,w
  6174  0F28  1803               	skipnc
  6175  0F29  3E01               	addlw	1
  6176  0F2A  3EFF               	addlw	high(-1)
  6177  0F2B  00F1               	movwf	1+(?i1_strlen)
  6178  0F2C  2F2D               	goto	i1l7510
  6179                           	
  6180  0F2D                     i1l9667:	
  6181                           	line	12
  6182                           	
  6183  0F2D                     i1l7510:	
  6184  0F2D  0008               	return
  6185                           	opt stack 0
  6186                           GLOBAL	__end_ofi1_strlen
  6187  0F2E                     	__end_ofi1_strlen:
  6188 ;; =============== function i1_strlen ends ============
  6189                           
  6190                           	signat	i1_strlen,90
  6191                           	global	i1_eeprom_write
  6192                           psect	text910,local,class=CODE,delta=2
  6193                           global __ptext910
  6194  0ECC                     __ptext910:
  6195                           
  6196 ;; *************** function i1_eeprom_write *****************
  6197 ;; Defined at:
  6198 ;;		line 7 in file "C:\Microchip\HiTech\sources\eewrite.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  eeprom_write    1    wreg     unsigned char 
  6201 ;;  eeprom_write    1   10[COMMON] unsigned char 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;  eeprom_write    1   12[COMMON] unsigned char 
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      unsigned char 
  6206 ;; Registers used:
  6207 ;;		wreg, status,2, status,0
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6213 ;;      Params:         1       0       0       0       0
  6214 ;;      Locals:         1       0       0       0       0
  6215 ;;      Temps:          1       0       0       0       0
  6216 ;;      Totals:         3       0       0       0       0
  6217 ;;Total ram usage:        3 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; This function calls:
  6220 ;;		Nothing
  6221 ;; This function is called by:
  6222 ;;		_readString
  6223 ;;		_parsePacket
  6224 ;;		_checkStartByte
  6225 ;;		_checkRWByte
  6226 ;;		_checkCMDByte
  6227 ;;		_addDataToCheckSum
  6228 ;;		_getPacket
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           psect	text910
  6232                           	file	"C:\Microchip\HiTech\sources\eewrite.c"
  6233                           	line	7
  6234                           	global	__size_ofi1_eeprom_write
  6235  0031                     	__size_ofi1_eeprom_write	equ	__end_ofi1_eeprom_write-i1_eeprom_write
  6236                           	
  6237  0ECC                     i1_eeprom_write:	
  6238 ;; hardware stack exceeded
  6239                           	opt	stack 0
  6240                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0]
  6241                           ;i1eeprom_write@addr stored from wreg
  6242  0ECC  00FC               	movwf	(i1eeprom_write@addr)
  6243                           	line	8
  6244                           	
  6245  0ECD                     i1l6823:	
  6246  0ECD  2ECE               	goto	i1l6824
  6247                           	
  6248  0ECE                     i1l6825:	
  6249                           	
  6250  0ECE                     i1l6824:	
  6251  0ECE  1683               	bsf	status, 5	;RP0=1, select bank3
  6252  0ECF  1703               	bsf	status, 6	;RP1=1, select bank3
  6253  0ED0  188C               	btfsc	(3169/8)^0180h,(3169)&7
  6254  0ED1  2ED3               	goto	u313_21
  6255  0ED2  2ED4               	goto	u313_20
  6256  0ED3                     u313_21:
  6257  0ED3  2ECE               	goto	i1l6824
  6258  0ED4                     u313_20:
  6259  0ED4  2ED5               	goto	i1l9641
  6260                           	
  6261  0ED5                     i1l6826:	
  6262                           	
  6263  0ED5                     i1l9641:	
  6264  0ED5  087C               	movf	(i1eeprom_write@addr),w
  6265  0ED6  1283               	bcf	status, 5	;RP0=0, select bank2
  6266  0ED7  1703               	bsf	status, 6	;RP1=1, select bank2
  6267  0ED8  008D               	movwf	(269)^0100h	;volatile
  6268  0ED9  087A               	movf	(i1eeprom_write@value),w
  6269  0EDA  008C               	movwf	(268)^0100h	;volatile
  6270                           	
  6271  0EDB                     i1l9643:	
  6272  0EDB  303F               	movlw	(03Fh)
  6273  0EDC  00FB               	movwf	(??i1_eeprom_write+0)+0
  6274  0EDD  087B               	movf	(??i1_eeprom_write+0)+0,w
  6275  0EDE  1683               	bsf	status, 5	;RP0=1, select bank3
  6276  0EDF  1703               	bsf	status, 6	;RP1=1, select bank3
  6277  0EE0  058C               	andwf	(396)^0180h,f	;volatile
  6278                           	
  6279  0EE1                     i1l9645:	
  6280  0EE1  1283               	bcf	status, 5	;RP0=0, select bank0
  6281  0EE2  1303               	bcf	status, 6	;RP1=0, select bank0
  6282  0EE3  1003               	bcf	(24/8),(24)&7
  6283                           	
  6284  0EE4                     i1l9647:	
  6285  0EE4  1F8B               	btfss	(95/8),(95)&7
  6286  0EE5  2EE7               	goto	u314_21
  6287  0EE6  2EE8               	goto	u314_20
  6288  0EE7                     u314_21:
  6289  0EE7  2EE9               	goto	i1l6827
  6290  0EE8                     u314_20:
  6291                           	
  6292  0EE8                     i1l9649:	
  6293  0EE8  1403               	bsf	(24/8),(24)&7
  6294                           	
  6295  0EE9                     i1l6827:	
  6296  0EE9  138B               	bcf	(95/8),(95)&7
  6297  0EEA  1683               	bsf	status, 5	;RP0=1, select bank3
  6298  0EEB  1703               	bsf	status, 6	;RP1=1, select bank3
  6299  0EEC  150C               	bsf	(3170/8)^0180h,(3170)&7
  6300                           	
  6301  0EED                     i1l9651:	
  6302  0EED  3055               	movlw	(055h)
  6303  0EEE  008D               	movwf	(397)^0180h	;volatile
  6304  0EEF  30AA               	movlw	(0AAh)
  6305  0EF0  008D               	movwf	(397)^0180h	;volatile
  6306                           	
  6307  0EF1                     i1l9653:	
  6308  0EF1  148C               	bsf	(3169/8)^0180h,(3169)&7
  6309                           	
  6310  0EF2                     i1l9655:	
  6311  0EF2  110C               	bcf	(3170/8)^0180h,(3170)&7
  6312                           	
  6313  0EF3                     i1l9657:	
  6314  0EF3  1283               	bcf	status, 5	;RP0=0, select bank0
  6315  0EF4  1303               	bcf	status, 6	;RP1=0, select bank0
  6316  0EF5  1C03               	btfss	(24/8),(24)&7
  6317  0EF6  2EF8               	goto	u315_21
  6318  0EF7  2EF9               	goto	u315_20
  6319  0EF8                     u315_21:
  6320  0EF8  2EFC               	goto	i1l6830
  6321  0EF9                     u315_20:
  6322                           	
  6323  0EF9                     i1l9659:	
  6324  0EF9  178B               	bsf	(95/8),(95)&7
  6325  0EFA  2EFC               	goto	i1l6830
  6326                           	
  6327  0EFB                     i1l6828:	
  6328  0EFB  2EFC               	goto	i1l6830
  6329                           	
  6330  0EFC                     i1l6829:	
  6331                           	line	10
  6332                           ;	Return value of i1_eeprom_write is never used
  6333                           	
  6334  0EFC                     i1l6830:	
  6335  0EFC  0008               	return
  6336                           	opt stack 0
  6337                           GLOBAL	__end_ofi1_eeprom_write
  6338  0EFD                     	__end_ofi1_eeprom_write:
  6339 ;; =============== function i1_eeprom_write ends ============
  6340                           
  6341                           	signat	i1_eeprom_write,89
  6342                           	global	i1_writeByte
  6343                           psect	text911,local,class=CODE,delta=2
  6344                           global __ptext911
  6345  0CA8                     __ptext911:
  6346                           
  6347 ;; *************** function i1_writeByte *****************
  6348 ;; Defined at:
  6349 ;;		line 74 in file "Bluetooth.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  writeByte       1    wreg     unsigned char 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;  writeByte       1    0[COMMON] unsigned char 
  6354 ;; Return value:  Size  Location     Type
  6355 ;;		None               void
  6356 ;; Registers used:
  6357 ;;		wreg
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6363 ;;      Params:         0       0       0       0       0
  6364 ;;      Locals:         1       0       0       0       0
  6365 ;;      Temps:          0       0       0       0       0
  6366 ;;      Totals:         1       0       0       0       0
  6367 ;;Total ram usage:        1 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_readString
  6373 ;;		_checkEven
  6374 ;;		_checkLength
  6375 ;;		_checkDataFrames
  6376 ;;		_checkStartByte
  6377 ;;		_checkRWByte
  6378 ;;		_checkCMDByte
  6379 ;;		_checkCS
  6380 ;;		_readCommands
  6381 ;;		i1_writeString
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           psect	text911
  6385                           	file	"Bluetooth.c"
  6386                           	line	74
  6387                           	global	__size_ofi1_writeByte
  6388  000C                     	__size_ofi1_writeByte	equ	__end_ofi1_writeByte-i1_writeByte
  6389                           	
  6390  0CA8                     i1_writeByte:	
  6391 ;; hardware stack exceeded
  6392                           	opt	stack 0
  6393                           ; Regs used in i1_writeByte: [wreg]
  6394                           ;i1writeByte@Byte stored from wreg
  6395  0CA8  00F0               	movwf	(i1writeByte@Byte)
  6396                           	line	78
  6397                           	
  6398  0CA9                     i1l9627:	
  6399                           ;Bluetooth.c: 78: while(!TXIF);
  6400  0CA9  2CAA               	goto	i1l772
  6401                           	
  6402  0CAA                     i1l773:	
  6403                           	
  6404  0CAA                     i1l772:	
  6405  0CAA  1283               	bcf	status, 5	;RP0=0, select bank0
  6406  0CAB  1303               	bcf	status, 6	;RP1=0, select bank0
  6407  0CAC  1E0C               	btfss	(100/8),(100)&7
  6408  0CAD  2CAF               	goto	u311_21
  6409  0CAE  2CB0               	goto	u311_20
  6410  0CAF                     u311_21:
  6411  0CAF  2CAA               	goto	i1l772
  6412  0CB0                     u311_20:
  6413  0CB0  2CB1               	goto	i1l9629
  6414                           	
  6415  0CB1                     i1l774:	
  6416                           	line	81
  6417                           	
  6418  0CB1                     i1l9629:	
  6419                           ;Bluetooth.c: 81: TXREG = Byte;
  6420  0CB1  0870               	movf	(i1writeByte@Byte),w
  6421  0CB2  0099               	movwf	(25)	;volatile
  6422                           	line	82
  6423                           	
  6424  0CB3                     i1l775:	
  6425  0CB3  0008               	return
  6426                           	opt stack 0
  6427                           GLOBAL	__end_ofi1_writeByte
  6428  0CB4                     	__end_ofi1_writeByte:
  6429 ;; =============== function i1_writeByte ends ============
  6430                           
  6431                           	signat	i1_writeByte,88
  6432                           	global	_writeCommands
  6433                           psect	text912,local,class=CODE,delta=2
  6434                           global __ptext912
  6435  07FF                     __ptext912:
  6436                           
  6437 ;; *************** function _writeCommands *****************
  6438 ;; Defined at:
  6439 ;;		line 85 in file "Command.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;		None
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;		None
  6444 ;; Return value:  Size  Location     Type
  6445 ;;		None               void
  6446 ;; Registers used:
  6447 ;;		None
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6453 ;;      Params:         0       0       0       0       0
  6454 ;;      Locals:         0       0       0       0       0
  6455 ;;      Temps:          0       0       0       0       0
  6456 ;;      Totals:         0       0       0       0       0
  6457 ;;Total ram usage:        0 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; This function calls:
  6460 ;;		Nothing
  6461 ;; This function is called by:
  6462 ;;		_getPacket
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           psect	text912
  6466                           	file	"Command.c"
  6467                           	line	85
  6468                           	global	__size_of_writeCommands
  6469  0001                     	__size_of_writeCommands	equ	__end_of_writeCommands-_writeCommands
  6470                           	
  6471  07FF                     _writeCommands:	
  6472                           	opt	stack 1
  6473                           ; Regs used in _writeCommands: []
  6474                           	line	89
  6475                           	
  6476  07FF                     i1l4797:	
  6477  07FF  0008               	return
  6478                           	opt stack 0
  6479                           GLOBAL	__end_of_writeCommands
  6480  0800                     	__end_of_writeCommands:
  6481 ;; =============== function _writeCommands ends ============
  6482                           
  6483                           	signat	_writeCommands,88
  6484                           	global	_eeprom_read
  6485                           psect	text913,local,class=CODE,delta=2
  6486                           global __ptext913
  6487  0D63                     __ptext913:
  6488                           
  6489 ;; *************** function _eeprom_read *****************
  6490 ;; Defined at:
  6491 ;;		line 7 in file "eeread.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  addr            1    wreg     unsigned char 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;  addr            1    1[COMMON] unsigned char 
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      unsigned char 
  6498 ;; Registers used:
  6499 ;;		wreg, status,2, status,0
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6505 ;;      Params:         0       0       0       0       0
  6506 ;;      Locals:         1       0       0       0       0
  6507 ;;      Temps:          1       0       0       0       0
  6508 ;;      Totals:         2       0       0       0       0
  6509 ;;Total ram usage:        2 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; This function calls:
  6512 ;;		Nothing
  6513 ;; This function is called by:
  6514 ;;		_checkEven
  6515 ;;		_checkLength
  6516 ;;		_checkDataFrames
  6517 ;;		_parsePacket
  6518 ;;		_checkStartByte
  6519 ;;		_checkRWByte
  6520 ;;		_checkCMDByte
  6521 ;;		_checkCS
  6522 ;;		_addDataToCheckSum
  6523 ;;		_getPacket
  6524 ;;		_readCommands
  6525 ;;		_displayPacket
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           psect	text913
  6529                           	file	"C:\Microchip\HiTech\sources\eeread.c"
  6530                           	line	7
  6531                           	global	__size_of_eeprom_read
  6532  001F                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
  6533                           	
  6534  0D63                     _eeprom_read:	
  6535                           	opt	stack 0
  6536                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  6537                           ;eeprom_read@addr stored from wreg
  6538                           	line	9
  6539  0D63  00F1               	movwf	(eeprom_read@addr)
  6540                           	line	8
  6541                           	
  6542  0D64                     i1l6206:	
  6543                           	line	9
  6544                           # 9 "C:\Microchip\HiTech\sources\eeread.c"
  6545  0D64  0064               clrwdt ;#
  6546                           psect	text913
  6547                           	line	10
  6548  0D65  1683               	bsf	status, 5	;RP0=1, select bank3
  6549  0D66  1703               	bsf	status, 6	;RP1=1, select bank3
  6550  0D67  188C               	btfsc	(3169/8)^0180h,(3169)&7
  6551  0D68  2D6A               	goto	u285_21
  6552  0D69  2D6B               	goto	u285_20
  6553  0D6A                     u285_21:
  6554  0D6A  2D64               	goto	i1l6206
  6555  0D6B                     u285_20:
  6556  0D6B  2D6C               	goto	i1l9395
  6557                           	
  6558  0D6C                     i1l6207:	
  6559                           	line	11
  6560                           	
  6561  0D6C                     i1l9395:	
  6562  0D6C  0871               	movf	(eeprom_read@addr),w
  6563  0D6D  1283               	bcf	status, 5	;RP0=0, select bank2
  6564  0D6E  1703               	bsf	status, 6	;RP1=1, select bank2
  6565  0D6F  008D               	movwf	(269)^0100h	;volatile
  6566  0D70  303F               	movlw	(03Fh)
  6567  0D71  00F0               	movwf	(??_eeprom_read+0)+0
  6568  0D72  0870               	movf	(??_eeprom_read+0)+0,w
  6569  0D73  1683               	bsf	status, 5	;RP0=1, select bank3
  6570  0D74  1703               	bsf	status, 6	;RP1=1, select bank3
  6571  0D75  058C               	andwf	(396)^0180h,f	;volatile
  6572  0D76  140C               	bsf	(3168/8)^0180h,(3168)&7
  6573  0D77  1003               	clrc
  6574  0D78  180C               	btfsc	(3168/8)^0180h,(3168)&7
  6575  0D79  1403               	setc
  6576  0D7A  3000               	movlw	0
  6577  0D7B  1803               	skipnc
  6578  0D7C  3001               	movlw	1
  6579                           
  6580  0D7D  1283               	bcf	status, 5	;RP0=0, select bank2
  6581  0D7E  1703               	bsf	status, 6	;RP1=1, select bank2
  6582  0D7F  080C               	movf	(268)^0100h,w	;volatile
  6583  0D80  2D81               	goto	i1l6208
  6584                           	
  6585  0D81                     i1l9397:	
  6586                           	line	12
  6587                           	
  6588  0D81                     i1l6208:	
  6589  0D81  0008               	return
  6590                           	opt stack 0
  6591                           GLOBAL	__end_of_eeprom_read
  6592  0D82                     	__end_of_eeprom_read:
  6593 ;; =============== function _eeprom_read ends ============
  6594                           
  6595                           	signat	_eeprom_read,4217
  6596                           	global	_makeNibble
  6597                           psect	text914,local,class=CODE,delta=2
  6598                           global __ptext914
  6599  0CB4                     __ptext914:
  6600                           
  6601 ;; *************** function _makeNibble *****************
  6602 ;; Defined at:
  6603 ;;		line 199 in file "Bluetooth.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  tempNib         1    wreg     unsigned char 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  tempNib         1    0[COMMON] unsigned char 
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  1    wreg      unsigned char 
  6610 ;; Registers used:
  6611 ;;		wreg, status,2, status,0
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6617 ;;      Params:         0       0       0       0       0
  6618 ;;      Locals:         1       0       0       0       0
  6619 ;;      Temps:          0       0       0       0       0
  6620 ;;      Totals:         1       0       0       0       0
  6621 ;;Total ram usage:        1 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_makeHexByte
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           psect	text914
  6630                           	file	"Bluetooth.c"
  6631                           	line	199
  6632                           	global	__size_of_makeNibble
  6633  000F                     	__size_of_makeNibble	equ	__end_of_makeNibble-_makeNibble
  6634                           	
  6635  0CB4                     _makeNibble:	
  6636 ;; hardware stack exceeded
  6637                           	opt	stack 0
  6638                           ; Regs used in _makeNibble: [wreg+status,2+status,0]
  6639                           ;makeNibble@tempNib stored from wreg
  6640  0CB4  00F0               	movwf	(makeNibble@tempNib)
  6641                           	line	200
  6642                           	
  6643  0CB5                     i1l9365:	
  6644                           ;Bluetooth.c: 200: if(tempNib>='A'){
  6645  0CB5  3041               	movlw	(041h)
  6646  0CB6  0270               	subwf	(makeNibble@tempNib),w
  6647  0CB7  1C03               	skipc
  6648  0CB8  2CBA               	goto	u282_21
  6649  0CB9  2CBB               	goto	u282_20
  6650  0CBA                     u282_21:
  6651  0CBA  2CBF               	goto	i1l9371
  6652  0CBB                     u282_20:
  6653                           	line	201
  6654                           	
  6655  0CBB                     i1l9367:	
  6656                           ;Bluetooth.c: 201: return ((tempNib - (unsigned char)'A')+10);
  6657  0CBB  0870               	movf	(makeNibble@tempNib),w
  6658  0CBC  3EC9               	addlw	0C9h
  6659  0CBD  2CC2               	goto	i1l800
  6660                           	
  6661  0CBE                     i1l9369:	
  6662  0CBE  2CC2               	goto	i1l800
  6663                           	line	202
  6664                           	
  6665  0CBF                     i1l799:	
  6666                           	line	203
  6667                           	
  6668  0CBF                     i1l9371:	
  6669                           ;Bluetooth.c: 202: }
  6670                           ;Bluetooth.c: 203: return (tempNib - '0');
  6671  0CBF  0870               	movf	(makeNibble@tempNib),w
  6672  0CC0  3ED0               	addlw	0D0h
  6673  0CC1  2CC2               	goto	i1l800
  6674                           	
  6675  0CC2                     i1l9373:	
  6676                           	line	204
  6677                           	
  6678  0CC2                     i1l800:	
  6679  0CC2  0008               	return
  6680                           	opt stack 0
  6681                           GLOBAL	__end_of_makeNibble
  6682  0CC3                     	__end_of_makeNibble:
  6683 ;; =============== function _makeNibble ends ============
  6684                           
  6685                           	signat	_makeNibble,4217
  6686                           	global	_readByte
  6687                           psect	text915,local,class=CODE,delta=2
  6688                           global __ptext915
  6689  0C92                     __ptext915:
  6690                           
  6691 ;; *************** function _readByte *****************
  6692 ;; Defined at:
  6693 ;;		line 92 in file "Bluetooth.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;		None
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;		None
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  1    wreg      unsigned char 
  6700 ;; Registers used:
  6701 ;;		wreg
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6707 ;;      Params:         0       0       0       0       0
  6708 ;;      Locals:         0       0       0       0       0
  6709 ;;      Temps:          0       0       0       0       0
  6710 ;;      Totals:         0       0       0       0       0
  6711 ;;Total ram usage:        0 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; This function calls:
  6714 ;;		Nothing
  6715 ;; This function is called by:
  6716 ;;		_readString
  6717 ;;		_echoBack
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           psect	text915
  6721                           	file	"Bluetooth.c"
  6722                           	line	92
  6723                           	global	__size_of_readByte
  6724  000B                     	__size_of_readByte	equ	__end_of_readByte-_readByte
  6725                           	
  6726  0C92                     _readByte:	
  6727                           	opt	stack 0
  6728                           ; Regs used in _readByte: [wreg]
  6729                           	line	97
  6730                           	
  6731  0C92                     i1l9307:	
  6732                           ;Bluetooth.c: 97: while(!RCIF);
  6733  0C92  2C93               	goto	i1l778
  6734                           	
  6735  0C93                     i1l779:	
  6736                           	
  6737  0C93                     i1l778:	
  6738  0C93  1283               	bcf	status, 5	;RP0=0, select bank0
  6739  0C94  1303               	bcf	status, 6	;RP1=0, select bank0
  6740  0C95  1E8C               	btfss	(101/8),(101)&7
  6741  0C96  2C98               	goto	u276_21
  6742  0C97  2C99               	goto	u276_20
  6743  0C98                     u276_21:
  6744  0C98  2C93               	goto	i1l778
  6745  0C99                     u276_20:
  6746  0C99  2C9A               	goto	i1l9309
  6747                           	
  6748  0C9A                     i1l780:	
  6749                           	line	106
  6750                           	
  6751  0C9A                     i1l9309:	
  6752                           ;Bluetooth.c: 106: return RCREG;
  6753  0C9A  081A               	movf	(26),w	;volatile
  6754  0C9B  2C9C               	goto	i1l781
  6755                           	
  6756  0C9C                     i1l9311:	
  6757                           	line	109
  6758                           	
  6759  0C9C                     i1l781:	
  6760  0C9C  0008               	return
  6761                           	opt stack 0
  6762                           GLOBAL	__end_of_readByte
  6763  0C9D                     	__end_of_readByte:
  6764 ;; =============== function _readByte ends ============
  6765                           
  6766                           	signat	_readByte,89
  6767                           psect	text916,local,class=CODE,delta=2
  6768                           global __ptext916
  6769  0000                     __ptext916:
  6770                           	global	btemp
  6771  007E                     	btemp set 07Eh
  6772                           
  6773                           	DABS	1,126,2	;btemp
  6774                           	global	wtemp0
  6775  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Dec 15 01:30:43 2013

                         pc 0002                          _RD 0C60                          _WR 0C61  
                        fsr 0004                 _userEndByte 04AA                         l772 0CC7  
                       l773 0CC7                         l774 0CCD                         l790 0FC9  
                       l775 0CD3                         l769 0CE5                         l787 0FB0  
                       l788 0F9B                         l789 0FC3                         _GIE 005F  
                       _RD0 0040                         _RD1 0041                         _RD2 0042  
                       _RD4 0044                         _RD5 0045                         _RD6 0046  
                       _RD7 0047                         _isr 0D29                         fsr0 0004  
                       indf 0000         __end_ofi1_writeByte 0CB4            ?_checkDataFrames 0072  
                      l4000 0743                        l4001 0754                        l2410 0583  
                      l4002 0755                        l4003 0755                        l2404 0E02  
                      l2405 0E02                        l2406 0E07                        l2422 0FFF  
                      l2407 0E18                        l3190 0C89                        l3187 0CA7  
                      l5570 0646                        l5573 0D62                        l7510 0F60  
                      l5582 0E5E                        l5591 0D28                        l5583 0E49  
                      l5576 0E41                        l5584 0E6D                        l5585 0E6D  
                      l7507 0F37                        l5579 0D0D                        l7508 0F36  
                      ?_isr 0070                        l9301 0CE4                        l7509 0F42  
                      l6830 07E3                        l9303 0CC6                        l6823 07AC  
                      l6824 07AD                        l9305 0CCD                        l9321 0F37  
                      l6825 07AD                        l6826 07B4                        l9323 0F42  
                      l6827 07D0                        l6828 07E2                        l9325 0F60  
                      l6829 07E3                        l9319 0F31                        l9351 07CB  
                      l9361 07DA                        l9353 07CF                        l9345 07B4  
                      l9363 07E0                        l9355 07D4                        l9347 07C0  
                      _ADON 00F8                        l9293 0CD4                        l9357 07D8  
                      l9349 07C8                        l9701 0FDC                        l9295 0CD8  
                      l9359 07D9                        l9703 0FEC                        l9711 0E35  
                      l9297 0CE2                        l9561 0C85                        l9713 0E3C  
                      l9705 0E1C                        l9721 0D11                        l9299 0CE3  
                      l9563 0C9D                        l9707 0E21                        l9715 0CF9  
                      l9723 0D14                        l9731 0E57                        l9709 0E30  
                      l9717 0CFC                        l9725 0D1D                        l9733 0E5E  
                      l9741 05EF                        l9671 0F9B                        l9719 0D02  
                      l9727 0E45                        l9751 05F4                        l9743 05F0  
                      l9735 05E8                        l9673 0FA7                        l9681 0DF3  
                      l9729 0E49                        l9761 0618                        l9753 05FF  
                      l9745 05F1                        l9737 05EB                        l9675 0FB0  
                      l9683 0DFE                        l9691 0D46                        l9771 0635  
                      l9763 0621                        l9755 0603                        l9747 05F2  
                      l9739 05EE                        l9677 0FC3                        l9669 0F98  
                      l9685 0E07                        l9693 0D49                        l9773 063B  
                      l9765 0626                        l9757 0608                        l9749 05F3  
                      l9781 071C                        l9687 0E18                        l9679 0DF0  
                      l9695 0D54                        l9775 0640                        l9767 062A  
                      l9759 0613                        l9791 0736                        l9783 0721  
                      STR_1 04AD                        l9689 051D                        l9697 0FCA  
                      l9769 062F                        l9793 073C                        l9785 0726  
                      l9777 0700                        l9699 0FCF                        l9795 0743  
                      l9787 072B                        l9779 0717                        l9797 0748  
                      l9789 0730                        u3200 0E6C                        u3201 0E6B  
                      u3210 070A                        u3170 0FC2                        u3171 0FC1  
                      u3307 0D5D                        u3227 074E                        u3180 0E06  
                      u3181 0E05                        u3317 0DF9                        u3237 05FA  
                      u3175 0FBE                        u3247 060E                        u2800 07CF  
                      u2801 07CE                        u3257 061C                        u2810 07E0  
                      u2811 07DF                        u3195 0E26                        u3267 0D23  
                      u3277 0D08                        u2750 0CCC                        u2751 0CCB  
                      u3287 0E1E                        u3297 0D4F                        u2770 0F41  
                      u2771 0F40                        _PEIE 005E                        u2790 07B3  
                      u2791 07B2                        _RCIE 0465                        _RCIF 0065  
                      _WREN 0C62                        _TXIF 0064              ??_eeprom_write 00C3  
    __end_of_checkStartByte 05E8                        _main 0700                        _togE 0D46  
             _startByteAddr 049F                        btemp 007E                        start 0012  
         _addDataToCheckSum 035F          ?_addDataToCheckSum 0070       makeHexByte@input_byte 0023  
                     ??_isr 0062                       ?_main 0070         ??_addDataToCheckSum 0020  
                     _EEADR 010D                       ?_togE 0070                       _CARRY 0018  
      __size_of_checkRWByte 006A                       i1l800 0CC2                       i1l803 0DC8  
                     i1l780 0C9A                       i1l772 0CAA                       i1l781 0C9C  
                     i1l773 0CAA                       i1l774 0CB1                       i1l790 0ECB  
                     i1l775 0CB3                       i1l793 06DE                       i1l778 0C93  
                     i1l794 06BB                       i1l779 0C93                       i1l795 06EF  
                     i1l787 0EB4                       i1l796 06FF                       i1l788 0EA1  
                     i1l789 0EC5                       i1l799 0CBF                       _RCREG 001A  
                     _RCSTA 0018                       _SPBRG 0099                       _PORTD 0008  
           __end_of_checkCS 0F95        __size_of_checkLength 002F                       _TRISA 0085  
                     _TRISD 0088                       _TXREG 0019                       _TXSTA 0098  
               _writeString 0F95             __end_of_lcdGoto 0D29             __end_of_getTemp 1000  
           __end_of_lcdPuts 0E6E             __end_of_initADC 0CA8             __end_of_initLCD 0647  
           i1writeByte@Byte 0070                       _tempC 04A0                       _tempF 04A1  
                     pclath 000A                       status 0003             ?_checkStartByte 0020  
                     wtemp0 007E   __end_of_addDataToCheckSum 03D6                ?_parsePacket 0070  
          __end_ofi1_strlen 0F2E                __end_of_main 0758                __end_of_togE 0D63  
     __size_of_checkCMDByte 0070               ?_readCommands 0070                      ??_main 00D0  
                    ??_togE 00C2                  i1strlen@cp 0079                 i1_writeByte 0CA8  
     __end_ofi1_writeString 0ECC               _userStartByte 04AB                      _ADCON0 001F  
                    _ADCON1 009F                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _EECON1 018C                      _EECON2 018D  
              _writeByteVal 04AC                      i1l1601 05DC                      i1l1602 05E7  
                    i1l4010 06A2                      i1l1611 043A                      i1l4011 06A4  
                    i1l1612 0445                      i1l1620 07A2                      i1l4012 06A4  
                    i1l1605 0511                      i1l1621 07A8                      i1l1607 04D6  
                    i1l1615 0F8B                      i1l1608 051C                      i1l1616 0F94  
                    i1l1624 03C3                      i1l4008 06A3                      i1l1625 038E  
                    i1l4009 069C                      i1l1626 03D5                      i1l1627 03D5  
                    i1l1619 07A3                      i1l1580 0DE6                      i1l1581 0DEF  
                    i1l1590 0355                      i1l1591 0354                      i1l1584 0E93  
                    i1l1585 0E9C                      i1l1594 02C4                      i1l1595 02AF  
                    i1l1588 0309                      i1l1596 0279                      i1l1589 035E  
                    i1l1597 02C3                      i1l1598 02C4                      i1l6206 0D64  
                    i1l6207 0D6C                      i1l6208 0D81                      u300_20 0772  
                    u300_21 0771                      u301_20 077F                      u301_21 077E  
                    i1l7510 0F2D                      i1l4790 00AB                      i1l4783 016A  
                    i1l4791 00C4                      u302_20 078A                      i1l4792 00E3  
                    i1l4784 0016                      u310_20 0696                      u302_21 0789  
                    i1l4785 018F                      i1l4793 0162                      u310_21 0695  
                    i1l4786 003B                      i1l4794 018F                      i1l3994 0D39  
                    i1l7507 0F04                      i1l4787 0054                      i1l3995 0D39  
                    i1l7508 0F03                      i1l4788 006D                      i1l4797 07FF  
                    i1l7509 0F0F                      i1l4789 0092                      i1l6830 0EFC  
                    i1l9311 0C9C                      i1l6823 0ECD                      u311_20 0CB0  
                    i1l6824 0ECE                      u303_20 079A                      u311_21 0CAF  
                    i1l6825 0ECE                      i1l9401 0E87                      u303_21 0799  
                    i1l6826 0ED5                      i1l9307 0C92                      i1l6827 0EE9  
                    i1l9331 06B4                      i1l9411 0E9C                      i1l9403 0E8D  
                    i1l6828 0EFB                      i1l9309 0C9A                      i1l6829 0EFC  
                    i1l9333 06BB                      i1l9341 06DE                      i1l9405 0E92  
                    i1l9421 0307                      i1l9413 02C5                      i1l9501 043A  
                    i1l9343 06EF                      i1l9335 06C7                      i1l9327 06A8  
                    i1l9407 0E93                      i1l9431 0353                      i1l9423 0308  
                    i1l9415 02D6                      i1l9503 0440                      i1l9511 0F85  
                    u304_20 03D4                      u312_20 0EC4                      i1l9337 06CD  
                    i1l9329 06AA                      i1l9409 0E99                      i1l9433 0355  
                    i1l9417 02FC                      i1l9425 0309                      i1l9505 0445  
                    i1l9513 0F8A                      u304_21 03D3                      u312_21 0EC3  
                    i1l9441 0195                      i1l9521 0758                      i1l9601 00C4  
                    i1l9371 0CBF                      i1l9339 06D7                      i1l9435 035B  
                    i1l9427 0348                      i1l9419 0302                      i1l9515 0F8B  
                    i1l9507 0F61                      i1l9451 02A2                      i1l9443 01A0  
                    i1l9531 079A                      i1l9523 0765                      i1l9611 014F  
                    i1l9603 00D0                      i1l9373 0CC2                      i1l9365 0CB5  
                    i1l9381 0DC9                      i1l9437 035E                      i1l9429 034E  
                    i1l9461 05A7                      i1l9517 0F91                      i1l9509 0F7F  
                    i1l9541 038C                      u312_25 0EC0                      i1l9453 02AA  
                    i1l9445 01AB                      i1l9533 07A1                      i1l9525 0772  
                    i1l9613 0155                      i1l9605 00D6                      i1l9621 016A  
                    i1l9367 0CBB                      i1l9375 0DA7                      i1l9391 0DEC  
                    i1l9383 0DDA                      i1l9471 05E7                      i1l9463 05D4  
                    i1l9519 0F94                      i1l9543 038E                      i1l9631 0E9E  
                    i1l9455 02AF                      i1l9447 0275                      i1l9439 0193  
                    i1l9527 077F                      i1l9535 07A3                      i1l9615 015B  
                    i1l9607 00DC                      u313_20 0ED4                      i1l9369 0CBE  
                    i1l9641 0ED5                      u313_21 0ED3                      i1l9377 0DC6  
                    i1l9393 0DEF                      i1l9385 0DE0                      i1l9465 05DB  
                    i1l9457 0584                      i1l9481 0509                      i1l9473 04B3  
                    i1l9545 03BC                      i1l9633 0EA1                      i1l9449 0279  
                    i1l9537 07A8                      i1l9529 078A                      i1l9617 0162  
                    i1l9609 00E3                      i1l9395 0D6C                      i1l9627 0CA9  
                    i1l9651 0EED                      i1l9643 0EDB                      i1l9379 0DC8  
                    i1l9387 0DE5                      i1l9459 05A1                      i1l9467 05DC  
                    i1l9483 0510                      i1l9475 04C4                      i1l9491 03D6  
                    i1l9547 03C3                      i1l9539 035F                      i1l9635 0EAD  
                    i1l9619 0169                      i1l9571 0647                      i1l9397 0D81  
                    i1l9629 0CB1                      i1l9653 0EF1                      i1l9645 0EE1  
                    i1l9661 0EFE                      i1l9389 0DE6                      i1l9469 05E2  
                    i1l9485 0511                      i1l9477 04D6                      i1l9493 03FF  
                    i1l9637 0EB4                      i1l9581 0685                      i1l9573 0654  
                    i1l9565 0D29                      i1l9655 0EF2                      i1l9647 0EE4  
                    i1l9663 0F04                      i1l9399 0E6E                      i1l9487 0517  
                    i1l9479 04DC                      i1l9495 042C                      i1l9639 0EC5  
                    i1l9591 003B                      i1l9583 0696                      i1l9575 066C  
                    i1l9567 0D2D                      u314_20 0EE8                      u306_20 0D2D  
                    i1l9657 0EF3                      i1l9649 0EE8                      u314_21 0EE7  
                    i1l9665 0F0F                      i1l9489 051C                      i1l9497 0432  
                    i1l9593 0054                      i1l9585 069C                      i1l9577 0672  
                    i1l9569 0D33                      u306_21 0D2C                      i1l9659 0EF9  
                    i1l9667 0F2D                      i1l9499 0439                      i1l9595 006D  
                    i1l9587 0015                      i1l9579 0678                      i1l9597 0092  
                    i1l9589 0016                      i1l9599 00AB                      u315_20 0EF9  
                    u307_20 0D33                      u315_21 0EF8                      u307_21 0D32  
                    u316_20 0F0E                      u308_20 065E                      u316_21 0F0D  
                    u309_20 0685                      u309_21 0684                      u282_20 0CBB  
                    u290_20 0348                      u282_21 0CBA                      u290_21 0347  
                    u290_25 0344                      u291_20 01A0                      u291_21 019F  
                    u283_25 0DB1                      u276_20 0C99                      u284_20 0DDA  
                    u292_20 01AB                      u276_21 0C98                      u284_21 0DD9  
                    u292_21 01AA                      u285_20 0D6B                      u293_20 02C2  
                    u285_21 0D6A                      u293_21 02C1                      u278_20 06EE  
                    u286_20 0E87                      u294_20 05A1                      u278_21 06ED  
                    u286_21 0E86                      u294_21 05A0                      u287_20 02D6  
                    u295_20 04C4                      u287_21 02D5                      u295_21 04C3  
                    u288_20 02FC                      u296_20 04D5                      u288_21 02FB  
                    u296_21 04D4                      u297_20 03FF                      u297_21 03FE  
                    u289_25 0319                      u298_20 0F7F                      u298_21 0F7E  
                    u299_20 0765                      u299_21 0764                      _TRISC6 043E  
                    _TRISC7 043F            __end_of_lcdClear 0D0E                _checkCMDByte 03D6  
      __size_of_eeprom_read 001F            __end_of_lcdWrite 0E42        __size_of_makeHexByte 0025  
                    _maxCmd 0499            __end_of_initTemp 0584            __end_of_readByte 0C9D  
                 ??_checkCS 0074              ??_readCommands 007E            __end_of_readTemp 0E19  
      __end_of_eeprom_write 07E4                   ??_lcdGoto 00C6     __size_of_validatePacket 0051  
                 ??_getTemp 00C6                   ??_lcdPuts 00C6       readString@readStorage 0022  
                    clrloop 0C8B                      _strlen 0F2E                   ??_initADC 00C2  
                 ??_initLCD 00C8                 readString@i 0023                      saved_w 007E  
    __size_of_writeCommands 0001           makeHexByte@nibOne 0022           makeHexByte@nibTwo 007D  
           eeprom_read@addr 0071  __size_of_addDataToCheckSum 0077              __pcstackCOMMON 0070  
              __pidataBANK1 0D82          __size_of_checkEven 0027          __size_of_getPacket 005E  
         eeprom_write@value 00C2                   ?i1_strlen 0070                  _csByteAddr 048E  
                __pbssBANK3 0190          __size_of_initUSART 0012     __size_ofi1_eeprom_write 0031  
            _calcCSByteAddr 048C                  __pmaintext 0700        __size_of_parsePacket 0135  
             _writeCommands 07FF                  __pintentry 0004                     ?_strlen 00C2  
              ?_writeString 0070                   ?_lcdClear 0070                  ??i1_strlen 0072  
                _makeNibble 0CB4            ??_checkStartByte 0022                   ?_lcdWrite 0070  
         __end_of_checkEven 0DF0        __end_of_readCommands 0190                   ?_initTemp 0070  
                 ?_readByte 0070                   ?_readTemp 00C2          __size_of_writeByte 0011  
  __size_of_checkDataFrames 009A           __end_of_getPacket 06A5       __size_of_eeprom_write 003B  
            ?_writeCommands 0070               ??_checkRWByte 0022                     _checkCS 0F61  
                _readString 06A5               ??_checkLength 0074              _validatePacket 0758  
                _humStartHi 0494           __end_of_initUSART 0CE6                  _humStartLo 0495  
                   _lcdGoto 0D0E                     _getTemp 0FCA                     _lcdPuts 0E42  
              ?i1_writeByte 0070                     _initADC 0C9D             __size_of_strlen 0033  
                   _initLCD 05E8                     _member1 046D                     _member2 044C  
                   _member3 0460                __size_of_isr 001D                  ??_lcdClear 00C6  
                ??_lcdWrite 00C4        end_of_initialization 07FB       parsePacket@dataPacket 002B  
                ??_initTemp 00C5                  ??_readByte 0070                     init_ram 0CEA  
                _selectTemp 0C85                  ??_readTemp 00C4                _eeprom_write 07A9  
              readString@ch 0025              main@testString 00D4                  _tempHiAddr 04A2  
                _rwByteAddr 049E                  _tempLoAddr 04A3               _dataBytesAddr 048F  
                lcdGoto@pos 00C8              getPacket@F1189 0190      __end_of_validatePacket 07A9  
                   strlen@s 00CA           __end_of_writeByte 0CD4         __end_of_checkRWByte 051D  
       __end_of_checkLength 0E9D                 ?_makeNibble 0070                writeString@i 00CE  
             ??_eeprom_read 0070                   _RXLenAddr 048B              i1_eeprom_write 0ECC  
           ??_writeCommands 0070               ??_makeHexByte 0020      __size_ofi1_writeString 002F  
           ?_validatePacket 0024           ??_checkDataFrames 0074                 ?_readString 0070  
            __end_of_strlen 0F61         start_initialization 07E4       __size_of_readCommands 017B  
               __end_of_isr 0D46        __size_of_writeString 0035                parsePacket@i 002A  
                 i1strlen@s 0078           __size_ofi1_strlen 0031                 ?_selectTemp 0070  
    __end_ofi1_eeprom_write 0EFD              i1writeString@i 007C         __end_of_eeprom_read 0D82  
       __size_of_makeNibble 000F                 __pdataBANK1 00A0                 _checkRWByte 04B3  
               _cmdByteAddr 048D         __end_of_makeHexByte 0DC9                 _checkLength 0E6E  
              _readCommands 0015                    ??_strlen 00C4        __size_ofi1_writeByte 000C  
             __pcstackBANK0 0020               __pcstackBANK1 00C2               i1_writeString 0E9D  
         __size_of_lcdClear 0015            eeprom_write@addr 00C4           __size_of_lcdWrite 0029  
       __size_of_readString 005B             ?i1_eeprom_write 007A                   _checkEven 0DC9  
               _endByteAddr 0490               ??_parsePacket 0024           __size_of_initTemp 0067  
         __size_of_readByte 000B           __size_of_readTemp 0029         i1eeprom_write@value 007A  
                 _classTerm 0479                   _getPacket 0647                   __ptext900 0F61  
                 __ptext901 03D6                   __ptext910 0ECC                   __ptext902 04B3  
                 __ptext911 0CA8                   __ptext903 0584                   __ptext912 07FF  
                 __ptext904 02C5                   __ptext913 0D63                   __ptext905 0E6E  
                 __ptext914 0CB4                   __ptext906 0DC9                   __ptext915 0C92  
                 __ptext907 0DA4                   __ptext916 0000                   __ptext908 06A5  
                 __ptext909 0EFD                   __ptext880 0CF9                   __ptext881 0E19  
                 __ptext890 0F2E                   __ptext882 0FCA                   __ptext891 0CC3  
                 __ptext883 0D46                   __ptext892 0CD4                   __ptext884 051D  
                 __ptext893 0D29                   __ptext885 0DF0                   __ptext877 05E8  
                 __ptext894 0647                   __ptext886 0F95                   __ptext878 0E42  
                 __ptext895 0015                   __ptext887 0C9D                   __ptext879 0D0E  
                 __ptext896 0758                   __ptext888 0C85                   __ptext897 0190  
                 __ptext889 07A9                   __ptext898 0E9D                   __ptext899 035F  
                  ?_checkCS 0072                   _noDataLen 049C                   __pstrings 0446  
                  ?_lcdGoto 0070                    ?_getTemp 0070                    ?_lcdPuts 0070  
                  ?_initADC 0070         __size_of_selectTemp 0005                    ?_initLCD 0070  
                 _humHiAddr 0492              ?i1_writeString 0070                   _initUSART 0CD4  
                 _humLoAddr 0493     i1writeString@userString 007B                   _readError 00A9  
         interrupt_function 0004                  ?_checkEven 0072                 _eeprom_read 0D63  
             ?_checkCMDByte 0020                 _makeHexByte 0DA4                    _GO_nDONE 00FA  
                ?_getPacket 0070                   main@F1186 00A0                 _lenByteAddr 0498  
       __end_of_parsePacket 02C5                   lcdWrite@c 00C5                 __stringbase 044B  
                ?_initUSART 0070                ??_makeNibble 0070                    i1_strlen 0EFD  
                 _writeByte 0CC3             _checkDataFrames 02C5              ??_checkCMDByte 0022  
          ??_validatePacket 007E     __size_of_checkStartByte 0064                   init_fetch 0CE6  
        __end_of_makeNibble 0CC3                 _humValHAddr 0496                 _humValLAddr 0497  
               _readByteVal 049D                ??_readString 0020                 _newLineChar 049B  
               _minSizeByte 049A            __size_of_checkCS 0034             ??i1_writeString 007A  
          __size_of_lcdGoto 001B            __size_of_getTemp 0036            __size_of_lcdPuts 002C  
          __size_of_initADC 000B            __size_of_initLCD 005F          i1eeprom_write@addr 007C  
                  _lcdClear 0CF9                    _classNum 0483                  ?_writeByte 0070  
                  _lcdWrite 0E19       writeString@userString 00CD                _tempValHAddr 04A7  
              _tempValLAddr 04A8                ??_selectTemp 00C2                    _initTemp 051D  
                  _readByte 0C92                    _readTemp 0DF0               __size_of_main 0058  
               ??_checkEven 0074               __size_of_togE 001D          __end_of_readString 0700  
                  _groupNum 0491                 _parsePacket 0190                    clear_ram 0C8A  
              _tempUnitAddr 04A6       __end_of_writeCommands 0800                 ??_getPacket 002C  
                  lcdPuts@s 00C7                ?_checkRWByte 0020                ?_checkLength 0072  
    parsePacket@dataCounter 0028               ??_writeString 00CC          addDataToCheckSum@i 007D  
        __end_of_selectTemp 0C8A                 ??_initUSART 00C2     __end_of_checkDataFrames 035F  
          ??i1_eeprom_write 007B                    intlevel1 0000                   stringcode 0446  
         makeNibble@tempNib 0070          getTemp@tempReading 00C7                 _tempStartHi 04A4  
               _tempStartLo 04A5               ??i1_writeByte 0070           getPacket@arrStore 0030  
             writeByte@Byte 00C2                    strlen@cp 00CB        __end_of_checkCMDByte 0446  
                  stringdir 0446                    stringtab 0446                 ??_writeByte 00C2  
               _timeoutByte 04A9         __end_of_writeString 0FCA               ?_eeprom_write 00C2  
              ?_eeprom_read 0070              _checkStartByte 0584                ?_makeHexByte 007D  
